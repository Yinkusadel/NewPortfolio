/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@sentry+utils@8.17.0";
exports.ids = ["vendor-chunks/@sentry+utils@8.17.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/aggregate-errors.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/aggregate-errors.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst is = __webpack_require__(/*! ./is.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/is.js\");\nconst string = __webpack_require__(/*! ./string.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/string.js\");\n\n/**\n * Creates exceptions inside `event.exception.values` for errors that are nested on properties based on the `key` parameter.\n */\nfunction applyAggregateErrorsToEvent(\n  exceptionFromErrorImplementation,\n  parser,\n  maxValueLimit = 250,\n  key,\n  limit,\n  event,\n  hint,\n) {\n  if (!event.exception || !event.exception.values || !hint || !is.isInstanceOf(hint.originalException, Error)) {\n    return;\n  }\n\n  // Generally speaking the last item in `event.exception.values` is the exception originating from the original Error\n  const originalException =\n    event.exception.values.length > 0 ? event.exception.values[event.exception.values.length - 1] : undefined;\n\n  // We only create exception grouping if there is an exception in the event.\n  if (originalException) {\n    event.exception.values = truncateAggregateExceptions(\n      aggregateExceptionsFromError(\n        exceptionFromErrorImplementation,\n        parser,\n        limit,\n        hint.originalException ,\n        key,\n        event.exception.values,\n        originalException,\n        0,\n      ),\n      maxValueLimit,\n    );\n  }\n}\n\nfunction aggregateExceptionsFromError(\n  exceptionFromErrorImplementation,\n  parser,\n  limit,\n  error,\n  key,\n  prevExceptions,\n  exception,\n  exceptionId,\n) {\n  if (prevExceptions.length >= limit + 1) {\n    return prevExceptions;\n  }\n\n  let newExceptions = [...prevExceptions];\n\n  // Recursively call this function in order to walk down a chain of errors\n  if (is.isInstanceOf(error[key], Error)) {\n    applyExceptionGroupFieldsForParentException(exception, exceptionId);\n    const newException = exceptionFromErrorImplementation(parser, error[key]);\n    const newExceptionId = newExceptions.length;\n    applyExceptionGroupFieldsForChildException(newException, key, newExceptionId, exceptionId);\n    newExceptions = aggregateExceptionsFromError(\n      exceptionFromErrorImplementation,\n      parser,\n      limit,\n      error[key],\n      key,\n      [newException, ...newExceptions],\n      newException,\n      newExceptionId,\n    );\n  }\n\n  // This will create exception grouping for AggregateErrors\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/AggregateError\n  if (Array.isArray(error.errors)) {\n    error.errors.forEach((childError, i) => {\n      if (is.isInstanceOf(childError, Error)) {\n        applyExceptionGroupFieldsForParentException(exception, exceptionId);\n        const newException = exceptionFromErrorImplementation(parser, childError);\n        const newExceptionId = newExceptions.length;\n        applyExceptionGroupFieldsForChildException(newException, `errors[${i}]`, newExceptionId, exceptionId);\n        newExceptions = aggregateExceptionsFromError(\n          exceptionFromErrorImplementation,\n          parser,\n          limit,\n          childError,\n          key,\n          [newException, ...newExceptions],\n          newException,\n          newExceptionId,\n        );\n      }\n    });\n  }\n\n  return newExceptions;\n}\n\nfunction applyExceptionGroupFieldsForParentException(exception, exceptionId) {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    ...(exception.type === 'AggregateError' && { is_exception_group: true }),\n    exception_id: exceptionId,\n  };\n}\n\nfunction applyExceptionGroupFieldsForChildException(\n  exception,\n  source,\n  exceptionId,\n  parentId,\n) {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    type: 'chained',\n    source,\n    exception_id: exceptionId,\n    parent_id: parentId,\n  };\n}\n\n/**\n * Truncate the message (exception.value) of all exceptions in the event.\n * Because this event processor is ran after `applyClientOptions`,\n * we need to truncate the message of the added exceptions here.\n */\nfunction truncateAggregateExceptions(exceptions, maxValueLength) {\n  return exceptions.map(exception => {\n    if (exception.value) {\n      exception.value = string.truncate(exception.value, maxValueLength);\n    }\n    return exception;\n  });\n}\n\nexports.applyAggregateErrorsToEvent = applyAggregateErrorsToEvent;\n//# sourceMappingURL=aggregate-errors.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2FnZ3JlZ2F0ZS1lcnJvcnMuanMiLCJtYXBwaW5ncyI6IkFBQUEsOENBQTZDLEVBQUUsYUFBYSxFQUFDOztBQUU3RCxXQUFXLG1CQUFPLENBQUMsMkdBQVM7QUFDNUIsZUFBZSxtQkFBTyxDQUFDLG1IQUFhOztBQUVwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkVBQTJFLEVBQUU7QUFDN0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxpREFBaUQ7O0FBRWpEO0FBQ0E7QUFDQSxpREFBaUQsMEJBQTBCO0FBQzNFO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRDs7QUFFakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBLG1DQUFtQztBQUNuQyIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9hZ2dyZWdhdGUtZXJyb3JzLmpzPzg3M2YiXSwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxuY29uc3QgaXMgPSByZXF1aXJlKCcuL2lzLmpzJyk7XG5jb25zdCBzdHJpbmcgPSByZXF1aXJlKCcuL3N0cmluZy5qcycpO1xuXG4vKipcbiAqIENyZWF0ZXMgZXhjZXB0aW9ucyBpbnNpZGUgYGV2ZW50LmV4Y2VwdGlvbi52YWx1ZXNgIGZvciBlcnJvcnMgdGhhdCBhcmUgbmVzdGVkIG9uIHByb3BlcnRpZXMgYmFzZWQgb24gdGhlIGBrZXlgIHBhcmFtZXRlci5cbiAqL1xuZnVuY3Rpb24gYXBwbHlBZ2dyZWdhdGVFcnJvcnNUb0V2ZW50KFxuICBleGNlcHRpb25Gcm9tRXJyb3JJbXBsZW1lbnRhdGlvbixcbiAgcGFyc2VyLFxuICBtYXhWYWx1ZUxpbWl0ID0gMjUwLFxuICBrZXksXG4gIGxpbWl0LFxuICBldmVudCxcbiAgaGludCxcbikge1xuICBpZiAoIWV2ZW50LmV4Y2VwdGlvbiB8fCAhZXZlbnQuZXhjZXB0aW9uLnZhbHVlcyB8fCAhaGludCB8fCAhaXMuaXNJbnN0YW5jZU9mKGhpbnQub3JpZ2luYWxFeGNlcHRpb24sIEVycm9yKSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8vIEdlbmVyYWxseSBzcGVha2luZyB0aGUgbGFzdCBpdGVtIGluIGBldmVudC5leGNlcHRpb24udmFsdWVzYCBpcyB0aGUgZXhjZXB0aW9uIG9yaWdpbmF0aW5nIGZyb20gdGhlIG9yaWdpbmFsIEVycm9yXG4gIGNvbnN0IG9yaWdpbmFsRXhjZXB0aW9uID1cbiAgICBldmVudC5leGNlcHRpb24udmFsdWVzLmxlbmd0aCA+IDAgPyBldmVudC5leGNlcHRpb24udmFsdWVzW2V2ZW50LmV4Y2VwdGlvbi52YWx1ZXMubGVuZ3RoIC0gMV0gOiB1bmRlZmluZWQ7XG5cbiAgLy8gV2Ugb25seSBjcmVhdGUgZXhjZXB0aW9uIGdyb3VwaW5nIGlmIHRoZXJlIGlzIGFuIGV4Y2VwdGlvbiBpbiB0aGUgZXZlbnQuXG4gIGlmIChvcmlnaW5hbEV4Y2VwdGlvbikge1xuICAgIGV2ZW50LmV4Y2VwdGlvbi52YWx1ZXMgPSB0cnVuY2F0ZUFnZ3JlZ2F0ZUV4Y2VwdGlvbnMoXG4gICAgICBhZ2dyZWdhdGVFeGNlcHRpb25zRnJvbUVycm9yKFxuICAgICAgICBleGNlcHRpb25Gcm9tRXJyb3JJbXBsZW1lbnRhdGlvbixcbiAgICAgICAgcGFyc2VyLFxuICAgICAgICBsaW1pdCxcbiAgICAgICAgaGludC5vcmlnaW5hbEV4Y2VwdGlvbiAsXG4gICAgICAgIGtleSxcbiAgICAgICAgZXZlbnQuZXhjZXB0aW9uLnZhbHVlcyxcbiAgICAgICAgb3JpZ2luYWxFeGNlcHRpb24sXG4gICAgICAgIDAsXG4gICAgICApLFxuICAgICAgbWF4VmFsdWVMaW1pdCxcbiAgICApO1xuICB9XG59XG5cbmZ1bmN0aW9uIGFnZ3JlZ2F0ZUV4Y2VwdGlvbnNGcm9tRXJyb3IoXG4gIGV4Y2VwdGlvbkZyb21FcnJvckltcGxlbWVudGF0aW9uLFxuICBwYXJzZXIsXG4gIGxpbWl0LFxuICBlcnJvcixcbiAga2V5LFxuICBwcmV2RXhjZXB0aW9ucyxcbiAgZXhjZXB0aW9uLFxuICBleGNlcHRpb25JZCxcbikge1xuICBpZiAocHJldkV4Y2VwdGlvbnMubGVuZ3RoID49IGxpbWl0ICsgMSkge1xuICAgIHJldHVybiBwcmV2RXhjZXB0aW9ucztcbiAgfVxuXG4gIGxldCBuZXdFeGNlcHRpb25zID0gWy4uLnByZXZFeGNlcHRpb25zXTtcblxuICAvLyBSZWN1cnNpdmVseSBjYWxsIHRoaXMgZnVuY3Rpb24gaW4gb3JkZXIgdG8gd2FsayBkb3duIGEgY2hhaW4gb2YgZXJyb3JzXG4gIGlmIChpcy5pc0luc3RhbmNlT2YoZXJyb3Jba2V5XSwgRXJyb3IpKSB7XG4gICAgYXBwbHlFeGNlcHRpb25Hcm91cEZpZWxkc0ZvclBhcmVudEV4Y2VwdGlvbihleGNlcHRpb24sIGV4Y2VwdGlvbklkKTtcbiAgICBjb25zdCBuZXdFeGNlcHRpb24gPSBleGNlcHRpb25Gcm9tRXJyb3JJbXBsZW1lbnRhdGlvbihwYXJzZXIsIGVycm9yW2tleV0pO1xuICAgIGNvbnN0IG5ld0V4Y2VwdGlvbklkID0gbmV3RXhjZXB0aW9ucy5sZW5ndGg7XG4gICAgYXBwbHlFeGNlcHRpb25Hcm91cEZpZWxkc0ZvckNoaWxkRXhjZXB0aW9uKG5ld0V4Y2VwdGlvbiwga2V5LCBuZXdFeGNlcHRpb25JZCwgZXhjZXB0aW9uSWQpO1xuICAgIG5ld0V4Y2VwdGlvbnMgPSBhZ2dyZWdhdGVFeGNlcHRpb25zRnJvbUVycm9yKFxuICAgICAgZXhjZXB0aW9uRnJvbUVycm9ySW1wbGVtZW50YXRpb24sXG4gICAgICBwYXJzZXIsXG4gICAgICBsaW1pdCxcbiAgICAgIGVycm9yW2tleV0sXG4gICAgICBrZXksXG4gICAgICBbbmV3RXhjZXB0aW9uLCAuLi5uZXdFeGNlcHRpb25zXSxcbiAgICAgIG5ld0V4Y2VwdGlvbixcbiAgICAgIG5ld0V4Y2VwdGlvbklkLFxuICAgICk7XG4gIH1cblxuICAvLyBUaGlzIHdpbGwgY3JlYXRlIGV4Y2VwdGlvbiBncm91cGluZyBmb3IgQWdncmVnYXRlRXJyb3JzXG4gIC8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0phdmFTY3JpcHQvUmVmZXJlbmNlL0dsb2JhbF9PYmplY3RzL0FnZ3JlZ2F0ZUVycm9yXG4gIGlmIChBcnJheS5pc0FycmF5KGVycm9yLmVycm9ycykpIHtcbiAgICBlcnJvci5lcnJvcnMuZm9yRWFjaCgoY2hpbGRFcnJvciwgaSkgPT4ge1xuICAgICAgaWYgKGlzLmlzSW5zdGFuY2VPZihjaGlsZEVycm9yLCBFcnJvcikpIHtcbiAgICAgICAgYXBwbHlFeGNlcHRpb25Hcm91cEZpZWxkc0ZvclBhcmVudEV4Y2VwdGlvbihleGNlcHRpb24sIGV4Y2VwdGlvbklkKTtcbiAgICAgICAgY29uc3QgbmV3RXhjZXB0aW9uID0gZXhjZXB0aW9uRnJvbUVycm9ySW1wbGVtZW50YXRpb24ocGFyc2VyLCBjaGlsZEVycm9yKTtcbiAgICAgICAgY29uc3QgbmV3RXhjZXB0aW9uSWQgPSBuZXdFeGNlcHRpb25zLmxlbmd0aDtcbiAgICAgICAgYXBwbHlFeGNlcHRpb25Hcm91cEZpZWxkc0ZvckNoaWxkRXhjZXB0aW9uKG5ld0V4Y2VwdGlvbiwgYGVycm9yc1ske2l9XWAsIG5ld0V4Y2VwdGlvbklkLCBleGNlcHRpb25JZCk7XG4gICAgICAgIG5ld0V4Y2VwdGlvbnMgPSBhZ2dyZWdhdGVFeGNlcHRpb25zRnJvbUVycm9yKFxuICAgICAgICAgIGV4Y2VwdGlvbkZyb21FcnJvckltcGxlbWVudGF0aW9uLFxuICAgICAgICAgIHBhcnNlcixcbiAgICAgICAgICBsaW1pdCxcbiAgICAgICAgICBjaGlsZEVycm9yLFxuICAgICAgICAgIGtleSxcbiAgICAgICAgICBbbmV3RXhjZXB0aW9uLCAuLi5uZXdFeGNlcHRpb25zXSxcbiAgICAgICAgICBuZXdFeGNlcHRpb24sXG4gICAgICAgICAgbmV3RXhjZXB0aW9uSWQsXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4gbmV3RXhjZXB0aW9ucztcbn1cblxuZnVuY3Rpb24gYXBwbHlFeGNlcHRpb25Hcm91cEZpZWxkc0ZvclBhcmVudEV4Y2VwdGlvbihleGNlcHRpb24sIGV4Y2VwdGlvbklkKSB7XG4gIC8vIERvbid0IGtub3cgaWYgdGhpcyBkZWZhdWx0IG1ha2VzIHNlbnNlLiBUaGUgcHJvdG9jb2wgcmVxdWlyZXMgdXMgdG8gc2V0IHRoZXNlIHZhbHVlcyBzbyB3ZSBwaWNrICpzb21lKiBkZWZhdWx0LlxuICBleGNlcHRpb24ubWVjaGFuaXNtID0gZXhjZXB0aW9uLm1lY2hhbmlzbSB8fCB7IHR5cGU6ICdnZW5lcmljJywgaGFuZGxlZDogdHJ1ZSB9O1xuXG4gIGV4Y2VwdGlvbi5tZWNoYW5pc20gPSB7XG4gICAgLi4uZXhjZXB0aW9uLm1lY2hhbmlzbSxcbiAgICAuLi4oZXhjZXB0aW9uLnR5cGUgPT09ICdBZ2dyZWdhdGVFcnJvcicgJiYgeyBpc19leGNlcHRpb25fZ3JvdXA6IHRydWUgfSksXG4gICAgZXhjZXB0aW9uX2lkOiBleGNlcHRpb25JZCxcbiAgfTtcbn1cblxuZnVuY3Rpb24gYXBwbHlFeGNlcHRpb25Hcm91cEZpZWxkc0ZvckNoaWxkRXhjZXB0aW9uKFxuICBleGNlcHRpb24sXG4gIHNvdXJjZSxcbiAgZXhjZXB0aW9uSWQsXG4gIHBhcmVudElkLFxuKSB7XG4gIC8vIERvbid0IGtub3cgaWYgdGhpcyBkZWZhdWx0IG1ha2VzIHNlbnNlLiBUaGUgcHJvdG9jb2wgcmVxdWlyZXMgdXMgdG8gc2V0IHRoZXNlIHZhbHVlcyBzbyB3ZSBwaWNrICpzb21lKiBkZWZhdWx0LlxuICBleGNlcHRpb24ubWVjaGFuaXNtID0gZXhjZXB0aW9uLm1lY2hhbmlzbSB8fCB7IHR5cGU6ICdnZW5lcmljJywgaGFuZGxlZDogdHJ1ZSB9O1xuXG4gIGV4Y2VwdGlvbi5tZWNoYW5pc20gPSB7XG4gICAgLi4uZXhjZXB0aW9uLm1lY2hhbmlzbSxcbiAgICB0eXBlOiAnY2hhaW5lZCcsXG4gICAgc291cmNlLFxuICAgIGV4Y2VwdGlvbl9pZDogZXhjZXB0aW9uSWQsXG4gICAgcGFyZW50X2lkOiBwYXJlbnRJZCxcbiAgfTtcbn1cblxuLyoqXG4gKiBUcnVuY2F0ZSB0aGUgbWVzc2FnZSAoZXhjZXB0aW9uLnZhbHVlKSBvZiBhbGwgZXhjZXB0aW9ucyBpbiB0aGUgZXZlbnQuXG4gKiBCZWNhdXNlIHRoaXMgZXZlbnQgcHJvY2Vzc29yIGlzIHJhbiBhZnRlciBgYXBwbHlDbGllbnRPcHRpb25zYCxcbiAqIHdlIG5lZWQgdG8gdHJ1bmNhdGUgdGhlIG1lc3NhZ2Ugb2YgdGhlIGFkZGVkIGV4Y2VwdGlvbnMgaGVyZS5cbiAqL1xuZnVuY3Rpb24gdHJ1bmNhdGVBZ2dyZWdhdGVFeGNlcHRpb25zKGV4Y2VwdGlvbnMsIG1heFZhbHVlTGVuZ3RoKSB7XG4gIHJldHVybiBleGNlcHRpb25zLm1hcChleGNlcHRpb24gPT4ge1xuICAgIGlmIChleGNlcHRpb24udmFsdWUpIHtcbiAgICAgIGV4Y2VwdGlvbi52YWx1ZSA9IHN0cmluZy50cnVuY2F0ZShleGNlcHRpb24udmFsdWUsIG1heFZhbHVlTGVuZ3RoKTtcbiAgICB9XG4gICAgcmV0dXJuIGV4Y2VwdGlvbjtcbiAgfSk7XG59XG5cbmV4cG9ydHMuYXBwbHlBZ2dyZWdhdGVFcnJvcnNUb0V2ZW50ID0gYXBwbHlBZ2dyZWdhdGVFcnJvcnNUb0V2ZW50O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YWdncmVnYXRlLWVycm9ycy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/aggregate-errors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/anr.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/anr.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst nodeStackTrace = __webpack_require__(/*! ./node-stack-trace.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/node-stack-trace.js\");\nconst object = __webpack_require__(/*! ./object.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/object.js\");\nconst stacktrace = __webpack_require__(/*! ./stacktrace.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/stacktrace.js\");\n\n/**\n * A node.js watchdog timer\n * @param pollInterval The interval that we expect to get polled at\n * @param anrThreshold The threshold for when we consider ANR\n * @param callback The callback to call for ANR\n * @returns An object with `poll` and `enabled` functions {@link WatchdogReturn}\n */\nfunction watchdogTimer(\n  createTimer,\n  pollInterval,\n  anrThreshold,\n  callback,\n) {\n  const timer = createTimer();\n  let triggered = false;\n  let enabled = true;\n\n  setInterval(() => {\n    const diffMs = timer.getTimeMs();\n\n    if (triggered === false && diffMs > pollInterval + anrThreshold) {\n      triggered = true;\n      if (enabled) {\n        callback();\n      }\n    }\n\n    if (diffMs < pollInterval + anrThreshold) {\n      triggered = false;\n    }\n  }, 20);\n\n  return {\n    poll: () => {\n      timer.reset();\n    },\n    enabled: (state) => {\n      enabled = state;\n    },\n  };\n}\n\n// types copied from inspector.d.ts\n\n/**\n * Converts Debugger.CallFrame to Sentry StackFrame\n */\nfunction callFrameToStackFrame(\n  frame,\n  url,\n  getModuleFromFilename,\n) {\n  const filename = url ? url.replace(/^file:\\/\\//, '') : undefined;\n\n  // CallFrame row/col are 0 based, whereas StackFrame are 1 based\n  const colno = frame.location.columnNumber ? frame.location.columnNumber + 1 : undefined;\n  const lineno = frame.location.lineNumber ? frame.location.lineNumber + 1 : undefined;\n\n  return object.dropUndefinedKeys({\n    filename,\n    module: getModuleFromFilename(filename),\n    function: frame.functionName || stacktrace.UNKNOWN_FUNCTION,\n    colno,\n    lineno,\n    in_app: filename ? nodeStackTrace.filenameIsInApp(filename) : undefined,\n  });\n}\n\nexports.callFrameToStackFrame = callFrameToStackFrame;\nexports.watchdogTimer = watchdogTimer;\n//# sourceMappingURL=anr.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2Fuci5qcyIsIm1hcHBpbmdzIjoiQUFBQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7O0FBRTdELHVCQUF1QixtQkFBTyxDQUFDLHVJQUF1QjtBQUN0RCxlQUFlLG1CQUFPLENBQUMsbUhBQWE7QUFDcEMsbUJBQW1CLG1CQUFPLENBQUMsMkhBQWlCOztBQUU1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkRBQTJEO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBLDZCQUE2QjtBQUM3QixxQkFBcUI7QUFDckIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0Zm9saW8tcHJvamVjdC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2VudHJ5K3V0aWxzQDguMTcuMC9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9idWlsZC9janMvYW5yLmpzPzFmMDAiXSwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxuY29uc3Qgbm9kZVN0YWNrVHJhY2UgPSByZXF1aXJlKCcuL25vZGUtc3RhY2stdHJhY2UuanMnKTtcbmNvbnN0IG9iamVjdCA9IHJlcXVpcmUoJy4vb2JqZWN0LmpzJyk7XG5jb25zdCBzdGFja3RyYWNlID0gcmVxdWlyZSgnLi9zdGFja3RyYWNlLmpzJyk7XG5cbi8qKlxuICogQSBub2RlLmpzIHdhdGNoZG9nIHRpbWVyXG4gKiBAcGFyYW0gcG9sbEludGVydmFsIFRoZSBpbnRlcnZhbCB0aGF0IHdlIGV4cGVjdCB0byBnZXQgcG9sbGVkIGF0XG4gKiBAcGFyYW0gYW5yVGhyZXNob2xkIFRoZSB0aHJlc2hvbGQgZm9yIHdoZW4gd2UgY29uc2lkZXIgQU5SXG4gKiBAcGFyYW0gY2FsbGJhY2sgVGhlIGNhbGxiYWNrIHRvIGNhbGwgZm9yIEFOUlxuICogQHJldHVybnMgQW4gb2JqZWN0IHdpdGggYHBvbGxgIGFuZCBgZW5hYmxlZGAgZnVuY3Rpb25zIHtAbGluayBXYXRjaGRvZ1JldHVybn1cbiAqL1xuZnVuY3Rpb24gd2F0Y2hkb2dUaW1lcihcbiAgY3JlYXRlVGltZXIsXG4gIHBvbGxJbnRlcnZhbCxcbiAgYW5yVGhyZXNob2xkLFxuICBjYWxsYmFjayxcbikge1xuICBjb25zdCB0aW1lciA9IGNyZWF0ZVRpbWVyKCk7XG4gIGxldCB0cmlnZ2VyZWQgPSBmYWxzZTtcbiAgbGV0IGVuYWJsZWQgPSB0cnVlO1xuXG4gIHNldEludGVydmFsKCgpID0+IHtcbiAgICBjb25zdCBkaWZmTXMgPSB0aW1lci5nZXRUaW1lTXMoKTtcblxuICAgIGlmICh0cmlnZ2VyZWQgPT09IGZhbHNlICYmIGRpZmZNcyA+IHBvbGxJbnRlcnZhbCArIGFuclRocmVzaG9sZCkge1xuICAgICAgdHJpZ2dlcmVkID0gdHJ1ZTtcbiAgICAgIGlmIChlbmFibGVkKSB7XG4gICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGRpZmZNcyA8IHBvbGxJbnRlcnZhbCArIGFuclRocmVzaG9sZCkge1xuICAgICAgdHJpZ2dlcmVkID0gZmFsc2U7XG4gICAgfVxuICB9LCAyMCk7XG5cbiAgcmV0dXJuIHtcbiAgICBwb2xsOiAoKSA9PiB7XG4gICAgICB0aW1lci5yZXNldCgpO1xuICAgIH0sXG4gICAgZW5hYmxlZDogKHN0YXRlKSA9PiB7XG4gICAgICBlbmFibGVkID0gc3RhdGU7XG4gICAgfSxcbiAgfTtcbn1cblxuLy8gdHlwZXMgY29waWVkIGZyb20gaW5zcGVjdG9yLmQudHNcblxuLyoqXG4gKiBDb252ZXJ0cyBEZWJ1Z2dlci5DYWxsRnJhbWUgdG8gU2VudHJ5IFN0YWNrRnJhbWVcbiAqL1xuZnVuY3Rpb24gY2FsbEZyYW1lVG9TdGFja0ZyYW1lKFxuICBmcmFtZSxcbiAgdXJsLFxuICBnZXRNb2R1bGVGcm9tRmlsZW5hbWUsXG4pIHtcbiAgY29uc3QgZmlsZW5hbWUgPSB1cmwgPyB1cmwucmVwbGFjZSgvXmZpbGU6XFwvXFwvLywgJycpIDogdW5kZWZpbmVkO1xuXG4gIC8vIENhbGxGcmFtZSByb3cvY29sIGFyZSAwIGJhc2VkLCB3aGVyZWFzIFN0YWNrRnJhbWUgYXJlIDEgYmFzZWRcbiAgY29uc3QgY29sbm8gPSBmcmFtZS5sb2NhdGlvbi5jb2x1bW5OdW1iZXIgPyBmcmFtZS5sb2NhdGlvbi5jb2x1bW5OdW1iZXIgKyAxIDogdW5kZWZpbmVkO1xuICBjb25zdCBsaW5lbm8gPSBmcmFtZS5sb2NhdGlvbi5saW5lTnVtYmVyID8gZnJhbWUubG9jYXRpb24ubGluZU51bWJlciArIDEgOiB1bmRlZmluZWQ7XG5cbiAgcmV0dXJuIG9iamVjdC5kcm9wVW5kZWZpbmVkS2V5cyh7XG4gICAgZmlsZW5hbWUsXG4gICAgbW9kdWxlOiBnZXRNb2R1bGVGcm9tRmlsZW5hbWUoZmlsZW5hbWUpLFxuICAgIGZ1bmN0aW9uOiBmcmFtZS5mdW5jdGlvbk5hbWUgfHwgc3RhY2t0cmFjZS5VTktOT1dOX0ZVTkNUSU9OLFxuICAgIGNvbG5vLFxuICAgIGxpbmVubyxcbiAgICBpbl9hcHA6IGZpbGVuYW1lID8gbm9kZVN0YWNrVHJhY2UuZmlsZW5hbWVJc0luQXBwKGZpbGVuYW1lKSA6IHVuZGVmaW5lZCxcbiAgfSk7XG59XG5cbmV4cG9ydHMuY2FsbEZyYW1lVG9TdGFja0ZyYW1lID0gY2FsbEZyYW1lVG9TdGFja0ZyYW1lO1xuZXhwb3J0cy53YXRjaGRvZ1RpbWVyID0gd2F0Y2hkb2dUaW1lcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFuci5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/anr.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/array.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/array.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n/** Flattens a multi-dimensional array */\nfunction flatten(input) {\n  const result = [];\n\n  const flattenHelper = (input) => {\n    input.forEach((el) => {\n      if (Array.isArray(el)) {\n        flattenHelper(el );\n      } else {\n        result.push(el );\n      }\n    });\n  };\n\n  flattenHelper(input);\n  return result;\n}\n\nexports.flatten = flatten;\n//# sourceMappingURL=array.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2FycmF5LmpzIiwibWFwcGluZ3MiOiJBQUFBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQzs7QUFFN0Q7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBOztBQUVBLGVBQWU7QUFDZiIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9hcnJheS5qcz9iYzg4Il0sInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG5cbi8qKiBGbGF0dGVucyBhIG11bHRpLWRpbWVuc2lvbmFsIGFycmF5ICovXG5mdW5jdGlvbiBmbGF0dGVuKGlucHV0KSB7XG4gIGNvbnN0IHJlc3VsdCA9IFtdO1xuXG4gIGNvbnN0IGZsYXR0ZW5IZWxwZXIgPSAoaW5wdXQpID0+IHtcbiAgICBpbnB1dC5mb3JFYWNoKChlbCkgPT4ge1xuICAgICAgaWYgKEFycmF5LmlzQXJyYXkoZWwpKSB7XG4gICAgICAgIGZsYXR0ZW5IZWxwZXIoZWwgKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJlc3VsdC5wdXNoKGVsICk7XG4gICAgICB9XG4gICAgfSk7XG4gIH07XG5cbiAgZmxhdHRlbkhlbHBlcihpbnB1dCk7XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmV4cG9ydHMuZmxhdHRlbiA9IGZsYXR0ZW47XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcnJheS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/array.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/baggage.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/baggage.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst debugBuild = __webpack_require__(/*! ./debug-build.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/debug-build.js\");\nconst is = __webpack_require__(/*! ./is.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/is.js\");\nconst logger = __webpack_require__(/*! ./logger.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/logger.js\");\n\nconst BAGGAGE_HEADER_NAME = 'baggage';\n\nconst SENTRY_BAGGAGE_KEY_PREFIX = 'sentry-';\n\nconst SENTRY_BAGGAGE_KEY_PREFIX_REGEX = /^sentry-/;\n\n/**\n * Max length of a serialized baggage string\n *\n * https://www.w3.org/TR/baggage/#limits\n */\nconst MAX_BAGGAGE_STRING_LENGTH = 8192;\n\n/**\n * Takes a baggage header and turns it into Dynamic Sampling Context, by extracting all the \"sentry-\" prefixed values\n * from it.\n *\n * @param baggageHeader A very bread definition of a baggage header as it might appear in various frameworks.\n * @returns The Dynamic Sampling Context that was found on `baggageHeader`, if there was any, `undefined` otherwise.\n */\nfunction baggageHeaderToDynamicSamplingContext(\n  // Very liberal definition of what any incoming header might look like\n  baggageHeader,\n) {\n  const baggageObject = parseBaggageHeader(baggageHeader);\n\n  if (!baggageObject) {\n    return undefined;\n  }\n\n  // Read all \"sentry-\" prefixed values out of the baggage object and put it onto a dynamic sampling context object.\n  const dynamicSamplingContext = Object.entries(baggageObject).reduce((acc, [key, value]) => {\n    if (key.match(SENTRY_BAGGAGE_KEY_PREFIX_REGEX)) {\n      const nonPrefixedKey = key.slice(SENTRY_BAGGAGE_KEY_PREFIX.length);\n      acc[nonPrefixedKey] = value;\n    }\n    return acc;\n  }, {});\n\n  // Only return a dynamic sampling context object if there are keys in it.\n  // A keyless object means there were no sentry values on the header, which means that there is no DSC.\n  if (Object.keys(dynamicSamplingContext).length > 0) {\n    return dynamicSamplingContext ;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Turns a Dynamic Sampling Object into a baggage header by prefixing all the keys on the object with \"sentry-\".\n *\n * @param dynamicSamplingContext The Dynamic Sampling Context to turn into a header. For convenience and compatibility\n * with the `getDynamicSamplingContext` method on the Transaction class ,this argument can also be `undefined`. If it is\n * `undefined` the function will return `undefined`.\n * @returns a baggage header, created from `dynamicSamplingContext`, or `undefined` either if `dynamicSamplingContext`\n * was `undefined`, or if `dynamicSamplingContext` didn't contain any values.\n */\nfunction dynamicSamplingContextToSentryBaggageHeader(\n  // this also takes undefined for convenience and bundle size in other places\n  dynamicSamplingContext,\n) {\n  if (!dynamicSamplingContext) {\n    return undefined;\n  }\n\n  // Prefix all DSC keys with \"sentry-\" and put them into a new object\n  const sentryPrefixedDSC = Object.entries(dynamicSamplingContext).reduce(\n    (acc, [dscKey, dscValue]) => {\n      if (dscValue) {\n        acc[`${SENTRY_BAGGAGE_KEY_PREFIX}${dscKey}`] = dscValue;\n      }\n      return acc;\n    },\n    {},\n  );\n\n  return objectToBaggageHeader(sentryPrefixedDSC);\n}\n\n/**\n * Take a baggage header and parse it into an object.\n */\nfunction parseBaggageHeader(\n  baggageHeader,\n) {\n  if (!baggageHeader || (!is.isString(baggageHeader) && !Array.isArray(baggageHeader))) {\n    return undefined;\n  }\n\n  if (Array.isArray(baggageHeader)) {\n    // Combine all baggage headers into one object containing the baggage values so we can later read the Sentry-DSC-values from it\n    return baggageHeader.reduce((acc, curr) => {\n      const currBaggageObject = baggageHeaderToObject(curr);\n      Object.entries(currBaggageObject).forEach(([key, value]) => {\n        acc[key] = value;\n      });\n      return acc;\n    }, {});\n  }\n\n  return baggageHeaderToObject(baggageHeader);\n}\n\n/**\n * Will parse a baggage header, which is a simple key-value map, into a flat object.\n *\n * @param baggageHeader The baggage header to parse.\n * @returns a flat object containing all the key-value pairs from `baggageHeader`.\n */\nfunction baggageHeaderToObject(baggageHeader) {\n  return baggageHeader\n    .split(',')\n    .map(baggageEntry => baggageEntry.split('=').map(keyOrValue => decodeURIComponent(keyOrValue.trim())))\n    .reduce((acc, [key, value]) => {\n      if (key && value) {\n        acc[key] = value;\n      }\n      return acc;\n    }, {});\n}\n\n/**\n * Turns a flat object (key-value pairs) into a baggage header, which is also just key-value pairs.\n *\n * @param object The object to turn into a baggage header.\n * @returns a baggage header string, or `undefined` if the object didn't have any values, since an empty baggage header\n * is not spec compliant.\n */\nfunction objectToBaggageHeader(object) {\n  if (Object.keys(object).length === 0) {\n    // An empty baggage header is not spec compliant: We return undefined.\n    return undefined;\n  }\n\n  return Object.entries(object).reduce((baggageHeader, [objectKey, objectValue], currentIndex) => {\n    const baggageEntry = `${encodeURIComponent(objectKey)}=${encodeURIComponent(objectValue)}`;\n    const newBaggageHeader = currentIndex === 0 ? baggageEntry : `${baggageHeader},${baggageEntry}`;\n    if (newBaggageHeader.length > MAX_BAGGAGE_STRING_LENGTH) {\n      debugBuild.DEBUG_BUILD &&\n        logger.logger.warn(\n          `Not adding key: ${objectKey} with val: ${objectValue} to baggage header due to exceeding baggage size limits.`,\n        );\n      return baggageHeader;\n    } else {\n      return newBaggageHeader;\n    }\n  }, '');\n}\n\nexports.BAGGAGE_HEADER_NAME = BAGGAGE_HEADER_NAME;\nexports.MAX_BAGGAGE_STRING_LENGTH = MAX_BAGGAGE_STRING_LENGTH;\nexports.SENTRY_BAGGAGE_KEY_PREFIX = SENTRY_BAGGAGE_KEY_PREFIX;\nexports.SENTRY_BAGGAGE_KEY_PREFIX_REGEX = SENTRY_BAGGAGE_KEY_PREFIX_REGEX;\nexports.baggageHeaderToDynamicSamplingContext = baggageHeaderToDynamicSamplingContext;\nexports.dynamicSamplingContextToSentryBaggageHeader = dynamicSamplingContextToSentryBaggageHeader;\nexports.parseBaggageHeader = parseBaggageHeader;\n//# sourceMappingURL=baggage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/baggage.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/browser.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/browser.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst is = __webpack_require__(/*! ./is.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/is.js\");\nconst worldwide = __webpack_require__(/*! ./worldwide.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/worldwide.js\");\n\nconst WINDOW = worldwide.GLOBAL_OBJ ;\n\nconst DEFAULT_MAX_STRING_LENGTH = 80;\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction htmlTreeAsString(\n  elem,\n  options = {},\n) {\n  if (!elem) {\n    return '<unknown>';\n  }\n\n  // try/catch both:\n  // - accessing event.target (see getsentry/raven-js#838, #768)\n  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n  // - can throw an exception in some circumstances.\n  try {\n    let currentElem = elem ;\n    const MAX_TRAVERSE_HEIGHT = 5;\n    const out = [];\n    let height = 0;\n    let len = 0;\n    const separator = ' > ';\n    const sepLength = separator.length;\n    let nextStr;\n    const keyAttrs = Array.isArray(options) ? options : options.keyAttrs;\n    const maxStringLength = (!Array.isArray(options) && options.maxStringLength) || DEFAULT_MAX_STRING_LENGTH;\n\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n      nextStr = _htmlElementAsString(currentElem, keyAttrs);\n      // bail out if\n      // - nextStr is the 'html' element\n      // - the length of the string that would be created exceeds maxStringLength\n      //   (ignore this limit if we are on the first iteration)\n      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= maxStringLength)) {\n        break;\n      }\n\n      out.push(nextStr);\n\n      len += nextStr.length;\n      currentElem = currentElem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el, keyAttrs) {\n  const elem = el\n\n;\n\n  const out = [];\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  // @ts-expect-error WINDOW has HTMLElement\n  if (WINDOW.HTMLElement) {\n    // If using the component name annotation plugin, this value may be available on the DOM node\n    if (elem instanceof HTMLElement && elem.dataset) {\n      if (elem.dataset['sentryComponent']) {\n        return elem.dataset['sentryComponent'];\n      }\n      if (elem.dataset['sentryElement']) {\n        return elem.dataset['sentryElement'];\n      }\n    }\n  }\n\n  out.push(elem.tagName.toLowerCase());\n\n  // Pairs of attribute keys defined in `serializeAttribute` and their values on element.\n  const keyAttrPairs =\n    keyAttrs && keyAttrs.length\n      ? keyAttrs.filter(keyAttr => elem.getAttribute(keyAttr)).map(keyAttr => [keyAttr, elem.getAttribute(keyAttr)])\n      : null;\n\n  if (keyAttrPairs && keyAttrPairs.length) {\n    keyAttrPairs.forEach(keyAttrPair => {\n      out.push(`[${keyAttrPair[0]}=\"${keyAttrPair[1]}\"]`);\n    });\n  } else {\n    if (elem.id) {\n      out.push(`#${elem.id}`);\n    }\n\n    const className = elem.className;\n    if (className && is.isString(className)) {\n      const classes = className.split(/\\s+/);\n      for (const c of classes) {\n        out.push(`.${c}`);\n      }\n    }\n  }\n  const allowedAttrs = ['aria-label', 'type', 'name', 'title', 'alt'];\n  for (const k of allowedAttrs) {\n    const attr = elem.getAttribute(k);\n    if (attr) {\n      out.push(`[${k}=\"${attr}\"]`);\n    }\n  }\n\n  return out.join('');\n}\n\n/**\n * A safe form of location.href\n */\nfunction getLocationHref() {\n  try {\n    return WINDOW.document.location.href;\n  } catch (oO) {\n    return '';\n  }\n}\n\n/**\n * Gets a DOM element by using document.querySelector.\n *\n * This wrapper will first check for the existance of the function before\n * actually calling it so that we don't have to take care of this check,\n * every time we want to access the DOM.\n *\n * Reason: DOM/querySelector is not available in all environments.\n *\n * We have to cast to any because utils can be consumed by a variety of environments,\n * and we don't want to break TS users. If you know what element will be selected by\n * `document.querySelector`, specify it as part of the generic call. For example,\n * `const element = getDomElement<Element>('selector');`\n *\n * @param selector the selector string passed on to document.querySelector\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction getDomElement(selector) {\n  if (WINDOW.document && WINDOW.document.querySelector) {\n    return WINDOW.document.querySelector(selector) ;\n  }\n  return null;\n}\n\n/**\n * Given a DOM element, traverses up the tree until it finds the first ancestor node\n * that has the `data-sentry-component` or `data-sentry-element` attribute with `data-sentry-component` taking\n * precendence. This attribute is added at build-time by projects that have the component name annotation plugin installed.\n *\n * @returns a string representation of the component for the provided DOM element, or `null` if not found\n */\nfunction getComponentName(elem) {\n  // @ts-expect-error WINDOW has HTMLElement\n  if (!WINDOW.HTMLElement) {\n    return null;\n  }\n\n  let currentElem = elem ;\n  const MAX_TRAVERSE_HEIGHT = 5;\n  for (let i = 0; i < MAX_TRAVERSE_HEIGHT; i++) {\n    if (!currentElem) {\n      return null;\n    }\n\n    if (currentElem instanceof HTMLElement) {\n      if (currentElem.dataset['sentryComponent']) {\n        return currentElem.dataset['sentryComponent'];\n      }\n      if (currentElem.dataset['sentryElement']) {\n        return currentElem.dataset['sentryElement'];\n      }\n    }\n\n    currentElem = currentElem.parentNode;\n  }\n\n  return null;\n}\n\nexports.getComponentName = getComponentName;\nexports.getDomElement = getDomElement;\nexports.getLocationHref = getLocationHref;\nexports.htmlTreeAsString = htmlTreeAsString;\n//# sourceMappingURL=browser.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/browser.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_asyncNullishCoalesce.js":
/*!******************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_asyncNullishCoalesce.js ***!
  \******************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst _nullishCoalesce = __webpack_require__(/*! ./_nullishCoalesce.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_nullishCoalesce.js\");\n\n// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n\n/**\n * Polyfill for the nullish coalescing operator (`??`), when used in situations where at least one of the values is the\n * result of an async operation.\n *\n * Note that the RHS is wrapped in a function so that if it's a computed value, that evaluation won't happen unless the\n * LHS evaluates to a nullish value, to mimic the operator's short-circuiting behavior.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param lhs The value of the expression to the left of the `??`\n * @param rhsFn A function returning the value of the expression to the right of the `??`\n * @returns The LHS value, unless it's `null` or `undefined`, in which case, the RHS value\n */\nasync function _asyncNullishCoalesce(lhs, rhsFn) {\n  return _nullishCoalesce._nullishCoalesce(lhs, rhsFn);\n}\n\n// Sucrase version:\n// async function _asyncNullishCoalesce(lhs, rhsFn) {\n//   if (lhs != null) {\n//     return lhs;\n//   } else {\n//     return await rhsFn();\n//   }\n// }\n\nexports._asyncNullishCoalesce = _asyncNullishCoalesce;\n//# sourceMappingURL=_asyncNullishCoalesce.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2J1aWxkUG9seWZpbGxzL19hc3luY051bGxpc2hDb2FsZXNjZS5qcyIsIm1hcHBpbmdzIjoiQUFBQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7O0FBRTdELHlCQUF5QixtQkFBTyxDQUFDLHNKQUF1Qjs7QUFFeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBOztBQUVBLDZCQUE2QjtBQUM3QiIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9idWlsZFBvbHlmaWxscy9fYXN5bmNOdWxsaXNoQ29hbGVzY2UuanM/ZWJhMSJdLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG5jb25zdCBfbnVsbGlzaENvYWxlc2NlID0gcmVxdWlyZSgnLi9fbnVsbGlzaENvYWxlc2NlLmpzJyk7XG5cbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9hbGFuZ3BpZXJjZS9zdWNyYXNlL3RyZWUvMjY1ODg3ODY4OTY2OTE3ZjNiOTI0Y2UzOGRmYWQwMWZiYWIxMzI5ZlxuLy9cbi8vIFRoZSBNSVQgTGljZW5zZSAoTUlUKVxuLy9cbi8vIENvcHlyaWdodCAoYykgMjAxMi0yMDE4IHZhcmlvdXMgY29udHJpYnV0b3JzIChzZWUgQVVUSE9SUylcbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5XG4vLyBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsXG4vLyBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzXG4vLyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsXG4vLyBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXNcbi8vIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW4gYWxsXG4vLyBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1Jcbi8vIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxuLy8gRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFXG4vLyBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXG4vLyBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLFxuLy8gT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEVcbi8vIFNPRlRXQVJFLlxuXG5cbi8qKlxuICogUG9seWZpbGwgZm9yIHRoZSBudWxsaXNoIGNvYWxlc2Npbmcgb3BlcmF0b3IgKGA/P2ApLCB3aGVuIHVzZWQgaW4gc2l0dWF0aW9ucyB3aGVyZSBhdCBsZWFzdCBvbmUgb2YgdGhlIHZhbHVlcyBpcyB0aGVcbiAqIHJlc3VsdCBvZiBhbiBhc3luYyBvcGVyYXRpb24uXG4gKlxuICogTm90ZSB0aGF0IHRoZSBSSFMgaXMgd3JhcHBlZCBpbiBhIGZ1bmN0aW9uIHNvIHRoYXQgaWYgaXQncyBhIGNvbXB1dGVkIHZhbHVlLCB0aGF0IGV2YWx1YXRpb24gd29uJ3QgaGFwcGVuIHVubGVzcyB0aGVcbiAqIExIUyBldmFsdWF0ZXMgdG8gYSBudWxsaXNoIHZhbHVlLCB0byBtaW1pYyB0aGUgb3BlcmF0b3IncyBzaG9ydC1jaXJjdWl0aW5nIGJlaGF2aW9yLlxuICpcbiAqIEFkYXB0ZWQgZnJvbSBTdWNyYXNlIChodHRwczovL2dpdGh1Yi5jb20vYWxhbmdwaWVyY2Uvc3VjcmFzZSlcbiAqXG4gKiBAcGFyYW0gbGhzIFRoZSB2YWx1ZSBvZiB0aGUgZXhwcmVzc2lvbiB0byB0aGUgbGVmdCBvZiB0aGUgYD8/YFxuICogQHBhcmFtIHJoc0ZuIEEgZnVuY3Rpb24gcmV0dXJuaW5nIHRoZSB2YWx1ZSBvZiB0aGUgZXhwcmVzc2lvbiB0byB0aGUgcmlnaHQgb2YgdGhlIGA/P2BcbiAqIEByZXR1cm5zIFRoZSBMSFMgdmFsdWUsIHVubGVzcyBpdCdzIGBudWxsYCBvciBgdW5kZWZpbmVkYCwgaW4gd2hpY2ggY2FzZSwgdGhlIFJIUyB2YWx1ZVxuICovXG5hc3luYyBmdW5jdGlvbiBfYXN5bmNOdWxsaXNoQ29hbGVzY2UobGhzLCByaHNGbikge1xuICByZXR1cm4gX251bGxpc2hDb2FsZXNjZS5fbnVsbGlzaENvYWxlc2NlKGxocywgcmhzRm4pO1xufVxuXG4vLyBTdWNyYXNlIHZlcnNpb246XG4vLyBhc3luYyBmdW5jdGlvbiBfYXN5bmNOdWxsaXNoQ29hbGVzY2UobGhzLCByaHNGbikge1xuLy8gICBpZiAobGhzICE9IG51bGwpIHtcbi8vICAgICByZXR1cm4gbGhzO1xuLy8gICB9IGVsc2Uge1xuLy8gICAgIHJldHVybiBhd2FpdCByaHNGbigpO1xuLy8gICB9XG4vLyB9XG5cbmV4cG9ydHMuX2FzeW5jTnVsbGlzaENvYWxlc2NlID0gX2FzeW5jTnVsbGlzaENvYWxlc2NlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9X2FzeW5jTnVsbGlzaENvYWxlc2NlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_asyncNullishCoalesce.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_asyncOptionalChain.js":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_asyncOptionalChain.js ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n/**\n * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,\n * descriptors, and functions, for situations in which at least one part of the expression is async.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase) See\n * https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15\n *\n * @param ops Array result of expression conversion\n * @returns The value of the expression\n */\nasync function _asyncOptionalChain(ops) {\n  let lastAccessLHS = undefined;\n  let value = ops[0];\n  let i = 1;\n  while (i < ops.length) {\n    const op = ops[i] ;\n    const fn = ops[i + 1] ;\n    i += 2;\n    // by checking for loose equality to `null`, we catch both `null` and `undefined`\n    if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n      // really we're meaning to return `undefined` as an actual value here, but it saves bytes not to write it\n      return;\n    }\n    if (op === 'access' || op === 'optionalAccess') {\n      lastAccessLHS = value;\n      value = await fn(value);\n    } else if (op === 'call' || op === 'optionalCall') {\n      value = await fn((...args) => (value ).call(lastAccessLHS, ...args));\n      lastAccessLHS = undefined;\n    }\n  }\n  return value;\n}\n\n// Sucrase version:\n// async function _asyncOptionalChain(ops) {\n//   let lastAccessLHS = undefined;\n//   let value = ops[0];\n//   let i = 1;\n//   while (i < ops.length) {\n//     const op = ops[i];\n//     const fn = ops[i + 1];\n//     i += 2;\n//     if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n//       return undefined;\n//     }\n//     if (op === 'access' || op === 'optionalAccess') {\n//       lastAccessLHS = value;\n//       value = await fn(value);\n//     } else if (op === 'call' || op === 'optionalCall') {\n//       value = await fn((...args) => value.call(lastAccessLHS, ...args));\n//       lastAccessLHS = undefined;\n//     }\n//   }\n//   return value;\n// }\n\nexports._asyncOptionalChain = _asyncOptionalChain;\n//# sourceMappingURL=_asyncOptionalChain.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2J1aWxkUG9seWZpbGxzL19hc3luY09wdGlvbmFsQ2hhaW4uanMiLCJtYXBwaW5ncyI6IkFBQUEsOENBQTZDLEVBQUUsYUFBYSxFQUFDOztBQUU3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLDJCQUEyQjtBQUMzQiIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9idWlsZFBvbHlmaWxscy9fYXN5bmNPcHRpb25hbENoYWluLmpzP2YxOGYiXSwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxuLyoqXG4gKiBQb2x5ZmlsbCBmb3IgdGhlIG9wdGlvbmFsIGNoYWluIG9wZXJhdG9yLCBgPy5gLCBnaXZlbiBwcmV2aW91cyBjb252ZXJzaW9uIG9mIHRoZSBleHByZXNzaW9uIGludG8gYW4gYXJyYXkgb2YgdmFsdWVzLFxuICogZGVzY3JpcHRvcnMsIGFuZCBmdW5jdGlvbnMsIGZvciBzaXR1YXRpb25zIGluIHdoaWNoIGF0IGxlYXN0IG9uZSBwYXJ0IG9mIHRoZSBleHByZXNzaW9uIGlzIGFzeW5jLlxuICpcbiAqIEFkYXB0ZWQgZnJvbSBTdWNyYXNlIChodHRwczovL2dpdGh1Yi5jb20vYWxhbmdwaWVyY2Uvc3VjcmFzZSkgU2VlXG4gKiBodHRwczovL2dpdGh1Yi5jb20vYWxhbmdwaWVyY2Uvc3VjcmFzZS9ibG9iLzI2NTg4Nzg2ODk2NjkxN2YzYjkyNGNlMzhkZmFkMDFmYmFiMTMyOWYvc3JjL3RyYW5zZm9ybWVycy9PcHRpb25hbENoYWluaW5nTnVsbGlzaFRyYW5zZm9ybWVyLnRzI0wxNVxuICpcbiAqIEBwYXJhbSBvcHMgQXJyYXkgcmVzdWx0IG9mIGV4cHJlc3Npb24gY29udmVyc2lvblxuICogQHJldHVybnMgVGhlIHZhbHVlIG9mIHRoZSBleHByZXNzaW9uXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIF9hc3luY09wdGlvbmFsQ2hhaW4ob3BzKSB7XG4gIGxldCBsYXN0QWNjZXNzTEhTID0gdW5kZWZpbmVkO1xuICBsZXQgdmFsdWUgPSBvcHNbMF07XG4gIGxldCBpID0gMTtcbiAgd2hpbGUgKGkgPCBvcHMubGVuZ3RoKSB7XG4gICAgY29uc3Qgb3AgPSBvcHNbaV0gO1xuICAgIGNvbnN0IGZuID0gb3BzW2kgKyAxXSA7XG4gICAgaSArPSAyO1xuICAgIC8vIGJ5IGNoZWNraW5nIGZvciBsb29zZSBlcXVhbGl0eSB0byBgbnVsbGAsIHdlIGNhdGNoIGJvdGggYG51bGxgIGFuZCBgdW5kZWZpbmVkYFxuICAgIGlmICgob3AgPT09ICdvcHRpb25hbEFjY2VzcycgfHwgb3AgPT09ICdvcHRpb25hbENhbGwnKSAmJiB2YWx1ZSA9PSBudWxsKSB7XG4gICAgICAvLyByZWFsbHkgd2UncmUgbWVhbmluZyB0byByZXR1cm4gYHVuZGVmaW5lZGAgYXMgYW4gYWN0dWFsIHZhbHVlIGhlcmUsIGJ1dCBpdCBzYXZlcyBieXRlcyBub3QgdG8gd3JpdGUgaXRcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKG9wID09PSAnYWNjZXNzJyB8fCBvcCA9PT0gJ29wdGlvbmFsQWNjZXNzJykge1xuICAgICAgbGFzdEFjY2Vzc0xIUyA9IHZhbHVlO1xuICAgICAgdmFsdWUgPSBhd2FpdCBmbih2YWx1ZSk7XG4gICAgfSBlbHNlIGlmIChvcCA9PT0gJ2NhbGwnIHx8IG9wID09PSAnb3B0aW9uYWxDYWxsJykge1xuICAgICAgdmFsdWUgPSBhd2FpdCBmbigoLi4uYXJncykgPT4gKHZhbHVlICkuY2FsbChsYXN0QWNjZXNzTEhTLCAuLi5hcmdzKSk7XG4gICAgICBsYXN0QWNjZXNzTEhTID0gdW5kZWZpbmVkO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdmFsdWU7XG59XG5cbi8vIFN1Y3Jhc2UgdmVyc2lvbjpcbi8vIGFzeW5jIGZ1bmN0aW9uIF9hc3luY09wdGlvbmFsQ2hhaW4ob3BzKSB7XG4vLyAgIGxldCBsYXN0QWNjZXNzTEhTID0gdW5kZWZpbmVkO1xuLy8gICBsZXQgdmFsdWUgPSBvcHNbMF07XG4vLyAgIGxldCBpID0gMTtcbi8vICAgd2hpbGUgKGkgPCBvcHMubGVuZ3RoKSB7XG4vLyAgICAgY29uc3Qgb3AgPSBvcHNbaV07XG4vLyAgICAgY29uc3QgZm4gPSBvcHNbaSArIDFdO1xuLy8gICAgIGkgKz0gMjtcbi8vICAgICBpZiAoKG9wID09PSAnb3B0aW9uYWxBY2Nlc3MnIHx8IG9wID09PSAnb3B0aW9uYWxDYWxsJykgJiYgdmFsdWUgPT0gbnVsbCkge1xuLy8gICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbi8vICAgICB9XG4vLyAgICAgaWYgKG9wID09PSAnYWNjZXNzJyB8fCBvcCA9PT0gJ29wdGlvbmFsQWNjZXNzJykge1xuLy8gICAgICAgbGFzdEFjY2Vzc0xIUyA9IHZhbHVlO1xuLy8gICAgICAgdmFsdWUgPSBhd2FpdCBmbih2YWx1ZSk7XG4vLyAgICAgfSBlbHNlIGlmIChvcCA9PT0gJ2NhbGwnIHx8IG9wID09PSAnb3B0aW9uYWxDYWxsJykge1xuLy8gICAgICAgdmFsdWUgPSBhd2FpdCBmbigoLi4uYXJncykgPT4gdmFsdWUuY2FsbChsYXN0QWNjZXNzTEhTLCAuLi5hcmdzKSk7XG4vLyAgICAgICBsYXN0QWNjZXNzTEhTID0gdW5kZWZpbmVkO1xuLy8gICAgIH1cbi8vICAgfVxuLy8gICByZXR1cm4gdmFsdWU7XG4vLyB9XG5cbmV4cG9ydHMuX2FzeW5jT3B0aW9uYWxDaGFpbiA9IF9hc3luY09wdGlvbmFsQ2hhaW47XG4vLyMgc291cmNlTWFwcGluZ1VSTD1fYXN5bmNPcHRpb25hbENoYWluLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_asyncOptionalChain.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_asyncOptionalChainDelete.js":
/*!**********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_asyncOptionalChainDelete.js ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst _asyncOptionalChain = __webpack_require__(/*! ./_asyncOptionalChain.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_asyncOptionalChain.js\");\n\n// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n\n/**\n * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,\n * descriptors, and functions, in cases where the value of the expression is to be deleted.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase) See\n * https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15\n *\n * @param ops Array result of expression conversion\n * @returns The return value of the `delete` operator: `true`, unless the deletion target is an own, non-configurable\n * property (one which can't be deleted or turned into an accessor, and whose enumerability can't be changed), in which\n * case `false`.\n */\nasync function _asyncOptionalChainDelete(ops) {\n  const result = (await _asyncOptionalChain._asyncOptionalChain(ops)) ;\n  // If `result` is `null`, it means we didn't get to the end of the chain and so nothing was deleted (in which case,\n  // return `true` since that's what `delete` does when it no-ops). If it's non-null, we know the delete happened, in\n  // which case we return whatever the `delete` returned, which will be a boolean.\n  return result == null ? true : (result );\n}\n\n// Sucrase version:\n// async function asyncOptionalChainDelete(ops) {\n//   const result = await ASYNC_OPTIONAL_CHAIN_NAME(ops);\n//   return result == null ? true : result;\n// }\n\nexports._asyncOptionalChainDelete = _asyncOptionalChainDelete;\n//# sourceMappingURL=_asyncOptionalChainDelete.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2J1aWxkUG9seWZpbGxzL19hc3luY09wdGlvbmFsQ2hhaW5EZWxldGUuanMiLCJtYXBwaW5ncyI6IkFBQUEsOENBQTZDLEVBQUUsYUFBYSxFQUFDOztBQUU3RCw0QkFBNEIsbUJBQU8sQ0FBQyw0SkFBMEI7O0FBRTlEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsaUNBQWlDO0FBQ2pDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLXByb2plY3QvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2J1aWxkUG9seWZpbGxzL19hc3luY09wdGlvbmFsQ2hhaW5EZWxldGUuanM/MmZmMSJdLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG5jb25zdCBfYXN5bmNPcHRpb25hbENoYWluID0gcmVxdWlyZSgnLi9fYXN5bmNPcHRpb25hbENoYWluLmpzJyk7XG5cbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9hbGFuZ3BpZXJjZS9zdWNyYXNlL3RyZWUvMjY1ODg3ODY4OTY2OTE3ZjNiOTI0Y2UzOGRmYWQwMWZiYWIxMzI5ZlxuLy9cbi8vIFRoZSBNSVQgTGljZW5zZSAoTUlUKVxuLy9cbi8vIENvcHlyaWdodCAoYykgMjAxMi0yMDE4IHZhcmlvdXMgY29udHJpYnV0b3JzIChzZWUgQVVUSE9SUylcbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5XG4vLyBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsXG4vLyBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzXG4vLyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsXG4vLyBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXNcbi8vIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW4gYWxsXG4vLyBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1Jcbi8vIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxuLy8gRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFXG4vLyBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXG4vLyBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLFxuLy8gT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEVcbi8vIFNPRlRXQVJFLlxuXG5cbi8qKlxuICogUG9seWZpbGwgZm9yIHRoZSBvcHRpb25hbCBjaGFpbiBvcGVyYXRvciwgYD8uYCwgZ2l2ZW4gcHJldmlvdXMgY29udmVyc2lvbiBvZiB0aGUgZXhwcmVzc2lvbiBpbnRvIGFuIGFycmF5IG9mIHZhbHVlcyxcbiAqIGRlc2NyaXB0b3JzLCBhbmQgZnVuY3Rpb25zLCBpbiBjYXNlcyB3aGVyZSB0aGUgdmFsdWUgb2YgdGhlIGV4cHJlc3Npb24gaXMgdG8gYmUgZGVsZXRlZC5cbiAqXG4gKiBBZGFwdGVkIGZyb20gU3VjcmFzZSAoaHR0cHM6Ly9naXRodWIuY29tL2FsYW5ncGllcmNlL3N1Y3Jhc2UpIFNlZVxuICogaHR0cHM6Ly9naXRodWIuY29tL2FsYW5ncGllcmNlL3N1Y3Jhc2UvYmxvYi8yNjU4ODc4Njg5NjY5MTdmM2I5MjRjZTM4ZGZhZDAxZmJhYjEzMjlmL3NyYy90cmFuc2Zvcm1lcnMvT3B0aW9uYWxDaGFpbmluZ051bGxpc2hUcmFuc2Zvcm1lci50cyNMMTVcbiAqXG4gKiBAcGFyYW0gb3BzIEFycmF5IHJlc3VsdCBvZiBleHByZXNzaW9uIGNvbnZlcnNpb25cbiAqIEByZXR1cm5zIFRoZSByZXR1cm4gdmFsdWUgb2YgdGhlIGBkZWxldGVgIG9wZXJhdG9yOiBgdHJ1ZWAsIHVubGVzcyB0aGUgZGVsZXRpb24gdGFyZ2V0IGlzIGFuIG93biwgbm9uLWNvbmZpZ3VyYWJsZVxuICogcHJvcGVydHkgKG9uZSB3aGljaCBjYW4ndCBiZSBkZWxldGVkIG9yIHR1cm5lZCBpbnRvIGFuIGFjY2Vzc29yLCBhbmQgd2hvc2UgZW51bWVyYWJpbGl0eSBjYW4ndCBiZSBjaGFuZ2VkKSwgaW4gd2hpY2hcbiAqIGNhc2UgYGZhbHNlYC5cbiAqL1xuYXN5bmMgZnVuY3Rpb24gX2FzeW5jT3B0aW9uYWxDaGFpbkRlbGV0ZShvcHMpIHtcbiAgY29uc3QgcmVzdWx0ID0gKGF3YWl0IF9hc3luY09wdGlvbmFsQ2hhaW4uX2FzeW5jT3B0aW9uYWxDaGFpbihvcHMpKSA7XG4gIC8vIElmIGByZXN1bHRgIGlzIGBudWxsYCwgaXQgbWVhbnMgd2UgZGlkbid0IGdldCB0byB0aGUgZW5kIG9mIHRoZSBjaGFpbiBhbmQgc28gbm90aGluZyB3YXMgZGVsZXRlZCAoaW4gd2hpY2ggY2FzZSxcbiAgLy8gcmV0dXJuIGB0cnVlYCBzaW5jZSB0aGF0J3Mgd2hhdCBgZGVsZXRlYCBkb2VzIHdoZW4gaXQgbm8tb3BzKS4gSWYgaXQncyBub24tbnVsbCwgd2Uga25vdyB0aGUgZGVsZXRlIGhhcHBlbmVkLCBpblxuICAvLyB3aGljaCBjYXNlIHdlIHJldHVybiB3aGF0ZXZlciB0aGUgYGRlbGV0ZWAgcmV0dXJuZWQsIHdoaWNoIHdpbGwgYmUgYSBib29sZWFuLlxuICByZXR1cm4gcmVzdWx0ID09IG51bGwgPyB0cnVlIDogKHJlc3VsdCApO1xufVxuXG4vLyBTdWNyYXNlIHZlcnNpb246XG4vLyBhc3luYyBmdW5jdGlvbiBhc3luY09wdGlvbmFsQ2hhaW5EZWxldGUob3BzKSB7XG4vLyAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IEFTWU5DX09QVElPTkFMX0NIQUlOX05BTUUob3BzKTtcbi8vICAgcmV0dXJuIHJlc3VsdCA9PSBudWxsID8gdHJ1ZSA6IHJlc3VsdDtcbi8vIH1cblxuZXhwb3J0cy5fYXN5bmNPcHRpb25hbENoYWluRGVsZXRlID0gX2FzeW5jT3B0aW9uYWxDaGFpbkRlbGV0ZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPV9hc3luY09wdGlvbmFsQ2hhaW5EZWxldGUuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_asyncOptionalChainDelete.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_nullishCoalesce.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_nullishCoalesce.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n/**\n * Polyfill for the nullish coalescing operator (`??`).\n *\n * Note that the RHS is wrapped in a function so that if it's a computed value, that evaluation won't happen unless the\n * LHS evaluates to a nullish value, to mimic the operator's short-circuiting behavior.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param lhs The value of the expression to the left of the `??`\n * @param rhsFn A function returning the value of the expression to the right of the `??`\n * @returns The LHS value, unless it's `null` or `undefined`, in which case, the RHS value\n */\nfunction _nullishCoalesce(lhs, rhsFn) {\n  // by checking for loose equality to `null`, we catch both `null` and `undefined`\n  return lhs != null ? lhs : rhsFn();\n}\n\n// Sucrase version:\n// function _nullishCoalesce(lhs, rhsFn) {\n//   if (lhs != null) {\n//     return lhs;\n//   } else {\n//     return rhsFn();\n//   }\n// }\n\nexports._nullishCoalesce = _nullishCoalesce;\n//# sourceMappingURL=_nullishCoalesce.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2J1aWxkUG9seWZpbGxzL19udWxsaXNoQ29hbGVzY2UuanMiLCJtYXBwaW5ncyI6IkFBQUEsOENBQTZDLEVBQUUsYUFBYSxFQUFDOztBQUU3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTs7QUFFQSx3QkFBd0I7QUFDeEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0Zm9saW8tcHJvamVjdC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2VudHJ5K3V0aWxzQDguMTcuMC9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9idWlsZC9janMvYnVpbGRQb2x5ZmlsbHMvX251bGxpc2hDb2FsZXNjZS5qcz9kNzI4Il0sInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG5cbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9hbGFuZ3BpZXJjZS9zdWNyYXNlL3RyZWUvMjY1ODg3ODY4OTY2OTE3ZjNiOTI0Y2UzOGRmYWQwMWZiYWIxMzI5ZlxuLy9cbi8vIFRoZSBNSVQgTGljZW5zZSAoTUlUKVxuLy9cbi8vIENvcHlyaWdodCAoYykgMjAxMi0yMDE4IHZhcmlvdXMgY29udHJpYnV0b3JzIChzZWUgQVVUSE9SUylcbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5XG4vLyBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsXG4vLyBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzXG4vLyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsXG4vLyBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXNcbi8vIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW4gYWxsXG4vLyBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1Jcbi8vIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxuLy8gRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFXG4vLyBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXG4vLyBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLFxuLy8gT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEVcbi8vIFNPRlRXQVJFLlxuXG4vKipcbiAqIFBvbHlmaWxsIGZvciB0aGUgbnVsbGlzaCBjb2FsZXNjaW5nIG9wZXJhdG9yIChgPz9gKS5cbiAqXG4gKiBOb3RlIHRoYXQgdGhlIFJIUyBpcyB3cmFwcGVkIGluIGEgZnVuY3Rpb24gc28gdGhhdCBpZiBpdCdzIGEgY29tcHV0ZWQgdmFsdWUsIHRoYXQgZXZhbHVhdGlvbiB3b24ndCBoYXBwZW4gdW5sZXNzIHRoZVxuICogTEhTIGV2YWx1YXRlcyB0byBhIG51bGxpc2ggdmFsdWUsIHRvIG1pbWljIHRoZSBvcGVyYXRvcidzIHNob3J0LWNpcmN1aXRpbmcgYmVoYXZpb3IuXG4gKlxuICogQWRhcHRlZCBmcm9tIFN1Y3Jhc2UgKGh0dHBzOi8vZ2l0aHViLmNvbS9hbGFuZ3BpZXJjZS9zdWNyYXNlKVxuICpcbiAqIEBwYXJhbSBsaHMgVGhlIHZhbHVlIG9mIHRoZSBleHByZXNzaW9uIHRvIHRoZSBsZWZ0IG9mIHRoZSBgPz9gXG4gKiBAcGFyYW0gcmhzRm4gQSBmdW5jdGlvbiByZXR1cm5pbmcgdGhlIHZhbHVlIG9mIHRoZSBleHByZXNzaW9uIHRvIHRoZSByaWdodCBvZiB0aGUgYD8/YFxuICogQHJldHVybnMgVGhlIExIUyB2YWx1ZSwgdW5sZXNzIGl0J3MgYG51bGxgIG9yIGB1bmRlZmluZWRgLCBpbiB3aGljaCBjYXNlLCB0aGUgUkhTIHZhbHVlXG4gKi9cbmZ1bmN0aW9uIF9udWxsaXNoQ29hbGVzY2UobGhzLCByaHNGbikge1xuICAvLyBieSBjaGVja2luZyBmb3IgbG9vc2UgZXF1YWxpdHkgdG8gYG51bGxgLCB3ZSBjYXRjaCBib3RoIGBudWxsYCBhbmQgYHVuZGVmaW5lZGBcbiAgcmV0dXJuIGxocyAhPSBudWxsID8gbGhzIDogcmhzRm4oKTtcbn1cblxuLy8gU3VjcmFzZSB2ZXJzaW9uOlxuLy8gZnVuY3Rpb24gX251bGxpc2hDb2FsZXNjZShsaHMsIHJoc0ZuKSB7XG4vLyAgIGlmIChsaHMgIT0gbnVsbCkge1xuLy8gICAgIHJldHVybiBsaHM7XG4vLyAgIH0gZWxzZSB7XG4vLyAgICAgcmV0dXJuIHJoc0ZuKCk7XG4vLyAgIH1cbi8vIH1cblxuZXhwb3J0cy5fbnVsbGlzaENvYWxlc2NlID0gX251bGxpc2hDb2FsZXNjZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPV9udWxsaXNoQ29hbGVzY2UuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_nullishCoalesce.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_optionalChain.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_optionalChain.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n/**\n * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,\n * descriptors, and functions.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n * See https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15\n *\n * @param ops Array result of expression conversion\n * @returns The value of the expression\n */\nfunction _optionalChain(ops) {\n  let lastAccessLHS = undefined;\n  let value = ops[0];\n  let i = 1;\n  while (i < ops.length) {\n    const op = ops[i] ;\n    const fn = ops[i + 1] ;\n    i += 2;\n    // by checking for loose equality to `null`, we catch both `null` and `undefined`\n    if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n      // really we're meaning to return `undefined` as an actual value here, but it saves bytes not to write it\n      return;\n    }\n    if (op === 'access' || op === 'optionalAccess') {\n      lastAccessLHS = value;\n      value = fn(value);\n    } else if (op === 'call' || op === 'optionalCall') {\n      value = fn((...args) => (value ).call(lastAccessLHS, ...args));\n      lastAccessLHS = undefined;\n    }\n  }\n  return value;\n}\n\n// Sucrase version\n// function _optionalChain(ops) {\n//   let lastAccessLHS = undefined;\n//   let value = ops[0];\n//   let i = 1;\n//   while (i < ops.length) {\n//     const op = ops[i];\n//     const fn = ops[i + 1];\n//     i += 2;\n//     if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n//       return undefined;\n//     }\n//     if (op === 'access' || op === 'optionalAccess') {\n//       lastAccessLHS = value;\n//       value = fn(value);\n//     } else if (op === 'call' || op === 'optionalCall') {\n//       value = fn((...args) => value.call(lastAccessLHS, ...args));\n//       lastAccessLHS = undefined;\n//     }\n//   }\n//   return value;\n// }\n\nexports._optionalChain = _optionalChain;\n//# sourceMappingURL=_optionalChain.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2J1aWxkUG9seWZpbGxzL19vcHRpb25hbENoYWluLmpzIiwibWFwcGluZ3MiOiJBQUFBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQzs7QUFFN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxzQkFBc0I7QUFDdEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0Zm9saW8tcHJvamVjdC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2VudHJ5K3V0aWxzQDguMTcuMC9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9idWlsZC9janMvYnVpbGRQb2x5ZmlsbHMvX29wdGlvbmFsQ2hhaW4uanM/OTJiNCJdLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG4vKipcbiAqIFBvbHlmaWxsIGZvciB0aGUgb3B0aW9uYWwgY2hhaW4gb3BlcmF0b3IsIGA/LmAsIGdpdmVuIHByZXZpb3VzIGNvbnZlcnNpb24gb2YgdGhlIGV4cHJlc3Npb24gaW50byBhbiBhcnJheSBvZiB2YWx1ZXMsXG4gKiBkZXNjcmlwdG9ycywgYW5kIGZ1bmN0aW9ucy5cbiAqXG4gKiBBZGFwdGVkIGZyb20gU3VjcmFzZSAoaHR0cHM6Ly9naXRodWIuY29tL2FsYW5ncGllcmNlL3N1Y3Jhc2UpXG4gKiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL2FsYW5ncGllcmNlL3N1Y3Jhc2UvYmxvYi8yNjU4ODc4Njg5NjY5MTdmM2I5MjRjZTM4ZGZhZDAxZmJhYjEzMjlmL3NyYy90cmFuc2Zvcm1lcnMvT3B0aW9uYWxDaGFpbmluZ051bGxpc2hUcmFuc2Zvcm1lci50cyNMMTVcbiAqXG4gKiBAcGFyYW0gb3BzIEFycmF5IHJlc3VsdCBvZiBleHByZXNzaW9uIGNvbnZlcnNpb25cbiAqIEByZXR1cm5zIFRoZSB2YWx1ZSBvZiB0aGUgZXhwcmVzc2lvblxuICovXG5mdW5jdGlvbiBfb3B0aW9uYWxDaGFpbihvcHMpIHtcbiAgbGV0IGxhc3RBY2Nlc3NMSFMgPSB1bmRlZmluZWQ7XG4gIGxldCB2YWx1ZSA9IG9wc1swXTtcbiAgbGV0IGkgPSAxO1xuICB3aGlsZSAoaSA8IG9wcy5sZW5ndGgpIHtcbiAgICBjb25zdCBvcCA9IG9wc1tpXSA7XG4gICAgY29uc3QgZm4gPSBvcHNbaSArIDFdIDtcbiAgICBpICs9IDI7XG4gICAgLy8gYnkgY2hlY2tpbmcgZm9yIGxvb3NlIGVxdWFsaXR5IHRvIGBudWxsYCwgd2UgY2F0Y2ggYm90aCBgbnVsbGAgYW5kIGB1bmRlZmluZWRgXG4gICAgaWYgKChvcCA9PT0gJ29wdGlvbmFsQWNjZXNzJyB8fCBvcCA9PT0gJ29wdGlvbmFsQ2FsbCcpICYmIHZhbHVlID09IG51bGwpIHtcbiAgICAgIC8vIHJlYWxseSB3ZSdyZSBtZWFuaW5nIHRvIHJldHVybiBgdW5kZWZpbmVkYCBhcyBhbiBhY3R1YWwgdmFsdWUgaGVyZSwgYnV0IGl0IHNhdmVzIGJ5dGVzIG5vdCB0byB3cml0ZSBpdFxuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAob3AgPT09ICdhY2Nlc3MnIHx8IG9wID09PSAnb3B0aW9uYWxBY2Nlc3MnKSB7XG4gICAgICBsYXN0QWNjZXNzTEhTID0gdmFsdWU7XG4gICAgICB2YWx1ZSA9IGZuKHZhbHVlKTtcbiAgICB9IGVsc2UgaWYgKG9wID09PSAnY2FsbCcgfHwgb3AgPT09ICdvcHRpb25hbENhbGwnKSB7XG4gICAgICB2YWx1ZSA9IGZuKCguLi5hcmdzKSA9PiAodmFsdWUgKS5jYWxsKGxhc3RBY2Nlc3NMSFMsIC4uLmFyZ3MpKTtcbiAgICAgIGxhc3RBY2Nlc3NMSFMgPSB1bmRlZmluZWQ7XG4gICAgfVxuICB9XG4gIHJldHVybiB2YWx1ZTtcbn1cblxuLy8gU3VjcmFzZSB2ZXJzaW9uXG4vLyBmdW5jdGlvbiBfb3B0aW9uYWxDaGFpbihvcHMpIHtcbi8vICAgbGV0IGxhc3RBY2Nlc3NMSFMgPSB1bmRlZmluZWQ7XG4vLyAgIGxldCB2YWx1ZSA9IG9wc1swXTtcbi8vICAgbGV0IGkgPSAxO1xuLy8gICB3aGlsZSAoaSA8IG9wcy5sZW5ndGgpIHtcbi8vICAgICBjb25zdCBvcCA9IG9wc1tpXTtcbi8vICAgICBjb25zdCBmbiA9IG9wc1tpICsgMV07XG4vLyAgICAgaSArPSAyO1xuLy8gICAgIGlmICgob3AgPT09ICdvcHRpb25hbEFjY2VzcycgfHwgb3AgPT09ICdvcHRpb25hbENhbGwnKSAmJiB2YWx1ZSA9PSBudWxsKSB7XG4vLyAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuLy8gICAgIH1cbi8vICAgICBpZiAob3AgPT09ICdhY2Nlc3MnIHx8IG9wID09PSAnb3B0aW9uYWxBY2Nlc3MnKSB7XG4vLyAgICAgICBsYXN0QWNjZXNzTEhTID0gdmFsdWU7XG4vLyAgICAgICB2YWx1ZSA9IGZuKHZhbHVlKTtcbi8vICAgICB9IGVsc2UgaWYgKG9wID09PSAnY2FsbCcgfHwgb3AgPT09ICdvcHRpb25hbENhbGwnKSB7XG4vLyAgICAgICB2YWx1ZSA9IGZuKCguLi5hcmdzKSA9PiB2YWx1ZS5jYWxsKGxhc3RBY2Nlc3NMSFMsIC4uLmFyZ3MpKTtcbi8vICAgICAgIGxhc3RBY2Nlc3NMSFMgPSB1bmRlZmluZWQ7XG4vLyAgICAgfVxuLy8gICB9XG4vLyAgIHJldHVybiB2YWx1ZTtcbi8vIH1cblxuZXhwb3J0cy5fb3B0aW9uYWxDaGFpbiA9IF9vcHRpb25hbENoYWluO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9X29wdGlvbmFsQ2hhaW4uanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_optionalChain.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_optionalChainDelete.js":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_optionalChainDelete.js ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst _optionalChain = __webpack_require__(/*! ./_optionalChain.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_optionalChain.js\");\n\n// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n\n/**\n * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,\n * descriptors, and functions, in cases where the value of the expression is to be deleted.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase) See\n * https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15\n *\n * @param ops Array result of expression conversion\n * @returns The return value of the `delete` operator: `true`, unless the deletion target is an own, non-configurable\n * property (one which can't be deleted or turned into an accessor, and whose enumerability can't be changed), in which\n * case `false`.\n */\nfunction _optionalChainDelete(ops) {\n  const result = _optionalChain._optionalChain(ops) ;\n  // If `result` is `null`, it means we didn't get to the end of the chain and so nothing was deleted (in which case,\n  // return `true` since that's what `delete` does when it no-ops). If it's non-null, we know the delete happened, in\n  // which case we return whatever the `delete` returned, which will be a boolean.\n  return result == null ? true : result;\n}\n\n// Sucrase version:\n// function _optionalChainDelete(ops) {\n//   const result = _optionalChain(ops);\n//   // by checking for loose equality to `null`, we catch both `null` and `undefined`\n//   return result == null ? true : result;\n// }\n\nexports._optionalChainDelete = _optionalChainDelete;\n//# sourceMappingURL=_optionalChainDelete.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2J1aWxkUG9seWZpbGxzL19vcHRpb25hbENoYWluRGVsZXRlLmpzIiwibWFwcGluZ3MiOiJBQUFBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQzs7QUFFN0QsdUJBQXVCLG1CQUFPLENBQUMsa0pBQXFCOztBQUVwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsNEJBQTRCO0FBQzVCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLXByb2plY3QvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2J1aWxkUG9seWZpbGxzL19vcHRpb25hbENoYWluRGVsZXRlLmpzPzMyZjUiXSwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxuY29uc3QgX29wdGlvbmFsQ2hhaW4gPSByZXF1aXJlKCcuL19vcHRpb25hbENoYWluLmpzJyk7XG5cbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9hbGFuZ3BpZXJjZS9zdWNyYXNlL3RyZWUvMjY1ODg3ODY4OTY2OTE3ZjNiOTI0Y2UzOGRmYWQwMWZiYWIxMzI5ZlxuLy9cbi8vIFRoZSBNSVQgTGljZW5zZSAoTUlUKVxuLy9cbi8vIENvcHlyaWdodCAoYykgMjAxMi0yMDE4IHZhcmlvdXMgY29udHJpYnV0b3JzIChzZWUgQVVUSE9SUylcbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5XG4vLyBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsXG4vLyBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzXG4vLyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsXG4vLyBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXNcbi8vIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW4gYWxsXG4vLyBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1Jcbi8vIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxuLy8gRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFXG4vLyBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXG4vLyBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLFxuLy8gT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEVcbi8vIFNPRlRXQVJFLlxuXG5cbi8qKlxuICogUG9seWZpbGwgZm9yIHRoZSBvcHRpb25hbCBjaGFpbiBvcGVyYXRvciwgYD8uYCwgZ2l2ZW4gcHJldmlvdXMgY29udmVyc2lvbiBvZiB0aGUgZXhwcmVzc2lvbiBpbnRvIGFuIGFycmF5IG9mIHZhbHVlcyxcbiAqIGRlc2NyaXB0b3JzLCBhbmQgZnVuY3Rpb25zLCBpbiBjYXNlcyB3aGVyZSB0aGUgdmFsdWUgb2YgdGhlIGV4cHJlc3Npb24gaXMgdG8gYmUgZGVsZXRlZC5cbiAqXG4gKiBBZGFwdGVkIGZyb20gU3VjcmFzZSAoaHR0cHM6Ly9naXRodWIuY29tL2FsYW5ncGllcmNlL3N1Y3Jhc2UpIFNlZVxuICogaHR0cHM6Ly9naXRodWIuY29tL2FsYW5ncGllcmNlL3N1Y3Jhc2UvYmxvYi8yNjU4ODc4Njg5NjY5MTdmM2I5MjRjZTM4ZGZhZDAxZmJhYjEzMjlmL3NyYy90cmFuc2Zvcm1lcnMvT3B0aW9uYWxDaGFpbmluZ051bGxpc2hUcmFuc2Zvcm1lci50cyNMMTVcbiAqXG4gKiBAcGFyYW0gb3BzIEFycmF5IHJlc3VsdCBvZiBleHByZXNzaW9uIGNvbnZlcnNpb25cbiAqIEByZXR1cm5zIFRoZSByZXR1cm4gdmFsdWUgb2YgdGhlIGBkZWxldGVgIG9wZXJhdG9yOiBgdHJ1ZWAsIHVubGVzcyB0aGUgZGVsZXRpb24gdGFyZ2V0IGlzIGFuIG93biwgbm9uLWNvbmZpZ3VyYWJsZVxuICogcHJvcGVydHkgKG9uZSB3aGljaCBjYW4ndCBiZSBkZWxldGVkIG9yIHR1cm5lZCBpbnRvIGFuIGFjY2Vzc29yLCBhbmQgd2hvc2UgZW51bWVyYWJpbGl0eSBjYW4ndCBiZSBjaGFuZ2VkKSwgaW4gd2hpY2hcbiAqIGNhc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gX29wdGlvbmFsQ2hhaW5EZWxldGUob3BzKSB7XG4gIGNvbnN0IHJlc3VsdCA9IF9vcHRpb25hbENoYWluLl9vcHRpb25hbENoYWluKG9wcykgO1xuICAvLyBJZiBgcmVzdWx0YCBpcyBgbnVsbGAsIGl0IG1lYW5zIHdlIGRpZG4ndCBnZXQgdG8gdGhlIGVuZCBvZiB0aGUgY2hhaW4gYW5kIHNvIG5vdGhpbmcgd2FzIGRlbGV0ZWQgKGluIHdoaWNoIGNhc2UsXG4gIC8vIHJldHVybiBgdHJ1ZWAgc2luY2UgdGhhdCdzIHdoYXQgYGRlbGV0ZWAgZG9lcyB3aGVuIGl0IG5vLW9wcykuIElmIGl0J3Mgbm9uLW51bGwsIHdlIGtub3cgdGhlIGRlbGV0ZSBoYXBwZW5lZCwgaW5cbiAgLy8gd2hpY2ggY2FzZSB3ZSByZXR1cm4gd2hhdGV2ZXIgdGhlIGBkZWxldGVgIHJldHVybmVkLCB3aGljaCB3aWxsIGJlIGEgYm9vbGVhbi5cbiAgcmV0dXJuIHJlc3VsdCA9PSBudWxsID8gdHJ1ZSA6IHJlc3VsdDtcbn1cblxuLy8gU3VjcmFzZSB2ZXJzaW9uOlxuLy8gZnVuY3Rpb24gX29wdGlvbmFsQ2hhaW5EZWxldGUob3BzKSB7XG4vLyAgIGNvbnN0IHJlc3VsdCA9IF9vcHRpb25hbENoYWluKG9wcyk7XG4vLyAgIC8vIGJ5IGNoZWNraW5nIGZvciBsb29zZSBlcXVhbGl0eSB0byBgbnVsbGAsIHdlIGNhdGNoIGJvdGggYG51bGxgIGFuZCBgdW5kZWZpbmVkYFxuLy8gICByZXR1cm4gcmVzdWx0ID09IG51bGwgPyB0cnVlIDogcmVzdWx0O1xuLy8gfVxuXG5leHBvcnRzLl9vcHRpb25hbENoYWluRGVsZXRlID0gX29wdGlvbmFsQ2hhaW5EZWxldGU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1fb3B0aW9uYWxDaGFpbkRlbGV0ZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_optionalChainDelete.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/cache.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/cache.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n/**\n * Creates a cache that evicts keys in fifo order\n * @param size {Number}\n */\nfunction makeFifoCache(\n  size,\n)\n\n {\n  // Maintain a fifo queue of keys, we cannot rely on Object.keys as the browser may not support it.\n  let evictionOrder = [];\n  let cache = {};\n\n  return {\n    add(key, value) {\n      while (evictionOrder.length >= size) {\n        // shift is O(n) but this is small size and only happens if we are\n        // exceeding the cache size so it should be fine.\n        const evictCandidate = evictionOrder.shift();\n\n        if (evictCandidate !== undefined) {\n          // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n          delete cache[evictCandidate];\n        }\n      }\n\n      // in case we have a collision, delete the old key.\n      if (cache[key]) {\n        this.delete(key);\n      }\n\n      evictionOrder.push(key);\n      cache[key] = value;\n    },\n    clear() {\n      cache = {};\n      evictionOrder = [];\n    },\n    get(key) {\n      return cache[key];\n    },\n    size() {\n      return evictionOrder.length;\n    },\n    // Delete cache key and return true if it existed, false otherwise.\n    delete(key) {\n      if (!cache[key]) {\n        return false;\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete cache[key];\n\n      for (let i = 0; i < evictionOrder.length; i++) {\n        if (evictionOrder[i] === key) {\n          evictionOrder.splice(i, 1);\n          break;\n        }\n      }\n\n      return true;\n    },\n  };\n}\n\nexports.makeFifoCache = makeFifoCache;\n//# sourceMappingURL=cache.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2NhY2hlLmpzIiwibWFwcGluZ3MiOiJBQUFBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQzs7QUFFN0Q7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLHNCQUFzQiwwQkFBMEI7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBLHFCQUFxQjtBQUNyQiIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9jYWNoZS5qcz85NDA2Il0sInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG5cbi8qKlxuICogQ3JlYXRlcyBhIGNhY2hlIHRoYXQgZXZpY3RzIGtleXMgaW4gZmlmbyBvcmRlclxuICogQHBhcmFtIHNpemUge051bWJlcn1cbiAqL1xuZnVuY3Rpb24gbWFrZUZpZm9DYWNoZShcbiAgc2l6ZSxcbilcblxuIHtcbiAgLy8gTWFpbnRhaW4gYSBmaWZvIHF1ZXVlIG9mIGtleXMsIHdlIGNhbm5vdCByZWx5IG9uIE9iamVjdC5rZXlzIGFzIHRoZSBicm93c2VyIG1heSBub3Qgc3VwcG9ydCBpdC5cbiAgbGV0IGV2aWN0aW9uT3JkZXIgPSBbXTtcbiAgbGV0IGNhY2hlID0ge307XG5cbiAgcmV0dXJuIHtcbiAgICBhZGQoa2V5LCB2YWx1ZSkge1xuICAgICAgd2hpbGUgKGV2aWN0aW9uT3JkZXIubGVuZ3RoID49IHNpemUpIHtcbiAgICAgICAgLy8gc2hpZnQgaXMgTyhuKSBidXQgdGhpcyBpcyBzbWFsbCBzaXplIGFuZCBvbmx5IGhhcHBlbnMgaWYgd2UgYXJlXG4gICAgICAgIC8vIGV4Y2VlZGluZyB0aGUgY2FjaGUgc2l6ZSBzbyBpdCBzaG91bGQgYmUgZmluZS5cbiAgICAgICAgY29uc3QgZXZpY3RDYW5kaWRhdGUgPSBldmljdGlvbk9yZGVyLnNoaWZ0KCk7XG5cbiAgICAgICAgaWYgKGV2aWN0Q2FuZGlkYXRlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWR5bmFtaWMtZGVsZXRlXG4gICAgICAgICAgZGVsZXRlIGNhY2hlW2V2aWN0Q2FuZGlkYXRlXTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvLyBpbiBjYXNlIHdlIGhhdmUgYSBjb2xsaXNpb24sIGRlbGV0ZSB0aGUgb2xkIGtleS5cbiAgICAgIGlmIChjYWNoZVtrZXldKSB7XG4gICAgICAgIHRoaXMuZGVsZXRlKGtleSk7XG4gICAgICB9XG5cbiAgICAgIGV2aWN0aW9uT3JkZXIucHVzaChrZXkpO1xuICAgICAgY2FjaGVba2V5XSA9IHZhbHVlO1xuICAgIH0sXG4gICAgY2xlYXIoKSB7XG4gICAgICBjYWNoZSA9IHt9O1xuICAgICAgZXZpY3Rpb25PcmRlciA9IFtdO1xuICAgIH0sXG4gICAgZ2V0KGtleSkge1xuICAgICAgcmV0dXJuIGNhY2hlW2tleV07XG4gICAgfSxcbiAgICBzaXplKCkge1xuICAgICAgcmV0dXJuIGV2aWN0aW9uT3JkZXIubGVuZ3RoO1xuICAgIH0sXG4gICAgLy8gRGVsZXRlIGNhY2hlIGtleSBhbmQgcmV0dXJuIHRydWUgaWYgaXQgZXhpc3RlZCwgZmFsc2Ugb3RoZXJ3aXNlLlxuICAgIGRlbGV0ZShrZXkpIHtcbiAgICAgIGlmICghY2FjaGVba2V5XSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG5cbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZHluYW1pYy1kZWxldGVcbiAgICAgIGRlbGV0ZSBjYWNoZVtrZXldO1xuXG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGV2aWN0aW9uT3JkZXIubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKGV2aWN0aW9uT3JkZXJbaV0gPT09IGtleSkge1xuICAgICAgICAgIGV2aWN0aW9uT3JkZXIuc3BsaWNlKGksIDEpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH0sXG4gIH07XG59XG5cbmV4cG9ydHMubWFrZUZpZm9DYWNoZSA9IG1ha2VGaWZvQ2FjaGU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jYWNoZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/cache.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/clientreport.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/clientreport.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst envelope = __webpack_require__(/*! ./envelope.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/envelope.js\");\nconst time = __webpack_require__(/*! ./time.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/time.js\");\n\n/**\n * Creates client report envelope\n * @param discarded_events An array of discard events\n * @param dsn A DSN that can be set on the header. Optional.\n */\nfunction createClientReportEnvelope(\n  discarded_events,\n  dsn,\n  timestamp,\n) {\n  const clientReportItem = [\n    { type: 'client_report' },\n    {\n      timestamp: timestamp || time.dateTimestampInSeconds(),\n      discarded_events,\n    },\n  ];\n  return envelope.createEnvelope(dsn ? { dsn } : {}, [clientReportItem]);\n}\n\nexports.createClientReportEnvelope = createClientReportEnvelope;\n//# sourceMappingURL=clientreport.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2NsaWVudHJlcG9ydC5qcyIsIm1hcHBpbmdzIjoiQUFBQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7O0FBRTdELGlCQUFpQixtQkFBTyxDQUFDLHVIQUFlO0FBQ3hDLGFBQWEsbUJBQU8sQ0FBQywrR0FBVzs7QUFFaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sdUJBQXVCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLHlDQUF5QyxNQUFNLElBQUk7QUFDbkQ7O0FBRUEsa0NBQWtDO0FBQ2xDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLXByb2plY3QvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2NsaWVudHJlcG9ydC5qcz9hM2IzIl0sInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG5cbmNvbnN0IGVudmVsb3BlID0gcmVxdWlyZSgnLi9lbnZlbG9wZS5qcycpO1xuY29uc3QgdGltZSA9IHJlcXVpcmUoJy4vdGltZS5qcycpO1xuXG4vKipcbiAqIENyZWF0ZXMgY2xpZW50IHJlcG9ydCBlbnZlbG9wZVxuICogQHBhcmFtIGRpc2NhcmRlZF9ldmVudHMgQW4gYXJyYXkgb2YgZGlzY2FyZCBldmVudHNcbiAqIEBwYXJhbSBkc24gQSBEU04gdGhhdCBjYW4gYmUgc2V0IG9uIHRoZSBoZWFkZXIuIE9wdGlvbmFsLlxuICovXG5mdW5jdGlvbiBjcmVhdGVDbGllbnRSZXBvcnRFbnZlbG9wZShcbiAgZGlzY2FyZGVkX2V2ZW50cyxcbiAgZHNuLFxuICB0aW1lc3RhbXAsXG4pIHtcbiAgY29uc3QgY2xpZW50UmVwb3J0SXRlbSA9IFtcbiAgICB7IHR5cGU6ICdjbGllbnRfcmVwb3J0JyB9LFxuICAgIHtcbiAgICAgIHRpbWVzdGFtcDogdGltZXN0YW1wIHx8IHRpbWUuZGF0ZVRpbWVzdGFtcEluU2Vjb25kcygpLFxuICAgICAgZGlzY2FyZGVkX2V2ZW50cyxcbiAgICB9LFxuICBdO1xuICByZXR1cm4gZW52ZWxvcGUuY3JlYXRlRW52ZWxvcGUoZHNuID8geyBkc24gfSA6IHt9LCBbY2xpZW50UmVwb3J0SXRlbV0pO1xufVxuXG5leHBvcnRzLmNyZWF0ZUNsaWVudFJlcG9ydEVudmVsb3BlID0gY3JlYXRlQ2xpZW50UmVwb3J0RW52ZWxvcGU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jbGllbnRyZXBvcnQuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/clientreport.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/cookie.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/cookie.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n/**\n * This code was originally copied from the 'cookie` module at v0.5.0 and was simplified for our use case.\n * https://github.com/jshttp/cookie/blob/a0c84147aab6266bdb3996cf4062e93907c0b0fc/index.js\n * It had the following license:\n *\n * (The MIT License)\n *\n * Copyright (c) 2012-2014 Roman Shtylman <shtylman@gmail.com>\n * Copyright (c) 2015 Douglas Christopher Wilson <doug@somethingdoug.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * 'Software'), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Parses a cookie string\n */\nfunction parseCookie(str) {\n  const obj = {};\n  let index = 0;\n\n  while (index < str.length) {\n    const eqIdx = str.indexOf('=', index);\n\n    // no more cookie pairs\n    if (eqIdx === -1) {\n      break;\n    }\n\n    let endIdx = str.indexOf(';', index);\n\n    if (endIdx === -1) {\n      endIdx = str.length;\n    } else if (endIdx < eqIdx) {\n      // backtrack on prior semicolon\n      index = str.lastIndexOf(';', eqIdx - 1) + 1;\n      continue;\n    }\n\n    const key = str.slice(index, eqIdx).trim();\n\n    // only assign once\n    if (undefined === obj[key]) {\n      let val = str.slice(eqIdx + 1, endIdx).trim();\n\n      // quoted values\n      if (val.charCodeAt(0) === 0x22) {\n        val = val.slice(1, -1);\n      }\n\n      try {\n        obj[key] = val.indexOf('%') !== -1 ? decodeURIComponent(val) : val;\n      } catch (e) {\n        obj[key] = val;\n      }\n    }\n\n    index = endIdx + 1;\n  }\n\n  return obj;\n}\n\nexports.parseCookie = parseCookie;\n//# sourceMappingURL=cookie.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2Nvb2tpZS5qcyIsIm1hcHBpbmdzIjoiQUFBQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7O0FBRTdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsK0JBQStCOztBQUUvQjtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0EsZ0NBQWdDO0FBQ2hDO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxtQkFBbUI7QUFDbkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0Zm9saW8tcHJvamVjdC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2VudHJ5K3V0aWxzQDguMTcuMC9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9idWlsZC9janMvY29va2llLmpzP2EzMDIiXSwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxuLyoqXG4gKiBUaGlzIGNvZGUgd2FzIG9yaWdpbmFsbHkgY29waWVkIGZyb20gdGhlICdjb29raWVgIG1vZHVsZSBhdCB2MC41LjAgYW5kIHdhcyBzaW1wbGlmaWVkIGZvciBvdXIgdXNlIGNhc2UuXG4gKiBodHRwczovL2dpdGh1Yi5jb20vanNodHRwL2Nvb2tpZS9ibG9iL2EwYzg0MTQ3YWFiNjI2NmJkYjM5OTZjZjQwNjJlOTM5MDdjMGIwZmMvaW5kZXguanNcbiAqIEl0IGhhZCB0aGUgZm9sbG93aW5nIGxpY2Vuc2U6XG4gKlxuICogKFRoZSBNSVQgTGljZW5zZSlcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTItMjAxNCBSb21hbiBTaHR5bG1hbiA8c2h0eWxtYW5AZ21haWwuY29tPlxuICogQ29weXJpZ2h0IChjKSAyMDE1IERvdWdsYXMgQ2hyaXN0b3BoZXIgV2lsc29uIDxkb3VnQHNvbWV0aGluZ2RvdWcuY29tPlxuICpcbiAqIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZ1xuICogYSBjb3B5IG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlXG4gKiAnU29mdHdhcmUnKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nXG4gKiB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsXG4gKiBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG9cbiAqIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0b1xuICogdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuICpcbiAqIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlXG4gKiBpbmNsdWRlZCBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbiAqXG4gKiBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgJ0FTIElTJywgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCxcbiAqIEVYUFJFU1MgT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRlxuICogTUVSQ0hBTlRBQklMSVRZLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULlxuICogSU4gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTllcbiAqIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsXG4gKiBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRVxuICogU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuXG4gKi9cblxuLyoqXG4gKiBQYXJzZXMgYSBjb29raWUgc3RyaW5nXG4gKi9cbmZ1bmN0aW9uIHBhcnNlQ29va2llKHN0cikge1xuICBjb25zdCBvYmogPSB7fTtcbiAgbGV0IGluZGV4ID0gMDtcblxuICB3aGlsZSAoaW5kZXggPCBzdHIubGVuZ3RoKSB7XG4gICAgY29uc3QgZXFJZHggPSBzdHIuaW5kZXhPZignPScsIGluZGV4KTtcblxuICAgIC8vIG5vIG1vcmUgY29va2llIHBhaXJzXG4gICAgaWYgKGVxSWR4ID09PSAtMSkge1xuICAgICAgYnJlYWs7XG4gICAgfVxuXG4gICAgbGV0IGVuZElkeCA9IHN0ci5pbmRleE9mKCc7JywgaW5kZXgpO1xuXG4gICAgaWYgKGVuZElkeCA9PT0gLTEpIHtcbiAgICAgIGVuZElkeCA9IHN0ci5sZW5ndGg7XG4gICAgfSBlbHNlIGlmIChlbmRJZHggPCBlcUlkeCkge1xuICAgICAgLy8gYmFja3RyYWNrIG9uIHByaW9yIHNlbWljb2xvblxuICAgICAgaW5kZXggPSBzdHIubGFzdEluZGV4T2YoJzsnLCBlcUlkeCAtIDEpICsgMTtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIGNvbnN0IGtleSA9IHN0ci5zbGljZShpbmRleCwgZXFJZHgpLnRyaW0oKTtcblxuICAgIC8vIG9ubHkgYXNzaWduIG9uY2VcbiAgICBpZiAodW5kZWZpbmVkID09PSBvYmpba2V5XSkge1xuICAgICAgbGV0IHZhbCA9IHN0ci5zbGljZShlcUlkeCArIDEsIGVuZElkeCkudHJpbSgpO1xuXG4gICAgICAvLyBxdW90ZWQgdmFsdWVzXG4gICAgICBpZiAodmFsLmNoYXJDb2RlQXQoMCkgPT09IDB4MjIpIHtcbiAgICAgICAgdmFsID0gdmFsLnNsaWNlKDEsIC0xKTtcbiAgICAgIH1cblxuICAgICAgdHJ5IHtcbiAgICAgICAgb2JqW2tleV0gPSB2YWwuaW5kZXhPZignJScpICE9PSAtMSA/IGRlY29kZVVSSUNvbXBvbmVudCh2YWwpIDogdmFsO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBvYmpba2V5XSA9IHZhbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpbmRleCA9IGVuZElkeCArIDE7XG4gIH1cblxuICByZXR1cm4gb2JqO1xufVxuXG5leHBvcnRzLnBhcnNlQ29va2llID0gcGFyc2VDb29raWU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb29raWUuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/cookie.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/debug-build.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/debug-build.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = ( false || false);\n\nexports.DEBUG_BUILD = DEBUG_BUILD;\n//# sourceMappingURL=debug-build.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2RlYnVnLWJ1aWxkLmpzIiwibWFwcGluZ3MiOiJBQUFBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQzs7QUFFN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixNQUF1QyxJQUFJLEtBQWdCOztBQUVoRixtQkFBbUI7QUFDbkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0Zm9saW8tcHJvamVjdC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2VudHJ5K3V0aWxzQDguMTcuMC9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9idWlsZC9janMvZGVidWctYnVpbGQuanM/OTUyZSJdLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG4vKipcbiAqIFRoaXMgc2VydmVzIGFzIGEgYnVpbGQgdGltZSBmbGFnIHRoYXQgd2lsbCBiZSB0cnVlIGJ5IGRlZmF1bHQsIGJ1dCBmYWxzZSBpbiBub24tZGVidWcgYnVpbGRzIG9yIGlmIHVzZXJzIHJlcGxhY2UgYF9fU0VOVFJZX0RFQlVHX19gIGluIHRoZWlyIGdlbmVyYXRlZCBjb2RlLlxuICpcbiAqIEFUVEVOVElPTjogVGhpcyBjb25zdGFudCBtdXN0IG5ldmVyIGNyb3NzIHBhY2thZ2UgYm91bmRhcmllcyAoaS5lLiBiZSBleHBvcnRlZCkgdG8gZ3VhcmFudGVlIHRoYXQgaXQgY2FuIGJlIHVzZWQgZm9yIHRyZWUgc2hha2luZy5cbiAqL1xuY29uc3QgREVCVUdfQlVJTEQgPSAodHlwZW9mIF9fU0VOVFJZX0RFQlVHX18gPT09ICd1bmRlZmluZWQnIHx8IF9fU0VOVFJZX0RFQlVHX18pO1xuXG5leHBvcnRzLkRFQlVHX0JVSUxEID0gREVCVUdfQlVJTEQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWJ1Zy1idWlsZC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/debug-build.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/dsn.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/dsn.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst debugBuild = __webpack_require__(/*! ./debug-build.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/debug-build.js\");\nconst logger = __webpack_require__(/*! ./logger.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/logger.js\");\n\n/** Regular expression used to parse a Dsn. */\nconst DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+)?)?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n\nfunction isValidProtocol(protocol) {\n  return protocol === 'http' || protocol === 'https';\n}\n\n/**\n * Renders the string representation of this Dsn.\n *\n * By default, this will render the public representation without the password\n * component. To get the deprecated private representation, set `withPassword`\n * to true.\n *\n * @param withPassword When set to true, the password will be included.\n */\nfunction dsnToString(dsn, withPassword = false) {\n  const { host, path, pass, port, projectId, protocol, publicKey } = dsn;\n  return (\n    `${protocol}://${publicKey}${withPassword && pass ? `:${pass}` : ''}` +\n    `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n  );\n}\n\n/**\n * Parses a Dsn from a given string.\n *\n * @param str A Dsn as string\n * @returns Dsn as DsnComponents or undefined if @param str is not a valid DSN string\n */\nfunction dsnFromString(str) {\n  const match = DSN_REGEX.exec(str);\n\n  if (!match) {\n    // This should be logged to the console\n    logger.consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.error(`Invalid Sentry Dsn: ${str}`);\n    });\n    return undefined;\n  }\n\n  const [protocol, publicKey, pass = '', host = '', port = '', lastPath = ''] = match.slice(1);\n  let path = '';\n  let projectId = lastPath;\n\n  const split = projectId.split('/');\n  if (split.length > 1) {\n    path = split.slice(0, -1).join('/');\n    projectId = split.pop() ;\n  }\n\n  if (projectId) {\n    const projectMatch = projectId.match(/^\\d+/);\n    if (projectMatch) {\n      projectId = projectMatch[0];\n    }\n  }\n\n  return dsnFromComponents({ host, pass, path, projectId, port, protocol: protocol , publicKey });\n}\n\nfunction dsnFromComponents(components) {\n  return {\n    protocol: components.protocol,\n    publicKey: components.publicKey || '',\n    pass: components.pass || '',\n    host: components.host,\n    port: components.port || '',\n    path: components.path || '',\n    projectId: components.projectId,\n  };\n}\n\nfunction validateDsn(dsn) {\n  if (!debugBuild.DEBUG_BUILD) {\n    return true;\n  }\n\n  const { port, projectId, protocol } = dsn;\n\n  const requiredComponents = ['protocol', 'publicKey', 'host', 'projectId'];\n  const hasMissingRequiredComponent = requiredComponents.find(component => {\n    if (!dsn[component]) {\n      logger.logger.error(`Invalid Sentry Dsn: ${component} missing`);\n      return true;\n    }\n    return false;\n  });\n\n  if (hasMissingRequiredComponent) {\n    return false;\n  }\n\n  if (!projectId.match(/^\\d+$/)) {\n    logger.logger.error(`Invalid Sentry Dsn: Invalid projectId ${projectId}`);\n    return false;\n  }\n\n  if (!isValidProtocol(protocol)) {\n    logger.logger.error(`Invalid Sentry Dsn: Invalid protocol ${protocol}`);\n    return false;\n  }\n\n  if (port && isNaN(parseInt(port, 10))) {\n    logger.logger.error(`Invalid Sentry Dsn: Invalid port ${port}`);\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Creates a valid Sentry Dsn object, identifying a Sentry instance and project.\n * @returns a valid DsnComponents object or `undefined` if @param from is an invalid DSN source\n */\nfunction makeDsn(from) {\n  const components = typeof from === 'string' ? dsnFromString(from) : dsnFromComponents(from);\n  if (!components || !validateDsn(components)) {\n    return undefined;\n  }\n  return components;\n}\n\nexports.dsnFromString = dsnFromString;\nexports.dsnToString = dsnToString;\nexports.makeDsn = makeDsn;\n//# sourceMappingURL=dsn.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2Rzbi5qcyIsIm1hcHBpbmdzIjoiQUFBQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7O0FBRTdELG1CQUFtQixtQkFBTyxDQUFDLDZIQUFrQjtBQUM3QyxlQUFlLG1CQUFPLENBQUMsbUhBQWE7O0FBRXBDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSx5REFBeUQ7QUFDbkU7QUFDQSxPQUFPLFNBQVMsS0FBSyxVQUFVLEVBQUUsMkJBQTJCLEtBQUssT0FBTztBQUN4RSxRQUFRLEtBQUssRUFBRSxXQUFXLEtBQUssT0FBTyxHQUFHLFVBQVUsS0FBSyxVQUFVLEVBQUUsVUFBVTtBQUM5RTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsSUFBSTtBQUMvQyxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsNkJBQTZCLG1FQUFtRTtBQUNoRzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFVBQVUsNEJBQTRCOztBQUV0QztBQUNBO0FBQ0E7QUFDQSxpREFBaUQsV0FBVztBQUM1RDtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGlFQUFpRSxVQUFVO0FBQzNFO0FBQ0E7O0FBRUE7QUFDQSxnRUFBZ0UsU0FBUztBQUN6RTtBQUNBOztBQUVBO0FBQ0EsNERBQTRELEtBQUs7QUFDakU7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEscUJBQXFCO0FBQ3JCLG1CQUFtQjtBQUNuQixlQUFlO0FBQ2YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0Zm9saW8tcHJvamVjdC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2VudHJ5K3V0aWxzQDguMTcuMC9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9idWlsZC9janMvZHNuLmpzPzg3NzYiXSwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxuY29uc3QgZGVidWdCdWlsZCA9IHJlcXVpcmUoJy4vZGVidWctYnVpbGQuanMnKTtcbmNvbnN0IGxvZ2dlciA9IHJlcXVpcmUoJy4vbG9nZ2VyLmpzJyk7XG5cbi8qKiBSZWd1bGFyIGV4cHJlc3Npb24gdXNlZCB0byBwYXJzZSBhIERzbi4gKi9cbmNvbnN0IERTTl9SRUdFWCA9IC9eKD86KFxcdyspOilcXC9cXC8oPzooXFx3KykoPzo6KFxcdyspPyk/QCkoW1xcdy4tXSspKD86OihcXGQrKSk/XFwvKC4rKS87XG5cbmZ1bmN0aW9uIGlzVmFsaWRQcm90b2NvbChwcm90b2NvbCkge1xuICByZXR1cm4gcHJvdG9jb2wgPT09ICdodHRwJyB8fCBwcm90b2NvbCA9PT0gJ2h0dHBzJztcbn1cblxuLyoqXG4gKiBSZW5kZXJzIHRoZSBzdHJpbmcgcmVwcmVzZW50YXRpb24gb2YgdGhpcyBEc24uXG4gKlxuICogQnkgZGVmYXVsdCwgdGhpcyB3aWxsIHJlbmRlciB0aGUgcHVibGljIHJlcHJlc2VudGF0aW9uIHdpdGhvdXQgdGhlIHBhc3N3b3JkXG4gKiBjb21wb25lbnQuIFRvIGdldCB0aGUgZGVwcmVjYXRlZCBwcml2YXRlIHJlcHJlc2VudGF0aW9uLCBzZXQgYHdpdGhQYXNzd29yZGBcbiAqIHRvIHRydWUuXG4gKlxuICogQHBhcmFtIHdpdGhQYXNzd29yZCBXaGVuIHNldCB0byB0cnVlLCB0aGUgcGFzc3dvcmQgd2lsbCBiZSBpbmNsdWRlZC5cbiAqL1xuZnVuY3Rpb24gZHNuVG9TdHJpbmcoZHNuLCB3aXRoUGFzc3dvcmQgPSBmYWxzZSkge1xuICBjb25zdCB7IGhvc3QsIHBhdGgsIHBhc3MsIHBvcnQsIHByb2plY3RJZCwgcHJvdG9jb2wsIHB1YmxpY0tleSB9ID0gZHNuO1xuICByZXR1cm4gKFxuICAgIGAke3Byb3RvY29sfTovLyR7cHVibGljS2V5fSR7d2l0aFBhc3N3b3JkICYmIHBhc3MgPyBgOiR7cGFzc31gIDogJyd9YCArXG4gICAgYEAke2hvc3R9JHtwb3J0ID8gYDoke3BvcnR9YCA6ICcnfS8ke3BhdGggPyBgJHtwYXRofS9gIDogcGF0aH0ke3Byb2plY3RJZH1gXG4gICk7XG59XG5cbi8qKlxuICogUGFyc2VzIGEgRHNuIGZyb20gYSBnaXZlbiBzdHJpbmcuXG4gKlxuICogQHBhcmFtIHN0ciBBIERzbiBhcyBzdHJpbmdcbiAqIEByZXR1cm5zIERzbiBhcyBEc25Db21wb25lbnRzIG9yIHVuZGVmaW5lZCBpZiBAcGFyYW0gc3RyIGlzIG5vdCBhIHZhbGlkIERTTiBzdHJpbmdcbiAqL1xuZnVuY3Rpb24gZHNuRnJvbVN0cmluZyhzdHIpIHtcbiAgY29uc3QgbWF0Y2ggPSBEU05fUkVHRVguZXhlYyhzdHIpO1xuXG4gIGlmICghbWF0Y2gpIHtcbiAgICAvLyBUaGlzIHNob3VsZCBiZSBsb2dnZWQgdG8gdGhlIGNvbnNvbGVcbiAgICBsb2dnZXIuY29uc29sZVNhbmRib3goKCkgPT4ge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICAgIGNvbnNvbGUuZXJyb3IoYEludmFsaWQgU2VudHJ5IERzbjogJHtzdHJ9YCk7XG4gICAgfSk7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxuXG4gIGNvbnN0IFtwcm90b2NvbCwgcHVibGljS2V5LCBwYXNzID0gJycsIGhvc3QgPSAnJywgcG9ydCA9ICcnLCBsYXN0UGF0aCA9ICcnXSA9IG1hdGNoLnNsaWNlKDEpO1xuICBsZXQgcGF0aCA9ICcnO1xuICBsZXQgcHJvamVjdElkID0gbGFzdFBhdGg7XG5cbiAgY29uc3Qgc3BsaXQgPSBwcm9qZWN0SWQuc3BsaXQoJy8nKTtcbiAgaWYgKHNwbGl0Lmxlbmd0aCA+IDEpIHtcbiAgICBwYXRoID0gc3BsaXQuc2xpY2UoMCwgLTEpLmpvaW4oJy8nKTtcbiAgICBwcm9qZWN0SWQgPSBzcGxpdC5wb3AoKSA7XG4gIH1cblxuICBpZiAocHJvamVjdElkKSB7XG4gICAgY29uc3QgcHJvamVjdE1hdGNoID0gcHJvamVjdElkLm1hdGNoKC9eXFxkKy8pO1xuICAgIGlmIChwcm9qZWN0TWF0Y2gpIHtcbiAgICAgIHByb2plY3RJZCA9IHByb2plY3RNYXRjaFswXTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gZHNuRnJvbUNvbXBvbmVudHMoeyBob3N0LCBwYXNzLCBwYXRoLCBwcm9qZWN0SWQsIHBvcnQsIHByb3RvY29sOiBwcm90b2NvbCAsIHB1YmxpY0tleSB9KTtcbn1cblxuZnVuY3Rpb24gZHNuRnJvbUNvbXBvbmVudHMoY29tcG9uZW50cykge1xuICByZXR1cm4ge1xuICAgIHByb3RvY29sOiBjb21wb25lbnRzLnByb3RvY29sLFxuICAgIHB1YmxpY0tleTogY29tcG9uZW50cy5wdWJsaWNLZXkgfHwgJycsXG4gICAgcGFzczogY29tcG9uZW50cy5wYXNzIHx8ICcnLFxuICAgIGhvc3Q6IGNvbXBvbmVudHMuaG9zdCxcbiAgICBwb3J0OiBjb21wb25lbnRzLnBvcnQgfHwgJycsXG4gICAgcGF0aDogY29tcG9uZW50cy5wYXRoIHx8ICcnLFxuICAgIHByb2plY3RJZDogY29tcG9uZW50cy5wcm9qZWN0SWQsXG4gIH07XG59XG5cbmZ1bmN0aW9uIHZhbGlkYXRlRHNuKGRzbikge1xuICBpZiAoIWRlYnVnQnVpbGQuREVCVUdfQlVJTEQpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIGNvbnN0IHsgcG9ydCwgcHJvamVjdElkLCBwcm90b2NvbCB9ID0gZHNuO1xuXG4gIGNvbnN0IHJlcXVpcmVkQ29tcG9uZW50cyA9IFsncHJvdG9jb2wnLCAncHVibGljS2V5JywgJ2hvc3QnLCAncHJvamVjdElkJ107XG4gIGNvbnN0IGhhc01pc3NpbmdSZXF1aXJlZENvbXBvbmVudCA9IHJlcXVpcmVkQ29tcG9uZW50cy5maW5kKGNvbXBvbmVudCA9PiB7XG4gICAgaWYgKCFkc25bY29tcG9uZW50XSkge1xuICAgICAgbG9nZ2VyLmxvZ2dlci5lcnJvcihgSW52YWxpZCBTZW50cnkgRHNuOiAke2NvbXBvbmVudH0gbWlzc2luZ2ApO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbiAgfSk7XG5cbiAgaWYgKGhhc01pc3NpbmdSZXF1aXJlZENvbXBvbmVudCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGlmICghcHJvamVjdElkLm1hdGNoKC9eXFxkKyQvKSkge1xuICAgIGxvZ2dlci5sb2dnZXIuZXJyb3IoYEludmFsaWQgU2VudHJ5IERzbjogSW52YWxpZCBwcm9qZWN0SWQgJHtwcm9qZWN0SWR9YCk7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgaWYgKCFpc1ZhbGlkUHJvdG9jb2wocHJvdG9jb2wpKSB7XG4gICAgbG9nZ2VyLmxvZ2dlci5lcnJvcihgSW52YWxpZCBTZW50cnkgRHNuOiBJbnZhbGlkIHByb3RvY29sICR7cHJvdG9jb2x9YCk7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgaWYgKHBvcnQgJiYgaXNOYU4ocGFyc2VJbnQocG9ydCwgMTApKSkge1xuICAgIGxvZ2dlci5sb2dnZXIuZXJyb3IoYEludmFsaWQgU2VudHJ5IERzbjogSW52YWxpZCBwb3J0ICR7cG9ydH1gKTtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICByZXR1cm4gdHJ1ZTtcbn1cblxuLyoqXG4gKiBDcmVhdGVzIGEgdmFsaWQgU2VudHJ5IERzbiBvYmplY3QsIGlkZW50aWZ5aW5nIGEgU2VudHJ5IGluc3RhbmNlIGFuZCBwcm9qZWN0LlxuICogQHJldHVybnMgYSB2YWxpZCBEc25Db21wb25lbnRzIG9iamVjdCBvciBgdW5kZWZpbmVkYCBpZiBAcGFyYW0gZnJvbSBpcyBhbiBpbnZhbGlkIERTTiBzb3VyY2VcbiAqL1xuZnVuY3Rpb24gbWFrZURzbihmcm9tKSB7XG4gIGNvbnN0IGNvbXBvbmVudHMgPSB0eXBlb2YgZnJvbSA9PT0gJ3N0cmluZycgPyBkc25Gcm9tU3RyaW5nKGZyb20pIDogZHNuRnJvbUNvbXBvbmVudHMoZnJvbSk7XG4gIGlmICghY29tcG9uZW50cyB8fCAhdmFsaWRhdGVEc24oY29tcG9uZW50cykpIHtcbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG4gIHJldHVybiBjb21wb25lbnRzO1xufVxuXG5leHBvcnRzLmRzbkZyb21TdHJpbmcgPSBkc25Gcm9tU3RyaW5nO1xuZXhwb3J0cy5kc25Ub1N0cmluZyA9IGRzblRvU3RyaW5nO1xuZXhwb3J0cy5tYWtlRHNuID0gbWFrZURzbjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRzbi5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/dsn.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/env.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/env.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n/*\n * This module exists for optimizations in the build process through rollup and terser.  We define some global\n * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these\n * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will\n * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to\n * `logger` and preventing node-related code from appearing in browser bundles.\n *\n * Attention:\n * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by\n * users. These flags should live in their respective packages, as we identified user tooling (specifically webpack)\n * having issues tree-shaking these constants across package boundaries.\n * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want\n * users to be able to shake away expressions that it guards.\n */\n\n/**\n * Figures out if we're building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nfunction isBrowserBundle() {\n  return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n\n/**\n * Get source of SDK.\n */\nfunction getSDKSource() {\n  // @ts-expect-error \"npm\" is injected by rollup during build process\n  return \"npm\";\n}\n\nexports.getSDKSource = getSDKSource;\nexports.isBrowserBundle = isBrowserBundle;\n//# sourceMappingURL=env.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2Vudi5qcyIsIm1hcHBpbmdzIjoiQUFBQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7O0FBRTdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxvQkFBb0I7QUFDcEIsdUJBQXVCO0FBQ3ZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLXByb2plY3QvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2Vudi5qcz8zOWJlIl0sInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG5cbi8qXG4gKiBUaGlzIG1vZHVsZSBleGlzdHMgZm9yIG9wdGltaXphdGlvbnMgaW4gdGhlIGJ1aWxkIHByb2Nlc3MgdGhyb3VnaCByb2xsdXAgYW5kIHRlcnNlci4gIFdlIGRlZmluZSBzb21lIGdsb2JhbFxuICogY29uc3RhbnRzLCB3aGljaCBjYW4gYmUgb3ZlcnJpZGRlbiBkdXJpbmcgYnVpbGQuIEJ5IGd1YXJkaW5nIGNlcnRhaW4gcGllY2VzIG9mIGNvZGUgd2l0aCBmdW5jdGlvbnMgdGhhdCByZXR1cm4gdGhlc2VcbiAqIGNvbnN0YW50cywgd2UgY2FuIGNvbnRyb2wgd2hldGhlciBvciBub3QgdGhleSBhcHBlYXIgaW4gdGhlIGZpbmFsIGJ1bmRsZS4gKEFueSBjb2RlIGd1YXJkZWQgYnkgYSBmYWxzZSBjb25kaXRpb24gd2lsbFxuICogbmV2ZXIgcnVuLCBhbmQgd2lsbCBoZW5jZSBiZSBkcm9wcGVkIGR1cmluZyB0cmVlc2hha2luZy4pIFRoZSB0d28gcHJpbWFyeSB1c2VzIGZvciB0aGlzIGFyZSBzdHJpcHBpbmcgb3V0IGNhbGxzIHRvXG4gKiBgbG9nZ2VyYCBhbmQgcHJldmVudGluZyBub2RlLXJlbGF0ZWQgY29kZSBmcm9tIGFwcGVhcmluZyBpbiBicm93c2VyIGJ1bmRsZXMuXG4gKlxuICogQXR0ZW50aW9uOlxuICogVGhpcyBmaWxlIHNob3VsZCBub3QgYmUgdXNlZCB0byBkZWZpbmUgY29uc3RhbnRzL2ZsYWdzIHRoYXQgYXJlIGludGVuZGVkIHRvIGJlIHVzZWQgZm9yIHRyZWUtc2hha2luZyBjb25kdWN0ZWQgYnlcbiAqIHVzZXJzLiBUaGVzZSBmbGFncyBzaG91bGQgbGl2ZSBpbiB0aGVpciByZXNwZWN0aXZlIHBhY2thZ2VzLCBhcyB3ZSBpZGVudGlmaWVkIHVzZXIgdG9vbGluZyAoc3BlY2lmaWNhbGx5IHdlYnBhY2spXG4gKiBoYXZpbmcgaXNzdWVzIHRyZWUtc2hha2luZyB0aGVzZSBjb25zdGFudHMgYWNyb3NzIHBhY2thZ2UgYm91bmRhcmllcy5cbiAqIEFuIGV4YW1wbGUgZm9yIHRoaXMgaXMgdGhlIF9fU0VOVFJZX0RFQlVHX18gY29uc3RhbnQuIEl0IGlzIGRlY2xhcmVkIGluIGVhY2ggcGFja2FnZSBpbmRpdmlkdWFsbHkgYmVjYXVzZSB3ZSB3YW50XG4gKiB1c2VycyB0byBiZSBhYmxlIHRvIHNoYWtlIGF3YXkgZXhwcmVzc2lvbnMgdGhhdCBpdCBndWFyZHMuXG4gKi9cblxuLyoqXG4gKiBGaWd1cmVzIG91dCBpZiB3ZSdyZSBidWlsZGluZyBhIGJyb3dzZXIgYnVuZGxlLlxuICpcbiAqIEByZXR1cm5zIHRydWUgaWYgdGhpcyBpcyBhIGJyb3dzZXIgYnVuZGxlIGJ1aWxkLlxuICovXG5mdW5jdGlvbiBpc0Jyb3dzZXJCdW5kbGUoKSB7XG4gIHJldHVybiB0eXBlb2YgX19TRU5UUllfQlJPV1NFUl9CVU5ETEVfXyAhPT0gJ3VuZGVmaW5lZCcgJiYgISFfX1NFTlRSWV9CUk9XU0VSX0JVTkRMRV9fO1xufVxuXG4vKipcbiAqIEdldCBzb3VyY2Ugb2YgU0RLLlxuICovXG5mdW5jdGlvbiBnZXRTREtTb3VyY2UoKSB7XG4gIC8vIEB0cy1leHBlY3QtZXJyb3IgXCJucG1cIiBpcyBpbmplY3RlZCBieSByb2xsdXAgZHVyaW5nIGJ1aWxkIHByb2Nlc3NcbiAgcmV0dXJuIFwibnBtXCI7XG59XG5cbmV4cG9ydHMuZ2V0U0RLU291cmNlID0gZ2V0U0RLU291cmNlO1xuZXhwb3J0cy5pc0Jyb3dzZXJCdW5kbGUgPSBpc0Jyb3dzZXJCdW5kbGU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lbnYuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/env.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/envelope.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/envelope.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst dsn = __webpack_require__(/*! ./dsn.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/dsn.js\");\nconst normalize = __webpack_require__(/*! ./normalize.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/normalize.js\");\nconst object = __webpack_require__(/*! ./object.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/object.js\");\nconst worldwide = __webpack_require__(/*! ./worldwide.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/worldwide.js\");\n\n/**\n * Creates an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction createEnvelope(headers, items = []) {\n  return [headers, items] ;\n}\n\n/**\n * Add an item to an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction addItemToEnvelope(envelope, newItem) {\n  const [headers, items] = envelope;\n  return [headers, [...items, newItem]] ;\n}\n\n/**\n * Convenience function to loop through the items and item types of an envelope.\n * (This function was mostly created because working with envelope types is painful at the moment)\n *\n * If the callback returns true, the rest of the items will be skipped.\n */\nfunction forEachEnvelopeItem(\n  envelope,\n  callback,\n) {\n  const envelopeItems = envelope[1];\n\n  for (const envelopeItem of envelopeItems) {\n    const envelopeItemType = envelopeItem[0].type;\n    const result = callback(envelopeItem, envelopeItemType);\n\n    if (result) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Returns true if the envelope contains any of the given envelope item types\n */\nfunction envelopeContainsItemType(envelope, types) {\n  return forEachEnvelopeItem(envelope, (_, type) => types.includes(type));\n}\n\n/**\n * Encode a string to UTF8 array.\n */\nfunction encodeUTF8(input) {\n  return worldwide.GLOBAL_OBJ.__SENTRY__ && worldwide.GLOBAL_OBJ.__SENTRY__.encodePolyfill\n    ? worldwide.GLOBAL_OBJ.__SENTRY__.encodePolyfill(input)\n    : new TextEncoder().encode(input);\n}\n\n/**\n * Decode a UTF8 array to string.\n */\nfunction decodeUTF8(input) {\n  return worldwide.GLOBAL_OBJ.__SENTRY__ && worldwide.GLOBAL_OBJ.__SENTRY__.decodePolyfill\n    ? worldwide.GLOBAL_OBJ.__SENTRY__.decodePolyfill(input)\n    : new TextDecoder().decode(input);\n}\n\n/**\n * Serializes an envelope.\n */\nfunction serializeEnvelope(envelope) {\n  const [envHeaders, items] = envelope;\n\n  // Initially we construct our envelope as a string and only convert to binary chunks if we encounter binary data\n  let parts = JSON.stringify(envHeaders);\n\n  function append(next) {\n    if (typeof parts === 'string') {\n      parts = typeof next === 'string' ? parts + next : [encodeUTF8(parts), next];\n    } else {\n      parts.push(typeof next === 'string' ? encodeUTF8(next) : next);\n    }\n  }\n\n  for (const item of items) {\n    const [itemHeaders, payload] = item;\n\n    append(`\\n${JSON.stringify(itemHeaders)}\\n`);\n\n    if (typeof payload === 'string' || payload instanceof Uint8Array) {\n      append(payload);\n    } else {\n      let stringifiedPayload;\n      try {\n        stringifiedPayload = JSON.stringify(payload);\n      } catch (e) {\n        // In case, despite all our efforts to keep `payload` circular-dependency-free, `JSON.strinify()` still\n        // fails, we try again after normalizing it again with infinite normalization depth. This of course has a\n        // performance impact but in this case a performance hit is better than throwing.\n        stringifiedPayload = JSON.stringify(normalize.normalize(payload));\n      }\n      append(stringifiedPayload);\n    }\n  }\n\n  return typeof parts === 'string' ? parts : concatBuffers(parts);\n}\n\nfunction concatBuffers(buffers) {\n  const totalLength = buffers.reduce((acc, buf) => acc + buf.length, 0);\n\n  const merged = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const buffer of buffers) {\n    merged.set(buffer, offset);\n    offset += buffer.length;\n  }\n\n  return merged;\n}\n\n/**\n * Parses an envelope\n */\nfunction parseEnvelope(env) {\n  let buffer = typeof env === 'string' ? encodeUTF8(env) : env;\n\n  function readBinary(length) {\n    const bin = buffer.subarray(0, length);\n    // Replace the buffer with the remaining data excluding trailing newline\n    buffer = buffer.subarray(length + 1);\n    return bin;\n  }\n\n  function readJson() {\n    let i = buffer.indexOf(0xa);\n    // If we couldn't find a newline, we must have found the end of the buffer\n    if (i < 0) {\n      i = buffer.length;\n    }\n\n    return JSON.parse(decodeUTF8(readBinary(i))) ;\n  }\n\n  const envelopeHeader = readJson();\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const items = [];\n\n  while (buffer.length) {\n    const itemHeader = readJson();\n    const binaryLength = typeof itemHeader.length === 'number' ? itemHeader.length : undefined;\n\n    items.push([itemHeader, binaryLength ? readBinary(binaryLength) : readJson()]);\n  }\n\n  return [envelopeHeader, items];\n}\n\n/**\n * Creates envelope item for a single span\n */\nfunction createSpanEnvelopeItem(spanJson) {\n  const spanHeaders = {\n    type: 'span',\n  };\n\n  return [spanHeaders, spanJson];\n}\n\n/**\n * Creates attachment envelope items\n */\nfunction createAttachmentEnvelopeItem(attachment) {\n  const buffer = typeof attachment.data === 'string' ? encodeUTF8(attachment.data) : attachment.data;\n\n  return [\n    object.dropUndefinedKeys({\n      type: 'attachment',\n      length: buffer.length,\n      filename: attachment.filename,\n      content_type: attachment.contentType,\n      attachment_type: attachment.attachmentType,\n    }),\n    buffer,\n  ];\n}\n\nconst ITEM_TYPE_TO_DATA_CATEGORY_MAP = {\n  session: 'session',\n  sessions: 'session',\n  attachment: 'attachment',\n  transaction: 'transaction',\n  event: 'error',\n  client_report: 'internal',\n  user_report: 'default',\n  profile: 'profile',\n  profile_chunk: 'profile',\n  replay_event: 'replay',\n  replay_recording: 'replay',\n  check_in: 'monitor',\n  feedback: 'feedback',\n  span: 'span',\n  statsd: 'metric_bucket',\n};\n\n/**\n * Maps the type of an envelope item to a data category.\n */\nfunction envelopeItemTypeToDataCategory(type) {\n  return ITEM_TYPE_TO_DATA_CATEGORY_MAP[type];\n}\n\n/** Extracts the minimal SDK info from the metadata or an events */\nfunction getSdkMetadataForEnvelopeHeader(metadataOrEvent) {\n  if (!metadataOrEvent || !metadataOrEvent.sdk) {\n    return;\n  }\n  const { name, version } = metadataOrEvent.sdk;\n  return { name, version };\n}\n\n/**\n * Creates event envelope headers, based on event, sdk info and tunnel\n * Note: This function was extracted from the core package to make it available in Replay\n */\nfunction createEventEnvelopeHeaders(\n  event,\n  sdkInfo,\n  tunnel,\n  dsn$1,\n) {\n  const dynamicSamplingContext = event.sdkProcessingMetadata && event.sdkProcessingMetadata.dynamicSamplingContext;\n  return {\n    event_id: event.event_id ,\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && dsn$1 && { dsn: dsn.dsnToString(dsn$1) }),\n    ...(dynamicSamplingContext && {\n      trace: object.dropUndefinedKeys({ ...dynamicSamplingContext }),\n    }),\n  };\n}\n\nexports.addItemToEnvelope = addItemToEnvelope;\nexports.createAttachmentEnvelopeItem = createAttachmentEnvelopeItem;\nexports.createEnvelope = createEnvelope;\nexports.createEventEnvelopeHeaders = createEventEnvelopeHeaders;\nexports.createSpanEnvelopeItem = createSpanEnvelopeItem;\nexports.envelopeContainsItemType = envelopeContainsItemType;\nexports.envelopeItemTypeToDataCategory = envelopeItemTypeToDataCategory;\nexports.forEachEnvelopeItem = forEachEnvelopeItem;\nexports.getSdkMetadataForEnvelopeHeader = getSdkMetadataForEnvelopeHeader;\nexports.parseEnvelope = parseEnvelope;\nexports.serializeEnvelope = serializeEnvelope;\n//# sourceMappingURL=envelope.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/envelope.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/error.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/error.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n/** An error emitted by Sentry SDKs and related utilities. */\nclass SentryError extends Error {\n  /** Display name of this error instance. */\n\n   constructor( message, logLevel = 'warn') {\n    super(message);this.message = message;\n    this.name = new.target.prototype.constructor.name;\n    // This sets the prototype to be `Error`, not `SentryError`. It's unclear why we do this, but commenting this line\n    // out causes various (seemingly totally unrelated) playwright tests consistently time out. FYI, this makes\n    // instances of `SentryError` fail `obj instanceof SentryError` checks.\n    Object.setPrototypeOf(this, new.target.prototype);\n    this.logLevel = logLevel;\n  }\n}\n\nexports.SentryError = SentryError;\n//# sourceMappingURL=error.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2Vycm9yLmpzIiwibWFwcGluZ3MiOiJBQUFBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQzs7QUFFN0Q7QUFDQTtBQUNBOztBQUVBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsbUJBQW1CO0FBQ25CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLXByb2plY3QvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2Vycm9yLmpzPzVjMjciXSwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxuLyoqIEFuIGVycm9yIGVtaXR0ZWQgYnkgU2VudHJ5IFNES3MgYW5kIHJlbGF0ZWQgdXRpbGl0aWVzLiAqL1xuY2xhc3MgU2VudHJ5RXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gIC8qKiBEaXNwbGF5IG5hbWUgb2YgdGhpcyBlcnJvciBpbnN0YW5jZS4gKi9cblxuICAgY29uc3RydWN0b3IoIG1lc3NhZ2UsIGxvZ0xldmVsID0gJ3dhcm4nKSB7XG4gICAgc3VwZXIobWVzc2FnZSk7dGhpcy5tZXNzYWdlID0gbWVzc2FnZTtcbiAgICB0aGlzLm5hbWUgPSBuZXcudGFyZ2V0LnByb3RvdHlwZS5jb25zdHJ1Y3Rvci5uYW1lO1xuICAgIC8vIFRoaXMgc2V0cyB0aGUgcHJvdG90eXBlIHRvIGJlIGBFcnJvcmAsIG5vdCBgU2VudHJ5RXJyb3JgLiBJdCdzIHVuY2xlYXIgd2h5IHdlIGRvIHRoaXMsIGJ1dCBjb21tZW50aW5nIHRoaXMgbGluZVxuICAgIC8vIG91dCBjYXVzZXMgdmFyaW91cyAoc2VlbWluZ2x5IHRvdGFsbHkgdW5yZWxhdGVkKSBwbGF5d3JpZ2h0IHRlc3RzIGNvbnNpc3RlbnRseSB0aW1lIG91dC4gRllJLCB0aGlzIG1ha2VzXG4gICAgLy8gaW5zdGFuY2VzIG9mIGBTZW50cnlFcnJvcmAgZmFpbCBgb2JqIGluc3RhbmNlb2YgU2VudHJ5RXJyb3JgIGNoZWNrcy5cbiAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YodGhpcywgbmV3LnRhcmdldC5wcm90b3R5cGUpO1xuICAgIHRoaXMubG9nTGV2ZWwgPSBsb2dMZXZlbDtcbiAgfVxufVxuXG5leHBvcnRzLlNlbnRyeUVycm9yID0gU2VudHJ5RXJyb3I7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lcnJvci5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/error.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/eventbuilder.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/eventbuilder.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst is = __webpack_require__(/*! ./is.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/is.js\");\nconst misc = __webpack_require__(/*! ./misc.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/misc.js\");\nconst normalize = __webpack_require__(/*! ./normalize.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/normalize.js\");\nconst object = __webpack_require__(/*! ./object.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/object.js\");\n\n/**\n * Extracts stack frames from the error.stack string\n */\nfunction parseStackFrames(stackParser, error) {\n  return stackParser(error.stack || '', 1);\n}\n\n/**\n * Extracts stack frames from the error and builds a Sentry Exception\n */\nfunction exceptionFromError(stackParser, error) {\n  const exception = {\n    type: error.name || error.constructor.name,\n    value: error.message,\n  };\n\n  const frames = parseStackFrames(stackParser, error);\n  if (frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  return exception;\n}\n\n/** If a plain object has a property that is an `Error`, return this error. */\nfunction getErrorPropertyFromObject(obj) {\n  for (const prop in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n      const value = obj[prop];\n      if (value instanceof Error) {\n        return value;\n      }\n    }\n  }\n\n  return undefined;\n}\n\nfunction getMessageForObject(exception) {\n  if ('name' in exception && typeof exception.name === 'string') {\n    let message = `'${exception.name}' captured as exception`;\n\n    if ('message' in exception && typeof exception.message === 'string') {\n      message += ` with message '${exception.message}'`;\n    }\n\n    return message;\n  } else if ('message' in exception && typeof exception.message === 'string') {\n    return exception.message;\n  }\n\n  const keys = object.extractExceptionKeysForMessage(exception);\n\n  // Some ErrorEvent instances do not have an `error` property, which is why they are not handled before\n  // We still want to try to get a decent message for these cases\n  if (is.isErrorEvent(exception)) {\n    return `Event \\`ErrorEvent\\` captured as exception with message \\`${exception.message}\\``;\n  }\n\n  const className = getObjectClassName(exception);\n\n  return `${\n    className && className !== 'Object' ? `'${className}'` : 'Object'\n  } captured as exception with keys: ${keys}`;\n}\n\nfunction getObjectClassName(obj) {\n  try {\n    const prototype = Object.getPrototypeOf(obj);\n    return prototype ? prototype.constructor.name : undefined;\n  } catch (e) {\n    // ignore errors here\n  }\n}\n\nfunction getException(\n  client,\n  mechanism,\n  exception,\n  hint,\n) {\n  if (is.isError(exception)) {\n    return [exception, undefined];\n  }\n\n  // Mutate this!\n  mechanism.synthetic = true;\n\n  if (is.isPlainObject(exception)) {\n    const normalizeDepth = client && client.getOptions().normalizeDepth;\n    const extras = { ['__serialized__']: normalize.normalizeToSize(exception , normalizeDepth) };\n\n    const errorFromProp = getErrorPropertyFromObject(exception);\n    if (errorFromProp) {\n      return [errorFromProp, extras];\n    }\n\n    const message = getMessageForObject(exception);\n    const ex = (hint && hint.syntheticException) || new Error(message);\n    ex.message = message;\n\n    return [ex, extras];\n  }\n\n  // This handles when someone does: `throw \"something awesome\";`\n  // We use synthesized Error here so we can extract a (rough) stack trace.\n  const ex = (hint && hint.syntheticException) || new Error(exception );\n  ex.message = `${exception}`;\n\n  return [ex, undefined];\n}\n\n/**\n * Builds and Event from a Exception\n * @hidden\n */\nfunction eventFromUnknownInput(\n  client,\n  stackParser,\n  exception,\n  hint,\n) {\n  const providedMechanism =\n    hint && hint.data && (hint.data ).mechanism;\n  const mechanism = providedMechanism || {\n    handled: true,\n    type: 'generic',\n  };\n\n  const [ex, extras] = getException(client, mechanism, exception, hint);\n\n  const event = {\n    exception: {\n      values: [exceptionFromError(stackParser, ex)],\n    },\n  };\n\n  if (extras) {\n    event.extra = extras;\n  }\n\n  misc.addExceptionTypeValue(event, undefined, undefined);\n  misc.addExceptionMechanism(event, mechanism);\n\n  return {\n    ...event,\n    event_id: hint && hint.event_id,\n  };\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nfunction eventFromMessage(\n  stackParser,\n  message,\n  level = 'info',\n  hint,\n  attachStacktrace,\n) {\n  const event = {\n    event_id: hint && hint.event_id,\n    level,\n  };\n\n  if (attachStacktrace && hint && hint.syntheticException) {\n    const frames = parseStackFrames(stackParser, hint.syntheticException);\n    if (frames.length) {\n      event.exception = {\n        values: [\n          {\n            value: message,\n            stacktrace: { frames },\n          },\n        ],\n      };\n    }\n  }\n\n  if (is.isParameterizedString(message)) {\n    const { __sentry_template_string__, __sentry_template_values__ } = message;\n\n    event.logentry = {\n      message: __sentry_template_string__,\n      params: __sentry_template_values__,\n    };\n    return event;\n  }\n\n  event.message = message;\n  return event;\n}\n\nexports.eventFromMessage = eventFromMessage;\nexports.eventFromUnknownInput = eventFromUnknownInput;\nexports.exceptionFromError = exceptionFromError;\nexports.parseStackFrames = parseStackFrames;\n//# sourceMappingURL=eventbuilder.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/eventbuilder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/index.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/index.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst aggregateErrors = __webpack_require__(/*! ./aggregate-errors.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/aggregate-errors.js\");\nconst array = __webpack_require__(/*! ./array.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/array.js\");\nconst browser = __webpack_require__(/*! ./browser.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/browser.js\");\nconst dsn = __webpack_require__(/*! ./dsn.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/dsn.js\");\nconst error = __webpack_require__(/*! ./error.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/error.js\");\nconst worldwide = __webpack_require__(/*! ./worldwide.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/worldwide.js\");\nconst console = __webpack_require__(/*! ./instrument/console.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/console.js\");\nconst fetch = __webpack_require__(/*! ./instrument/fetch.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/fetch.js\");\nconst globalError = __webpack_require__(/*! ./instrument/globalError.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/globalError.js\");\nconst globalUnhandledRejection = __webpack_require__(/*! ./instrument/globalUnhandledRejection.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/globalUnhandledRejection.js\");\nconst handlers = __webpack_require__(/*! ./instrument/handlers.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/handlers.js\");\nconst is = __webpack_require__(/*! ./is.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/is.js\");\nconst isBrowser = __webpack_require__(/*! ./isBrowser.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/isBrowser.js\");\nconst logger = __webpack_require__(/*! ./logger.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/logger.js\");\nconst memo = __webpack_require__(/*! ./memo.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/memo.js\");\nconst misc = __webpack_require__(/*! ./misc.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/misc.js\");\nconst node = __webpack_require__(/*! ./node.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/node.js\");\nconst normalize = __webpack_require__(/*! ./normalize.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/normalize.js\");\nconst object = __webpack_require__(/*! ./object.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/object.js\");\nconst path = __webpack_require__(/*! ./path.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/path.js\");\nconst promisebuffer = __webpack_require__(/*! ./promisebuffer.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/promisebuffer.js\");\nconst requestdata = __webpack_require__(/*! ./requestdata.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/requestdata.js\");\nconst severity = __webpack_require__(/*! ./severity.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/severity.js\");\nconst stacktrace = __webpack_require__(/*! ./stacktrace.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/stacktrace.js\");\nconst nodeStackTrace = __webpack_require__(/*! ./node-stack-trace.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/node-stack-trace.js\");\nconst string = __webpack_require__(/*! ./string.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/string.js\");\nconst supports = __webpack_require__(/*! ./supports.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/supports.js\");\nconst syncpromise = __webpack_require__(/*! ./syncpromise.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/syncpromise.js\");\nconst time = __webpack_require__(/*! ./time.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/time.js\");\nconst tracing = __webpack_require__(/*! ./tracing.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/tracing.js\");\nconst env = __webpack_require__(/*! ./env.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/env.js\");\nconst envelope = __webpack_require__(/*! ./envelope.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/envelope.js\");\nconst clientreport = __webpack_require__(/*! ./clientreport.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/clientreport.js\");\nconst ratelimit = __webpack_require__(/*! ./ratelimit.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/ratelimit.js\");\nconst baggage = __webpack_require__(/*! ./baggage.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/baggage.js\");\nconst url = __webpack_require__(/*! ./url.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/url.js\");\nconst cache = __webpack_require__(/*! ./cache.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/cache.js\");\nconst eventbuilder = __webpack_require__(/*! ./eventbuilder.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/eventbuilder.js\");\nconst anr = __webpack_require__(/*! ./anr.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/anr.js\");\nconst lru = __webpack_require__(/*! ./lru.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/lru.js\");\nconst _asyncNullishCoalesce = __webpack_require__(/*! ./buildPolyfills/_asyncNullishCoalesce.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_asyncNullishCoalesce.js\");\nconst _asyncOptionalChain = __webpack_require__(/*! ./buildPolyfills/_asyncOptionalChain.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_asyncOptionalChain.js\");\nconst _asyncOptionalChainDelete = __webpack_require__(/*! ./buildPolyfills/_asyncOptionalChainDelete.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_asyncOptionalChainDelete.js\");\nconst _nullishCoalesce = __webpack_require__(/*! ./buildPolyfills/_nullishCoalesce.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_nullishCoalesce.js\");\nconst _optionalChain = __webpack_require__(/*! ./buildPolyfills/_optionalChain.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_optionalChain.js\");\nconst _optionalChainDelete = __webpack_require__(/*! ./buildPolyfills/_optionalChainDelete.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_optionalChainDelete.js\");\nconst propagationContext = __webpack_require__(/*! ./propagationContext.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/propagationContext.js\");\nconst version = __webpack_require__(/*! ./version.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/version.js\");\nconst escapeStringForRegex = __webpack_require__(/*! ./vendor/escapeStringForRegex.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/vendor/escapeStringForRegex.js\");\nconst supportsHistory = __webpack_require__(/*! ./vendor/supportsHistory.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/vendor/supportsHistory.js\");\n\n\n\nexports.applyAggregateErrorsToEvent = aggregateErrors.applyAggregateErrorsToEvent;\nexports.flatten = array.flatten;\nexports.getComponentName = browser.getComponentName;\nexports.getDomElement = browser.getDomElement;\nexports.getLocationHref = browser.getLocationHref;\nexports.htmlTreeAsString = browser.htmlTreeAsString;\nexports.dsnFromString = dsn.dsnFromString;\nexports.dsnToString = dsn.dsnToString;\nexports.makeDsn = dsn.makeDsn;\nexports.SentryError = error.SentryError;\nexports.GLOBAL_OBJ = worldwide.GLOBAL_OBJ;\nexports.getGlobalSingleton = worldwide.getGlobalSingleton;\nexports.addConsoleInstrumentationHandler = console.addConsoleInstrumentationHandler;\nexports.addFetchInstrumentationHandler = fetch.addFetchInstrumentationHandler;\nexports.addGlobalErrorInstrumentationHandler = globalError.addGlobalErrorInstrumentationHandler;\nexports.addGlobalUnhandledRejectionInstrumentationHandler = globalUnhandledRejection.addGlobalUnhandledRejectionInstrumentationHandler;\nexports.addHandler = handlers.addHandler;\nexports.maybeInstrument = handlers.maybeInstrument;\nexports.resetInstrumentationHandlers = handlers.resetInstrumentationHandlers;\nexports.triggerHandlers = handlers.triggerHandlers;\nexports.isDOMError = is.isDOMError;\nexports.isDOMException = is.isDOMException;\nexports.isElement = is.isElement;\nexports.isError = is.isError;\nexports.isErrorEvent = is.isErrorEvent;\nexports.isEvent = is.isEvent;\nexports.isInstanceOf = is.isInstanceOf;\nexports.isParameterizedString = is.isParameterizedString;\nexports.isPlainObject = is.isPlainObject;\nexports.isPrimitive = is.isPrimitive;\nexports.isRegExp = is.isRegExp;\nexports.isString = is.isString;\nexports.isSyntheticEvent = is.isSyntheticEvent;\nexports.isThenable = is.isThenable;\nexports.isVueViewModel = is.isVueViewModel;\nexports.isBrowser = isBrowser.isBrowser;\nexports.CONSOLE_LEVELS = logger.CONSOLE_LEVELS;\nexports.consoleSandbox = logger.consoleSandbox;\nexports.logger = logger.logger;\nexports.originalConsoleMethods = logger.originalConsoleMethods;\nexports.memoBuilder = memo.memoBuilder;\nexports.addContextToFrame = misc.addContextToFrame;\nexports.addExceptionMechanism = misc.addExceptionMechanism;\nexports.addExceptionTypeValue = misc.addExceptionTypeValue;\nexports.arrayify = misc.arrayify;\nexports.checkOrSetAlreadyCaught = misc.checkOrSetAlreadyCaught;\nexports.getEventDescription = misc.getEventDescription;\nexports.parseSemver = misc.parseSemver;\nexports.uuid4 = misc.uuid4;\nexports.dynamicRequire = node.dynamicRequire;\nexports.isNodeEnv = node.isNodeEnv;\nexports.loadModule = node.loadModule;\nexports.normalize = normalize.normalize;\nexports.normalizeToSize = normalize.normalizeToSize;\nexports.normalizeUrlToBase = normalize.normalizeUrlToBase;\nexports.addNonEnumerableProperty = object.addNonEnumerableProperty;\nexports.convertToPlainObject = object.convertToPlainObject;\nexports.dropUndefinedKeys = object.dropUndefinedKeys;\nexports.extractExceptionKeysForMessage = object.extractExceptionKeysForMessage;\nexports.fill = object.fill;\nexports.getOriginalFunction = object.getOriginalFunction;\nexports.markFunctionWrapped = object.markFunctionWrapped;\nexports.objectify = object.objectify;\nexports.urlEncode = object.urlEncode;\nexports.basename = path.basename;\nexports.dirname = path.dirname;\nexports.isAbsolute = path.isAbsolute;\nexports.join = path.join;\nexports.normalizePath = path.normalizePath;\nexports.relative = path.relative;\nexports.resolve = path.resolve;\nexports.makePromiseBuffer = promisebuffer.makePromiseBuffer;\nexports.DEFAULT_USER_INCLUDES = requestdata.DEFAULT_USER_INCLUDES;\nexports.addRequestDataToEvent = requestdata.addRequestDataToEvent;\nexports.extractPathForTransaction = requestdata.extractPathForTransaction;\nexports.extractRequestData = requestdata.extractRequestData;\nexports.winterCGHeadersToDict = requestdata.winterCGHeadersToDict;\nexports.winterCGRequestToRequestData = requestdata.winterCGRequestToRequestData;\nexports.severityLevelFromString = severity.severityLevelFromString;\nexports.validSeverityLevels = severity.validSeverityLevels;\nexports.UNKNOWN_FUNCTION = stacktrace.UNKNOWN_FUNCTION;\nexports.createStackParser = stacktrace.createStackParser;\nexports.getFramesFromEvent = stacktrace.getFramesFromEvent;\nexports.getFunctionName = stacktrace.getFunctionName;\nexports.stackParserFromStackParserOptions = stacktrace.stackParserFromStackParserOptions;\nexports.stripSentryFramesAndReverse = stacktrace.stripSentryFramesAndReverse;\nexports.filenameIsInApp = nodeStackTrace.filenameIsInApp;\nexports.node = nodeStackTrace.node;\nexports.nodeStackLineParser = nodeStackTrace.nodeStackLineParser;\nexports.isMatchingPattern = string.isMatchingPattern;\nexports.safeJoin = string.safeJoin;\nexports.snipLine = string.snipLine;\nexports.stringMatchesSomePattern = string.stringMatchesSomePattern;\nexports.truncate = string.truncate;\nexports.isNativeFunction = supports.isNativeFunction;\nexports.supportsDOMError = supports.supportsDOMError;\nexports.supportsDOMException = supports.supportsDOMException;\nexports.supportsErrorEvent = supports.supportsErrorEvent;\nexports.supportsFetch = supports.supportsFetch;\nexports.supportsNativeFetch = supports.supportsNativeFetch;\nexports.supportsReferrerPolicy = supports.supportsReferrerPolicy;\nexports.supportsReportingObserver = supports.supportsReportingObserver;\nexports.SyncPromise = syncpromise.SyncPromise;\nexports.rejectedSyncPromise = syncpromise.rejectedSyncPromise;\nexports.resolvedSyncPromise = syncpromise.resolvedSyncPromise;\nObject.defineProperty(exports, \"_browserPerformanceTimeOriginMode\", ({\n\tenumerable: true,\n\tget: () => time._browserPerformanceTimeOriginMode\n}));\nexports.browserPerformanceTimeOrigin = time.browserPerformanceTimeOrigin;\nexports.dateTimestampInSeconds = time.dateTimestampInSeconds;\nexports.timestampInSeconds = time.timestampInSeconds;\nexports.TRACEPARENT_REGEXP = tracing.TRACEPARENT_REGEXP;\nexports.extractTraceparentData = tracing.extractTraceparentData;\nexports.generateSentryTraceHeader = tracing.generateSentryTraceHeader;\nexports.propagationContextFromHeaders = tracing.propagationContextFromHeaders;\nexports.getSDKSource = env.getSDKSource;\nexports.isBrowserBundle = env.isBrowserBundle;\nexports.addItemToEnvelope = envelope.addItemToEnvelope;\nexports.createAttachmentEnvelopeItem = envelope.createAttachmentEnvelopeItem;\nexports.createEnvelope = envelope.createEnvelope;\nexports.createEventEnvelopeHeaders = envelope.createEventEnvelopeHeaders;\nexports.createSpanEnvelopeItem = envelope.createSpanEnvelopeItem;\nexports.envelopeContainsItemType = envelope.envelopeContainsItemType;\nexports.envelopeItemTypeToDataCategory = envelope.envelopeItemTypeToDataCategory;\nexports.forEachEnvelopeItem = envelope.forEachEnvelopeItem;\nexports.getSdkMetadataForEnvelopeHeader = envelope.getSdkMetadataForEnvelopeHeader;\nexports.parseEnvelope = envelope.parseEnvelope;\nexports.serializeEnvelope = envelope.serializeEnvelope;\nexports.createClientReportEnvelope = clientreport.createClientReportEnvelope;\nexports.DEFAULT_RETRY_AFTER = ratelimit.DEFAULT_RETRY_AFTER;\nexports.disabledUntil = ratelimit.disabledUntil;\nexports.isRateLimited = ratelimit.isRateLimited;\nexports.parseRetryAfterHeader = ratelimit.parseRetryAfterHeader;\nexports.updateRateLimits = ratelimit.updateRateLimits;\nexports.BAGGAGE_HEADER_NAME = baggage.BAGGAGE_HEADER_NAME;\nexports.MAX_BAGGAGE_STRING_LENGTH = baggage.MAX_BAGGAGE_STRING_LENGTH;\nexports.SENTRY_BAGGAGE_KEY_PREFIX = baggage.SENTRY_BAGGAGE_KEY_PREFIX;\nexports.SENTRY_BAGGAGE_KEY_PREFIX_REGEX = baggage.SENTRY_BAGGAGE_KEY_PREFIX_REGEX;\nexports.baggageHeaderToDynamicSamplingContext = baggage.baggageHeaderToDynamicSamplingContext;\nexports.dynamicSamplingContextToSentryBaggageHeader = baggage.dynamicSamplingContextToSentryBaggageHeader;\nexports.parseBaggageHeader = baggage.parseBaggageHeader;\nexports.getNumberOfUrlSegments = url.getNumberOfUrlSegments;\nexports.getSanitizedUrlString = url.getSanitizedUrlString;\nexports.parseUrl = url.parseUrl;\nexports.stripUrlQueryAndFragment = url.stripUrlQueryAndFragment;\nexports.makeFifoCache = cache.makeFifoCache;\nexports.eventFromMessage = eventbuilder.eventFromMessage;\nexports.eventFromUnknownInput = eventbuilder.eventFromUnknownInput;\nexports.exceptionFromError = eventbuilder.exceptionFromError;\nexports.parseStackFrames = eventbuilder.parseStackFrames;\nexports.callFrameToStackFrame = anr.callFrameToStackFrame;\nexports.watchdogTimer = anr.watchdogTimer;\nexports.LRUMap = lru.LRUMap;\nexports._asyncNullishCoalesce = _asyncNullishCoalesce._asyncNullishCoalesce;\nexports._asyncOptionalChain = _asyncOptionalChain._asyncOptionalChain;\nexports._asyncOptionalChainDelete = _asyncOptionalChainDelete._asyncOptionalChainDelete;\nexports._nullishCoalesce = _nullishCoalesce._nullishCoalesce;\nexports._optionalChain = _optionalChain._optionalChain;\nexports._optionalChainDelete = _optionalChainDelete._optionalChainDelete;\nexports.generatePropagationContext = propagationContext.generatePropagationContext;\nexports.SDK_VERSION = version.SDK_VERSION;\nexports.escapeStringForRegex = escapeStringForRegex.escapeStringForRegex;\nexports.supportsHistory = supportsHistory.supportsHistory;\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/console.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/console.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst logger = __webpack_require__(/*! ../logger.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/logger.js\");\nconst object = __webpack_require__(/*! ../object.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/object.js\");\nconst worldwide = __webpack_require__(/*! ../worldwide.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/worldwide.js\");\nconst handlers = __webpack_require__(/*! ./handlers.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/handlers.js\");\n\n/**\n * Add an instrumentation handler for when a console.xxx method is called.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addConsoleInstrumentationHandler(handler) {\n  const type = 'console';\n  handlers.addHandler(type, handler);\n  handlers.maybeInstrument(type, instrumentConsole);\n}\n\nfunction instrumentConsole() {\n  if (!('console' in worldwide.GLOBAL_OBJ)) {\n    return;\n  }\n\n  logger.CONSOLE_LEVELS.forEach(function (level) {\n    if (!(level in worldwide.GLOBAL_OBJ.console)) {\n      return;\n    }\n\n    object.fill(worldwide.GLOBAL_OBJ.console, level, function (originalConsoleMethod) {\n      logger.originalConsoleMethods[level] = originalConsoleMethod;\n\n      return function (...args) {\n        const handlerData = { args, level };\n        handlers.triggerHandlers('console', handlerData);\n\n        const log = logger.originalConsoleMethods[level];\n        log && log.apply(worldwide.GLOBAL_OBJ.console, args);\n      };\n    });\n  });\n}\n\nexports.addConsoleInstrumentationHandler = addConsoleInstrumentationHandler;\n//# sourceMappingURL=console.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2luc3RydW1lbnQvY29uc29sZS5qcyIsIm1hcHBpbmdzIjoiQUFBQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7O0FBRTdELGVBQWUsbUJBQU8sQ0FBQyxvSEFBYztBQUNyQyxlQUFlLG1CQUFPLENBQUMsb0hBQWM7QUFDckMsa0JBQWtCLG1CQUFPLENBQUMsMEhBQWlCO0FBQzNDLGlCQUFpQixtQkFBTyxDQUFDLGtJQUFlOztBQUV4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSw4QkFBOEI7QUFDOUI7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDs7QUFFQSx3Q0FBd0M7QUFDeEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0Zm9saW8tcHJvamVjdC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2VudHJ5K3V0aWxzQDguMTcuMC9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9idWlsZC9janMvaW5zdHJ1bWVudC9jb25zb2xlLmpzP2NjNmIiXSwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxuY29uc3QgbG9nZ2VyID0gcmVxdWlyZSgnLi4vbG9nZ2VyLmpzJyk7XG5jb25zdCBvYmplY3QgPSByZXF1aXJlKCcuLi9vYmplY3QuanMnKTtcbmNvbnN0IHdvcmxkd2lkZSA9IHJlcXVpcmUoJy4uL3dvcmxkd2lkZS5qcycpO1xuY29uc3QgaGFuZGxlcnMgPSByZXF1aXJlKCcuL2hhbmRsZXJzLmpzJyk7XG5cbi8qKlxuICogQWRkIGFuIGluc3RydW1lbnRhdGlvbiBoYW5kbGVyIGZvciB3aGVuIGEgY29uc29sZS54eHggbWV0aG9kIGlzIGNhbGxlZC5cbiAqXG4gKiBVc2UgYXQgeW91ciBvd24gcmlzaywgdGhpcyBtaWdodCBicmVhayB3aXRob3V0IGNoYW5nZWxvZyBub3RpY2UsIG9ubHkgdXNlZCBpbnRlcm5hbGx5LlxuICogQGhpZGRlblxuICovXG5mdW5jdGlvbiBhZGRDb25zb2xlSW5zdHJ1bWVudGF0aW9uSGFuZGxlcihoYW5kbGVyKSB7XG4gIGNvbnN0IHR5cGUgPSAnY29uc29sZSc7XG4gIGhhbmRsZXJzLmFkZEhhbmRsZXIodHlwZSwgaGFuZGxlcik7XG4gIGhhbmRsZXJzLm1heWJlSW5zdHJ1bWVudCh0eXBlLCBpbnN0cnVtZW50Q29uc29sZSk7XG59XG5cbmZ1bmN0aW9uIGluc3RydW1lbnRDb25zb2xlKCkge1xuICBpZiAoISgnY29uc29sZScgaW4gd29ybGR3aWRlLkdMT0JBTF9PQkopKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgbG9nZ2VyLkNPTlNPTEVfTEVWRUxTLmZvckVhY2goZnVuY3Rpb24gKGxldmVsKSB7XG4gICAgaWYgKCEobGV2ZWwgaW4gd29ybGR3aWRlLkdMT0JBTF9PQkouY29uc29sZSkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBvYmplY3QuZmlsbCh3b3JsZHdpZGUuR0xPQkFMX09CSi5jb25zb2xlLCBsZXZlbCwgZnVuY3Rpb24gKG9yaWdpbmFsQ29uc29sZU1ldGhvZCkge1xuICAgICAgbG9nZ2VyLm9yaWdpbmFsQ29uc29sZU1ldGhvZHNbbGV2ZWxdID0gb3JpZ2luYWxDb25zb2xlTWV0aG9kO1xuXG4gICAgICByZXR1cm4gZnVuY3Rpb24gKC4uLmFyZ3MpIHtcbiAgICAgICAgY29uc3QgaGFuZGxlckRhdGEgPSB7IGFyZ3MsIGxldmVsIH07XG4gICAgICAgIGhhbmRsZXJzLnRyaWdnZXJIYW5kbGVycygnY29uc29sZScsIGhhbmRsZXJEYXRhKTtcblxuICAgICAgICBjb25zdCBsb2cgPSBsb2dnZXIub3JpZ2luYWxDb25zb2xlTWV0aG9kc1tsZXZlbF07XG4gICAgICAgIGxvZyAmJiBsb2cuYXBwbHkod29ybGR3aWRlLkdMT0JBTF9PQkouY29uc29sZSwgYXJncyk7XG4gICAgICB9O1xuICAgIH0pO1xuICB9KTtcbn1cblxuZXhwb3J0cy5hZGRDb25zb2xlSW5zdHJ1bWVudGF0aW9uSGFuZGxlciA9IGFkZENvbnNvbGVJbnN0cnVtZW50YXRpb25IYW5kbGVyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uc29sZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/console.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/fetch.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/fetch.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst is = __webpack_require__(/*! ../is.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/is.js\");\nconst object = __webpack_require__(/*! ../object.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/object.js\");\nconst supports = __webpack_require__(/*! ../supports.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/supports.js\");\nconst time = __webpack_require__(/*! ../time.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/time.js\");\nconst worldwide = __webpack_require__(/*! ../worldwide.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/worldwide.js\");\nconst handlers = __webpack_require__(/*! ./handlers.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/handlers.js\");\n\n/**\n * Add an instrumentation handler for when a fetch request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addFetchInstrumentationHandler(handler) {\n  const type = 'fetch';\n  handlers.addHandler(type, handler);\n  handlers.maybeInstrument(type, instrumentFetch);\n}\n\nfunction instrumentFetch() {\n  if (!supports.supportsNativeFetch()) {\n    return;\n  }\n\n  object.fill(worldwide.GLOBAL_OBJ, 'fetch', function (originalFetch) {\n    return function (...args) {\n      const { method, url } = parseFetchArgs(args);\n\n      const handlerData = {\n        args,\n        fetchData: {\n          method,\n          url,\n        },\n        startTimestamp: time.timestampInSeconds() * 1000,\n      };\n\n      handlers.triggerHandlers('fetch', {\n        ...handlerData,\n      });\n\n      // We capture the stack right here and not in the Promise error callback because Safari (and probably other\n      // browsers too) will wipe the stack trace up to this point, only leaving us with this file which is useless.\n\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n      //       it means the error, that was caused by your fetch call did not\n      //       have a stack trace, so the SDK backfilled the stack trace so\n      //       you can see which fetch call failed.\n      const virtualStackTrace = new Error().stack;\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return originalFetch.apply(worldwide.GLOBAL_OBJ, args).then(\n        (response) => {\n          const finishedHandlerData = {\n            ...handlerData,\n            endTimestamp: time.timestampInSeconds() * 1000,\n            response,\n          };\n\n          handlers.triggerHandlers('fetch', finishedHandlerData);\n          return response;\n        },\n        (error) => {\n          const erroredHandlerData = {\n            ...handlerData,\n            endTimestamp: time.timestampInSeconds() * 1000,\n            error,\n          };\n\n          handlers.triggerHandlers('fetch', erroredHandlerData);\n\n          if (is.isError(error) && error.stack === undefined) {\n            // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n            //       it means the error, that was caused by your fetch call did not\n            //       have a stack trace, so the SDK backfilled the stack trace so\n            //       you can see which fetch call failed.\n            error.stack = virtualStackTrace;\n            object.addNonEnumerableProperty(error, 'framesToPop', 1);\n          }\n\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n          //       it means the sentry.javascript SDK caught an error invoking your application code.\n          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n          throw error;\n        },\n      );\n    };\n  });\n}\n\nfunction hasProp(obj, prop) {\n  return !!obj && typeof obj === 'object' && !!(obj )[prop];\n}\n\nfunction getUrlFromResource(resource) {\n  if (typeof resource === 'string') {\n    return resource;\n  }\n\n  if (!resource) {\n    return '';\n  }\n\n  if (hasProp(resource, 'url')) {\n    return resource.url;\n  }\n\n  if (resource.toString) {\n    return resource.toString();\n  }\n\n  return '';\n}\n\n/**\n * Parses the fetch arguments to find the used Http method and the url of the request.\n * Exported for tests only.\n */\nfunction parseFetchArgs(fetchArgs) {\n  if (fetchArgs.length === 0) {\n    return { method: 'GET', url: '' };\n  }\n\n  if (fetchArgs.length === 2) {\n    const [url, options] = fetchArgs ;\n\n    return {\n      url: getUrlFromResource(url),\n      method: hasProp(options, 'method') ? String(options.method).toUpperCase() : 'GET',\n    };\n  }\n\n  const arg = fetchArgs[0];\n  return {\n    url: getUrlFromResource(arg ),\n    method: hasProp(arg, 'method') ? String(arg.method).toUpperCase() : 'GET',\n  };\n}\n\nexports.addFetchInstrumentationHandler = addFetchInstrumentationHandler;\nexports.parseFetchArgs = parseFetchArgs;\n//# sourceMappingURL=fetch.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2luc3RydW1lbnQvZmV0Y2guanMiLCJtYXBwaW5ncyI6IkFBQUEsOENBQTZDLEVBQUUsYUFBYSxFQUFDOztBQUU3RCxXQUFXLG1CQUFPLENBQUMsNEdBQVU7QUFDN0IsZUFBZSxtQkFBTyxDQUFDLG9IQUFjO0FBQ3JDLGlCQUFpQixtQkFBTyxDQUFDLHdIQUFnQjtBQUN6QyxhQUFhLG1CQUFPLENBQUMsZ0hBQVk7QUFDakMsa0JBQWtCLG1CQUFPLENBQUMsMEhBQWlCO0FBQzNDLGlCQUFpQixtQkFBTyxDQUFDLGtJQUFlOztBQUV4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsY0FBYyxjQUFjOztBQUU1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE9BQU87O0FBRVA7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHNDQUFzQztBQUN0QyxzQkFBc0I7QUFDdEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0Zm9saW8tcHJvamVjdC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2VudHJ5K3V0aWxzQDguMTcuMC9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9idWlsZC9janMvaW5zdHJ1bWVudC9mZXRjaC5qcz85ZWZiIl0sInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG5cbmNvbnN0IGlzID0gcmVxdWlyZSgnLi4vaXMuanMnKTtcbmNvbnN0IG9iamVjdCA9IHJlcXVpcmUoJy4uL29iamVjdC5qcycpO1xuY29uc3Qgc3VwcG9ydHMgPSByZXF1aXJlKCcuLi9zdXBwb3J0cy5qcycpO1xuY29uc3QgdGltZSA9IHJlcXVpcmUoJy4uL3RpbWUuanMnKTtcbmNvbnN0IHdvcmxkd2lkZSA9IHJlcXVpcmUoJy4uL3dvcmxkd2lkZS5qcycpO1xuY29uc3QgaGFuZGxlcnMgPSByZXF1aXJlKCcuL2hhbmRsZXJzLmpzJyk7XG5cbi8qKlxuICogQWRkIGFuIGluc3RydW1lbnRhdGlvbiBoYW5kbGVyIGZvciB3aGVuIGEgZmV0Y2ggcmVxdWVzdCBoYXBwZW5zLlxuICogVGhlIGhhbmRsZXIgZnVuY3Rpb24gaXMgY2FsbGVkIG9uY2Ugd2hlbiB0aGUgcmVxdWVzdCBzdGFydHMgYW5kIG9uY2Ugd2hlbiBpdCBlbmRzLFxuICogd2hpY2ggY2FuIGJlIGlkZW50aWZpZWQgYnkgY2hlY2tpbmcgaWYgaXQgaGFzIGFuIGBlbmRUaW1lc3RhbXBgLlxuICpcbiAqIFVzZSBhdCB5b3VyIG93biByaXNrLCB0aGlzIG1pZ2h0IGJyZWFrIHdpdGhvdXQgY2hhbmdlbG9nIG5vdGljZSwgb25seSB1c2VkIGludGVybmFsbHkuXG4gKiBAaGlkZGVuXG4gKi9cbmZ1bmN0aW9uIGFkZEZldGNoSW5zdHJ1bWVudGF0aW9uSGFuZGxlcihoYW5kbGVyKSB7XG4gIGNvbnN0IHR5cGUgPSAnZmV0Y2gnO1xuICBoYW5kbGVycy5hZGRIYW5kbGVyKHR5cGUsIGhhbmRsZXIpO1xuICBoYW5kbGVycy5tYXliZUluc3RydW1lbnQodHlwZSwgaW5zdHJ1bWVudEZldGNoKTtcbn1cblxuZnVuY3Rpb24gaW5zdHJ1bWVudEZldGNoKCkge1xuICBpZiAoIXN1cHBvcnRzLnN1cHBvcnRzTmF0aXZlRmV0Y2goKSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIG9iamVjdC5maWxsKHdvcmxkd2lkZS5HTE9CQUxfT0JKLCAnZmV0Y2gnLCBmdW5jdGlvbiAob3JpZ2luYWxGZXRjaCkge1xuICAgIHJldHVybiBmdW5jdGlvbiAoLi4uYXJncykge1xuICAgICAgY29uc3QgeyBtZXRob2QsIHVybCB9ID0gcGFyc2VGZXRjaEFyZ3MoYXJncyk7XG5cbiAgICAgIGNvbnN0IGhhbmRsZXJEYXRhID0ge1xuICAgICAgICBhcmdzLFxuICAgICAgICBmZXRjaERhdGE6IHtcbiAgICAgICAgICBtZXRob2QsXG4gICAgICAgICAgdXJsLFxuICAgICAgICB9LFxuICAgICAgICBzdGFydFRpbWVzdGFtcDogdGltZS50aW1lc3RhbXBJblNlY29uZHMoKSAqIDEwMDAsXG4gICAgICB9O1xuXG4gICAgICBoYW5kbGVycy50cmlnZ2VySGFuZGxlcnMoJ2ZldGNoJywge1xuICAgICAgICAuLi5oYW5kbGVyRGF0YSxcbiAgICAgIH0pO1xuXG4gICAgICAvLyBXZSBjYXB0dXJlIHRoZSBzdGFjayByaWdodCBoZXJlIGFuZCBub3QgaW4gdGhlIFByb21pc2UgZXJyb3IgY2FsbGJhY2sgYmVjYXVzZSBTYWZhcmkgKGFuZCBwcm9iYWJseSBvdGhlclxuICAgICAgLy8gYnJvd3NlcnMgdG9vKSB3aWxsIHdpcGUgdGhlIHN0YWNrIHRyYWNlIHVwIHRvIHRoaXMgcG9pbnQsIG9ubHkgbGVhdmluZyB1cyB3aXRoIHRoaXMgZmlsZSB3aGljaCBpcyB1c2VsZXNzLlxuXG4gICAgICAvLyBOT1RFOiBJZiB5b3UgYXJlIGEgU2VudHJ5IHVzZXIsIGFuZCB5b3UgYXJlIHNlZWluZyB0aGlzIHN0YWNrIGZyYW1lLFxuICAgICAgLy8gICAgICAgaXQgbWVhbnMgdGhlIGVycm9yLCB0aGF0IHdhcyBjYXVzZWQgYnkgeW91ciBmZXRjaCBjYWxsIGRpZCBub3RcbiAgICAgIC8vICAgICAgIGhhdmUgYSBzdGFjayB0cmFjZSwgc28gdGhlIFNESyBiYWNrZmlsbGVkIHRoZSBzdGFjayB0cmFjZSBzb1xuICAgICAgLy8gICAgICAgeW91IGNhbiBzZWUgd2hpY2ggZmV0Y2ggY2FsbCBmYWlsZWQuXG4gICAgICBjb25zdCB2aXJ0dWFsU3RhY2tUcmFjZSA9IG5ldyBFcnJvcigpLnN0YWNrO1xuXG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVuc2FmZS1tZW1iZXItYWNjZXNzXG4gICAgICByZXR1cm4gb3JpZ2luYWxGZXRjaC5hcHBseSh3b3JsZHdpZGUuR0xPQkFMX09CSiwgYXJncykudGhlbihcbiAgICAgICAgKHJlc3BvbnNlKSA9PiB7XG4gICAgICAgICAgY29uc3QgZmluaXNoZWRIYW5kbGVyRGF0YSA9IHtcbiAgICAgICAgICAgIC4uLmhhbmRsZXJEYXRhLFxuICAgICAgICAgICAgZW5kVGltZXN0YW1wOiB0aW1lLnRpbWVzdGFtcEluU2Vjb25kcygpICogMTAwMCxcbiAgICAgICAgICAgIHJlc3BvbnNlLFxuICAgICAgICAgIH07XG5cbiAgICAgICAgICBoYW5kbGVycy50cmlnZ2VySGFuZGxlcnMoJ2ZldGNoJywgZmluaXNoZWRIYW5kbGVyRGF0YSk7XG4gICAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xuICAgICAgICB9LFxuICAgICAgICAoZXJyb3IpID0+IHtcbiAgICAgICAgICBjb25zdCBlcnJvcmVkSGFuZGxlckRhdGEgPSB7XG4gICAgICAgICAgICAuLi5oYW5kbGVyRGF0YSxcbiAgICAgICAgICAgIGVuZFRpbWVzdGFtcDogdGltZS50aW1lc3RhbXBJblNlY29uZHMoKSAqIDEwMDAsXG4gICAgICAgICAgICBlcnJvcixcbiAgICAgICAgICB9O1xuXG4gICAgICAgICAgaGFuZGxlcnMudHJpZ2dlckhhbmRsZXJzKCdmZXRjaCcsIGVycm9yZWRIYW5kbGVyRGF0YSk7XG5cbiAgICAgICAgICBpZiAoaXMuaXNFcnJvcihlcnJvcikgJiYgZXJyb3Iuc3RhY2sgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgLy8gTk9URTogSWYgeW91IGFyZSBhIFNlbnRyeSB1c2VyLCBhbmQgeW91IGFyZSBzZWVpbmcgdGhpcyBzdGFjayBmcmFtZSxcbiAgICAgICAgICAgIC8vICAgICAgIGl0IG1lYW5zIHRoZSBlcnJvciwgdGhhdCB3YXMgY2F1c2VkIGJ5IHlvdXIgZmV0Y2ggY2FsbCBkaWQgbm90XG4gICAgICAgICAgICAvLyAgICAgICBoYXZlIGEgc3RhY2sgdHJhY2UsIHNvIHRoZSBTREsgYmFja2ZpbGxlZCB0aGUgc3RhY2sgdHJhY2Ugc29cbiAgICAgICAgICAgIC8vICAgICAgIHlvdSBjYW4gc2VlIHdoaWNoIGZldGNoIGNhbGwgZmFpbGVkLlxuICAgICAgICAgICAgZXJyb3Iuc3RhY2sgPSB2aXJ0dWFsU3RhY2tUcmFjZTtcbiAgICAgICAgICAgIG9iamVjdC5hZGROb25FbnVtZXJhYmxlUHJvcGVydHkoZXJyb3IsICdmcmFtZXNUb1BvcCcsIDEpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIC8vIE5PVEU6IElmIHlvdSBhcmUgYSBTZW50cnkgdXNlciwgYW5kIHlvdSBhcmUgc2VlaW5nIHRoaXMgc3RhY2sgZnJhbWUsXG4gICAgICAgICAgLy8gICAgICAgaXQgbWVhbnMgdGhlIHNlbnRyeS5qYXZhc2NyaXB0IFNESyBjYXVnaHQgYW4gZXJyb3IgaW52b2tpbmcgeW91ciBhcHBsaWNhdGlvbiBjb2RlLlxuICAgICAgICAgIC8vICAgICAgIFRoaXMgaXMgZXhwZWN0ZWQgYmVoYXZpb3IgYW5kIE5PVCBpbmRpY2F0aXZlIG9mIGEgYnVnIHdpdGggc2VudHJ5LmphdmFzY3JpcHQuXG4gICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgIH0sXG4gICAgICApO1xuICAgIH07XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBoYXNQcm9wKG9iaiwgcHJvcCkge1xuICByZXR1cm4gISFvYmogJiYgdHlwZW9mIG9iaiA9PT0gJ29iamVjdCcgJiYgISEob2JqIClbcHJvcF07XG59XG5cbmZ1bmN0aW9uIGdldFVybEZyb21SZXNvdXJjZShyZXNvdXJjZSkge1xuICBpZiAodHlwZW9mIHJlc291cmNlID09PSAnc3RyaW5nJykge1xuICAgIHJldHVybiByZXNvdXJjZTtcbiAgfVxuXG4gIGlmICghcmVzb3VyY2UpIHtcbiAgICByZXR1cm4gJyc7XG4gIH1cblxuICBpZiAoaGFzUHJvcChyZXNvdXJjZSwgJ3VybCcpKSB7XG4gICAgcmV0dXJuIHJlc291cmNlLnVybDtcbiAgfVxuXG4gIGlmIChyZXNvdXJjZS50b1N0cmluZykge1xuICAgIHJldHVybiByZXNvdXJjZS50b1N0cmluZygpO1xuICB9XG5cbiAgcmV0dXJuICcnO1xufVxuXG4vKipcbiAqIFBhcnNlcyB0aGUgZmV0Y2ggYXJndW1lbnRzIHRvIGZpbmQgdGhlIHVzZWQgSHR0cCBtZXRob2QgYW5kIHRoZSB1cmwgb2YgdGhlIHJlcXVlc3QuXG4gKiBFeHBvcnRlZCBmb3IgdGVzdHMgb25seS5cbiAqL1xuZnVuY3Rpb24gcGFyc2VGZXRjaEFyZ3MoZmV0Y2hBcmdzKSB7XG4gIGlmIChmZXRjaEFyZ3MubGVuZ3RoID09PSAwKSB7XG4gICAgcmV0dXJuIHsgbWV0aG9kOiAnR0VUJywgdXJsOiAnJyB9O1xuICB9XG5cbiAgaWYgKGZldGNoQXJncy5sZW5ndGggPT09IDIpIHtcbiAgICBjb25zdCBbdXJsLCBvcHRpb25zXSA9IGZldGNoQXJncyA7XG5cbiAgICByZXR1cm4ge1xuICAgICAgdXJsOiBnZXRVcmxGcm9tUmVzb3VyY2UodXJsKSxcbiAgICAgIG1ldGhvZDogaGFzUHJvcChvcHRpb25zLCAnbWV0aG9kJykgPyBTdHJpbmcob3B0aW9ucy5tZXRob2QpLnRvVXBwZXJDYXNlKCkgOiAnR0VUJyxcbiAgICB9O1xuICB9XG5cbiAgY29uc3QgYXJnID0gZmV0Y2hBcmdzWzBdO1xuICByZXR1cm4ge1xuICAgIHVybDogZ2V0VXJsRnJvbVJlc291cmNlKGFyZyApLFxuICAgIG1ldGhvZDogaGFzUHJvcChhcmcsICdtZXRob2QnKSA/IFN0cmluZyhhcmcubWV0aG9kKS50b1VwcGVyQ2FzZSgpIDogJ0dFVCcsXG4gIH07XG59XG5cbmV4cG9ydHMuYWRkRmV0Y2hJbnN0cnVtZW50YXRpb25IYW5kbGVyID0gYWRkRmV0Y2hJbnN0cnVtZW50YXRpb25IYW5kbGVyO1xuZXhwb3J0cy5wYXJzZUZldGNoQXJncyA9IHBhcnNlRmV0Y2hBcmdzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZmV0Y2guanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/fetch.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/globalError.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/globalError.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst worldwide = __webpack_require__(/*! ../worldwide.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/worldwide.js\");\nconst handlers = __webpack_require__(/*! ./handlers.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/handlers.js\");\n\nlet _oldOnErrorHandler = null;\n\n/**\n * Add an instrumentation handler for when an error is captured by the global error handler.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addGlobalErrorInstrumentationHandler(handler) {\n  const type = 'error';\n  handlers.addHandler(type, handler);\n  handlers.maybeInstrument(type, instrumentError);\n}\n\nfunction instrumentError() {\n  _oldOnErrorHandler = worldwide.GLOBAL_OBJ.onerror;\n\n  worldwide.GLOBAL_OBJ.onerror = function (\n    msg,\n    url,\n    line,\n    column,\n    error,\n  ) {\n    const handlerData = {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    };\n    handlers.triggerHandlers('error', handlerData);\n\n    if (_oldOnErrorHandler && !_oldOnErrorHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n\n  worldwide.GLOBAL_OBJ.onerror.__SENTRY_INSTRUMENTED__ = true;\n}\n\nexports.addGlobalErrorInstrumentationHandler = addGlobalErrorInstrumentationHandler;\n//# sourceMappingURL=globalError.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2luc3RydW1lbnQvZ2xvYmFsRXJyb3IuanMiLCJtYXBwaW5ncyI6IkFBQUEsOENBQTZDLEVBQUUsYUFBYSxFQUFDOztBQUU3RCxrQkFBa0IsbUJBQU8sQ0FBQywwSEFBaUI7QUFDM0MsaUJBQWlCLG1CQUFPLENBQUMsa0lBQWU7O0FBRXhDOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBLDRDQUE0QztBQUM1QyIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9pbnN0cnVtZW50L2dsb2JhbEVycm9yLmpzP2YxMWMiXSwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxuY29uc3Qgd29ybGR3aWRlID0gcmVxdWlyZSgnLi4vd29ybGR3aWRlLmpzJyk7XG5jb25zdCBoYW5kbGVycyA9IHJlcXVpcmUoJy4vaGFuZGxlcnMuanMnKTtcblxubGV0IF9vbGRPbkVycm9ySGFuZGxlciA9IG51bGw7XG5cbi8qKlxuICogQWRkIGFuIGluc3RydW1lbnRhdGlvbiBoYW5kbGVyIGZvciB3aGVuIGFuIGVycm9yIGlzIGNhcHR1cmVkIGJ5IHRoZSBnbG9iYWwgZXJyb3IgaGFuZGxlci5cbiAqXG4gKiBVc2UgYXQgeW91ciBvd24gcmlzaywgdGhpcyBtaWdodCBicmVhayB3aXRob3V0IGNoYW5nZWxvZyBub3RpY2UsIG9ubHkgdXNlZCBpbnRlcm5hbGx5LlxuICogQGhpZGRlblxuICovXG5mdW5jdGlvbiBhZGRHbG9iYWxFcnJvckluc3RydW1lbnRhdGlvbkhhbmRsZXIoaGFuZGxlcikge1xuICBjb25zdCB0eXBlID0gJ2Vycm9yJztcbiAgaGFuZGxlcnMuYWRkSGFuZGxlcih0eXBlLCBoYW5kbGVyKTtcbiAgaGFuZGxlcnMubWF5YmVJbnN0cnVtZW50KHR5cGUsIGluc3RydW1lbnRFcnJvcik7XG59XG5cbmZ1bmN0aW9uIGluc3RydW1lbnRFcnJvcigpIHtcbiAgX29sZE9uRXJyb3JIYW5kbGVyID0gd29ybGR3aWRlLkdMT0JBTF9PQkoub25lcnJvcjtcblxuICB3b3JsZHdpZGUuR0xPQkFMX09CSi5vbmVycm9yID0gZnVuY3Rpb24gKFxuICAgIG1zZyxcbiAgICB1cmwsXG4gICAgbGluZSxcbiAgICBjb2x1bW4sXG4gICAgZXJyb3IsXG4gICkge1xuICAgIGNvbnN0IGhhbmRsZXJEYXRhID0ge1xuICAgICAgY29sdW1uLFxuICAgICAgZXJyb3IsXG4gICAgICBsaW5lLFxuICAgICAgbXNnLFxuICAgICAgdXJsLFxuICAgIH07XG4gICAgaGFuZGxlcnMudHJpZ2dlckhhbmRsZXJzKCdlcnJvcicsIGhhbmRsZXJEYXRhKTtcblxuICAgIGlmIChfb2xkT25FcnJvckhhbmRsZXIgJiYgIV9vbGRPbkVycm9ySGFuZGxlci5fX1NFTlRSWV9MT0FERVJfXykge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1yZXN0LXBhcmFtc1xuICAgICAgcmV0dXJuIF9vbGRPbkVycm9ySGFuZGxlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIH1cblxuICAgIHJldHVybiBmYWxzZTtcbiAgfTtcblxuICB3b3JsZHdpZGUuR0xPQkFMX09CSi5vbmVycm9yLl9fU0VOVFJZX0lOU1RSVU1FTlRFRF9fID0gdHJ1ZTtcbn1cblxuZXhwb3J0cy5hZGRHbG9iYWxFcnJvckluc3RydW1lbnRhdGlvbkhhbmRsZXIgPSBhZGRHbG9iYWxFcnJvckluc3RydW1lbnRhdGlvbkhhbmRsZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nbG9iYWxFcnJvci5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/globalError.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/globalUnhandledRejection.js":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/globalUnhandledRejection.js ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst worldwide = __webpack_require__(/*! ../worldwide.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/worldwide.js\");\nconst handlers = __webpack_require__(/*! ./handlers.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/handlers.js\");\n\nlet _oldOnUnhandledRejectionHandler = null;\n\n/**\n * Add an instrumentation handler for when an unhandled promise rejection is captured.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addGlobalUnhandledRejectionInstrumentationHandler(\n  handler,\n) {\n  const type = 'unhandledrejection';\n  handlers.addHandler(type, handler);\n  handlers.maybeInstrument(type, instrumentUnhandledRejection);\n}\n\nfunction instrumentUnhandledRejection() {\n  _oldOnUnhandledRejectionHandler = worldwide.GLOBAL_OBJ.onunhandledrejection;\n\n  worldwide.GLOBAL_OBJ.onunhandledrejection = function (e) {\n    const handlerData = e;\n    handlers.triggerHandlers('unhandledrejection', handlerData);\n\n    if (_oldOnUnhandledRejectionHandler && !_oldOnUnhandledRejectionHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n\n  worldwide.GLOBAL_OBJ.onunhandledrejection.__SENTRY_INSTRUMENTED__ = true;\n}\n\nexports.addGlobalUnhandledRejectionInstrumentationHandler = addGlobalUnhandledRejectionInstrumentationHandler;\n//# sourceMappingURL=globalUnhandledRejection.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2luc3RydW1lbnQvZ2xvYmFsVW5oYW5kbGVkUmVqZWN0aW9uLmpzIiwibWFwcGluZ3MiOiJBQUFBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQzs7QUFFN0Qsa0JBQWtCLG1CQUFPLENBQUMsMEhBQWlCO0FBQzNDLGlCQUFpQixtQkFBTyxDQUFDLGtJQUFlOztBQUV4Qzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEseURBQXlEO0FBQ3pEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLXByb2plY3QvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2luc3RydW1lbnQvZ2xvYmFsVW5oYW5kbGVkUmVqZWN0aW9uLmpzPzkzODIiXSwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxuY29uc3Qgd29ybGR3aWRlID0gcmVxdWlyZSgnLi4vd29ybGR3aWRlLmpzJyk7XG5jb25zdCBoYW5kbGVycyA9IHJlcXVpcmUoJy4vaGFuZGxlcnMuanMnKTtcblxubGV0IF9vbGRPblVuaGFuZGxlZFJlamVjdGlvbkhhbmRsZXIgPSBudWxsO1xuXG4vKipcbiAqIEFkZCBhbiBpbnN0cnVtZW50YXRpb24gaGFuZGxlciBmb3Igd2hlbiBhbiB1bmhhbmRsZWQgcHJvbWlzZSByZWplY3Rpb24gaXMgY2FwdHVyZWQuXG4gKlxuICogVXNlIGF0IHlvdXIgb3duIHJpc2ssIHRoaXMgbWlnaHQgYnJlYWsgd2l0aG91dCBjaGFuZ2Vsb2cgbm90aWNlLCBvbmx5IHVzZWQgaW50ZXJuYWxseS5cbiAqIEBoaWRkZW5cbiAqL1xuZnVuY3Rpb24gYWRkR2xvYmFsVW5oYW5kbGVkUmVqZWN0aW9uSW5zdHJ1bWVudGF0aW9uSGFuZGxlcihcbiAgaGFuZGxlcixcbikge1xuICBjb25zdCB0eXBlID0gJ3VuaGFuZGxlZHJlamVjdGlvbic7XG4gIGhhbmRsZXJzLmFkZEhhbmRsZXIodHlwZSwgaGFuZGxlcik7XG4gIGhhbmRsZXJzLm1heWJlSW5zdHJ1bWVudCh0eXBlLCBpbnN0cnVtZW50VW5oYW5kbGVkUmVqZWN0aW9uKTtcbn1cblxuZnVuY3Rpb24gaW5zdHJ1bWVudFVuaGFuZGxlZFJlamVjdGlvbigpIHtcbiAgX29sZE9uVW5oYW5kbGVkUmVqZWN0aW9uSGFuZGxlciA9IHdvcmxkd2lkZS5HTE9CQUxfT0JKLm9udW5oYW5kbGVkcmVqZWN0aW9uO1xuXG4gIHdvcmxkd2lkZS5HTE9CQUxfT0JKLm9udW5oYW5kbGVkcmVqZWN0aW9uID0gZnVuY3Rpb24gKGUpIHtcbiAgICBjb25zdCBoYW5kbGVyRGF0YSA9IGU7XG4gICAgaGFuZGxlcnMudHJpZ2dlckhhbmRsZXJzKCd1bmhhbmRsZWRyZWplY3Rpb24nLCBoYW5kbGVyRGF0YSk7XG5cbiAgICBpZiAoX29sZE9uVW5oYW5kbGVkUmVqZWN0aW9uSGFuZGxlciAmJiAhX29sZE9uVW5oYW5kbGVkUmVqZWN0aW9uSGFuZGxlci5fX1NFTlRSWV9MT0FERVJfXykge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1yZXN0LXBhcmFtc1xuICAgICAgcmV0dXJuIF9vbGRPblVuaGFuZGxlZFJlamVjdGlvbkhhbmRsZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfTtcblxuICB3b3JsZHdpZGUuR0xPQkFMX09CSi5vbnVuaGFuZGxlZHJlamVjdGlvbi5fX1NFTlRSWV9JTlNUUlVNRU5URURfXyA9IHRydWU7XG59XG5cbmV4cG9ydHMuYWRkR2xvYmFsVW5oYW5kbGVkUmVqZWN0aW9uSW5zdHJ1bWVudGF0aW9uSGFuZGxlciA9IGFkZEdsb2JhbFVuaGFuZGxlZFJlamVjdGlvbkluc3RydW1lbnRhdGlvbkhhbmRsZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nbG9iYWxVbmhhbmRsZWRSZWplY3Rpb24uanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/globalUnhandledRejection.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/handlers.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/handlers.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst debugBuild = __webpack_require__(/*! ../debug-build.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/debug-build.js\");\nconst logger = __webpack_require__(/*! ../logger.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/logger.js\");\nconst stacktrace = __webpack_require__(/*! ../stacktrace.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/stacktrace.js\");\n\n// We keep the handlers globally\nconst handlers = {};\nconst instrumented = {};\n\n/** Add a handler function. */\nfunction addHandler(type, handler) {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] ).push(handler);\n}\n\n/**\n * Reset all instrumentation handlers.\n * This can be used by tests to ensure we have a clean slate of instrumentation handlers.\n */\nfunction resetInstrumentationHandlers() {\n  Object.keys(handlers).forEach(key => {\n    handlers[key ] = undefined;\n  });\n}\n\n/** Maybe run an instrumentation function, unless it was already called. */\nfunction maybeInstrument(type, instrumentFn) {\n  if (!instrumented[type]) {\n    instrumentFn();\n    instrumented[type] = true;\n  }\n}\n\n/** Trigger handlers for a given instrumentation type. */\nfunction triggerHandlers(type, data) {\n  const typeHandlers = type && handlers[type];\n  if (!typeHandlers) {\n    return;\n  }\n\n  for (const handler of typeHandlers) {\n    try {\n      handler(data);\n    } catch (e) {\n      debugBuild.DEBUG_BUILD &&\n        logger.logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${stacktrace.getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\nexports.addHandler = addHandler;\nexports.maybeInstrument = maybeInstrument;\nexports.resetInstrumentationHandlers = resetInstrumentationHandlers;\nexports.triggerHandlers = triggerHandlers;\n//# sourceMappingURL=handlers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2luc3RydW1lbnQvaGFuZGxlcnMuanMiLCJtYXBwaW5ncyI6IkFBQUEsOENBQTZDLEVBQUUsYUFBYSxFQUFDOztBQUU3RCxtQkFBbUIsbUJBQU8sQ0FBQyw4SEFBbUI7QUFDOUMsZUFBZSxtQkFBTyxDQUFDLG9IQUFjO0FBQ3JDLG1CQUFtQixtQkFBTyxDQUFDLDRIQUFrQjs7QUFFN0M7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0Esb0VBQW9FLEtBQUssVUFBVSxvQ0FBb0M7QUFDdkg7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxrQkFBa0I7QUFDbEIsdUJBQXVCO0FBQ3ZCLG9DQUFvQztBQUNwQyx1QkFBdUI7QUFDdkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0Zm9saW8tcHJvamVjdC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2VudHJ5K3V0aWxzQDguMTcuMC9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9idWlsZC9janMvaW5zdHJ1bWVudC9oYW5kbGVycy5qcz8yMzQ4Il0sInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG5cbmNvbnN0IGRlYnVnQnVpbGQgPSByZXF1aXJlKCcuLi9kZWJ1Zy1idWlsZC5qcycpO1xuY29uc3QgbG9nZ2VyID0gcmVxdWlyZSgnLi4vbG9nZ2VyLmpzJyk7XG5jb25zdCBzdGFja3RyYWNlID0gcmVxdWlyZSgnLi4vc3RhY2t0cmFjZS5qcycpO1xuXG4vLyBXZSBrZWVwIHRoZSBoYW5kbGVycyBnbG9iYWxseVxuY29uc3QgaGFuZGxlcnMgPSB7fTtcbmNvbnN0IGluc3RydW1lbnRlZCA9IHt9O1xuXG4vKiogQWRkIGEgaGFuZGxlciBmdW5jdGlvbi4gKi9cbmZ1bmN0aW9uIGFkZEhhbmRsZXIodHlwZSwgaGFuZGxlcikge1xuICBoYW5kbGVyc1t0eXBlXSA9IGhhbmRsZXJzW3R5cGVdIHx8IFtdO1xuICAoaGFuZGxlcnNbdHlwZV0gKS5wdXNoKGhhbmRsZXIpO1xufVxuXG4vKipcbiAqIFJlc2V0IGFsbCBpbnN0cnVtZW50YXRpb24gaGFuZGxlcnMuXG4gKiBUaGlzIGNhbiBiZSB1c2VkIGJ5IHRlc3RzIHRvIGVuc3VyZSB3ZSBoYXZlIGEgY2xlYW4gc2xhdGUgb2YgaW5zdHJ1bWVudGF0aW9uIGhhbmRsZXJzLlxuICovXG5mdW5jdGlvbiByZXNldEluc3RydW1lbnRhdGlvbkhhbmRsZXJzKCkge1xuICBPYmplY3Qua2V5cyhoYW5kbGVycykuZm9yRWFjaChrZXkgPT4ge1xuICAgIGhhbmRsZXJzW2tleSBdID0gdW5kZWZpbmVkO1xuICB9KTtcbn1cblxuLyoqIE1heWJlIHJ1biBhbiBpbnN0cnVtZW50YXRpb24gZnVuY3Rpb24sIHVubGVzcyBpdCB3YXMgYWxyZWFkeSBjYWxsZWQuICovXG5mdW5jdGlvbiBtYXliZUluc3RydW1lbnQodHlwZSwgaW5zdHJ1bWVudEZuKSB7XG4gIGlmICghaW5zdHJ1bWVudGVkW3R5cGVdKSB7XG4gICAgaW5zdHJ1bWVudEZuKCk7XG4gICAgaW5zdHJ1bWVudGVkW3R5cGVdID0gdHJ1ZTtcbiAgfVxufVxuXG4vKiogVHJpZ2dlciBoYW5kbGVycyBmb3IgYSBnaXZlbiBpbnN0cnVtZW50YXRpb24gdHlwZS4gKi9cbmZ1bmN0aW9uIHRyaWdnZXJIYW5kbGVycyh0eXBlLCBkYXRhKSB7XG4gIGNvbnN0IHR5cGVIYW5kbGVycyA9IHR5cGUgJiYgaGFuZGxlcnNbdHlwZV07XG4gIGlmICghdHlwZUhhbmRsZXJzKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgZm9yIChjb25zdCBoYW5kbGVyIG9mIHR5cGVIYW5kbGVycykge1xuICAgIHRyeSB7XG4gICAgICBoYW5kbGVyKGRhdGEpO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGRlYnVnQnVpbGQuREVCVUdfQlVJTEQgJiZcbiAgICAgICAgbG9nZ2VyLmxvZ2dlci5lcnJvcihcbiAgICAgICAgICBgRXJyb3Igd2hpbGUgdHJpZ2dlcmluZyBpbnN0cnVtZW50YXRpb24gaGFuZGxlci5cXG5UeXBlOiAke3R5cGV9XFxuTmFtZTogJHtzdGFja3RyYWNlLmdldEZ1bmN0aW9uTmFtZShoYW5kbGVyKX1cXG5FcnJvcjpgLFxuICAgICAgICAgIGUsXG4gICAgICAgICk7XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydHMuYWRkSGFuZGxlciA9IGFkZEhhbmRsZXI7XG5leHBvcnRzLm1heWJlSW5zdHJ1bWVudCA9IG1heWJlSW5zdHJ1bWVudDtcbmV4cG9ydHMucmVzZXRJbnN0cnVtZW50YXRpb25IYW5kbGVycyA9IHJlc2V0SW5zdHJ1bWVudGF0aW9uSGFuZGxlcnM7XG5leHBvcnRzLnRyaWdnZXJIYW5kbGVycyA9IHRyaWdnZXJIYW5kbGVycztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhhbmRsZXJzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/handlers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/is.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/is.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nconst objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isError(wat) {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n/**\n * Checks whether given value is an instance of the given built-in class.\n *\n * @param wat The value to be checked\n * @param className\n * @returns A boolean representing the result.\n */\nfunction isBuiltin(wat, className) {\n  return objectToString.call(wat) === `[object ${className}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isErrorEvent(wat) {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMError(wat) {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMException(wat) {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isString(wat) {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given string is parameterized\n * {@link isParameterizedString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isParameterizedString(wat) {\n  return (\n    typeof wat === 'object' &&\n    wat !== null &&\n    '__sentry_template_string__' in wat &&\n    '__sentry_template_values__' in wat\n  );\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPrimitive(wat) {\n  return wat === null || isParameterizedString(wat) || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal, or a class instance.\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPlainObject(wat) {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isEvent(wat) {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isElement(wat) {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isRegExp(wat) {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nfunction isThenable(wat) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isSyntheticEvent(wat) {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nfunction isInstanceOf(wat, base) {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n\n/**\n * Checks whether given value's type is a Vue ViewModel.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isVueViewModel(wat) {\n  // Not using Object.prototype.toString because in Vue 3 it would read the instance's Symbol(Symbol.toStringTag) property.\n  return !!(typeof wat === 'object' && wat !== null && ((wat ).__isVue || (wat )._isVue));\n}\n\nexports.isDOMError = isDOMError;\nexports.isDOMException = isDOMException;\nexports.isElement = isElement;\nexports.isError = isError;\nexports.isErrorEvent = isErrorEvent;\nexports.isEvent = isEvent;\nexports.isInstanceOf = isInstanceOf;\nexports.isParameterizedString = isParameterizedString;\nexports.isPlainObject = isPlainObject;\nexports.isPrimitive = isPrimitive;\nexports.isRegExp = isRegExp;\nexports.isString = isString;\nexports.isSyntheticEvent = isSyntheticEvent;\nexports.isThenable = isThenable;\nexports.isVueViewModel = isVueViewModel;\n//# sourceMappingURL=is.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/is.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/isBrowser.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/isBrowser.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst node = __webpack_require__(/*! ./node.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/node.js\");\nconst worldwide = __webpack_require__(/*! ./worldwide.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/worldwide.js\");\n\n/**\n * Returns true if we are in the browser.\n */\nfunction isBrowser() {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof window !== 'undefined' && (!node.isNodeEnv() || isElectronNodeRenderer());\n}\n\n// Electron renderers with nodeIntegration enabled are detected as Node.js so we specifically test for them\nfunction isElectronNodeRenderer() {\n  return (\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n    (worldwide.GLOBAL_OBJ ).process !== undefined && ((worldwide.GLOBAL_OBJ ).process ).type === 'renderer'\n  );\n}\n\nexports.isBrowser = isBrowser;\n//# sourceMappingURL=isBrowser.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2lzQnJvd3Nlci5qcyIsIm1hcHBpbmdzIjoiQUFBQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7O0FBRTdELGFBQWEsbUJBQU8sQ0FBQywrR0FBVztBQUNoQyxrQkFBa0IsbUJBQU8sQ0FBQyx5SEFBZ0I7O0FBRTFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGlCQUFpQjtBQUNqQiIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9pc0Jyb3dzZXIuanM/ZjQyMCJdLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG5jb25zdCBub2RlID0gcmVxdWlyZSgnLi9ub2RlLmpzJyk7XG5jb25zdCB3b3JsZHdpZGUgPSByZXF1aXJlKCcuL3dvcmxkd2lkZS5qcycpO1xuXG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiB3ZSBhcmUgaW4gdGhlIGJyb3dzZXIuXG4gKi9cbmZ1bmN0aW9uIGlzQnJvd3NlcigpIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXJlc3RyaWN0ZWQtZ2xvYmFsc1xuICByZXR1cm4gdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgKCFub2RlLmlzTm9kZUVudigpIHx8IGlzRWxlY3Ryb25Ob2RlUmVuZGVyZXIoKSk7XG59XG5cbi8vIEVsZWN0cm9uIHJlbmRlcmVycyB3aXRoIG5vZGVJbnRlZ3JhdGlvbiBlbmFibGVkIGFyZSBkZXRlY3RlZCBhcyBOb2RlLmpzIHNvIHdlIHNwZWNpZmljYWxseSB0ZXN0IGZvciB0aGVtXG5mdW5jdGlvbiBpc0VsZWN0cm9uTm9kZVJlbmRlcmVyKCkge1xuICByZXR1cm4gKFxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLW1lbWJlci1hY2Nlc3MsIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbiAgICAod29ybGR3aWRlLkdMT0JBTF9PQkogKS5wcm9jZXNzICE9PSB1bmRlZmluZWQgJiYgKCh3b3JsZHdpZGUuR0xPQkFMX09CSiApLnByb2Nlc3MgKS50eXBlID09PSAncmVuZGVyZXInXG4gICk7XG59XG5cbmV4cG9ydHMuaXNCcm93c2VyID0gaXNCcm93c2VyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aXNCcm93c2VyLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/isBrowser.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/logger.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/logger.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst debugBuild = __webpack_require__(/*! ./debug-build.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/debug-build.js\");\nconst worldwide = __webpack_require__(/*! ./worldwide.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/worldwide.js\");\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\nconst CONSOLE_LEVELS = [\n  'debug',\n  'info',\n  'warn',\n  'error',\n  'log',\n  'assert',\n  'trace',\n] ;\n\n/** This may be mutated by the console instrumentation. */\nconst originalConsoleMethods\n\n = {};\n\n/** JSDoc */\n\n/**\n * Temporarily disable sentry console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nfunction consoleSandbox(callback) {\n  if (!('console' in worldwide.GLOBAL_OBJ)) {\n    return callback();\n  }\n\n  const console = worldwide.GLOBAL_OBJ.console ;\n  const wrappedFuncs = {};\n\n  const wrappedLevels = Object.keys(originalConsoleMethods) ;\n\n  // Restore all wrapped console methods\n  wrappedLevels.forEach(level => {\n    const originalConsoleMethod = originalConsoleMethods[level] ;\n    wrappedFuncs[level] = console[level] ;\n    console[level] = originalConsoleMethod;\n  });\n\n  try {\n    return callback();\n  } finally {\n    // Revert restoration to wrapped state\n    wrappedLevels.forEach(level => {\n      console[level] = wrappedFuncs[level] ;\n    });\n  }\n}\n\nfunction makeLogger() {\n  let enabled = false;\n  const logger = {\n    enable: () => {\n      enabled = true;\n    },\n    disable: () => {\n      enabled = false;\n    },\n    isEnabled: () => enabled,\n  };\n\n  if (debugBuild.DEBUG_BUILD) {\n    CONSOLE_LEVELS.forEach(name => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      logger[name] = (...args) => {\n        if (enabled) {\n          consoleSandbox(() => {\n            worldwide.GLOBAL_OBJ.console[name](`${PREFIX}[${name}]:`, ...args);\n          });\n        }\n      };\n    });\n  } else {\n    CONSOLE_LEVELS.forEach(name => {\n      logger[name] = () => undefined;\n    });\n  }\n\n  return logger ;\n}\n\nconst logger = makeLogger();\n\nexports.CONSOLE_LEVELS = CONSOLE_LEVELS;\nexports.consoleSandbox = consoleSandbox;\nexports.logger = logger;\nexports.originalConsoleMethods = originalConsoleMethods;\n//# sourceMappingURL=logger.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2xvZ2dlci5qcyIsIm1hcHBpbmdzIjoiQUFBQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7O0FBRTdELG1CQUFtQixtQkFBTyxDQUFDLDZIQUFrQjtBQUM3QyxrQkFBa0IsbUJBQU8sQ0FBQyx5SEFBZ0I7O0FBRTFDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRCxPQUFPLEdBQUcsS0FBSztBQUNqRSxXQUFXO0FBQ1g7QUFDQTtBQUNBLEtBQUs7QUFDTCxJQUFJO0FBQ0o7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBOztBQUVBOztBQUVBLHNCQUFzQjtBQUN0QixzQkFBc0I7QUFDdEIsY0FBYztBQUNkLDhCQUE4QjtBQUM5QiIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9sb2dnZXIuanM/MmU5ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG5jb25zdCBkZWJ1Z0J1aWxkID0gcmVxdWlyZSgnLi9kZWJ1Zy1idWlsZC5qcycpO1xuY29uc3Qgd29ybGR3aWRlID0gcmVxdWlyZSgnLi93b3JsZHdpZGUuanMnKTtcblxuLyoqIFByZWZpeCBmb3IgbG9nZ2luZyBzdHJpbmdzICovXG5jb25zdCBQUkVGSVggPSAnU2VudHJ5IExvZ2dlciAnO1xuXG5jb25zdCBDT05TT0xFX0xFVkVMUyA9IFtcbiAgJ2RlYnVnJyxcbiAgJ2luZm8nLFxuICAnd2FybicsXG4gICdlcnJvcicsXG4gICdsb2cnLFxuICAnYXNzZXJ0JyxcbiAgJ3RyYWNlJyxcbl0gO1xuXG4vKiogVGhpcyBtYXkgYmUgbXV0YXRlZCBieSB0aGUgY29uc29sZSBpbnN0cnVtZW50YXRpb24uICovXG5jb25zdCBvcmlnaW5hbENvbnNvbGVNZXRob2RzXG5cbiA9IHt9O1xuXG4vKiogSlNEb2MgKi9cblxuLyoqXG4gKiBUZW1wb3JhcmlseSBkaXNhYmxlIHNlbnRyeSBjb25zb2xlIGluc3RydW1lbnRhdGlvbnMuXG4gKlxuICogQHBhcmFtIGNhbGxiYWNrIFRoZSBmdW5jdGlvbiB0byBydW4gYWdhaW5zdCB0aGUgb3JpZ2luYWwgYGNvbnNvbGVgIG1lc3NhZ2VzXG4gKiBAcmV0dXJucyBUaGUgcmVzdWx0cyBvZiB0aGUgY2FsbGJhY2tcbiAqL1xuZnVuY3Rpb24gY29uc29sZVNhbmRib3goY2FsbGJhY2spIHtcbiAgaWYgKCEoJ2NvbnNvbGUnIGluIHdvcmxkd2lkZS5HTE9CQUxfT0JKKSkge1xuICAgIHJldHVybiBjYWxsYmFjaygpO1xuICB9XG5cbiAgY29uc3QgY29uc29sZSA9IHdvcmxkd2lkZS5HTE9CQUxfT0JKLmNvbnNvbGUgO1xuICBjb25zdCB3cmFwcGVkRnVuY3MgPSB7fTtcblxuICBjb25zdCB3cmFwcGVkTGV2ZWxzID0gT2JqZWN0LmtleXMob3JpZ2luYWxDb25zb2xlTWV0aG9kcykgO1xuXG4gIC8vIFJlc3RvcmUgYWxsIHdyYXBwZWQgY29uc29sZSBtZXRob2RzXG4gIHdyYXBwZWRMZXZlbHMuZm9yRWFjaChsZXZlbCA9PiB7XG4gICAgY29uc3Qgb3JpZ2luYWxDb25zb2xlTWV0aG9kID0gb3JpZ2luYWxDb25zb2xlTWV0aG9kc1tsZXZlbF0gO1xuICAgIHdyYXBwZWRGdW5jc1tsZXZlbF0gPSBjb25zb2xlW2xldmVsXSA7XG4gICAgY29uc29sZVtsZXZlbF0gPSBvcmlnaW5hbENvbnNvbGVNZXRob2Q7XG4gIH0pO1xuXG4gIHRyeSB7XG4gICAgcmV0dXJuIGNhbGxiYWNrKCk7XG4gIH0gZmluYWxseSB7XG4gICAgLy8gUmV2ZXJ0IHJlc3RvcmF0aW9uIHRvIHdyYXBwZWQgc3RhdGVcbiAgICB3cmFwcGVkTGV2ZWxzLmZvckVhY2gobGV2ZWwgPT4ge1xuICAgICAgY29uc29sZVtsZXZlbF0gPSB3cmFwcGVkRnVuY3NbbGV2ZWxdIDtcbiAgICB9KTtcbiAgfVxufVxuXG5mdW5jdGlvbiBtYWtlTG9nZ2VyKCkge1xuICBsZXQgZW5hYmxlZCA9IGZhbHNlO1xuICBjb25zdCBsb2dnZXIgPSB7XG4gICAgZW5hYmxlOiAoKSA9PiB7XG4gICAgICBlbmFibGVkID0gdHJ1ZTtcbiAgICB9LFxuICAgIGRpc2FibGU6ICgpID0+IHtcbiAgICAgIGVuYWJsZWQgPSBmYWxzZTtcbiAgICB9LFxuICAgIGlzRW5hYmxlZDogKCkgPT4gZW5hYmxlZCxcbiAgfTtcblxuICBpZiAoZGVidWdCdWlsZC5ERUJVR19CVUlMRCkge1xuICAgIENPTlNPTEVfTEVWRUxTLmZvckVhY2gobmFtZSA9PiB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuICAgICAgbG9nZ2VyW25hbWVdID0gKC4uLmFyZ3MpID0+IHtcbiAgICAgICAgaWYgKGVuYWJsZWQpIHtcbiAgICAgICAgICBjb25zb2xlU2FuZGJveCgoKSA9PiB7XG4gICAgICAgICAgICB3b3JsZHdpZGUuR0xPQkFMX09CSi5jb25zb2xlW25hbWVdKGAke1BSRUZJWH1bJHtuYW1lfV06YCwgLi4uYXJncyk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgQ09OU09MRV9MRVZFTFMuZm9yRWFjaChuYW1lID0+IHtcbiAgICAgIGxvZ2dlcltuYW1lXSA9ICgpID0+IHVuZGVmaW5lZDtcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiBsb2dnZXIgO1xufVxuXG5jb25zdCBsb2dnZXIgPSBtYWtlTG9nZ2VyKCk7XG5cbmV4cG9ydHMuQ09OU09MRV9MRVZFTFMgPSBDT05TT0xFX0xFVkVMUztcbmV4cG9ydHMuY29uc29sZVNhbmRib3ggPSBjb25zb2xlU2FuZGJveDtcbmV4cG9ydHMubG9nZ2VyID0gbG9nZ2VyO1xuZXhwb3J0cy5vcmlnaW5hbENvbnNvbGVNZXRob2RzID0gb3JpZ2luYWxDb25zb2xlTWV0aG9kcztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxvZ2dlci5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/logger.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/lru.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/lru.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n/** A simple Least Recently Used map */\nclass LRUMap {\n\n   constructor(  _maxSize) {this._maxSize = _maxSize;\n    this._cache = new Map();\n  }\n\n  /** Get the current size of the cache */\n   get size() {\n    return this._cache.size;\n  }\n\n  /** Get an entry or undefined if it was not in the cache. Re-inserts to update the recently used order */\n   get(key) {\n    const value = this._cache.get(key);\n    if (value === undefined) {\n      return undefined;\n    }\n    // Remove and re-insert to update the order\n    this._cache.delete(key);\n    this._cache.set(key, value);\n    return value;\n  }\n\n  /** Insert an entry and evict an older entry if we've reached maxSize */\n   set(key, value) {\n    if (this._cache.size >= this._maxSize) {\n      // keys() returns an iterator in insertion order so keys().next() gives us the oldest key\n      this._cache.delete(this._cache.keys().next().value);\n    }\n    this._cache.set(key, value);\n  }\n\n  /** Remove an entry and return the entry if it was in the cache */\n   remove(key) {\n    const value = this._cache.get(key);\n    if (value) {\n      this._cache.delete(key);\n    }\n    return value;\n  }\n\n  /** Clear all entries */\n   clear() {\n    this._cache.clear();\n  }\n\n  /** Get all the keys */\n   keys() {\n    return Array.from(this._cache.keys());\n  }\n\n  /** Get all the values */\n   values() {\n    const values = [];\n    this._cache.forEach(value => values.push(value));\n    return values;\n  }\n}\n\nexports.LRUMap = LRUMap;\n//# sourceMappingURL=lru.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2xydS5qcyIsIm1hcHBpbmdzIjoiQUFBQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7O0FBRTdEO0FBQ0E7O0FBRUEsNEJBQTRCO0FBQzVCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsY0FBYztBQUNkIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLXByb2plY3QvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2xydS5qcz9iOGExIl0sInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG5cbi8qKiBBIHNpbXBsZSBMZWFzdCBSZWNlbnRseSBVc2VkIG1hcCAqL1xuY2xhc3MgTFJVTWFwIHtcblxuICAgY29uc3RydWN0b3IoICBfbWF4U2l6ZSkge3RoaXMuX21heFNpemUgPSBfbWF4U2l6ZTtcbiAgICB0aGlzLl9jYWNoZSA9IG5ldyBNYXAoKTtcbiAgfVxuXG4gIC8qKiBHZXQgdGhlIGN1cnJlbnQgc2l6ZSBvZiB0aGUgY2FjaGUgKi9cbiAgIGdldCBzaXplKCkge1xuICAgIHJldHVybiB0aGlzLl9jYWNoZS5zaXplO1xuICB9XG5cbiAgLyoqIEdldCBhbiBlbnRyeSBvciB1bmRlZmluZWQgaWYgaXQgd2FzIG5vdCBpbiB0aGUgY2FjaGUuIFJlLWluc2VydHMgdG8gdXBkYXRlIHRoZSByZWNlbnRseSB1c2VkIG9yZGVyICovXG4gICBnZXQoa2V5KSB7XG4gICAgY29uc3QgdmFsdWUgPSB0aGlzLl9jYWNoZS5nZXQoa2V5KTtcbiAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgLy8gUmVtb3ZlIGFuZCByZS1pbnNlcnQgdG8gdXBkYXRlIHRoZSBvcmRlclxuICAgIHRoaXMuX2NhY2hlLmRlbGV0ZShrZXkpO1xuICAgIHRoaXMuX2NhY2hlLnNldChrZXksIHZhbHVlKTtcbiAgICByZXR1cm4gdmFsdWU7XG4gIH1cblxuICAvKiogSW5zZXJ0IGFuIGVudHJ5IGFuZCBldmljdCBhbiBvbGRlciBlbnRyeSBpZiB3ZSd2ZSByZWFjaGVkIG1heFNpemUgKi9cbiAgIHNldChrZXksIHZhbHVlKSB7XG4gICAgaWYgKHRoaXMuX2NhY2hlLnNpemUgPj0gdGhpcy5fbWF4U2l6ZSkge1xuICAgICAgLy8ga2V5cygpIHJldHVybnMgYW4gaXRlcmF0b3IgaW4gaW5zZXJ0aW9uIG9yZGVyIHNvIGtleXMoKS5uZXh0KCkgZ2l2ZXMgdXMgdGhlIG9sZGVzdCBrZXlcbiAgICAgIHRoaXMuX2NhY2hlLmRlbGV0ZSh0aGlzLl9jYWNoZS5rZXlzKCkubmV4dCgpLnZhbHVlKTtcbiAgICB9XG4gICAgdGhpcy5fY2FjaGUuc2V0KGtleSwgdmFsdWUpO1xuICB9XG5cbiAgLyoqIFJlbW92ZSBhbiBlbnRyeSBhbmQgcmV0dXJuIHRoZSBlbnRyeSBpZiBpdCB3YXMgaW4gdGhlIGNhY2hlICovXG4gICByZW1vdmUoa2V5KSB7XG4gICAgY29uc3QgdmFsdWUgPSB0aGlzLl9jYWNoZS5nZXQoa2V5KTtcbiAgICBpZiAodmFsdWUpIHtcbiAgICAgIHRoaXMuX2NhY2hlLmRlbGV0ZShrZXkpO1xuICAgIH1cbiAgICByZXR1cm4gdmFsdWU7XG4gIH1cblxuICAvKiogQ2xlYXIgYWxsIGVudHJpZXMgKi9cbiAgIGNsZWFyKCkge1xuICAgIHRoaXMuX2NhY2hlLmNsZWFyKCk7XG4gIH1cblxuICAvKiogR2V0IGFsbCB0aGUga2V5cyAqL1xuICAga2V5cygpIHtcbiAgICByZXR1cm4gQXJyYXkuZnJvbSh0aGlzLl9jYWNoZS5rZXlzKCkpO1xuICB9XG5cbiAgLyoqIEdldCBhbGwgdGhlIHZhbHVlcyAqL1xuICAgdmFsdWVzKCkge1xuICAgIGNvbnN0IHZhbHVlcyA9IFtdO1xuICAgIHRoaXMuX2NhY2hlLmZvckVhY2godmFsdWUgPT4gdmFsdWVzLnB1c2godmFsdWUpKTtcbiAgICByZXR1cm4gdmFsdWVzO1xuICB9XG59XG5cbmV4cG9ydHMuTFJVTWFwID0gTFJVTWFwO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bHJ1LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/lru.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/memo.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/memo.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * Helper to decycle json objects\n */\nfunction memoBuilder() {\n  const hasWeakSet = typeof WeakSet === 'function';\n  const inner = hasWeakSet ? new WeakSet() : [];\n  function memoize(obj) {\n    if (hasWeakSet) {\n      if (inner.has(obj)) {\n        return true;\n      }\n      inner.add(obj);\n      return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let i = 0; i < inner.length; i++) {\n      const value = inner[i];\n      if (value === obj) {\n        return true;\n      }\n    }\n    inner.push(obj);\n    return false;\n  }\n\n  function unmemoize(obj) {\n    if (hasWeakSet) {\n      inner.delete(obj);\n    } else {\n      for (let i = 0; i < inner.length; i++) {\n        if (inner[i] === obj) {\n          inner.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n  return [memoize, unmemoize];\n}\n\nexports.memoBuilder = memoBuilder;\n//# sourceMappingURL=memo.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL21lbW8uanMiLCJtYXBwaW5ncyI6IkFBQUEsOENBQTZDLEVBQUUsYUFBYSxFQUFDOztBQUU3RDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixrQkFBa0I7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ04sc0JBQXNCLGtCQUFrQjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsbUJBQW1CO0FBQ25CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLXByb2plY3QvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL21lbW8uanM/MjgwNiJdLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG4vKiBlc2xpbnQtZGlzYWJsZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLW1lbWJlci1hY2Nlc3MgKi9cbi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnkgKi9cblxuLyoqXG4gKiBIZWxwZXIgdG8gZGVjeWNsZSBqc29uIG9iamVjdHNcbiAqL1xuZnVuY3Rpb24gbWVtb0J1aWxkZXIoKSB7XG4gIGNvbnN0IGhhc1dlYWtTZXQgPSB0eXBlb2YgV2Vha1NldCA9PT0gJ2Z1bmN0aW9uJztcbiAgY29uc3QgaW5uZXIgPSBoYXNXZWFrU2V0ID8gbmV3IFdlYWtTZXQoKSA6IFtdO1xuICBmdW5jdGlvbiBtZW1vaXplKG9iaikge1xuICAgIGlmIChoYXNXZWFrU2V0KSB7XG4gICAgICBpZiAoaW5uZXIuaGFzKG9iaikpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgICBpbm5lci5hZGQob2JqKTtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9wcmVmZXItZm9yLW9mXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBpbm5lci5sZW5ndGg7IGkrKykge1xuICAgICAgY29uc3QgdmFsdWUgPSBpbm5lcltpXTtcbiAgICAgIGlmICh2YWx1ZSA9PT0gb2JqKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuICAgIH1cbiAgICBpbm5lci5wdXNoKG9iaik7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgZnVuY3Rpb24gdW5tZW1vaXplKG9iaikge1xuICAgIGlmIChoYXNXZWFrU2V0KSB7XG4gICAgICBpbm5lci5kZWxldGUob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBpbm5lci5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAoaW5uZXJbaV0gPT09IG9iaikge1xuICAgICAgICAgIGlubmVyLnNwbGljZShpLCAxKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuICByZXR1cm4gW21lbW9pemUsIHVubWVtb2l6ZV07XG59XG5cbmV4cG9ydHMubWVtb0J1aWxkZXIgPSBtZW1vQnVpbGRlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1lbW8uanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/memo.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/misc.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/misc.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst object = __webpack_require__(/*! ./object.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/object.js\");\nconst string = __webpack_require__(/*! ./string.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/string.js\");\nconst worldwide = __webpack_require__(/*! ./worldwide.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/worldwide.js\");\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nfunction uuid4() {\n  const gbl = worldwide.GLOBAL_OBJ ;\n  const crypto = gbl.crypto || gbl.msCrypto;\n\n  let getRandomByte = () => Math.random() * 16;\n  try {\n    if (crypto && crypto.randomUUID) {\n      return crypto.randomUUID().replace(/-/g, '');\n    }\n    if (crypto && crypto.getRandomValues) {\n      getRandomByte = () => {\n        // crypto.getRandomValues might return undefined instead of the typed array\n        // in old Chromium versions (e.g. 23.0.1235.0 (151422))\n        // However, `typedArray` is still filled in-place.\n        // @see https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues#typedarray\n        const typedArray = new Uint8Array(1);\n        crypto.getRandomValues(typedArray);\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return typedArray[0];\n      };\n    }\n  } catch (_) {\n    // some runtimes can crash invoking crypto\n    // https://github.com/getsentry/sentry-javascript/issues/8935\n  }\n\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  // Concatenating the following numbers as strings results in '10000000100040008000100000000000'\n  return (([1e7] ) + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, c =>\n    // eslint-disable-next-line no-bitwise\n    ((c ) ^ ((getRandomByte() & 15) >> ((c ) / 4))).toString(16),\n  );\n}\n\nfunction getFirstException(event) {\n  return event.exception && event.exception.values ? event.exception.values[0] : undefined;\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nfunction getEventDescription(event) {\n  const { message, event_id: eventId } = event;\n  if (message) {\n    return message;\n  }\n\n  const firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return `${firstException.type}: ${firstException.value}`;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nfunction addExceptionTypeValue(event, value, type) {\n  const exception = (event.exception = event.exception || {});\n  const values = (exception.values = exception.values || []);\n  const firstException = (values[0] = values[0] || {});\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nfunction addExceptionMechanism(event, newMechanism) {\n  const firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n\n  const defaultMechanism = { type: 'generic', handled: true };\n  const currentMechanism = firstException.mechanism;\n  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\n\n  if (newMechanism && 'data' in newMechanism) {\n    const mergedData = { ...(currentMechanism && currentMechanism.data), ...newMechanism.data };\n    firstException.mechanism.data = mergedData;\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\n\nfunction _parseInt(input) {\n  return parseInt(input || '', 10);\n}\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nfunction parseSemver(input) {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = _parseInt(match[1]);\n  const minor = _parseInt(match[2]);\n  const patch = _parseInt(match[3]);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nfunction addContextToFrame(lines, frame, linesOfContext = 5) {\n  // When there is no line number in the frame, attaching context is nonsensical and will even break grouping\n  if (frame.lineno === undefined) {\n    return;\n  }\n\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines - 1, frame.lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line) => string.snipLine(line, 0));\n\n  // We guard here to ensure this is not larger than the existing number of lines\n  const lineIndex = Math.min(maxLines - 1, sourceLine);\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  frame.context_line = string.snipLine(lines[lineIndex], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line) => string.snipLine(line, 0));\n}\n\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nfunction checkOrSetAlreadyCaught(exception) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (exception && (exception ).__sentry_captured__) {\n    return true;\n  }\n\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    object.addNonEnumerableProperty(exception , '__sentry_captured__', true);\n  } catch (err) {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n\n  return false;\n}\n\n/**\n * Checks whether the given input is already an array, and if it isn't, wraps it in one.\n *\n * @param maybeArray Input to turn into an array, if necessary\n * @returns The input, if already an array, or an array with the input as the only element, if not\n */\nfunction arrayify(maybeArray) {\n  return Array.isArray(maybeArray) ? maybeArray : [maybeArray];\n}\n\nexports.addContextToFrame = addContextToFrame;\nexports.addExceptionMechanism = addExceptionMechanism;\nexports.addExceptionTypeValue = addExceptionTypeValue;\nexports.arrayify = arrayify;\nexports.checkOrSetAlreadyCaught = checkOrSetAlreadyCaught;\nexports.getEventDescription = getEventDescription;\nexports.parseSemver = parseSemver;\nexports.uuid4 = uuid4;\n//# sourceMappingURL=misc.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/misc.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/node-stack-trace.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/node-stack-trace.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst stacktrace = __webpack_require__(/*! ./stacktrace.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/stacktrace.js\");\n\n/**\n * Does this filename look like it's part of the app code?\n */\nfunction filenameIsInApp(filename, isNative = false) {\n  const isInternal =\n    isNative ||\n    (filename &&\n      // It's not internal if it's an absolute linux path\n      !filename.startsWith('/') &&\n      // It's not internal if it's an absolute windows path\n      !filename.match(/^[A-Z]:/) &&\n      // It's not internal if the path is starting with a dot\n      !filename.startsWith('.') &&\n      // It's not internal if the frame has a protocol. In node, this is usually the case if the file got pre-processed with a bundler like webpack\n      !filename.match(/^[a-zA-Z]([a-zA-Z0-9.\\-+])*:\\/\\//)); // Schema from: https://stackoverflow.com/a/3641782\n\n  // in_app is all that's not an internal Node function or a module within node_modules\n  // note that isNative appears to return true even for node core libraries\n  // see https://github.com/getsentry/raven-node/issues/176\n\n  return !isInternal && filename !== undefined && !filename.includes('node_modules/');\n}\n\n/** Node Stack line parser */\nfunction node(getModule) {\n  const FILENAME_MATCH = /^\\s*[-]{4,}$/;\n  const FULL_MATCH = /at (?:async )?(?:(.+?)\\s+\\()?(?:(.+):(\\d+):(\\d+)?|([^)]+))\\)?/;\n\n  // eslint-disable-next-line complexity\n  return (line) => {\n    const lineMatch = line.match(FULL_MATCH);\n\n    if (lineMatch) {\n      let object;\n      let method;\n      let functionName;\n      let typeName;\n      let methodName;\n\n      if (lineMatch[1]) {\n        functionName = lineMatch[1];\n\n        let methodStart = functionName.lastIndexOf('.');\n        if (functionName[methodStart - 1] === '.') {\n          methodStart--;\n        }\n\n        if (methodStart > 0) {\n          object = functionName.slice(0, methodStart);\n          method = functionName.slice(methodStart + 1);\n          const objectEnd = object.indexOf('.Module');\n          if (objectEnd > 0) {\n            functionName = functionName.slice(objectEnd + 1);\n            object = object.slice(0, objectEnd);\n          }\n        }\n        typeName = undefined;\n      }\n\n      if (method) {\n        typeName = object;\n        methodName = method;\n      }\n\n      if (method === '<anonymous>') {\n        methodName = undefined;\n        functionName = undefined;\n      }\n\n      if (functionName === undefined) {\n        methodName = methodName || stacktrace.UNKNOWN_FUNCTION;\n        functionName = typeName ? `${typeName}.${methodName}` : methodName;\n      }\n\n      let filename = lineMatch[2] && lineMatch[2].startsWith('file://') ? lineMatch[2].slice(7) : lineMatch[2];\n      const isNative = lineMatch[5] === 'native';\n\n      // If it's a Windows path, trim the leading slash so that `/C:/foo` becomes `C:/foo`\n      if (filename && filename.match(/\\/[A-Z]:/)) {\n        filename = filename.slice(1);\n      }\n\n      if (!filename && lineMatch[5] && !isNative) {\n        filename = lineMatch[5];\n      }\n\n      return {\n        filename,\n        module: getModule ? getModule(filename) : undefined,\n        function: functionName,\n        lineno: _parseIntOrUndefined(lineMatch[3]),\n        colno: _parseIntOrUndefined(lineMatch[4]),\n        in_app: filenameIsInApp(filename || '', isNative),\n      };\n    }\n\n    if (line.match(FILENAME_MATCH)) {\n      return {\n        filename: line,\n      };\n    }\n\n    return undefined;\n  };\n}\n\n/**\n * Node.js stack line parser\n *\n * This is in @sentry/utils so it can be used from the Electron SDK in the browser for when `nodeIntegration == true`.\n * This allows it to be used without referencing or importing any node specific code which causes bundlers to complain\n */\nfunction nodeStackLineParser(getModule) {\n  return [90, node(getModule)];\n}\n\nfunction _parseIntOrUndefined(input) {\n  return parseInt(input || '', 10) || undefined;\n}\n\nexports.filenameIsInApp = filenameIsInApp;\nexports.node = node;\nexports.nodeStackLineParser = nodeStackLineParser;\n//# sourceMappingURL=node-stack-trace.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL25vZGUtc3RhY2stdHJhY2UuanMiLCJtYXBwaW5ncyI6IkFBQUEsOENBQTZDLEVBQUUsYUFBYSxFQUFDOztBQUU3RCxtQkFBbUIsbUJBQU8sQ0FBQywySEFBaUI7O0FBRTVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0REFBNEQ7O0FBRTVEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxrQ0FBa0MsR0FBRztBQUNyQzs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EscUNBQXFDLFNBQVMsR0FBRyxXQUFXO0FBQzVEOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLHVCQUF1QjtBQUN2QixZQUFZO0FBQ1osMkJBQTJCO0FBQzNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLXByb2plY3QvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL25vZGUtc3RhY2stdHJhY2UuanM/NTFkYiJdLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG5jb25zdCBzdGFja3RyYWNlID0gcmVxdWlyZSgnLi9zdGFja3RyYWNlLmpzJyk7XG5cbi8qKlxuICogRG9lcyB0aGlzIGZpbGVuYW1lIGxvb2sgbGlrZSBpdCdzIHBhcnQgb2YgdGhlIGFwcCBjb2RlP1xuICovXG5mdW5jdGlvbiBmaWxlbmFtZUlzSW5BcHAoZmlsZW5hbWUsIGlzTmF0aXZlID0gZmFsc2UpIHtcbiAgY29uc3QgaXNJbnRlcm5hbCA9XG4gICAgaXNOYXRpdmUgfHxcbiAgICAoZmlsZW5hbWUgJiZcbiAgICAgIC8vIEl0J3Mgbm90IGludGVybmFsIGlmIGl0J3MgYW4gYWJzb2x1dGUgbGludXggcGF0aFxuICAgICAgIWZpbGVuYW1lLnN0YXJ0c1dpdGgoJy8nKSAmJlxuICAgICAgLy8gSXQncyBub3QgaW50ZXJuYWwgaWYgaXQncyBhbiBhYnNvbHV0ZSB3aW5kb3dzIHBhdGhcbiAgICAgICFmaWxlbmFtZS5tYXRjaCgvXltBLVpdOi8pICYmXG4gICAgICAvLyBJdCdzIG5vdCBpbnRlcm5hbCBpZiB0aGUgcGF0aCBpcyBzdGFydGluZyB3aXRoIGEgZG90XG4gICAgICAhZmlsZW5hbWUuc3RhcnRzV2l0aCgnLicpICYmXG4gICAgICAvLyBJdCdzIG5vdCBpbnRlcm5hbCBpZiB0aGUgZnJhbWUgaGFzIGEgcHJvdG9jb2wuIEluIG5vZGUsIHRoaXMgaXMgdXN1YWxseSB0aGUgY2FzZSBpZiB0aGUgZmlsZSBnb3QgcHJlLXByb2Nlc3NlZCB3aXRoIGEgYnVuZGxlciBsaWtlIHdlYnBhY2tcbiAgICAgICFmaWxlbmFtZS5tYXRjaCgvXlthLXpBLVpdKFthLXpBLVowLTkuXFwtK10pKjpcXC9cXC8vKSk7IC8vIFNjaGVtYSBmcm9tOiBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMzY0MTc4MlxuXG4gIC8vIGluX2FwcCBpcyBhbGwgdGhhdCdzIG5vdCBhbiBpbnRlcm5hbCBOb2RlIGZ1bmN0aW9uIG9yIGEgbW9kdWxlIHdpdGhpbiBub2RlX21vZHVsZXNcbiAgLy8gbm90ZSB0aGF0IGlzTmF0aXZlIGFwcGVhcnMgdG8gcmV0dXJuIHRydWUgZXZlbiBmb3Igbm9kZSBjb3JlIGxpYnJhcmllc1xuICAvLyBzZWUgaHR0cHM6Ly9naXRodWIuY29tL2dldHNlbnRyeS9yYXZlbi1ub2RlL2lzc3Vlcy8xNzZcblxuICByZXR1cm4gIWlzSW50ZXJuYWwgJiYgZmlsZW5hbWUgIT09IHVuZGVmaW5lZCAmJiAhZmlsZW5hbWUuaW5jbHVkZXMoJ25vZGVfbW9kdWxlcy8nKTtcbn1cblxuLyoqIE5vZGUgU3RhY2sgbGluZSBwYXJzZXIgKi9cbmZ1bmN0aW9uIG5vZGUoZ2V0TW9kdWxlKSB7XG4gIGNvbnN0IEZJTEVOQU1FX01BVENIID0gL15cXHMqWy1dezQsfSQvO1xuICBjb25zdCBGVUxMX01BVENIID0gL2F0ICg/OmFzeW5jICk/KD86KC4rPylcXHMrXFwoKT8oPzooLispOihcXGQrKTooXFxkKyk/fChbXildKykpXFwpPy87XG5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNvbXBsZXhpdHlcbiAgcmV0dXJuIChsaW5lKSA9PiB7XG4gICAgY29uc3QgbGluZU1hdGNoID0gbGluZS5tYXRjaChGVUxMX01BVENIKTtcblxuICAgIGlmIChsaW5lTWF0Y2gpIHtcbiAgICAgIGxldCBvYmplY3Q7XG4gICAgICBsZXQgbWV0aG9kO1xuICAgICAgbGV0IGZ1bmN0aW9uTmFtZTtcbiAgICAgIGxldCB0eXBlTmFtZTtcbiAgICAgIGxldCBtZXRob2ROYW1lO1xuXG4gICAgICBpZiAobGluZU1hdGNoWzFdKSB7XG4gICAgICAgIGZ1bmN0aW9uTmFtZSA9IGxpbmVNYXRjaFsxXTtcblxuICAgICAgICBsZXQgbWV0aG9kU3RhcnQgPSBmdW5jdGlvbk5hbWUubGFzdEluZGV4T2YoJy4nKTtcbiAgICAgICAgaWYgKGZ1bmN0aW9uTmFtZVttZXRob2RTdGFydCAtIDFdID09PSAnLicpIHtcbiAgICAgICAgICBtZXRob2RTdGFydC0tO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKG1ldGhvZFN0YXJ0ID4gMCkge1xuICAgICAgICAgIG9iamVjdCA9IGZ1bmN0aW9uTmFtZS5zbGljZSgwLCBtZXRob2RTdGFydCk7XG4gICAgICAgICAgbWV0aG9kID0gZnVuY3Rpb25OYW1lLnNsaWNlKG1ldGhvZFN0YXJ0ICsgMSk7XG4gICAgICAgICAgY29uc3Qgb2JqZWN0RW5kID0gb2JqZWN0LmluZGV4T2YoJy5Nb2R1bGUnKTtcbiAgICAgICAgICBpZiAob2JqZWN0RW5kID4gMCkge1xuICAgICAgICAgICAgZnVuY3Rpb25OYW1lID0gZnVuY3Rpb25OYW1lLnNsaWNlKG9iamVjdEVuZCArIDEpO1xuICAgICAgICAgICAgb2JqZWN0ID0gb2JqZWN0LnNsaWNlKDAsIG9iamVjdEVuZCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHR5cGVOYW1lID0gdW5kZWZpbmVkO1xuICAgICAgfVxuXG4gICAgICBpZiAobWV0aG9kKSB7XG4gICAgICAgIHR5cGVOYW1lID0gb2JqZWN0O1xuICAgICAgICBtZXRob2ROYW1lID0gbWV0aG9kO1xuICAgICAgfVxuXG4gICAgICBpZiAobWV0aG9kID09PSAnPGFub255bW91cz4nKSB7XG4gICAgICAgIG1ldGhvZE5hbWUgPSB1bmRlZmluZWQ7XG4gICAgICAgIGZ1bmN0aW9uTmFtZSA9IHVuZGVmaW5lZDtcbiAgICAgIH1cblxuICAgICAgaWYgKGZ1bmN0aW9uTmFtZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIG1ldGhvZE5hbWUgPSBtZXRob2ROYW1lIHx8IHN0YWNrdHJhY2UuVU5LTk9XTl9GVU5DVElPTjtcbiAgICAgICAgZnVuY3Rpb25OYW1lID0gdHlwZU5hbWUgPyBgJHt0eXBlTmFtZX0uJHttZXRob2ROYW1lfWAgOiBtZXRob2ROYW1lO1xuICAgICAgfVxuXG4gICAgICBsZXQgZmlsZW5hbWUgPSBsaW5lTWF0Y2hbMl0gJiYgbGluZU1hdGNoWzJdLnN0YXJ0c1dpdGgoJ2ZpbGU6Ly8nKSA/IGxpbmVNYXRjaFsyXS5zbGljZSg3KSA6IGxpbmVNYXRjaFsyXTtcbiAgICAgIGNvbnN0IGlzTmF0aXZlID0gbGluZU1hdGNoWzVdID09PSAnbmF0aXZlJztcblxuICAgICAgLy8gSWYgaXQncyBhIFdpbmRvd3MgcGF0aCwgdHJpbSB0aGUgbGVhZGluZyBzbGFzaCBzbyB0aGF0IGAvQzovZm9vYCBiZWNvbWVzIGBDOi9mb29gXG4gICAgICBpZiAoZmlsZW5hbWUgJiYgZmlsZW5hbWUubWF0Y2goL1xcL1tBLVpdOi8pKSB7XG4gICAgICAgIGZpbGVuYW1lID0gZmlsZW5hbWUuc2xpY2UoMSk7XG4gICAgICB9XG5cbiAgICAgIGlmICghZmlsZW5hbWUgJiYgbGluZU1hdGNoWzVdICYmICFpc05hdGl2ZSkge1xuICAgICAgICBmaWxlbmFtZSA9IGxpbmVNYXRjaFs1XTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgZmlsZW5hbWUsXG4gICAgICAgIG1vZHVsZTogZ2V0TW9kdWxlID8gZ2V0TW9kdWxlKGZpbGVuYW1lKSA6IHVuZGVmaW5lZCxcbiAgICAgICAgZnVuY3Rpb246IGZ1bmN0aW9uTmFtZSxcbiAgICAgICAgbGluZW5vOiBfcGFyc2VJbnRPclVuZGVmaW5lZChsaW5lTWF0Y2hbM10pLFxuICAgICAgICBjb2xubzogX3BhcnNlSW50T3JVbmRlZmluZWQobGluZU1hdGNoWzRdKSxcbiAgICAgICAgaW5fYXBwOiBmaWxlbmFtZUlzSW5BcHAoZmlsZW5hbWUgfHwgJycsIGlzTmF0aXZlKSxcbiAgICAgIH07XG4gICAgfVxuXG4gICAgaWYgKGxpbmUubWF0Y2goRklMRU5BTUVfTUFUQ0gpKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBmaWxlbmFtZTogbGluZSxcbiAgICAgIH07XG4gICAgfVxuXG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfTtcbn1cblxuLyoqXG4gKiBOb2RlLmpzIHN0YWNrIGxpbmUgcGFyc2VyXG4gKlxuICogVGhpcyBpcyBpbiBAc2VudHJ5L3V0aWxzIHNvIGl0IGNhbiBiZSB1c2VkIGZyb20gdGhlIEVsZWN0cm9uIFNESyBpbiB0aGUgYnJvd3NlciBmb3Igd2hlbiBgbm9kZUludGVncmF0aW9uID09IHRydWVgLlxuICogVGhpcyBhbGxvd3MgaXQgdG8gYmUgdXNlZCB3aXRob3V0IHJlZmVyZW5jaW5nIG9yIGltcG9ydGluZyBhbnkgbm9kZSBzcGVjaWZpYyBjb2RlIHdoaWNoIGNhdXNlcyBidW5kbGVycyB0byBjb21wbGFpblxuICovXG5mdW5jdGlvbiBub2RlU3RhY2tMaW5lUGFyc2VyKGdldE1vZHVsZSkge1xuICByZXR1cm4gWzkwLCBub2RlKGdldE1vZHVsZSldO1xufVxuXG5mdW5jdGlvbiBfcGFyc2VJbnRPclVuZGVmaW5lZChpbnB1dCkge1xuICByZXR1cm4gcGFyc2VJbnQoaW5wdXQgfHwgJycsIDEwKSB8fCB1bmRlZmluZWQ7XG59XG5cbmV4cG9ydHMuZmlsZW5hbWVJc0luQXBwID0gZmlsZW5hbWVJc0luQXBwO1xuZXhwb3J0cy5ub2RlID0gbm9kZTtcbmV4cG9ydHMubm9kZVN0YWNrTGluZVBhcnNlciA9IG5vZGVTdGFja0xpbmVQYXJzZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ub2RlLXN0YWNrLXRyYWNlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/node-stack-trace.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/node.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/node.js ***!
  \**********************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst env = __webpack_require__(/*! ./env.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/env.js\");\n\n/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\n\n\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nfunction isNodeEnv() {\n  // explicitly check for browser bundles as those can be optimized statically\n  // by terser/rollup.\n  return (\n    !env.isBrowserBundle() &&\n    Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'\n  );\n}\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction dynamicRequire(mod, request) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return mod.require(request);\n}\n\n/**\n * Helper for dynamically loading module that should work with linked dependencies.\n * The problem is that we _should_ be using `require(require.resolve(moduleName, { paths: [cwd()] }))`\n * However it's _not possible_ to do that with Webpack, as it has to know all the dependencies during\n * build time. `require.resolve` is also not available in any other way, so we cannot create,\n * a fake helper like we do with `dynamicRequire`.\n *\n * We always prefer to use local package, thus the value is not returned early from each `try/catch` block.\n * That is to mimic the behavior of `require.resolve` exactly.\n *\n * @param moduleName module name to require\n * @returns possibly required module\n */\nfunction loadModule(moduleName) {\n  let mod;\n\n  try {\n    mod = dynamicRequire(module, moduleName);\n  } catch (e) {\n    // no-empty\n  }\n\n  try {\n    const { cwd } = dynamicRequire(module, 'process');\n    mod = dynamicRequire(module, `${cwd()}/node_modules/${moduleName}`) ;\n  } catch (e) {\n    // no-empty\n  }\n\n  return mod;\n}\n\nexports.dynamicRequire = dynamicRequire;\nexports.isNodeEnv = isNodeEnv;\nexports.loadModule = loadModule;\n//# sourceMappingURL=node.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL25vZGUuanMiLCJtYXBwaW5ncyI6IjtBQUFBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQzs7QUFFN0QsWUFBWSxtQkFBTyxDQUFDLDZHQUFVOztBQUU5QjtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLG1GQUFtRixnQkFBZ0I7QUFDbkc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTs7QUFFQTtBQUNBLFlBQVksTUFBTTtBQUNsQixvQ0FBb0MsTUFBTSxnQkFBZ0IsV0FBVztBQUNyRSxJQUFJO0FBQ0o7QUFDQTs7QUFFQTtBQUNBOztBQUVBLHNCQUFzQjtBQUN0QixpQkFBaUI7QUFDakIsa0JBQWtCO0FBQ2xCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLXByb2plY3QvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL25vZGUuanM/OTkzZCJdLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG5jb25zdCBlbnYgPSByZXF1aXJlKCcuL2Vudi5qcycpO1xuXG4vKipcbiAqIE5PVEU6IEluIG9yZGVyIHRvIGF2b2lkIGNpcmN1bGFyIGRlcGVuZGVuY2llcywgaWYgeW91IGFkZCBhIGZ1bmN0aW9uIHRvIHRoaXMgbW9kdWxlIGFuZCBpdCBuZWVkcyB0byBwcmludCBzb21ldGhpbmcsXG4gKiB5b3UgbXVzdCBlaXRoZXIgYSkgdXNlIGBjb25zb2xlLmxvZ2AgcmF0aGVyIHRoYW4gdGhlIGxvZ2dlciwgb3IgYikgcHV0IHlvdXIgZnVuY3Rpb24gZWxzZXdoZXJlLlxuICovXG5cblxuLyoqXG4gKiBDaGVja3Mgd2hldGhlciB3ZSdyZSBpbiB0aGUgTm9kZS5qcyBvciBCcm93c2VyIGVudmlyb25tZW50XG4gKlxuICogQHJldHVybnMgQW5zd2VyIHRvIGdpdmVuIHF1ZXN0aW9uXG4gKi9cbmZ1bmN0aW9uIGlzTm9kZUVudigpIHtcbiAgLy8gZXhwbGljaXRseSBjaGVjayBmb3IgYnJvd3NlciBidW5kbGVzIGFzIHRob3NlIGNhbiBiZSBvcHRpbWl6ZWQgc3RhdGljYWxseVxuICAvLyBieSB0ZXJzZXIvcm9sbHVwLlxuICByZXR1cm4gKFxuICAgICFlbnYuaXNCcm93c2VyQnVuZGxlKCkgJiZcbiAgICBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodHlwZW9mIHByb2Nlc3MgIT09ICd1bmRlZmluZWQnID8gcHJvY2VzcyA6IDApID09PSAnW29iamVjdCBwcm9jZXNzXSdcbiAgKTtcbn1cblxuLyoqXG4gKiBSZXF1aXJlcyBhIG1vZHVsZSB3aGljaCBpcyBwcm90ZWN0ZWQgYWdhaW5zdCBidW5kbGVyIG1pbmlmaWNhdGlvbi5cbiAqXG4gKiBAcGFyYW0gcmVxdWVzdCBUaGUgbW9kdWxlIHBhdGggdG8gcmVzb2x2ZVxuICovXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuZnVuY3Rpb24gZHluYW1pY1JlcXVpcmUobW9kLCByZXF1ZXN0KSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLW1lbWJlci1hY2Nlc3NcbiAgcmV0dXJuIG1vZC5yZXF1aXJlKHJlcXVlc3QpO1xufVxuXG4vKipcbiAqIEhlbHBlciBmb3IgZHluYW1pY2FsbHkgbG9hZGluZyBtb2R1bGUgdGhhdCBzaG91bGQgd29yayB3aXRoIGxpbmtlZCBkZXBlbmRlbmNpZXMuXG4gKiBUaGUgcHJvYmxlbSBpcyB0aGF0IHdlIF9zaG91bGRfIGJlIHVzaW5nIGByZXF1aXJlKHJlcXVpcmUucmVzb2x2ZShtb2R1bGVOYW1lLCB7IHBhdGhzOiBbY3dkKCldIH0pKWBcbiAqIEhvd2V2ZXIgaXQncyBfbm90IHBvc3NpYmxlXyB0byBkbyB0aGF0IHdpdGggV2VicGFjaywgYXMgaXQgaGFzIHRvIGtub3cgYWxsIHRoZSBkZXBlbmRlbmNpZXMgZHVyaW5nXG4gKiBidWlsZCB0aW1lLiBgcmVxdWlyZS5yZXNvbHZlYCBpcyBhbHNvIG5vdCBhdmFpbGFibGUgaW4gYW55IG90aGVyIHdheSwgc28gd2UgY2Fubm90IGNyZWF0ZSxcbiAqIGEgZmFrZSBoZWxwZXIgbGlrZSB3ZSBkbyB3aXRoIGBkeW5hbWljUmVxdWlyZWAuXG4gKlxuICogV2UgYWx3YXlzIHByZWZlciB0byB1c2UgbG9jYWwgcGFja2FnZSwgdGh1cyB0aGUgdmFsdWUgaXMgbm90IHJldHVybmVkIGVhcmx5IGZyb20gZWFjaCBgdHJ5L2NhdGNoYCBibG9jay5cbiAqIFRoYXQgaXMgdG8gbWltaWMgdGhlIGJlaGF2aW9yIG9mIGByZXF1aXJlLnJlc29sdmVgIGV4YWN0bHkuXG4gKlxuICogQHBhcmFtIG1vZHVsZU5hbWUgbW9kdWxlIG5hbWUgdG8gcmVxdWlyZVxuICogQHJldHVybnMgcG9zc2libHkgcmVxdWlyZWQgbW9kdWxlXG4gKi9cbmZ1bmN0aW9uIGxvYWRNb2R1bGUobW9kdWxlTmFtZSkge1xuICBsZXQgbW9kO1xuXG4gIHRyeSB7XG4gICAgbW9kID0gZHluYW1pY1JlcXVpcmUobW9kdWxlLCBtb2R1bGVOYW1lKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIC8vIG5vLWVtcHR5XG4gIH1cblxuICB0cnkge1xuICAgIGNvbnN0IHsgY3dkIH0gPSBkeW5hbWljUmVxdWlyZShtb2R1bGUsICdwcm9jZXNzJyk7XG4gICAgbW9kID0gZHluYW1pY1JlcXVpcmUobW9kdWxlLCBgJHtjd2QoKX0vbm9kZV9tb2R1bGVzLyR7bW9kdWxlTmFtZX1gKSA7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICAvLyBuby1lbXB0eVxuICB9XG5cbiAgcmV0dXJuIG1vZDtcbn1cblxuZXhwb3J0cy5keW5hbWljUmVxdWlyZSA9IGR5bmFtaWNSZXF1aXJlO1xuZXhwb3J0cy5pc05vZGVFbnYgPSBpc05vZGVFbnY7XG5leHBvcnRzLmxvYWRNb2R1bGUgPSBsb2FkTW9kdWxlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bm9kZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/node.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/normalize.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/normalize.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst is = __webpack_require__(/*! ./is.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/is.js\");\nconst memo = __webpack_require__(/*! ./memo.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/memo.js\");\nconst object = __webpack_require__(/*! ./object.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/object.js\");\nconst stacktrace = __webpack_require__(/*! ./stacktrace.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/stacktrace.js\");\n\n/**\n * Recursively normalizes the given object.\n *\n * - Creates a copy to prevent original input mutation\n * - Skips non-enumerable properties\n * - When stringifying, calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializable values (`undefined`/`NaN`/functions) to serializable format\n * - Translates known global objects/classes to a string representations\n * - Takes care of `Error` object serialization\n * - Optionally limits depth of final output\n * - Optionally limits number of properties/elements included in any single object/array\n *\n * @param input The object to be normalized.\n * @param depth The max depth to which to normalize the object. (Anything deeper stringified whole.)\n * @param maxProperties The max number of elements or properties to be included in any single array or\n * object in the normallized output.\n * @returns A normalized version of the object, or `\"**non-serializable**\"` if any errors are thrown during normalization.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction normalize(input, depth = 100, maxProperties = +Infinity) {\n  try {\n    // since we're at the outermost level, we don't provide a key\n    return visit('', input, depth, maxProperties);\n  } catch (err) {\n    return { ERROR: `**non-serializable** (${err})` };\n  }\n}\n\n/** JSDoc */\nfunction normalizeToSize(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  object,\n  // Default Node.js REPL depth\n  depth = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize = 100 * 1024,\n) {\n  const normalized = normalize(object, depth);\n\n  if (jsonSize(normalized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return normalized ;\n}\n\n/**\n * Visits a node to perform normalization on it\n *\n * @param key The key corresponding to the given node\n * @param value The node to be visited\n * @param depth Optional number indicating the maximum recursion depth\n * @param maxProperties Optional maximum number of properties/elements included in any single object/array\n * @param memo Optional Memo class handling decycling\n */\nfunction visit(\n  key,\n  value,\n  depth = +Infinity,\n  maxProperties = +Infinity,\n  memo$1 = memo.memoBuilder(),\n) {\n  const [memoize, unmemoize] = memo$1;\n\n  // Get the simple cases out of the way first\n  if (\n    value == null || // this matches null and undefined -> eqeq not eqeqeq\n    (['number', 'boolean', 'string'].includes(typeof value) && !Number.isNaN(value))\n  ) {\n    return value ;\n  }\n\n  const stringified = stringifyValue(key, value);\n\n  // Anything we could potentially dig into more (objects or arrays) will have come back as `\"[object XXXX]\"`.\n  // Everything else will have already been serialized, so if we don't see that pattern, we're done.\n  if (!stringified.startsWith('[object ')) {\n    return stringified;\n  }\n\n  // From here on, we can assert that `value` is either an object or an array.\n\n  // Do not normalize objects that we know have already been normalized. As a general rule, the\n  // \"__sentry_skip_normalization__\" property should only be used sparingly and only should only be set on objects that\n  // have already been normalized.\n  if ((value )['__sentry_skip_normalization__']) {\n    return value ;\n  }\n\n  // We can set `__sentry_override_normalization_depth__` on an object to ensure that from there\n  // We keep a certain amount of depth.\n  // This should be used sparingly, e.g. we use it for the redux integration to ensure we get a certain amount of state.\n  const remainingDepth =\n    typeof (value )['__sentry_override_normalization_depth__'] === 'number'\n      ? ((value )['__sentry_override_normalization_depth__'] )\n      : depth;\n\n  // We're also done if we've reached the max depth\n  if (remainingDepth === 0) {\n    // At this point we know `serialized` is a string of the form `\"[object XXXX]\"`. Clean it up so it's just `\"[XXXX]\"`.\n    return stringified.replace('object ', '');\n  }\n\n  // If we've already visited this branch, bail out, as it's circular reference. If not, note that we're seeing it now.\n  if (memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // If the value has a `toJSON` method, we call it to extract more information\n  const valueWithToJSON = value ;\n  if (valueWithToJSON && typeof valueWithToJSON.toJSON === 'function') {\n    try {\n      const jsonValue = valueWithToJSON.toJSON();\n      // We need to normalize the return value of `.toJSON()` in case it has circular references\n      return visit('', jsonValue, remainingDepth - 1, maxProperties, memo$1);\n    } catch (err) {\n      // pass (The built-in `toJSON` failed, but we can still try to do it ourselves)\n    }\n  }\n\n  // At this point we know we either have an object or an array, we haven't seen it before, and we're going to recurse\n  // because we haven't yet reached the max depth. Create an accumulator to hold the results of visiting each\n  // property/entry, and keep track of the number of items we add to it.\n  const normalized = (Array.isArray(value) ? [] : {}) ;\n  let numAdded = 0;\n\n  // Before we begin, convert`Error` and`Event` instances into plain objects, since some of each of their relevant\n  // properties are non-enumerable and otherwise would get missed.\n  const visitable = object.convertToPlainObject(value );\n\n  for (const visitKey in visitable) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(visitable, visitKey)) {\n      continue;\n    }\n\n    if (numAdded >= maxProperties) {\n      normalized[visitKey] = '[MaxProperties ~]';\n      break;\n    }\n\n    // Recursively visit all the child nodes\n    const visitValue = visitable[visitKey];\n    normalized[visitKey] = visit(visitKey, visitValue, remainingDepth - 1, maxProperties, memo$1);\n\n    numAdded++;\n  }\n\n  // Once we've visited all the branches, remove the parent from memo storage\n  unmemoize(value);\n\n  // Return accumulated values\n  return normalized;\n}\n\n/* eslint-disable complexity */\n/**\n * Stringify the given value. Handles various known special values and types.\n *\n * Not meant to be used on simple primitives which already have a string representation, as it will, for example, turn\n * the number 1231 into \"[Object Number]\", nor on `null`, as it will throw.\n *\n * @param value The value to stringify\n * @returns A stringified representation of the given value\n */\nfunction stringifyValue(\n  key,\n  // this type is a tiny bit of a cheat, since this function does handle NaN (which is technically a number), but for\n  // our internal use, it'll do\n  value,\n) {\n  try {\n    if (key === 'domain' && value && typeof value === 'object' && (value )._events) {\n      return '[Domain]';\n    }\n\n    if (key === 'domainEmitter') {\n      return '[DomainEmitter]';\n    }\n\n    // It's safe to use `global`, `window`, and `document` here in this manner, as we are asserting using `typeof` first\n    // which won't throw if they are not present.\n\n    if (typeof global !== 'undefined' && value === global) {\n      return '[Global]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof window !== 'undefined' && value === window) {\n      return '[Window]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof document !== 'undefined' && value === document) {\n      return '[Document]';\n    }\n\n    if (is.isVueViewModel(value)) {\n      return '[VueViewModel]';\n    }\n\n    // React's SyntheticEvent thingy\n    if (is.isSyntheticEvent(value)) {\n      return '[SyntheticEvent]';\n    }\n\n    if (typeof value === 'number' && value !== value) {\n      return '[NaN]';\n    }\n\n    if (typeof value === 'function') {\n      return `[Function: ${stacktrace.getFunctionName(value)}]`;\n    }\n\n    if (typeof value === 'symbol') {\n      return `[${String(value)}]`;\n    }\n\n    // stringified BigInts are indistinguishable from regular numbers, so we need to label them to avoid confusion\n    if (typeof value === 'bigint') {\n      return `[BigInt: ${String(value)}]`;\n    }\n\n    // Now that we've knocked out all the special cases and the primitives, all we have left are objects. Simply casting\n    // them to strings means that instances of classes which haven't defined their `toStringTag` will just come out as\n    // `\"[object Object]\"`. If we instead look at the constructor's name (which is the same as the name of the class),\n    // we can make sure that only plain objects come out that way.\n    const objName = getConstructorName(value);\n\n    // Handle HTML Elements\n    if (/^HTML(\\w*)Element$/.test(objName)) {\n      return `[HTMLElement: ${objName}]`;\n    }\n\n    return `[object ${objName}]`;\n  } catch (err) {\n    return `**non-serializable** (${err})`;\n  }\n}\n/* eslint-enable complexity */\n\nfunction getConstructorName(value) {\n  const prototype = Object.getPrototypeOf(value);\n\n  return prototype ? prototype.constructor.name : 'null prototype';\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value) {\n  // eslint-disable-next-line no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction jsonSize(value) {\n  return utf8Length(JSON.stringify(value));\n}\n\n/**\n * Normalizes URLs in exceptions and stacktraces to a base path so Sentry can fingerprint\n * across platforms and working directory.\n *\n * @param url The URL to be normalized.\n * @param basePath The application base path.\n * @returns The normalized URL.\n */\nfunction normalizeUrlToBase(url, basePath) {\n  const escapedBase = basePath\n    // Backslash to forward\n    .replace(/\\\\/g, '/')\n    // Escape RegExp special characters\n    .replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&');\n\n  let newUrl = url;\n  try {\n    newUrl = decodeURI(url);\n  } catch (_Oo) {\n    // Sometime this breaks\n  }\n  return (\n    newUrl\n      .replace(/\\\\/g, '/')\n      .replace(/webpack:\\/?/g, '') // Remove intermediate base path\n      // eslint-disable-next-line @sentry-internal/sdk/no-regexp-constructor\n      .replace(new RegExp(`(file://)?/*${escapedBase}/*`, 'ig'), 'app:///')\n  );\n}\n\nexports.normalize = normalize;\nexports.normalizeToSize = normalizeToSize;\nexports.normalizeUrlToBase = normalizeUrlToBase;\n//# sourceMappingURL=normalize.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/normalize.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/object.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/object.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst browser = __webpack_require__(/*! ./browser.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/browser.js\");\nconst debugBuild = __webpack_require__(/*! ./debug-build.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/debug-build.js\");\nconst is = __webpack_require__(/*! ./is.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/is.js\");\nconst logger = __webpack_require__(/*! ./logger.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/logger.js\");\nconst string = __webpack_require__(/*! ./string.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/string.js\");\n\n/**\n * Replace a method in an object with a wrapped version of itself.\n *\n * @param source An object that contains a method to be wrapped.\n * @param name The name of the method to be wrapped.\n * @param replacementFactory A higher-order function that takes the original version of the given method and returns a\n * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to\n * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other\n * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.\n * @returns void\n */\nfunction fill(source, name, replacementFactory) {\n  if (!(name in source)) {\n    return;\n  }\n\n  const original = source[name] ;\n  const wrapped = replacementFactory(original) ;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    markFunctionWrapped(wrapped, original);\n  }\n\n  source[name] = wrapped;\n}\n\n/**\n * Defines a non-enumerable property on the given object.\n *\n * @param obj The object on which to set the property\n * @param name The name of the property to be set\n * @param value The value to which to set the property\n */\nfunction addNonEnumerableProperty(obj, name, value) {\n  try {\n    Object.defineProperty(obj, name, {\n      // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it\n      value: value,\n      writable: true,\n      configurable: true,\n    });\n  } catch (o_O) {\n    debugBuild.DEBUG_BUILD && logger.logger.log(`Failed to add non-enumerable property \"${name}\" to object`, obj);\n  }\n}\n\n/**\n * Remembers the original function on the wrapped function and\n * patches up the prototype.\n *\n * @param wrapped the wrapper function\n * @param original the original function that gets wrapped\n */\nfunction markFunctionWrapped(wrapped, original) {\n  try {\n    const proto = original.prototype || {};\n    wrapped.prototype = original.prototype = proto;\n    addNonEnumerableProperty(wrapped, '__sentry_original__', original);\n  } catch (o_O) {} // eslint-disable-line no-empty\n}\n\n/**\n * This extracts the original function if available.  See\n * `markFunctionWrapped` for more information.\n *\n * @param func the function to unwrap\n * @returns the unwrapped version of the function if available.\n */\nfunction getOriginalFunction(func) {\n  return func.__sentry_original__;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nfunction urlEncode(object) {\n  return Object.keys(object)\n    .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`)\n    .join('&');\n}\n\n/**\n * Transforms any `Error` or `Event` into a plain object with all of their enumerable properties, and some of their\n * non-enumerable properties attached.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n * @returns An Event or Error turned into an object - or the value argurment itself, when value is neither an Event nor\n *  an Error.\n */\nfunction convertToPlainObject(\n  value,\n)\n\n {\n  if (is.isError(value)) {\n    return {\n      message: value.message,\n      name: value.name,\n      stack: value.stack,\n      ...getOwnProperties(value),\n    };\n  } else if (is.isEvent(value)) {\n    const newObj\n\n = {\n      type: value.type,\n      target: serializeEventTarget(value.target),\n      currentTarget: serializeEventTarget(value.currentTarget),\n      ...getOwnProperties(value),\n    };\n\n    if (typeof CustomEvent !== 'undefined' && is.isInstanceOf(value, CustomEvent)) {\n      newObj.detail = value.detail;\n    }\n\n    return newObj;\n  } else {\n    return value;\n  }\n}\n\n/** Creates a string representation of the target of an `Event` object */\nfunction serializeEventTarget(target) {\n  try {\n    return is.isElement(target) ? browser.htmlTreeAsString(target) : Object.prototype.toString.call(target);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/** Filters out all but an object's own properties */\nfunction getOwnProperties(obj) {\n  if (typeof obj === 'object' && obj !== null) {\n    const extractedProps = {};\n    for (const property in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, property)) {\n        extractedProps[property] = (obj )[property];\n      }\n    }\n    return extractedProps;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\nfunction extractExceptionKeysForMessage(exception, maxLength = 40) {\n  const keys = Object.keys(convertToPlainObject(exception));\n  keys.sort();\n\n  const firstKey = keys[0];\n\n  if (!firstKey) {\n    return '[object has no keys]';\n  }\n\n  if (firstKey.length >= maxLength) {\n    return string.truncate(firstKey, maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return string.truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return a new object having removed all fields whose value was `undefined`.\n * Works recursively on objects and arrays.\n *\n * Attention: This function keeps circular references in the returned object.\n */\nfunction dropUndefinedKeys(inputValue) {\n  // This map keeps track of what already visited nodes map to.\n  // Our Set - based memoBuilder doesn't work here because we want to the output object to have the same circular\n  // references as the input object.\n  const memoizationMap = new Map();\n\n  // This function just proxies `_dropUndefinedKeys` to keep the `memoBuilder` out of this function's API\n  return _dropUndefinedKeys(inputValue, memoizationMap);\n}\n\nfunction _dropUndefinedKeys(inputValue, memoizationMap) {\n  if (isPojo(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the object it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    const returnValue = {};\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    for (const key of Object.keys(inputValue)) {\n      if (typeof inputValue[key] !== 'undefined') {\n        returnValue[key] = _dropUndefinedKeys(inputValue[key], memoizationMap);\n      }\n    }\n\n    return returnValue ;\n  }\n\n  if (Array.isArray(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the array it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    const returnValue = [];\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    inputValue.forEach((item) => {\n      returnValue.push(_dropUndefinedKeys(item, memoizationMap));\n    });\n\n    return returnValue ;\n  }\n\n  return inputValue;\n}\n\nfunction isPojo(input) {\n  if (!is.isPlainObject(input)) {\n    return false;\n  }\n\n  try {\n    const name = (Object.getPrototypeOf(input) ).constructor.name;\n    return !name || name === 'Object';\n  } catch (e) {\n    return true;\n  }\n}\n\n/**\n * Ensure that something is an object.\n *\n * Turns `undefined` and `null` into `String`s and all other primitives into instances of their respective wrapper\n * classes (String, Boolean, Number, etc.). Acts as the identity function on non-primitives.\n *\n * @param wat The subject of the objectification\n * @returns A version of `wat` which can safely be used with `Object` class methods\n */\nfunction objectify(wat) {\n  let objectified;\n  switch (true) {\n    case wat === undefined || wat === null:\n      objectified = new String(wat);\n      break;\n\n    // Though symbols and bigints do have wrapper classes (`Symbol` and `BigInt`, respectively), for whatever reason\n    // those classes don't have constructors which can be used with the `new` keyword. We therefore need to cast each as\n    // an object in order to wrap it.\n    case typeof wat === 'symbol' || typeof wat === 'bigint':\n      objectified = Object(wat);\n      break;\n\n    // this will catch the remaining primitives: `String`, `Number`, and `Boolean`\n    case is.isPrimitive(wat):\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      objectified = new (wat ).constructor(wat);\n      break;\n\n    // by process of elimination, at this point we know that `wat` must already be an object\n    default:\n      objectified = wat;\n      break;\n  }\n  return objectified;\n}\n\nexports.addNonEnumerableProperty = addNonEnumerableProperty;\nexports.convertToPlainObject = convertToPlainObject;\nexports.dropUndefinedKeys = dropUndefinedKeys;\nexports.extractExceptionKeysForMessage = extractExceptionKeysForMessage;\nexports.fill = fill;\nexports.getOriginalFunction = getOriginalFunction;\nexports.markFunctionWrapped = markFunctionWrapped;\nexports.objectify = objectify;\nexports.urlEncode = urlEncode;\n//# sourceMappingURL=object.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/object.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/path.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/path.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n// Slightly modified (no IE8 support, ES6) and transcribed to TypeScript\n// https://github.com/calvinmetcalf/rollup-plugin-node-builtins/blob/63ab8aacd013767445ca299e468d9a60a95328d7/src/es6/path.js\n//\n// Copyright Joyent, Inc.and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n/** JSDoc */\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  let up = 0;\n  for (let i = parts.length - 1; i >= 0; i--) {\n    const last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nconst splitPathRe = /^(\\S+:\\\\|\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^/\\\\]+?|)(\\.[^./\\\\]*|))(?:[/\\\\]*)$/;\n/** JSDoc */\nfunction splitPath(filename) {\n  // Truncate files names greater than 1024 characters to avoid regex dos\n  // https://github.com/getsentry/sentry-javascript/pull/8737#discussion_r1285719172\n  const truncated = filename.length > 1024 ? `<truncated>${filename.slice(-1024)}` : filename;\n  const parts = splitPathRe.exec(truncated);\n  return parts ? parts.slice(1) : [];\n}\n\n// path.resolve([from ...], to)\n// posix version\n/** JSDoc */\nfunction resolve(...args) {\n  let resolvedPath = '';\n  let resolvedAbsolute = false;\n\n  for (let i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    const path = i >= 0 ? args[i] : '/';\n\n    // Skip empty entries\n    if (!path) {\n      continue;\n    }\n\n    resolvedPath = `${path}/${resolvedPath}`;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(\n    resolvedPath.split('/').filter(p => !!p),\n    !resolvedAbsolute,\n  ).join('/');\n\n  return (resolvedAbsolute ? '/' : '') + resolvedPath || '.';\n}\n\n/** JSDoc */\nfunction trim(arr) {\n  let start = 0;\n  for (; start < arr.length; start++) {\n    if (arr[start] !== '') {\n      break;\n    }\n  }\n\n  let end = arr.length - 1;\n  for (; end >= 0; end--) {\n    if (arr[end] !== '') {\n      break;\n    }\n  }\n\n  if (start > end) {\n    return [];\n  }\n  return arr.slice(start, end - start + 1);\n}\n\n// path.relative(from, to)\n// posix version\n/** JSDoc */\nfunction relative(from, to) {\n  /* eslint-disable no-param-reassign */\n  from = resolve(from).slice(1);\n  to = resolve(to).slice(1);\n  /* eslint-enable no-param-reassign */\n\n  const fromParts = trim(from.split('/'));\n  const toParts = trim(to.split('/'));\n\n  const length = Math.min(fromParts.length, toParts.length);\n  let samePartsLength = length;\n  for (let i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  let outputParts = [];\n  for (let i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n}\n\n// path.normalize(path)\n// posix version\n/** JSDoc */\nfunction normalizePath(path) {\n  const isPathAbsolute = isAbsolute(path);\n  const trailingSlash = path.slice(-1) === '/';\n\n  // Normalize the path\n  let normalizedPath = normalizeArray(\n    path.split('/').filter(p => !!p),\n    !isPathAbsolute,\n  ).join('/');\n\n  if (!normalizedPath && !isPathAbsolute) {\n    normalizedPath = '.';\n  }\n  if (normalizedPath && trailingSlash) {\n    normalizedPath += '/';\n  }\n\n  return (isPathAbsolute ? '/' : '') + normalizedPath;\n}\n\n// posix version\n/** JSDoc */\nfunction isAbsolute(path) {\n  return path.charAt(0) === '/';\n}\n\n// posix version\n/** JSDoc */\nfunction join(...args) {\n  return normalizePath(args.join('/'));\n}\n\n/** JSDoc */\nfunction dirname(path) {\n  const result = splitPath(path);\n  const root = result[0] || '';\n  let dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.slice(0, dir.length - 1);\n  }\n\n  return root + dir;\n}\n\n/** JSDoc */\nfunction basename(path, ext) {\n  let f = splitPath(path)[2] || '';\n  if (ext && f.slice(ext.length * -1) === ext) {\n    f = f.slice(0, f.length - ext.length);\n  }\n  return f;\n}\n\nexports.basename = basename;\nexports.dirname = dirname;\nexports.isAbsolute = isAbsolute;\nexports.join = join;\nexports.normalizePath = normalizePath;\nexports.relative = relative;\nexports.resolve = resolve;\n//# sourceMappingURL=path.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/path.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/promisebuffer.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/promisebuffer.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst error = __webpack_require__(/*! ./error.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/error.js\");\nconst syncpromise = __webpack_require__(/*! ./syncpromise.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/syncpromise.js\");\n\n/**\n * Creates an new PromiseBuffer object with the specified limit\n * @param limit max number of promises that can be stored in the buffer\n */\nfunction makePromiseBuffer(limit) {\n  const buffer = [];\n\n  function isReady() {\n    return limit === undefined || buffer.length < limit;\n  }\n\n  /**\n   * Remove a promise from the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns Removed promise.\n   */\n  function remove(task) {\n    return buffer.splice(buffer.indexOf(task), 1)[0] || Promise.resolve(undefined);\n  }\n\n  /**\n   * Add a promise (representing an in-flight action) to the queue, and set it to remove itself on fulfillment.\n   *\n   * @param taskProducer A function producing any PromiseLike<T>; In previous versions this used to be `task:\n   *        PromiseLike<T>`, but under that model, Promises were instantly created on the call-site and their executor\n   *        functions therefore ran immediately. Thus, even if the buffer was full, the action still happened. By\n   *        requiring the promise to be wrapped in a function, we can defer promise creation until after the buffer\n   *        limit check.\n   * @returns The original promise.\n   */\n  function add(taskProducer) {\n    if (!isReady()) {\n      return syncpromise.rejectedSyncPromise(new error.SentryError('Not adding Promise because buffer limit was reached.'));\n    }\n\n    // start the task and add its promise to the queue\n    const task = taskProducer();\n    if (buffer.indexOf(task) === -1) {\n      buffer.push(task);\n    }\n    void task\n      .then(() => remove(task))\n      // Use `then(null, rejectionHandler)` rather than `catch(rejectionHandler)` so that we can use `PromiseLike`\n      // rather than `Promise`. `PromiseLike` doesn't have a `.catch` method, making its polyfill smaller. (ES5 didn't\n      // have promises, so TS has to polyfill when down-compiling.)\n      .then(null, () =>\n        remove(task).then(null, () => {\n          // We have to add another catch here because `remove()` starts a new promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Wait for all promises in the queue to resolve or for timeout to expire, whichever comes first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the queue is still non-empty. Passing `0` (or\n   * not passing anything) will make the promise wait as long as it takes for the queue to drain before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if the queue is already empty or drains before the timeout, and\n   * `false` otherwise\n   */\n  function drain(timeout) {\n    return new syncpromise.SyncPromise((resolve, reject) => {\n      let counter = buffer.length;\n\n      if (!counter) {\n        return resolve(true);\n      }\n\n      // wait for `timeout` ms and then resolve to `false` (if not cancelled first)\n      const capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n\n      // if all promises resolve in time, cancel the timer and resolve to `true`\n      buffer.forEach(item => {\n        void syncpromise.resolvedSyncPromise(item).then(() => {\n          if (!--counter) {\n            clearTimeout(capturedSetTimeout);\n            resolve(true);\n          }\n        }, reject);\n      });\n    });\n  }\n\n  return {\n    $: buffer,\n    add,\n    drain,\n  };\n}\n\nexports.makePromiseBuffer = makePromiseBuffer;\n//# sourceMappingURL=promisebuffer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL3Byb21pc2VidWZmZXIuanMiLCJtYXBwaW5ncyI6IkFBQUEsOENBQTZDLEVBQUUsYUFBYSxFQUFDOztBQUU3RCxjQUFjLG1CQUFPLENBQUMsaUhBQVk7QUFDbEMsb0JBQW9CLG1CQUFPLENBQUMsNkhBQWtCOztBQUU5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxrRUFBa0U7QUFDbEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87O0FBRVA7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsT0FBTztBQUNQLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEseUJBQXlCO0FBQ3pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLXByb2plY3QvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL3Byb21pc2VidWZmZXIuanM/MDc2ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG5jb25zdCBlcnJvciA9IHJlcXVpcmUoJy4vZXJyb3IuanMnKTtcbmNvbnN0IHN5bmNwcm9taXNlID0gcmVxdWlyZSgnLi9zeW5jcHJvbWlzZS5qcycpO1xuXG4vKipcbiAqIENyZWF0ZXMgYW4gbmV3IFByb21pc2VCdWZmZXIgb2JqZWN0IHdpdGggdGhlIHNwZWNpZmllZCBsaW1pdFxuICogQHBhcmFtIGxpbWl0IG1heCBudW1iZXIgb2YgcHJvbWlzZXMgdGhhdCBjYW4gYmUgc3RvcmVkIGluIHRoZSBidWZmZXJcbiAqL1xuZnVuY3Rpb24gbWFrZVByb21pc2VCdWZmZXIobGltaXQpIHtcbiAgY29uc3QgYnVmZmVyID0gW107XG5cbiAgZnVuY3Rpb24gaXNSZWFkeSgpIHtcbiAgICByZXR1cm4gbGltaXQgPT09IHVuZGVmaW5lZCB8fCBidWZmZXIubGVuZ3RoIDwgbGltaXQ7XG4gIH1cblxuICAvKipcbiAgICogUmVtb3ZlIGEgcHJvbWlzZSBmcm9tIHRoZSBxdWV1ZS5cbiAgICpcbiAgICogQHBhcmFtIHRhc2sgQ2FuIGJlIGFueSBQcm9taXNlTGlrZTxUPlxuICAgKiBAcmV0dXJucyBSZW1vdmVkIHByb21pc2UuXG4gICAqL1xuICBmdW5jdGlvbiByZW1vdmUodGFzaykge1xuICAgIHJldHVybiBidWZmZXIuc3BsaWNlKGJ1ZmZlci5pbmRleE9mKHRhc2spLCAxKVswXSB8fCBQcm9taXNlLnJlc29sdmUodW5kZWZpbmVkKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBBZGQgYSBwcm9taXNlIChyZXByZXNlbnRpbmcgYW4gaW4tZmxpZ2h0IGFjdGlvbikgdG8gdGhlIHF1ZXVlLCBhbmQgc2V0IGl0IHRvIHJlbW92ZSBpdHNlbGYgb24gZnVsZmlsbG1lbnQuXG4gICAqXG4gICAqIEBwYXJhbSB0YXNrUHJvZHVjZXIgQSBmdW5jdGlvbiBwcm9kdWNpbmcgYW55IFByb21pc2VMaWtlPFQ+OyBJbiBwcmV2aW91cyB2ZXJzaW9ucyB0aGlzIHVzZWQgdG8gYmUgYHRhc2s6XG4gICAqICAgICAgICBQcm9taXNlTGlrZTxUPmAsIGJ1dCB1bmRlciB0aGF0IG1vZGVsLCBQcm9taXNlcyB3ZXJlIGluc3RhbnRseSBjcmVhdGVkIG9uIHRoZSBjYWxsLXNpdGUgYW5kIHRoZWlyIGV4ZWN1dG9yXG4gICAqICAgICAgICBmdW5jdGlvbnMgdGhlcmVmb3JlIHJhbiBpbW1lZGlhdGVseS4gVGh1cywgZXZlbiBpZiB0aGUgYnVmZmVyIHdhcyBmdWxsLCB0aGUgYWN0aW9uIHN0aWxsIGhhcHBlbmVkLiBCeVxuICAgKiAgICAgICAgcmVxdWlyaW5nIHRoZSBwcm9taXNlIHRvIGJlIHdyYXBwZWQgaW4gYSBmdW5jdGlvbiwgd2UgY2FuIGRlZmVyIHByb21pc2UgY3JlYXRpb24gdW50aWwgYWZ0ZXIgdGhlIGJ1ZmZlclxuICAgKiAgICAgICAgbGltaXQgY2hlY2suXG4gICAqIEByZXR1cm5zIFRoZSBvcmlnaW5hbCBwcm9taXNlLlxuICAgKi9cbiAgZnVuY3Rpb24gYWRkKHRhc2tQcm9kdWNlcikge1xuICAgIGlmICghaXNSZWFkeSgpKSB7XG4gICAgICByZXR1cm4gc3luY3Byb21pc2UucmVqZWN0ZWRTeW5jUHJvbWlzZShuZXcgZXJyb3IuU2VudHJ5RXJyb3IoJ05vdCBhZGRpbmcgUHJvbWlzZSBiZWNhdXNlIGJ1ZmZlciBsaW1pdCB3YXMgcmVhY2hlZC4nKSk7XG4gICAgfVxuXG4gICAgLy8gc3RhcnQgdGhlIHRhc2sgYW5kIGFkZCBpdHMgcHJvbWlzZSB0byB0aGUgcXVldWVcbiAgICBjb25zdCB0YXNrID0gdGFza1Byb2R1Y2VyKCk7XG4gICAgaWYgKGJ1ZmZlci5pbmRleE9mKHRhc2spID09PSAtMSkge1xuICAgICAgYnVmZmVyLnB1c2godGFzayk7XG4gICAgfVxuICAgIHZvaWQgdGFza1xuICAgICAgLnRoZW4oKCkgPT4gcmVtb3ZlKHRhc2spKVxuICAgICAgLy8gVXNlIGB0aGVuKG51bGwsIHJlamVjdGlvbkhhbmRsZXIpYCByYXRoZXIgdGhhbiBgY2F0Y2gocmVqZWN0aW9uSGFuZGxlcilgIHNvIHRoYXQgd2UgY2FuIHVzZSBgUHJvbWlzZUxpa2VgXG4gICAgICAvLyByYXRoZXIgdGhhbiBgUHJvbWlzZWAuIGBQcm9taXNlTGlrZWAgZG9lc24ndCBoYXZlIGEgYC5jYXRjaGAgbWV0aG9kLCBtYWtpbmcgaXRzIHBvbHlmaWxsIHNtYWxsZXIuIChFUzUgZGlkbid0XG4gICAgICAvLyBoYXZlIHByb21pc2VzLCBzbyBUUyBoYXMgdG8gcG9seWZpbGwgd2hlbiBkb3duLWNvbXBpbGluZy4pXG4gICAgICAudGhlbihudWxsLCAoKSA9PlxuICAgICAgICByZW1vdmUodGFzaykudGhlbihudWxsLCAoKSA9PiB7XG4gICAgICAgICAgLy8gV2UgaGF2ZSB0byBhZGQgYW5vdGhlciBjYXRjaCBoZXJlIGJlY2F1c2UgYHJlbW92ZSgpYCBzdGFydHMgYSBuZXcgcHJvbWlzZSBjaGFpbi5cbiAgICAgICAgfSksXG4gICAgICApO1xuICAgIHJldHVybiB0YXNrO1xuICB9XG5cbiAgLyoqXG4gICAqIFdhaXQgZm9yIGFsbCBwcm9taXNlcyBpbiB0aGUgcXVldWUgdG8gcmVzb2x2ZSBvciBmb3IgdGltZW91dCB0byBleHBpcmUsIHdoaWNoZXZlciBjb21lcyBmaXJzdC5cbiAgICpcbiAgICogQHBhcmFtIHRpbWVvdXQgVGhlIHRpbWUsIGluIG1zLCBhZnRlciB3aGljaCB0byByZXNvbHZlIHRvIGBmYWxzZWAgaWYgdGhlIHF1ZXVlIGlzIHN0aWxsIG5vbi1lbXB0eS4gUGFzc2luZyBgMGAgKG9yXG4gICAqIG5vdCBwYXNzaW5nIGFueXRoaW5nKSB3aWxsIG1ha2UgdGhlIHByb21pc2Ugd2FpdCBhcyBsb25nIGFzIGl0IHRha2VzIGZvciB0aGUgcXVldWUgdG8gZHJhaW4gYmVmb3JlIHJlc29sdmluZyB0b1xuICAgKiBgdHJ1ZWAuXG4gICAqIEByZXR1cm5zIEEgcHJvbWlzZSB3aGljaCB3aWxsIHJlc29sdmUgdG8gYHRydWVgIGlmIHRoZSBxdWV1ZSBpcyBhbHJlYWR5IGVtcHR5IG9yIGRyYWlucyBiZWZvcmUgdGhlIHRpbWVvdXQsIGFuZFxuICAgKiBgZmFsc2VgIG90aGVyd2lzZVxuICAgKi9cbiAgZnVuY3Rpb24gZHJhaW4odGltZW91dCkge1xuICAgIHJldHVybiBuZXcgc3luY3Byb21pc2UuU3luY1Byb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgbGV0IGNvdW50ZXIgPSBidWZmZXIubGVuZ3RoO1xuXG4gICAgICBpZiAoIWNvdW50ZXIpIHtcbiAgICAgICAgcmV0dXJuIHJlc29sdmUodHJ1ZSk7XG4gICAgICB9XG5cbiAgICAgIC8vIHdhaXQgZm9yIGB0aW1lb3V0YCBtcyBhbmQgdGhlbiByZXNvbHZlIHRvIGBmYWxzZWAgKGlmIG5vdCBjYW5jZWxsZWQgZmlyc3QpXG4gICAgICBjb25zdCBjYXB0dXJlZFNldFRpbWVvdXQgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgaWYgKHRpbWVvdXQgJiYgdGltZW91dCA+IDApIHtcbiAgICAgICAgICByZXNvbHZlKGZhbHNlKTtcbiAgICAgICAgfVxuICAgICAgfSwgdGltZW91dCk7XG5cbiAgICAgIC8vIGlmIGFsbCBwcm9taXNlcyByZXNvbHZlIGluIHRpbWUsIGNhbmNlbCB0aGUgdGltZXIgYW5kIHJlc29sdmUgdG8gYHRydWVgXG4gICAgICBidWZmZXIuZm9yRWFjaChpdGVtID0+IHtcbiAgICAgICAgdm9pZCBzeW5jcHJvbWlzZS5yZXNvbHZlZFN5bmNQcm9taXNlKGl0ZW0pLnRoZW4oKCkgPT4ge1xuICAgICAgICAgIGlmICghLS1jb3VudGVyKSB7XG4gICAgICAgICAgICBjbGVhclRpbWVvdXQoY2FwdHVyZWRTZXRUaW1lb3V0KTtcbiAgICAgICAgICAgIHJlc29sdmUodHJ1ZSk7XG4gICAgICAgICAgfVxuICAgICAgICB9LCByZWplY3QpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4ge1xuICAgICQ6IGJ1ZmZlcixcbiAgICBhZGQsXG4gICAgZHJhaW4sXG4gIH07XG59XG5cbmV4cG9ydHMubWFrZVByb21pc2VCdWZmZXIgPSBtYWtlUHJvbWlzZUJ1ZmZlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXByb21pc2VidWZmZXIuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/promisebuffer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/propagationContext.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/propagationContext.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst misc = __webpack_require__(/*! ./misc.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/misc.js\");\n\n/**\n * Returns a new minimal propagation context\n */\nfunction generatePropagationContext() {\n  return {\n    traceId: misc.uuid4(),\n    spanId: misc.uuid4().substring(16),\n  };\n}\n\nexports.generatePropagationContext = generatePropagationContext;\n//# sourceMappingURL=propagationContext.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL3Byb3BhZ2F0aW9uQ29udGV4dC5qcyIsIm1hcHBpbmdzIjoiQUFBQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7O0FBRTdELGFBQWEsbUJBQU8sQ0FBQywrR0FBVzs7QUFFaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGtDQUFrQztBQUNsQyIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9wcm9wYWdhdGlvbkNvbnRleHQuanM/ZjMzZCJdLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG5jb25zdCBtaXNjID0gcmVxdWlyZSgnLi9taXNjLmpzJyk7XG5cbi8qKlxuICogUmV0dXJucyBhIG5ldyBtaW5pbWFsIHByb3BhZ2F0aW9uIGNvbnRleHRcbiAqL1xuZnVuY3Rpb24gZ2VuZXJhdGVQcm9wYWdhdGlvbkNvbnRleHQoKSB7XG4gIHJldHVybiB7XG4gICAgdHJhY2VJZDogbWlzYy51dWlkNCgpLFxuICAgIHNwYW5JZDogbWlzYy51dWlkNCgpLnN1YnN0cmluZygxNiksXG4gIH07XG59XG5cbmV4cG9ydHMuZ2VuZXJhdGVQcm9wYWdhdGlvbkNvbnRleHQgPSBnZW5lcmF0ZVByb3BhZ2F0aW9uQ29udGV4dDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXByb3BhZ2F0aW9uQ29udGV4dC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/propagationContext.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/ratelimit.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/ratelimit.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n// Intentionally keeping the key broad, as we don't know for sure what rate limit headers get returned from backend\n\nconst DEFAULT_RETRY_AFTER = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param header string representation of 'Retry-After' header\n * @param now current unix timestamp\n *\n */\nfunction parseRetryAfterHeader(header, now = Date.now()) {\n  const headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  const headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return DEFAULT_RETRY_AFTER;\n}\n\n/**\n * Gets the time that the given category is disabled until for rate limiting.\n * In case no category-specific limit is set but a general rate limit across all categories is active,\n * that time is returned.\n *\n * @return the time in ms that the category is disabled until or 0 if there's no active rate limit.\n */\nfunction disabledUntil(limits, dataCategory) {\n  return limits[dataCategory] || limits.all || 0;\n}\n\n/**\n * Checks if a category is rate limited\n */\nfunction isRateLimited(limits, dataCategory, now = Date.now()) {\n  return disabledUntil(limits, dataCategory) > now;\n}\n\n/**\n * Update ratelimits from incoming headers.\n *\n * @return the updated RateLimits object.\n */\nfunction updateRateLimits(\n  limits,\n  { statusCode, headers },\n  now = Date.now(),\n) {\n  const updatedRateLimits = {\n    ...limits,\n  };\n\n  // \"The name is case-insensitive.\"\n  // https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n  const rateLimitHeader = headers && headers['x-sentry-rate-limits'];\n  const retryAfterHeader = headers && headers['retry-after'];\n\n  if (rateLimitHeader) {\n    /**\n     * rate limit headers are of the form\n     *     <header>,<header>,..\n     * where each <header> is of the form\n     *     <retry_after>: <categories>: <scope>: <reason_code>: <namespaces>\n     * where\n     *     <retry_after> is a delay in seconds\n     *     <categories> is the event type(s) (error, transaction, etc) being rate limited and is of the form\n     *         <category>;<category>;...\n     *     <scope> is what's being limited (org, project, or key) - ignored by SDK\n     *     <reason_code> is an arbitrary string like \"org_quota\" - ignored by SDK\n     *     <namespaces> Semicolon-separated list of metric namespace identifiers. Defines which namespace(s) will be affected.\n     *         Only present if rate limit applies to the metric_bucket data category.\n     */\n    for (const limit of rateLimitHeader.trim().split(',')) {\n      const [retryAfter, categories, , , namespaces] = limit.split(':', 5) ;\n      const headerDelay = parseInt(retryAfter, 10);\n      const delay = (!isNaN(headerDelay) ? headerDelay : 60) * 1000; // 60sec default\n      if (!categories) {\n        updatedRateLimits.all = now + delay;\n      } else {\n        for (const category of categories.split(';')) {\n          if (category === 'metric_bucket') {\n            // namespaces will be present when category === 'metric_bucket'\n            if (!namespaces || namespaces.split(';').includes('custom')) {\n              updatedRateLimits[category] = now + delay;\n            }\n          } else {\n            updatedRateLimits[category] = now + delay;\n          }\n        }\n      }\n    }\n  } else if (retryAfterHeader) {\n    updatedRateLimits.all = now + parseRetryAfterHeader(retryAfterHeader, now);\n  } else if (statusCode === 429) {\n    updatedRateLimits.all = now + 60 * 1000;\n  }\n\n  return updatedRateLimits;\n}\n\nexports.DEFAULT_RETRY_AFTER = DEFAULT_RETRY_AFTER;\nexports.disabledUntil = disabledUntil;\nexports.isRateLimited = isRateLimited;\nexports.parseRetryAfterHeader = parseRetryAfterHeader;\nexports.updateRateLimits = updateRateLimits;\n//# sourceMappingURL=ratelimit.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL3JhdGVsaW1pdC5qcyIsIm1hcHBpbmdzIjoiQUFBQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7O0FBRTdEOztBQUVBLHVDQUF1Qzs7QUFFdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MsT0FBTztBQUN6QztBQUNBO0FBQ0E7O0FBRUEsbUNBQW1DLE9BQU87QUFDMUM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSxxQkFBcUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsV0FBVztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUVBQXFFO0FBQ3JFO0FBQ0E7QUFDQSxRQUFRO0FBQ1Isa0RBQWtEO0FBQ2xEO0FBQ0E7QUFDQSxrREFBa0Q7QUFDbEQ7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSwyQkFBMkI7QUFDM0IscUJBQXFCO0FBQ3JCLHFCQUFxQjtBQUNyQiw2QkFBNkI7QUFDN0Isd0JBQXdCO0FBQ3hCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLXByb2plY3QvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL3JhdGVsaW1pdC5qcz80MzlkIl0sInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG5cbi8vIEludGVudGlvbmFsbHkga2VlcGluZyB0aGUga2V5IGJyb2FkLCBhcyB3ZSBkb24ndCBrbm93IGZvciBzdXJlIHdoYXQgcmF0ZSBsaW1pdCBoZWFkZXJzIGdldCByZXR1cm5lZCBmcm9tIGJhY2tlbmRcblxuY29uc3QgREVGQVVMVF9SRVRSWV9BRlRFUiA9IDYwICogMTAwMDsgLy8gNjAgc2Vjb25kc1xuXG4vKipcbiAqIEV4dHJhY3RzIFJldHJ5LUFmdGVyIHZhbHVlIGZyb20gdGhlIHJlcXVlc3QgaGVhZGVyIG9yIHJldHVybnMgZGVmYXVsdCB2YWx1ZVxuICogQHBhcmFtIGhlYWRlciBzdHJpbmcgcmVwcmVzZW50YXRpb24gb2YgJ1JldHJ5LUFmdGVyJyBoZWFkZXJcbiAqIEBwYXJhbSBub3cgY3VycmVudCB1bml4IHRpbWVzdGFtcFxuICpcbiAqL1xuZnVuY3Rpb24gcGFyc2VSZXRyeUFmdGVySGVhZGVyKGhlYWRlciwgbm93ID0gRGF0ZS5ub3coKSkge1xuICBjb25zdCBoZWFkZXJEZWxheSA9IHBhcnNlSW50KGAke2hlYWRlcn1gLCAxMCk7XG4gIGlmICghaXNOYU4oaGVhZGVyRGVsYXkpKSB7XG4gICAgcmV0dXJuIGhlYWRlckRlbGF5ICogMTAwMDtcbiAgfVxuXG4gIGNvbnN0IGhlYWRlckRhdGUgPSBEYXRlLnBhcnNlKGAke2hlYWRlcn1gKTtcbiAgaWYgKCFpc05hTihoZWFkZXJEYXRlKSkge1xuICAgIHJldHVybiBoZWFkZXJEYXRlIC0gbm93O1xuICB9XG5cbiAgcmV0dXJuIERFRkFVTFRfUkVUUllfQUZURVI7XG59XG5cbi8qKlxuICogR2V0cyB0aGUgdGltZSB0aGF0IHRoZSBnaXZlbiBjYXRlZ29yeSBpcyBkaXNhYmxlZCB1bnRpbCBmb3IgcmF0ZSBsaW1pdGluZy5cbiAqIEluIGNhc2Ugbm8gY2F0ZWdvcnktc3BlY2lmaWMgbGltaXQgaXMgc2V0IGJ1dCBhIGdlbmVyYWwgcmF0ZSBsaW1pdCBhY3Jvc3MgYWxsIGNhdGVnb3JpZXMgaXMgYWN0aXZlLFxuICogdGhhdCB0aW1lIGlzIHJldHVybmVkLlxuICpcbiAqIEByZXR1cm4gdGhlIHRpbWUgaW4gbXMgdGhhdCB0aGUgY2F0ZWdvcnkgaXMgZGlzYWJsZWQgdW50aWwgb3IgMCBpZiB0aGVyZSdzIG5vIGFjdGl2ZSByYXRlIGxpbWl0LlxuICovXG5mdW5jdGlvbiBkaXNhYmxlZFVudGlsKGxpbWl0cywgZGF0YUNhdGVnb3J5KSB7XG4gIHJldHVybiBsaW1pdHNbZGF0YUNhdGVnb3J5XSB8fCBsaW1pdHMuYWxsIHx8IDA7XG59XG5cbi8qKlxuICogQ2hlY2tzIGlmIGEgY2F0ZWdvcnkgaXMgcmF0ZSBsaW1pdGVkXG4gKi9cbmZ1bmN0aW9uIGlzUmF0ZUxpbWl0ZWQobGltaXRzLCBkYXRhQ2F0ZWdvcnksIG5vdyA9IERhdGUubm93KCkpIHtcbiAgcmV0dXJuIGRpc2FibGVkVW50aWwobGltaXRzLCBkYXRhQ2F0ZWdvcnkpID4gbm93O1xufVxuXG4vKipcbiAqIFVwZGF0ZSByYXRlbGltaXRzIGZyb20gaW5jb21pbmcgaGVhZGVycy5cbiAqXG4gKiBAcmV0dXJuIHRoZSB1cGRhdGVkIFJhdGVMaW1pdHMgb2JqZWN0LlxuICovXG5mdW5jdGlvbiB1cGRhdGVSYXRlTGltaXRzKFxuICBsaW1pdHMsXG4gIHsgc3RhdHVzQ29kZSwgaGVhZGVycyB9LFxuICBub3cgPSBEYXRlLm5vdygpLFxuKSB7XG4gIGNvbnN0IHVwZGF0ZWRSYXRlTGltaXRzID0ge1xuICAgIC4uLmxpbWl0cyxcbiAgfTtcblxuICAvLyBcIlRoZSBuYW1lIGlzIGNhc2UtaW5zZW5zaXRpdmUuXCJcbiAgLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0hlYWRlcnMvZ2V0XG4gIGNvbnN0IHJhdGVMaW1pdEhlYWRlciA9IGhlYWRlcnMgJiYgaGVhZGVyc1sneC1zZW50cnktcmF0ZS1saW1pdHMnXTtcbiAgY29uc3QgcmV0cnlBZnRlckhlYWRlciA9IGhlYWRlcnMgJiYgaGVhZGVyc1sncmV0cnktYWZ0ZXInXTtcblxuICBpZiAocmF0ZUxpbWl0SGVhZGVyKSB7XG4gICAgLyoqXG4gICAgICogcmF0ZSBsaW1pdCBoZWFkZXJzIGFyZSBvZiB0aGUgZm9ybVxuICAgICAqICAgICA8aGVhZGVyPiw8aGVhZGVyPiwuLlxuICAgICAqIHdoZXJlIGVhY2ggPGhlYWRlcj4gaXMgb2YgdGhlIGZvcm1cbiAgICAgKiAgICAgPHJldHJ5X2FmdGVyPjogPGNhdGVnb3JpZXM+OiA8c2NvcGU+OiA8cmVhc29uX2NvZGU+OiA8bmFtZXNwYWNlcz5cbiAgICAgKiB3aGVyZVxuICAgICAqICAgICA8cmV0cnlfYWZ0ZXI+IGlzIGEgZGVsYXkgaW4gc2Vjb25kc1xuICAgICAqICAgICA8Y2F0ZWdvcmllcz4gaXMgdGhlIGV2ZW50IHR5cGUocykgKGVycm9yLCB0cmFuc2FjdGlvbiwgZXRjKSBiZWluZyByYXRlIGxpbWl0ZWQgYW5kIGlzIG9mIHRoZSBmb3JtXG4gICAgICogICAgICAgICA8Y2F0ZWdvcnk+OzxjYXRlZ29yeT47Li4uXG4gICAgICogICAgIDxzY29wZT4gaXMgd2hhdCdzIGJlaW5nIGxpbWl0ZWQgKG9yZywgcHJvamVjdCwgb3Iga2V5KSAtIGlnbm9yZWQgYnkgU0RLXG4gICAgICogICAgIDxyZWFzb25fY29kZT4gaXMgYW4gYXJiaXRyYXJ5IHN0cmluZyBsaWtlIFwib3JnX3F1b3RhXCIgLSBpZ25vcmVkIGJ5IFNES1xuICAgICAqICAgICA8bmFtZXNwYWNlcz4gU2VtaWNvbG9uLXNlcGFyYXRlZCBsaXN0IG9mIG1ldHJpYyBuYW1lc3BhY2UgaWRlbnRpZmllcnMuIERlZmluZXMgd2hpY2ggbmFtZXNwYWNlKHMpIHdpbGwgYmUgYWZmZWN0ZWQuXG4gICAgICogICAgICAgICBPbmx5IHByZXNlbnQgaWYgcmF0ZSBsaW1pdCBhcHBsaWVzIHRvIHRoZSBtZXRyaWNfYnVja2V0IGRhdGEgY2F0ZWdvcnkuXG4gICAgICovXG4gICAgZm9yIChjb25zdCBsaW1pdCBvZiByYXRlTGltaXRIZWFkZXIudHJpbSgpLnNwbGl0KCcsJykpIHtcbiAgICAgIGNvbnN0IFtyZXRyeUFmdGVyLCBjYXRlZ29yaWVzLCAsICwgbmFtZXNwYWNlc10gPSBsaW1pdC5zcGxpdCgnOicsIDUpIDtcbiAgICAgIGNvbnN0IGhlYWRlckRlbGF5ID0gcGFyc2VJbnQocmV0cnlBZnRlciwgMTApO1xuICAgICAgY29uc3QgZGVsYXkgPSAoIWlzTmFOKGhlYWRlckRlbGF5KSA/IGhlYWRlckRlbGF5IDogNjApICogMTAwMDsgLy8gNjBzZWMgZGVmYXVsdFxuICAgICAgaWYgKCFjYXRlZ29yaWVzKSB7XG4gICAgICAgIHVwZGF0ZWRSYXRlTGltaXRzLmFsbCA9IG5vdyArIGRlbGF5O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZm9yIChjb25zdCBjYXRlZ29yeSBvZiBjYXRlZ29yaWVzLnNwbGl0KCc7JykpIHtcbiAgICAgICAgICBpZiAoY2F0ZWdvcnkgPT09ICdtZXRyaWNfYnVja2V0Jykge1xuICAgICAgICAgICAgLy8gbmFtZXNwYWNlcyB3aWxsIGJlIHByZXNlbnQgd2hlbiBjYXRlZ29yeSA9PT0gJ21ldHJpY19idWNrZXQnXG4gICAgICAgICAgICBpZiAoIW5hbWVzcGFjZXMgfHwgbmFtZXNwYWNlcy5zcGxpdCgnOycpLmluY2x1ZGVzKCdjdXN0b20nKSkge1xuICAgICAgICAgICAgICB1cGRhdGVkUmF0ZUxpbWl0c1tjYXRlZ29yeV0gPSBub3cgKyBkZWxheTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdXBkYXRlZFJhdGVMaW1pdHNbY2F0ZWdvcnldID0gbm93ICsgZGVsYXk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9IGVsc2UgaWYgKHJldHJ5QWZ0ZXJIZWFkZXIpIHtcbiAgICB1cGRhdGVkUmF0ZUxpbWl0cy5hbGwgPSBub3cgKyBwYXJzZVJldHJ5QWZ0ZXJIZWFkZXIocmV0cnlBZnRlckhlYWRlciwgbm93KTtcbiAgfSBlbHNlIGlmIChzdGF0dXNDb2RlID09PSA0MjkpIHtcbiAgICB1cGRhdGVkUmF0ZUxpbWl0cy5hbGwgPSBub3cgKyA2MCAqIDEwMDA7XG4gIH1cblxuICByZXR1cm4gdXBkYXRlZFJhdGVMaW1pdHM7XG59XG5cbmV4cG9ydHMuREVGQVVMVF9SRVRSWV9BRlRFUiA9IERFRkFVTFRfUkVUUllfQUZURVI7XG5leHBvcnRzLmRpc2FibGVkVW50aWwgPSBkaXNhYmxlZFVudGlsO1xuZXhwb3J0cy5pc1JhdGVMaW1pdGVkID0gaXNSYXRlTGltaXRlZDtcbmV4cG9ydHMucGFyc2VSZXRyeUFmdGVySGVhZGVyID0gcGFyc2VSZXRyeUFmdGVySGVhZGVyO1xuZXhwb3J0cy51cGRhdGVSYXRlTGltaXRzID0gdXBkYXRlUmF0ZUxpbWl0cztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJhdGVsaW1pdC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/ratelimit.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/requestdata.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/requestdata.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst cookie = __webpack_require__(/*! ./cookie.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/cookie.js\");\nconst debugBuild = __webpack_require__(/*! ./debug-build.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/debug-build.js\");\nconst is = __webpack_require__(/*! ./is.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/is.js\");\nconst logger = __webpack_require__(/*! ./logger.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/logger.js\");\nconst normalize = __webpack_require__(/*! ./normalize.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/normalize.js\");\nconst url = __webpack_require__(/*! ./url.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/url.js\");\n\nconst DEFAULT_INCLUDES = {\n  ip: false,\n  request: true,\n  transaction: true,\n  user: true,\n};\nconst DEFAULT_REQUEST_INCLUDES = ['cookies', 'data', 'headers', 'method', 'query_string', 'url'];\nconst DEFAULT_USER_INCLUDES = ['id', 'username', 'email'];\n\n/**\n * Options deciding what parts of the request to use when enhancing an event\n */\n\n/**\n * Extracts a complete and parameterized path from the request object and uses it to construct transaction name.\n * If the parameterized transaction name cannot be extracted, we fall back to the raw URL.\n *\n * Additionally, this function determines and returns the transaction name source\n *\n * eg. GET /mountpoint/user/:id\n *\n * @param req A request object\n * @param options What to include in the transaction name (method, path, or a custom route name to be\n *                used instead of the request's route)\n *\n * @returns A tuple of the fully constructed transaction name [0] and its source [1] (can be either 'route' or 'url')\n */\nfunction extractPathForTransaction(\n  req,\n  options = {},\n) {\n  const method = req.method && req.method.toUpperCase();\n\n  let path = '';\n  let source = 'url';\n\n  // Check to see if there's a parameterized route we can use (as there is in Express)\n  if (options.customRoute || req.route) {\n    path = options.customRoute || `${req.baseUrl || ''}${req.route && req.route.path}`;\n    source = 'route';\n  }\n\n  // Otherwise, just take the original URL\n  else if (req.originalUrl || req.url) {\n    path = url.stripUrlQueryAndFragment(req.originalUrl || req.url || '');\n  }\n\n  let name = '';\n  if (options.method && method) {\n    name += method;\n  }\n  if (options.method && options.path) {\n    name += ' ';\n  }\n  if (options.path && path) {\n    name += path;\n  }\n\n  return [name, source];\n}\n\n/** JSDoc */\nfunction extractTransaction(req, type) {\n  switch (type) {\n    case 'path': {\n      return extractPathForTransaction(req, { path: true })[0];\n    }\n    case 'handler': {\n      return (req.route && req.route.stack && req.route.stack[0] && req.route.stack[0].name) || '<anonymous>';\n    }\n    case 'methodPath':\n    default: {\n      // if exist _reconstructedRoute return that path instead of route.path\n      const customRoute = req._reconstructedRoute ? req._reconstructedRoute : undefined;\n      return extractPathForTransaction(req, { path: true, method: true, customRoute })[0];\n    }\n  }\n}\n\n/** JSDoc */\nfunction extractUserData(\n  user\n\n,\n  keys,\n) {\n  const extractedUser = {};\n  const attributes = Array.isArray(keys) ? keys : DEFAULT_USER_INCLUDES;\n\n  attributes.forEach(key => {\n    if (user && key in user) {\n      extractedUser[key] = user[key];\n    }\n  });\n\n  return extractedUser;\n}\n\n/**\n * Normalize data from the request object, accounting for framework differences.\n *\n * @param req The request object from which to extract data\n * @param options.include An optional array of keys to include in the normalized data. Defaults to\n * DEFAULT_REQUEST_INCLUDES if not provided.\n * @param options.deps Injected, platform-specific dependencies\n * @returns An object containing normalized request data\n */\nfunction extractRequestData(\n  req,\n  options\n\n,\n) {\n  const { include = DEFAULT_REQUEST_INCLUDES } = options || {};\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const requestData = {};\n\n  // headers:\n  //   node, express, koa, nextjs: req.headers\n  const headers = (req.headers || {})\n\n;\n  // method:\n  //   node, express, koa, nextjs: req.method\n  const method = req.method;\n  // host:\n  //   express: req.hostname in > 4 and req.host in < 4\n  //   koa: req.host\n  //   node, nextjs: req.headers.host\n  // Express 4 mistakenly strips off port number from req.host / req.hostname so we can't rely on them\n  // See: https://github.com/expressjs/express/issues/3047#issuecomment-236653223\n  // Also: https://github.com/getsentry/sentry-javascript/issues/1917\n  const host = headers.host || req.hostname || req.host || '<no host>';\n  // protocol:\n  //   node, nextjs: <n/a>\n  //   express, koa: req.protocol\n  const protocol = req.protocol === 'https' || (req.socket && req.socket.encrypted) ? 'https' : 'http';\n  // url (including path and query string):\n  //   node, express: req.originalUrl\n  //   koa, nextjs: req.url\n  const originalUrl = req.originalUrl || req.url || '';\n  // absolute url\n  const absoluteUrl = originalUrl.startsWith(protocol) ? originalUrl : `${protocol}://${host}${originalUrl}`;\n  include.forEach(key => {\n    switch (key) {\n      case 'headers': {\n        requestData.headers = headers;\n\n        // Remove the Cookie header in case cookie data should not be included in the event\n        if (!include.includes('cookies')) {\n          delete (requestData.headers ).cookie;\n        }\n\n        break;\n      }\n      case 'method': {\n        requestData.method = method;\n        break;\n      }\n      case 'url': {\n        requestData.url = absoluteUrl;\n        break;\n      }\n      case 'cookies': {\n        // cookies:\n        //   node, express, koa: req.headers.cookie\n        //   vercel, sails.js, express (w/ cookie middleware), nextjs: req.cookies\n        requestData.cookies =\n          // TODO (v8 / #5257): We're only sending the empty object for backwards compatibility, so the last bit can\n          // come off in v8\n          req.cookies || (headers.cookie && cookie.parseCookie(headers.cookie)) || {};\n        break;\n      }\n      case 'query_string': {\n        // query string:\n        //   node: req.url (raw)\n        //   express, koa, nextjs: req.query\n        requestData.query_string = extractQueryParams(req);\n        break;\n      }\n      case 'data': {\n        if (method === 'GET' || method === 'HEAD') {\n          break;\n        }\n        // body data:\n        //   express, koa, nextjs: req.body\n        //\n        //   when using node by itself, you have to read the incoming stream(see\n        //   https://nodejs.dev/learn/get-http-request-body-data-using-nodejs); if a user is doing that, we can't know\n        //   where they're going to store the final result, so they'll have to capture this data themselves\n        if (req.body !== undefined) {\n          requestData.data = is.isString(req.body) ? req.body : JSON.stringify(normalize.normalize(req.body));\n        }\n        break;\n      }\n      default: {\n        if ({}.hasOwnProperty.call(req, key)) {\n          requestData[key] = (req )[key];\n        }\n      }\n    }\n  });\n\n  return requestData;\n}\n\n/**\n * Add data from the given request to the given event\n *\n * @param event The event to which the request data will be added\n * @param req Request object\n * @param options.include Flags to control what data is included\n * @param options.deps Injected platform-specific dependencies\n * @returns The mutated `Event` object\n */\nfunction addRequestDataToEvent(\n  event,\n  req,\n  options,\n) {\n  const include = {\n    ...DEFAULT_INCLUDES,\n    ...(options && options.include),\n  };\n\n  if (include.request) {\n    const extractedRequestData = Array.isArray(include.request)\n      ? extractRequestData(req, { include: include.request })\n      : extractRequestData(req);\n\n    event.request = {\n      ...event.request,\n      ...extractedRequestData,\n    };\n  }\n\n  if (include.user) {\n    const extractedUser = req.user && is.isPlainObject(req.user) ? extractUserData(req.user, include.user) : {};\n\n    if (Object.keys(extractedUser).length) {\n      event.user = {\n        ...event.user,\n        ...extractedUser,\n      };\n    }\n  }\n\n  // client ip:\n  //   node, nextjs: req.socket.remoteAddress\n  //   express, koa: req.ip\n  if (include.ip) {\n    const ip = req.ip || (req.socket && req.socket.remoteAddress);\n    if (ip) {\n      event.user = {\n        ...event.user,\n        ip_address: ip,\n      };\n    }\n  }\n\n  if (include.transaction && !event.transaction && event.type === 'transaction') {\n    // TODO do we even need this anymore?\n    // TODO make this work for nextjs\n    event.transaction = extractTransaction(req, include.transaction);\n  }\n\n  return event;\n}\n\nfunction extractQueryParams(req) {\n  // url (including path and query string):\n  //   node, express: req.originalUrl\n  //   koa, nextjs: req.url\n  let originalUrl = req.originalUrl || req.url || '';\n\n  if (!originalUrl) {\n    return;\n  }\n\n  // The `URL` constructor can't handle internal URLs of the form `/some/path/here`, so stick a dummy protocol and\n  // hostname on the beginning. Since the point here is just to grab the query string, it doesn't matter what we use.\n  if (originalUrl.startsWith('/')) {\n    originalUrl = `http://dogs.are.great${originalUrl}`;\n  }\n\n  try {\n    const queryParams = req.query || new URL(originalUrl).search.slice(1);\n    return queryParams.length ? queryParams : undefined;\n  } catch (e2) {\n    return undefined;\n  }\n}\n\n/**\n * Transforms a `Headers` object that implements the `Web Fetch API` (https://developer.mozilla.org/en-US/docs/Web/API/Headers) into a simple key-value dict.\n * The header keys will be lower case: e.g. A \"Content-Type\" header will be stored as \"content-type\".\n */\n// TODO(v8): Make this function return undefined when the extraction fails.\nfunction winterCGHeadersToDict(winterCGHeaders) {\n  const headers = {};\n  try {\n    winterCGHeaders.forEach((value, key) => {\n      if (typeof value === 'string') {\n        // We check that value is a string even though it might be redundant to make sure prototype pollution is not possible.\n        headers[key] = value;\n      }\n    });\n  } catch (e) {\n    debugBuild.DEBUG_BUILD &&\n      logger.logger.warn('Sentry failed extracting headers from a request object. If you see this, please file an issue.');\n  }\n\n  return headers;\n}\n\n/**\n * Converts a `Request` object that implements the `Web Fetch API` (https://developer.mozilla.org/en-US/docs/Web/API/Headers) into the format that the `RequestData` integration understands.\n */\nfunction winterCGRequestToRequestData(req) {\n  const headers = winterCGHeadersToDict(req.headers);\n  return {\n    method: req.method,\n    url: req.url,\n    headers,\n  };\n}\n\nexports.DEFAULT_USER_INCLUDES = DEFAULT_USER_INCLUDES;\nexports.addRequestDataToEvent = addRequestDataToEvent;\nexports.extractPathForTransaction = extractPathForTransaction;\nexports.extractRequestData = extractRequestData;\nexports.winterCGHeadersToDict = winterCGHeadersToDict;\nexports.winterCGRequestToRequestData = winterCGRequestToRequestData;\n//# sourceMappingURL=requestdata.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/requestdata.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/severity.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/severity.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n// Note: Ideally the `SeverityLevel` type would be derived from `validSeverityLevels`, but that would mean either\n//\n// a) moving `validSeverityLevels` to `@sentry/types`,\n// b) moving the`SeverityLevel` type here, or\n// c) importing `validSeverityLevels` from here into `@sentry/types`.\n//\n// Option A would make `@sentry/types` a runtime dependency of `@sentry/utils` (not good), and options B and C would\n// create a circular dependency between `@sentry/types` and `@sentry/utils` (also not good). So a TODO accompanying the\n// type, reminding anyone who changes it to change this list also, will have to do.\n\nconst validSeverityLevels = ['fatal', 'error', 'warning', 'log', 'info', 'debug'];\n\n/**\n * Converts a string-based level into a `SeverityLevel`, normalizing it along the way.\n *\n * @param level String representation of desired `SeverityLevel`.\n * @returns The `SeverityLevel` corresponding to the given string, or 'log' if the string isn't a valid level.\n */\nfunction severityLevelFromString(level) {\n  return (level === 'warn' ? 'warning' : validSeverityLevels.includes(level) ? level : 'log') ;\n}\n\nexports.severityLevelFromString = severityLevelFromString;\nexports.validSeverityLevels = validSeverityLevels;\n//# sourceMappingURL=severity.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL3NldmVyaXR5LmpzIiwibWFwcGluZ3MiOiJBQUFBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQzs7QUFFN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSwrQkFBK0I7QUFDL0IsMkJBQTJCO0FBQzNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLXByb2plY3QvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL3NldmVyaXR5LmpzPzk2YTAiXSwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxuLy8gTm90ZTogSWRlYWxseSB0aGUgYFNldmVyaXR5TGV2ZWxgIHR5cGUgd291bGQgYmUgZGVyaXZlZCBmcm9tIGB2YWxpZFNldmVyaXR5TGV2ZWxzYCwgYnV0IHRoYXQgd291bGQgbWVhbiBlaXRoZXJcbi8vXG4vLyBhKSBtb3ZpbmcgYHZhbGlkU2V2ZXJpdHlMZXZlbHNgIHRvIGBAc2VudHJ5L3R5cGVzYCxcbi8vIGIpIG1vdmluZyB0aGVgU2V2ZXJpdHlMZXZlbGAgdHlwZSBoZXJlLCBvclxuLy8gYykgaW1wb3J0aW5nIGB2YWxpZFNldmVyaXR5TGV2ZWxzYCBmcm9tIGhlcmUgaW50byBgQHNlbnRyeS90eXBlc2AuXG4vL1xuLy8gT3B0aW9uIEEgd291bGQgbWFrZSBgQHNlbnRyeS90eXBlc2AgYSBydW50aW1lIGRlcGVuZGVuY3kgb2YgYEBzZW50cnkvdXRpbHNgIChub3QgZ29vZCksIGFuZCBvcHRpb25zIEIgYW5kIEMgd291bGRcbi8vIGNyZWF0ZSBhIGNpcmN1bGFyIGRlcGVuZGVuY3kgYmV0d2VlbiBgQHNlbnRyeS90eXBlc2AgYW5kIGBAc2VudHJ5L3V0aWxzYCAoYWxzbyBub3QgZ29vZCkuIFNvIGEgVE9ETyBhY2NvbXBhbnlpbmcgdGhlXG4vLyB0eXBlLCByZW1pbmRpbmcgYW55b25lIHdobyBjaGFuZ2VzIGl0IHRvIGNoYW5nZSB0aGlzIGxpc3QgYWxzbywgd2lsbCBoYXZlIHRvIGRvLlxuXG5jb25zdCB2YWxpZFNldmVyaXR5TGV2ZWxzID0gWydmYXRhbCcsICdlcnJvcicsICd3YXJuaW5nJywgJ2xvZycsICdpbmZvJywgJ2RlYnVnJ107XG5cbi8qKlxuICogQ29udmVydHMgYSBzdHJpbmctYmFzZWQgbGV2ZWwgaW50byBhIGBTZXZlcml0eUxldmVsYCwgbm9ybWFsaXppbmcgaXQgYWxvbmcgdGhlIHdheS5cbiAqXG4gKiBAcGFyYW0gbGV2ZWwgU3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIGRlc2lyZWQgYFNldmVyaXR5TGV2ZWxgLlxuICogQHJldHVybnMgVGhlIGBTZXZlcml0eUxldmVsYCBjb3JyZXNwb25kaW5nIHRvIHRoZSBnaXZlbiBzdHJpbmcsIG9yICdsb2cnIGlmIHRoZSBzdHJpbmcgaXNuJ3QgYSB2YWxpZCBsZXZlbC5cbiAqL1xuZnVuY3Rpb24gc2V2ZXJpdHlMZXZlbEZyb21TdHJpbmcobGV2ZWwpIHtcbiAgcmV0dXJuIChsZXZlbCA9PT0gJ3dhcm4nID8gJ3dhcm5pbmcnIDogdmFsaWRTZXZlcml0eUxldmVscy5pbmNsdWRlcyhsZXZlbCkgPyBsZXZlbCA6ICdsb2cnKSA7XG59XG5cbmV4cG9ydHMuc2V2ZXJpdHlMZXZlbEZyb21TdHJpbmcgPSBzZXZlcml0eUxldmVsRnJvbVN0cmluZztcbmV4cG9ydHMudmFsaWRTZXZlcml0eUxldmVscyA9IHZhbGlkU2V2ZXJpdHlMZXZlbHM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zZXZlcml0eS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/severity.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/stacktrace.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/stacktrace.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst STACKTRACE_FRAME_LIMIT = 50;\nconst UNKNOWN_FUNCTION = '?';\n// Used to sanitize webpack (error: *) wrapped stack errors\nconst WEBPACK_ERROR_REGEXP = /\\(error: (.*)\\)/;\nconst STRIP_FRAME_REGEXP = /captureMessage|captureException/;\n\n/**\n * Creates a stack parser with the supplied line parsers\n *\n * StackFrames are returned in the correct order for Sentry Exception\n * frames and with Sentry SDK internal frames removed from the top and bottom\n *\n */\nfunction createStackParser(...parsers) {\n  const sortedParsers = parsers.sort((a, b) => a[0] - b[0]).map(p => p[1]);\n\n  return (stack, skipFirstLines = 0, framesToPop = 0) => {\n    const frames = [];\n    const lines = stack.split('\\n');\n\n    for (let i = skipFirstLines; i < lines.length; i++) {\n      const line = lines[i] ;\n      // Ignore lines over 1kb as they are unlikely to be stack frames.\n      // Many of the regular expressions use backtracking which results in run time that increases exponentially with\n      // input size. Huge strings can result in hangs/Denial of Service:\n      // https://github.com/getsentry/sentry-javascript/issues/2286\n      if (line.length > 1024) {\n        continue;\n      }\n\n      // https://github.com/getsentry/sentry-javascript/issues/5459\n      // Remove webpack (error: *) wrappers\n      const cleanedLine = WEBPACK_ERROR_REGEXP.test(line) ? line.replace(WEBPACK_ERROR_REGEXP, '$1') : line;\n\n      // https://github.com/getsentry/sentry-javascript/issues/7813\n      // Skip Error: lines\n      if (cleanedLine.match(/\\S*Error: /)) {\n        continue;\n      }\n\n      for (const parser of sortedParsers) {\n        const frame = parser(cleanedLine);\n\n        if (frame) {\n          frames.push(frame);\n          break;\n        }\n      }\n\n      if (frames.length >= STACKTRACE_FRAME_LIMIT + framesToPop) {\n        break;\n      }\n    }\n\n    return stripSentryFramesAndReverse(frames.slice(framesToPop));\n  };\n}\n\n/**\n * Gets a stack parser implementation from Options.stackParser\n * @see Options\n *\n * If options contains an array of line parsers, it is converted into a parser\n */\nfunction stackParserFromStackParserOptions(stackParser) {\n  if (Array.isArray(stackParser)) {\n    return createStackParser(...stackParser);\n  }\n  return stackParser;\n}\n\n/**\n * Removes Sentry frames from the top and bottom of the stack if present and enforces a limit of max number of frames.\n * Assumes stack input is ordered from top to bottom and returns the reverse representation so call site of the\n * function that caused the crash is the last frame in the array.\n * @hidden\n */\nfunction stripSentryFramesAndReverse(stack) {\n  if (!stack.length) {\n    return [];\n  }\n\n  const localStack = Array.from(stack);\n\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (/sentryWrapped/.test(getLastStackFrame(localStack).function || '')) {\n    localStack.pop();\n  }\n\n  // Reversing in the middle of the procedure allows us to just pop the values off the stack\n  localStack.reverse();\n\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (STRIP_FRAME_REGEXP.test(getLastStackFrame(localStack).function || '')) {\n    localStack.pop();\n\n    // When using synthetic events, we will have a 2 levels deep stack, as `new Error('Sentry syntheticException')`\n    // is produced within the hub itself, making it:\n    //\n    //   Sentry.captureException()\n    //   getCurrentHub().captureException()\n    //\n    // instead of just the top `Sentry` call itself.\n    // This forces us to possibly strip an additional frame in the exact same was as above.\n    if (STRIP_FRAME_REGEXP.test(getLastStackFrame(localStack).function || '')) {\n      localStack.pop();\n    }\n  }\n\n  return localStack.slice(0, STACKTRACE_FRAME_LIMIT).map(frame => ({\n    ...frame,\n    filename: frame.filename || getLastStackFrame(localStack).filename,\n    function: frame.function || UNKNOWN_FUNCTION,\n  }));\n}\n\nfunction getLastStackFrame(arr) {\n  return arr[arr.length - 1] || {};\n}\n\nconst defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nfunction getFunctionName(fn) {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n\n/**\n * Get's stack frames from an event without needing to check for undefined properties.\n */\nfunction getFramesFromEvent(event) {\n  const exception = event.exception;\n\n  if (exception) {\n    const frames = [];\n    try {\n      // @ts-expect-error Object could be undefined\n      exception.values.forEach(value => {\n        // @ts-expect-error Value could be undefined\n        if (value.stacktrace.frames) {\n          // @ts-expect-error Value could be undefined\n          frames.push(...value.stacktrace.frames);\n        }\n      });\n      return frames;\n    } catch (_oO) {\n      return undefined;\n    }\n  }\n  return undefined;\n}\n\nexports.UNKNOWN_FUNCTION = UNKNOWN_FUNCTION;\nexports.createStackParser = createStackParser;\nexports.getFramesFromEvent = getFramesFromEvent;\nexports.getFunctionName = getFunctionName;\nexports.stackParserFromStackParserOptions = stackParserFromStackParserOptions;\nexports.stripSentryFramesAndReverse = stripSentryFramesAndReverse;\n//# sourceMappingURL=stacktrace.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/stacktrace.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/string.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/string.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst is = __webpack_require__(/*! ./is.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/is.js\");\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string (0 = unlimited)\n * @returns string Encoded\n */\nfunction truncate(str, max = 0) {\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.slice(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nfunction snipLine(line, colno) {\n  let newLine = line;\n  const lineLength = newLine.length;\n  if (lineLength <= 150) {\n    return newLine;\n  }\n  if (colno > lineLength) {\n    // eslint-disable-next-line no-param-reassign\n    colno = lineLength;\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, lineLength);\n  if (end > lineLength - 5) {\n    end = lineLength;\n  }\n  if (end === lineLength) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < lineLength) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction safeJoin(input, delimiter) {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  const output = [];\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let i = 0; i < input.length; i++) {\n    const value = input[i];\n    try {\n      // This is a hack to fix a Vue3-specific bug that causes an infinite loop of\n      // console warnings. This happens when a Vue template is rendered with\n      // an undeclared variable, which we try to stringify, ultimately causing\n      // Vue to issue another warning which repeats indefinitely.\n      // see: https://github.com/getsentry/sentry-javascript/pull/8981\n      if (is.isVueViewModel(value)) {\n        output.push('[VueViewModel]');\n      } else {\n        output.push(String(value));\n      }\n    } catch (e) {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/**\n * Checks if the given value matches a regex or string\n *\n * @param value The string to test\n * @param pattern Either a regex or a string against which `value` will be matched\n * @param requireExactStringMatch If true, `value` must match `pattern` exactly. If false, `value` will match\n * `pattern` if it contains `pattern`. Only applies to string-type patterns.\n */\nfunction isMatchingPattern(\n  value,\n  pattern,\n  requireExactStringMatch = false,\n) {\n  if (!is.isString(value)) {\n    return false;\n  }\n\n  if (is.isRegExp(pattern)) {\n    return pattern.test(value);\n  }\n  if (is.isString(pattern)) {\n    return requireExactStringMatch ? value === pattern : value.includes(pattern);\n  }\n\n  return false;\n}\n\n/**\n * Test the given string against an array of strings and regexes. By default, string matching is done on a\n * substring-inclusion basis rather than a strict equality basis\n *\n * @param testString The string to test\n * @param patterns The patterns against which to test the string\n * @param requireExactStringMatch If true, `testString` must match one of the given string patterns exactly in order to\n * count. If false, `testString` will match a string pattern if it contains that pattern.\n * @returns\n */\nfunction stringMatchesSomePattern(\n  testString,\n  patterns = [],\n  requireExactStringMatch = false,\n) {\n  return patterns.some(pattern => isMatchingPattern(testString, pattern, requireExactStringMatch));\n}\n\nexports.isMatchingPattern = isMatchingPattern;\nexports.safeJoin = safeJoin;\nexports.snipLine = snipLine;\nexports.stringMatchesSomePattern = stringMatchesSomePattern;\nexports.truncate = truncate;\n//# sourceMappingURL=string.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL3N0cmluZy5qcyIsIm1hcHBpbmdzIjoiQUFBQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7O0FBRTdELFdBQVcsbUJBQU8sQ0FBQywyR0FBUzs7QUFFNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyxrQkFBa0I7QUFDeEQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxpQkFBaUIsTUFBTSxFQUFFLFFBQVE7QUFDakM7QUFDQTtBQUNBLGtCQUFrQixLQUFLO0FBQ3ZCOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esa0JBQWtCLGtCQUFrQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHlCQUF5QjtBQUN6QixnQkFBZ0I7QUFDaEIsZ0JBQWdCO0FBQ2hCLGdDQUFnQztBQUNoQyxnQkFBZ0I7QUFDaEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0Zm9saW8tcHJvamVjdC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2VudHJ5K3V0aWxzQDguMTcuMC9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9idWlsZC9janMvc3RyaW5nLmpzPzk3MTgiXSwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxuY29uc3QgaXMgPSByZXF1aXJlKCcuL2lzLmpzJyk7XG5cbi8qKlxuICogVHJ1bmNhdGVzIGdpdmVuIHN0cmluZyB0byB0aGUgbWF4aW11bSBjaGFyYWN0ZXJzIGNvdW50XG4gKlxuICogQHBhcmFtIHN0ciBBbiBvYmplY3QgdGhhdCBjb250YWlucyBzZXJpYWxpemFibGUgdmFsdWVzXG4gKiBAcGFyYW0gbWF4IE1heGltdW0gbnVtYmVyIG9mIGNoYXJhY3RlcnMgaW4gdHJ1bmNhdGVkIHN0cmluZyAoMCA9IHVubGltaXRlZClcbiAqIEByZXR1cm5zIHN0cmluZyBFbmNvZGVkXG4gKi9cbmZ1bmN0aW9uIHRydW5jYXRlKHN0ciwgbWF4ID0gMCkge1xuICBpZiAodHlwZW9mIHN0ciAhPT0gJ3N0cmluZycgfHwgbWF4ID09PSAwKSB7XG4gICAgcmV0dXJuIHN0cjtcbiAgfVxuICByZXR1cm4gc3RyLmxlbmd0aCA8PSBtYXggPyBzdHIgOiBgJHtzdHIuc2xpY2UoMCwgbWF4KX0uLi5gO1xufVxuXG4vKipcbiAqIFRoaXMgaXMgYmFzaWNhbGx5IGp1c3QgYHRyaW1fbGluZWAgZnJvbVxuICogaHR0cHM6Ly9naXRodWIuY29tL2dldHNlbnRyeS9zZW50cnkvYmxvYi9tYXN0ZXIvc3JjL3NlbnRyeS9sYW5nL2phdmFzY3JpcHQvcHJvY2Vzc29yLnB5I0w2N1xuICpcbiAqIEBwYXJhbSBzdHIgQW4gb2JqZWN0IHRoYXQgY29udGFpbnMgc2VyaWFsaXphYmxlIHZhbHVlc1xuICogQHBhcmFtIG1heCBNYXhpbXVtIG51bWJlciBvZiBjaGFyYWN0ZXJzIGluIHRydW5jYXRlZCBzdHJpbmdcbiAqIEByZXR1cm5zIHN0cmluZyBFbmNvZGVkXG4gKi9cbmZ1bmN0aW9uIHNuaXBMaW5lKGxpbmUsIGNvbG5vKSB7XG4gIGxldCBuZXdMaW5lID0gbGluZTtcbiAgY29uc3QgbGluZUxlbmd0aCA9IG5ld0xpbmUubGVuZ3RoO1xuICBpZiAobGluZUxlbmd0aCA8PSAxNTApIHtcbiAgICByZXR1cm4gbmV3TGluZTtcbiAgfVxuICBpZiAoY29sbm8gPiBsaW5lTGVuZ3RoKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gICAgY29sbm8gPSBsaW5lTGVuZ3RoO1xuICB9XG5cbiAgbGV0IHN0YXJ0ID0gTWF0aC5tYXgoY29sbm8gLSA2MCwgMCk7XG4gIGlmIChzdGFydCA8IDUpIHtcbiAgICBzdGFydCA9IDA7XG4gIH1cblxuICBsZXQgZW5kID0gTWF0aC5taW4oc3RhcnQgKyAxNDAsIGxpbmVMZW5ndGgpO1xuICBpZiAoZW5kID4gbGluZUxlbmd0aCAtIDUpIHtcbiAgICBlbmQgPSBsaW5lTGVuZ3RoO1xuICB9XG4gIGlmIChlbmQgPT09IGxpbmVMZW5ndGgpIHtcbiAgICBzdGFydCA9IE1hdGgubWF4KGVuZCAtIDE0MCwgMCk7XG4gIH1cblxuICBuZXdMaW5lID0gbmV3TGluZS5zbGljZShzdGFydCwgZW5kKTtcbiAgaWYgKHN0YXJ0ID4gMCkge1xuICAgIG5ld0xpbmUgPSBgJ3tzbmlwfSAke25ld0xpbmV9YDtcbiAgfVxuICBpZiAoZW5kIDwgbGluZUxlbmd0aCkge1xuICAgIG5ld0xpbmUgKz0gJyB7c25pcH0nO1xuICB9XG5cbiAgcmV0dXJuIG5ld0xpbmU7XG59XG5cbi8qKlxuICogSm9pbiB2YWx1ZXMgaW4gYXJyYXlcbiAqIEBwYXJhbSBpbnB1dCBhcnJheSBvZiB2YWx1ZXMgdG8gYmUgam9pbmVkIHRvZ2V0aGVyXG4gKiBAcGFyYW0gZGVsaW1pdGVyIHN0cmluZyB0byBiZSBwbGFjZWQgaW4tYmV0d2VlbiB2YWx1ZXNcbiAqIEByZXR1cm5zIEpvaW5lZCB2YWx1ZXNcbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbmZ1bmN0aW9uIHNhZmVKb2luKGlucHV0LCBkZWxpbWl0ZXIpIHtcbiAgaWYgKCFBcnJheS5pc0FycmF5KGlucHV0KSkge1xuICAgIHJldHVybiAnJztcbiAgfVxuXG4gIGNvbnN0IG91dHB1dCA9IFtdO1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L3ByZWZlci1mb3Itb2ZcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBpbnB1dC5sZW5ndGg7IGkrKykge1xuICAgIGNvbnN0IHZhbHVlID0gaW5wdXRbaV07XG4gICAgdHJ5IHtcbiAgICAgIC8vIFRoaXMgaXMgYSBoYWNrIHRvIGZpeCBhIFZ1ZTMtc3BlY2lmaWMgYnVnIHRoYXQgY2F1c2VzIGFuIGluZmluaXRlIGxvb3Agb2ZcbiAgICAgIC8vIGNvbnNvbGUgd2FybmluZ3MuIFRoaXMgaGFwcGVucyB3aGVuIGEgVnVlIHRlbXBsYXRlIGlzIHJlbmRlcmVkIHdpdGhcbiAgICAgIC8vIGFuIHVuZGVjbGFyZWQgdmFyaWFibGUsIHdoaWNoIHdlIHRyeSB0byBzdHJpbmdpZnksIHVsdGltYXRlbHkgY2F1c2luZ1xuICAgICAgLy8gVnVlIHRvIGlzc3VlIGFub3RoZXIgd2FybmluZyB3aGljaCByZXBlYXRzIGluZGVmaW5pdGVseS5cbiAgICAgIC8vIHNlZTogaHR0cHM6Ly9naXRodWIuY29tL2dldHNlbnRyeS9zZW50cnktamF2YXNjcmlwdC9wdWxsLzg5ODFcbiAgICAgIGlmIChpcy5pc1Z1ZVZpZXdNb2RlbCh2YWx1ZSkpIHtcbiAgICAgICAgb3V0cHV0LnB1c2goJ1tWdWVWaWV3TW9kZWxdJyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBvdXRwdXQucHVzaChTdHJpbmcodmFsdWUpKTtcbiAgICAgIH1cbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBvdXRwdXQucHVzaCgnW3ZhbHVlIGNhbm5vdCBiZSBzZXJpYWxpemVkXScpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBvdXRwdXQuam9pbihkZWxpbWl0ZXIpO1xufVxuXG4vKipcbiAqIENoZWNrcyBpZiB0aGUgZ2l2ZW4gdmFsdWUgbWF0Y2hlcyBhIHJlZ2V4IG9yIHN0cmluZ1xuICpcbiAqIEBwYXJhbSB2YWx1ZSBUaGUgc3RyaW5nIHRvIHRlc3RcbiAqIEBwYXJhbSBwYXR0ZXJuIEVpdGhlciBhIHJlZ2V4IG9yIGEgc3RyaW5nIGFnYWluc3Qgd2hpY2ggYHZhbHVlYCB3aWxsIGJlIG1hdGNoZWRcbiAqIEBwYXJhbSByZXF1aXJlRXhhY3RTdHJpbmdNYXRjaCBJZiB0cnVlLCBgdmFsdWVgIG11c3QgbWF0Y2ggYHBhdHRlcm5gIGV4YWN0bHkuIElmIGZhbHNlLCBgdmFsdWVgIHdpbGwgbWF0Y2hcbiAqIGBwYXR0ZXJuYCBpZiBpdCBjb250YWlucyBgcGF0dGVybmAuIE9ubHkgYXBwbGllcyB0byBzdHJpbmctdHlwZSBwYXR0ZXJucy5cbiAqL1xuZnVuY3Rpb24gaXNNYXRjaGluZ1BhdHRlcm4oXG4gIHZhbHVlLFxuICBwYXR0ZXJuLFxuICByZXF1aXJlRXhhY3RTdHJpbmdNYXRjaCA9IGZhbHNlLFxuKSB7XG4gIGlmICghaXMuaXNTdHJpbmcodmFsdWUpKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgaWYgKGlzLmlzUmVnRXhwKHBhdHRlcm4pKSB7XG4gICAgcmV0dXJuIHBhdHRlcm4udGVzdCh2YWx1ZSk7XG4gIH1cbiAgaWYgKGlzLmlzU3RyaW5nKHBhdHRlcm4pKSB7XG4gICAgcmV0dXJuIHJlcXVpcmVFeGFjdFN0cmluZ01hdGNoID8gdmFsdWUgPT09IHBhdHRlcm4gOiB2YWx1ZS5pbmNsdWRlcyhwYXR0ZXJuKTtcbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn1cblxuLyoqXG4gKiBUZXN0IHRoZSBnaXZlbiBzdHJpbmcgYWdhaW5zdCBhbiBhcnJheSBvZiBzdHJpbmdzIGFuZCByZWdleGVzLiBCeSBkZWZhdWx0LCBzdHJpbmcgbWF0Y2hpbmcgaXMgZG9uZSBvbiBhXG4gKiBzdWJzdHJpbmctaW5jbHVzaW9uIGJhc2lzIHJhdGhlciB0aGFuIGEgc3RyaWN0IGVxdWFsaXR5IGJhc2lzXG4gKlxuICogQHBhcmFtIHRlc3RTdHJpbmcgVGhlIHN0cmluZyB0byB0ZXN0XG4gKiBAcGFyYW0gcGF0dGVybnMgVGhlIHBhdHRlcm5zIGFnYWluc3Qgd2hpY2ggdG8gdGVzdCB0aGUgc3RyaW5nXG4gKiBAcGFyYW0gcmVxdWlyZUV4YWN0U3RyaW5nTWF0Y2ggSWYgdHJ1ZSwgYHRlc3RTdHJpbmdgIG11c3QgbWF0Y2ggb25lIG9mIHRoZSBnaXZlbiBzdHJpbmcgcGF0dGVybnMgZXhhY3RseSBpbiBvcmRlciB0b1xuICogY291bnQuIElmIGZhbHNlLCBgdGVzdFN0cmluZ2Agd2lsbCBtYXRjaCBhIHN0cmluZyBwYXR0ZXJuIGlmIGl0IGNvbnRhaW5zIHRoYXQgcGF0dGVybi5cbiAqIEByZXR1cm5zXG4gKi9cbmZ1bmN0aW9uIHN0cmluZ01hdGNoZXNTb21lUGF0dGVybihcbiAgdGVzdFN0cmluZyxcbiAgcGF0dGVybnMgPSBbXSxcbiAgcmVxdWlyZUV4YWN0U3RyaW5nTWF0Y2ggPSBmYWxzZSxcbikge1xuICByZXR1cm4gcGF0dGVybnMuc29tZShwYXR0ZXJuID0+IGlzTWF0Y2hpbmdQYXR0ZXJuKHRlc3RTdHJpbmcsIHBhdHRlcm4sIHJlcXVpcmVFeGFjdFN0cmluZ01hdGNoKSk7XG59XG5cbmV4cG9ydHMuaXNNYXRjaGluZ1BhdHRlcm4gPSBpc01hdGNoaW5nUGF0dGVybjtcbmV4cG9ydHMuc2FmZUpvaW4gPSBzYWZlSm9pbjtcbmV4cG9ydHMuc25pcExpbmUgPSBzbmlwTGluZTtcbmV4cG9ydHMuc3RyaW5nTWF0Y2hlc1NvbWVQYXR0ZXJuID0gc3RyaW5nTWF0Y2hlc1NvbWVQYXR0ZXJuO1xuZXhwb3J0cy50cnVuY2F0ZSA9IHRydW5jYXRlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3RyaW5nLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/string.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/supports.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/supports.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst debugBuild = __webpack_require__(/*! ./debug-build.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/debug-build.js\");\nconst logger = __webpack_require__(/*! ./logger.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/logger.js\");\nconst worldwide = __webpack_require__(/*! ./worldwide.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/worldwide.js\");\n\nconst WINDOW = worldwide.GLOBAL_OBJ ;\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsErrorEvent() {\n  try {\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMError() {\n  try {\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-expect-error It really needs 1 argument, not 0.\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMException() {\n  try {\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsFetch() {\n  if (!('fetch' in WINDOW)) {\n    return false;\n  }\n\n  try {\n    new Headers();\n    new Request('http://www.example.com');\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * isNative checks if the given function is a native implementation\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction isNativeFunction(func) {\n  return func && /^function\\s+\\w+\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nfunction supportsNativeFetch() {\n  if (typeof EdgeRuntime === 'string') {\n    return true;\n  }\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  // Fast path to avoid DOM I/O\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  if (isNativeFunction(WINDOW.fetch)) {\n    return true;\n  }\n\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  let result = false;\n  const doc = WINDOW.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (doc && typeof (doc.createElement ) === 'function') {\n    try {\n      const sandbox = doc.createElement('iframe');\n      sandbox.hidden = true;\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        result = isNativeFunction(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      debugBuild.DEBUG_BUILD &&\n        logger.logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReportingObserver() {\n  return 'ReportingObserver' in WINDOW;\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReferrerPolicy() {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default'\n  // (see https://caniuse.com/#feat=referrer-policy),\n  // it doesn't. And it throws an exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  try {\n    new Request('_', {\n      referrerPolicy: 'origin' ,\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nexports.isNativeFunction = isNativeFunction;\nexports.supportsDOMError = supportsDOMError;\nexports.supportsDOMException = supportsDOMException;\nexports.supportsErrorEvent = supportsErrorEvent;\nexports.supportsFetch = supportsFetch;\nexports.supportsNativeFetch = supportsNativeFetch;\nexports.supportsReferrerPolicy = supportsReferrerPolicy;\nexports.supportsReportingObserver = supportsReportingObserver;\n//# sourceMappingURL=supports.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/supports.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/syncpromise.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/syncpromise.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst is = __webpack_require__(/*! ./is.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/is.js\");\n\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/** SyncPromise internal states */\nvar States; (function (States) {\n  /** Pending */\n  const PENDING = 0; States[States[\"PENDING\"] = PENDING] = \"PENDING\";\n  /** Resolved / OK */\n  const RESOLVED = 1; States[States[\"RESOLVED\"] = RESOLVED] = \"RESOLVED\";\n  /** Rejected / Error */\n  const REJECTED = 2; States[States[\"REJECTED\"] = REJECTED] = \"REJECTED\";\n})(States || (States = {}));\n\n// Overloads so we can call resolvedSyncPromise without arguments and generic argument\n\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nfunction resolvedSyncPromise(value) {\n  return new SyncPromise(resolve => {\n    resolve(value);\n  });\n}\n\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nfunction rejectedSyncPromise(reason) {\n  return new SyncPromise((_, reject) => {\n    reject(reason);\n  });\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise {\n\n   constructor(\n    executor,\n  ) {SyncPromise.prototype.__init.call(this);SyncPromise.prototype.__init2.call(this);SyncPromise.prototype.__init3.call(this);SyncPromise.prototype.__init4.call(this);\n    this._state = States.PENDING;\n    this._handlers = [];\n\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n   then(\n    onfulfilled,\n    onrejected,\n  ) {\n    return new SyncPromise((resolve, reject) => {\n      this._handlers.push([\n        false,\n        result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result );\n          } else {\n            try {\n              resolve(onfulfilled(result));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n        reason => {\n          if (!onrejected) {\n            reject(reason);\n          } else {\n            try {\n              resolve(onrejected(reason));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n      ]);\n      this._executeHandlers();\n    });\n  }\n\n  /** JSDoc */\n   catch(\n    onrejected,\n  ) {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n   finally(onfinally) {\n    return new SyncPromise((resolve, reject) => {\n      let val;\n      let isRejected;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val );\n      });\n    });\n  }\n\n  /** JSDoc */\n    __init() {this._resolve = (value) => {\n    this._setResult(States.RESOLVED, value);\n  };}\n\n  /** JSDoc */\n    __init2() {this._reject = (reason) => {\n    this._setResult(States.REJECTED, reason);\n  };}\n\n  /** JSDoc */\n    __init3() {this._setResult = (state, value) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if (is.isThenable(value)) {\n      void (value ).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };}\n\n  /** JSDoc */\n    __init4() {this._executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    const cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler[0]) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n        handler[1](this._value );\n      }\n\n      if (this._state === States.REJECTED) {\n        handler[2](this._value);\n      }\n\n      handler[0] = true;\n    });\n  };}\n}\n\nexports.SyncPromise = SyncPromise;\nexports.rejectedSyncPromise = rejectedSyncPromise;\nexports.resolvedSyncPromise = resolvedSyncPromise;\n//# sourceMappingURL=syncpromise.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/syncpromise.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/time.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/time.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst worldwide = __webpack_require__(/*! ./worldwide.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/worldwide.js\");\n\nconst ONE_SECOND_IN_MS = 1000;\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high-resolution monotonic clock.\n */\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n *\n * TODO(v8): Return type should be rounded.\n */\nfunction dateTimestampInSeconds() {\n  return Date.now() / ONE_SECOND_IN_MS;\n}\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction createUnixTimestampInSecondsFunc() {\n  const { performance } = worldwide.GLOBAL_OBJ ;\n  if (!performance || !performance.now) {\n    return dateTimestampInSeconds;\n  }\n\n  // Some browser and environments don't have a timeOrigin, so we fallback to\n  // using Date.now() to compute the starting time.\n  const approxStartingTimeOrigin = Date.now() - performance.now();\n  const timeOrigin = performance.timeOrigin == undefined ? approxStartingTimeOrigin : performance.timeOrigin;\n\n  // performance.now() is a monotonic clock, which means it starts at 0 when the process begins. To get the current\n  // wall clock time (actual UNIX timestamp), we need to add the starting time origin and the current time elapsed.\n  //\n  // TODO: This does not account for the case where the monotonic clock that powers performance.now() drifts from the\n  // wall clock time, which causes the returned timestamp to be inaccurate. We should investigate how to detect and\n  // correct for this.\n  // See: https://github.com/getsentry/sentry-javascript/issues/2590\n  // See: https://github.com/mdn/content/issues/4713\n  // See: https://dev.to/noamr/when-a-millisecond-is-not-a-millisecond-3h6\n  return () => {\n    return (timeOrigin + performance.now()) / ONE_SECOND_IN_MS;\n  };\n}\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nconst timestampInSeconds = createUnixTimestampInSecondsFunc();\n\n/**\n * Internal helper to store what is the source of browserPerformanceTimeOrigin below. For debugging only.\n */\nexports._browserPerformanceTimeOriginMode = void 0;\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nconst browserPerformanceTimeOrigin = (() => {\n  // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n  // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n  // data as reliable if they are within a reasonable threshold of the current time.\n\n  const { performance } = worldwide.GLOBAL_OBJ ;\n  if (!performance || !performance.now) {\n    exports._browserPerformanceTimeOriginMode = 'none';\n    return undefined;\n  }\n\n  const threshold = 3600 * 1000;\n  const performanceNow = performance.now();\n  const dateNow = Date.now();\n\n  // if timeOrigin isn't available set delta to threshold so it isn't used\n  const timeOriginDelta = performance.timeOrigin\n    ? Math.abs(performance.timeOrigin + performanceNow - dateNow)\n    : threshold;\n  const timeOriginIsReliable = timeOriginDelta < threshold;\n\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n  // eslint-disable-next-line deprecation/deprecation\n  const navigationStart = performance.timing && performance.timing.navigationStart;\n  const hasNavigationStart = typeof navigationStart === 'number';\n  // if navigationStart isn't available set delta to threshold so it isn't used\n  const navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;\n  const navigationStartIsReliable = navigationStartDelta < threshold;\n\n  if (timeOriginIsReliable || navigationStartIsReliable) {\n    // Use the more reliable time origin\n    if (timeOriginDelta <= navigationStartDelta) {\n      exports._browserPerformanceTimeOriginMode = 'timeOrigin';\n      return performance.timeOrigin;\n    } else {\n      exports._browserPerformanceTimeOriginMode = 'navigationStart';\n      return navigationStart;\n    }\n  }\n\n  // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n  exports._browserPerformanceTimeOriginMode = 'dateNow';\n  return dateNow;\n})();\n\nexports.browserPerformanceTimeOrigin = browserPerformanceTimeOrigin;\nexports.dateTimestampInSeconds = dateTimestampInSeconds;\nexports.timestampInSeconds = timestampInSeconds;\n//# sourceMappingURL=time.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL3RpbWUuanMiLCJtYXBwaW5ncyI6IkFBQUEsOENBQTZDLEVBQUUsYUFBYSxFQUFDOztBQUU3RCxrQkFBa0IsbUJBQU8sQ0FBQyx5SEFBZ0I7O0FBRTFDOztBQUVBO0FBQ0EscURBQXFEO0FBQ3JEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsY0FBYztBQUN4QjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EseUNBQXlDOztBQUV6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFVBQVUsY0FBYztBQUN4QjtBQUNBLElBQUkseUNBQXlDO0FBQzdDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLHlDQUF5QztBQUMvQztBQUNBLE1BQU07QUFDTixNQUFNLHlDQUF5QztBQUMvQztBQUNBO0FBQ0E7O0FBRUE7QUFDQSxFQUFFLHlDQUF5QztBQUMzQztBQUNBLENBQUM7O0FBRUQsb0NBQW9DO0FBQ3BDLDhCQUE4QjtBQUM5QiwwQkFBMEI7QUFDMUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0Zm9saW8tcHJvamVjdC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2VudHJ5K3V0aWxzQDguMTcuMC9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9idWlsZC9janMvdGltZS5qcz8yZTk4Il0sInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG5cbmNvbnN0IHdvcmxkd2lkZSA9IHJlcXVpcmUoJy4vd29ybGR3aWRlLmpzJyk7XG5cbmNvbnN0IE9ORV9TRUNPTkRfSU5fTVMgPSAxMDAwO1xuXG4vKipcbiAqIEEgcGFydGlhbCBkZWZpbml0aW9uIG9mIHRoZSBbUGVyZm9ybWFuY2UgV2ViIEFQSV17QGxpbmsgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL1BlcmZvcm1hbmNlfVxuICogZm9yIGFjY2Vzc2luZyBhIGhpZ2gtcmVzb2x1dGlvbiBtb25vdG9uaWMgY2xvY2suXG4gKi9cblxuLyoqXG4gKiBSZXR1cm5zIGEgdGltZXN0YW1wIGluIHNlY29uZHMgc2luY2UgdGhlIFVOSVggZXBvY2ggdXNpbmcgdGhlIERhdGUgQVBJLlxuICpcbiAqIFRPRE8odjgpOiBSZXR1cm4gdHlwZSBzaG91bGQgYmUgcm91bmRlZC5cbiAqL1xuZnVuY3Rpb24gZGF0ZVRpbWVzdGFtcEluU2Vjb25kcygpIHtcbiAgcmV0dXJuIERhdGUubm93KCkgLyBPTkVfU0VDT05EX0lOX01TO1xufVxuXG4vKipcbiAqIFJldHVybnMgYSB3cmFwcGVyIGFyb3VuZCB0aGUgbmF0aXZlIFBlcmZvcm1hbmNlIEFQSSBicm93c2VyIGltcGxlbWVudGF0aW9uLCBvciB1bmRlZmluZWQgZm9yIGJyb3dzZXJzIHRoYXQgZG8gbm90XG4gKiBzdXBwb3J0IHRoZSBBUEkuXG4gKlxuICogV3JhcHBpbmcgdGhlIG5hdGl2ZSBBUEkgd29ya3MgYXJvdW5kIGRpZmZlcmVuY2VzIGluIGJlaGF2aW9yIGZyb20gZGlmZmVyZW50IGJyb3dzZXJzLlxuICovXG5mdW5jdGlvbiBjcmVhdGVVbml4VGltZXN0YW1wSW5TZWNvbmRzRnVuYygpIHtcbiAgY29uc3QgeyBwZXJmb3JtYW5jZSB9ID0gd29ybGR3aWRlLkdMT0JBTF9PQkogO1xuICBpZiAoIXBlcmZvcm1hbmNlIHx8ICFwZXJmb3JtYW5jZS5ub3cpIHtcbiAgICByZXR1cm4gZGF0ZVRpbWVzdGFtcEluU2Vjb25kcztcbiAgfVxuXG4gIC8vIFNvbWUgYnJvd3NlciBhbmQgZW52aXJvbm1lbnRzIGRvbid0IGhhdmUgYSB0aW1lT3JpZ2luLCBzbyB3ZSBmYWxsYmFjayB0b1xuICAvLyB1c2luZyBEYXRlLm5vdygpIHRvIGNvbXB1dGUgdGhlIHN0YXJ0aW5nIHRpbWUuXG4gIGNvbnN0IGFwcHJveFN0YXJ0aW5nVGltZU9yaWdpbiA9IERhdGUubm93KCkgLSBwZXJmb3JtYW5jZS5ub3coKTtcbiAgY29uc3QgdGltZU9yaWdpbiA9IHBlcmZvcm1hbmNlLnRpbWVPcmlnaW4gPT0gdW5kZWZpbmVkID8gYXBwcm94U3RhcnRpbmdUaW1lT3JpZ2luIDogcGVyZm9ybWFuY2UudGltZU9yaWdpbjtcblxuICAvLyBwZXJmb3JtYW5jZS5ub3coKSBpcyBhIG1vbm90b25pYyBjbG9jaywgd2hpY2ggbWVhbnMgaXQgc3RhcnRzIGF0IDAgd2hlbiB0aGUgcHJvY2VzcyBiZWdpbnMuIFRvIGdldCB0aGUgY3VycmVudFxuICAvLyB3YWxsIGNsb2NrIHRpbWUgKGFjdHVhbCBVTklYIHRpbWVzdGFtcCksIHdlIG5lZWQgdG8gYWRkIHRoZSBzdGFydGluZyB0aW1lIG9yaWdpbiBhbmQgdGhlIGN1cnJlbnQgdGltZSBlbGFwc2VkLlxuICAvL1xuICAvLyBUT0RPOiBUaGlzIGRvZXMgbm90IGFjY291bnQgZm9yIHRoZSBjYXNlIHdoZXJlIHRoZSBtb25vdG9uaWMgY2xvY2sgdGhhdCBwb3dlcnMgcGVyZm9ybWFuY2Uubm93KCkgZHJpZnRzIGZyb20gdGhlXG4gIC8vIHdhbGwgY2xvY2sgdGltZSwgd2hpY2ggY2F1c2VzIHRoZSByZXR1cm5lZCB0aW1lc3RhbXAgdG8gYmUgaW5hY2N1cmF0ZS4gV2Ugc2hvdWxkIGludmVzdGlnYXRlIGhvdyB0byBkZXRlY3QgYW5kXG4gIC8vIGNvcnJlY3QgZm9yIHRoaXMuXG4gIC8vIFNlZTogaHR0cHM6Ly9naXRodWIuY29tL2dldHNlbnRyeS9zZW50cnktamF2YXNjcmlwdC9pc3N1ZXMvMjU5MFxuICAvLyBTZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9tZG4vY29udGVudC9pc3N1ZXMvNDcxM1xuICAvLyBTZWU6IGh0dHBzOi8vZGV2LnRvL25vYW1yL3doZW4tYS1taWxsaXNlY29uZC1pcy1ub3QtYS1taWxsaXNlY29uZC0zaDZcbiAgcmV0dXJuICgpID0+IHtcbiAgICByZXR1cm4gKHRpbWVPcmlnaW4gKyBwZXJmb3JtYW5jZS5ub3coKSkgLyBPTkVfU0VDT05EX0lOX01TO1xuICB9O1xufVxuXG4vKipcbiAqIFJldHVybnMgYSB0aW1lc3RhbXAgaW4gc2Vjb25kcyBzaW5jZSB0aGUgVU5JWCBlcG9jaCB1c2luZyBlaXRoZXIgdGhlIFBlcmZvcm1hbmNlIG9yIERhdGUgQVBJcywgZGVwZW5kaW5nIG9uIHRoZVxuICogYXZhaWxhYmlsaXR5IG9mIHRoZSBQZXJmb3JtYW5jZSBBUEkuXG4gKlxuICogQlVHOiBOb3RlIHRoYXQgYmVjYXVzZSBvZiBob3cgYnJvd3NlcnMgaW1wbGVtZW50IHRoZSBQZXJmb3JtYW5jZSBBUEksIHRoZSBjbG9jayBtaWdodCBzdG9wIHdoZW4gdGhlIGNvbXB1dGVyIGlzXG4gKiBhc2xlZXAuIFRoaXMgY3JlYXRlcyBhIHNrZXcgYmV0d2VlbiBgZGF0ZVRpbWVzdGFtcEluU2Vjb25kc2AgYW5kIGB0aW1lc3RhbXBJblNlY29uZHNgLiBUaGVcbiAqIHNrZXcgY2FuIGdyb3cgdG8gYXJiaXRyYXJ5IGFtb3VudHMgbGlrZSBkYXlzLCB3ZWVrcyBvciBtb250aHMuXG4gKiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL2dldHNlbnRyeS9zZW50cnktamF2YXNjcmlwdC9pc3N1ZXMvMjU5MC5cbiAqL1xuY29uc3QgdGltZXN0YW1wSW5TZWNvbmRzID0gY3JlYXRlVW5peFRpbWVzdGFtcEluU2Vjb25kc0Z1bmMoKTtcblxuLyoqXG4gKiBJbnRlcm5hbCBoZWxwZXIgdG8gc3RvcmUgd2hhdCBpcyB0aGUgc291cmNlIG9mIGJyb3dzZXJQZXJmb3JtYW5jZVRpbWVPcmlnaW4gYmVsb3cuIEZvciBkZWJ1Z2dpbmcgb25seS5cbiAqL1xuZXhwb3J0cy5fYnJvd3NlclBlcmZvcm1hbmNlVGltZU9yaWdpbk1vZGUgPSB2b2lkIDA7XG5cbi8qKlxuICogVGhlIG51bWJlciBvZiBtaWxsaXNlY29uZHMgc2luY2UgdGhlIFVOSVggZXBvY2guIFRoaXMgdmFsdWUgaXMgb25seSB1c2FibGUgaW4gYSBicm93c2VyLCBhbmQgb25seSB3aGVuIHRoZVxuICogcGVyZm9ybWFuY2UgQVBJIGlzIGF2YWlsYWJsZS5cbiAqL1xuY29uc3QgYnJvd3NlclBlcmZvcm1hbmNlVGltZU9yaWdpbiA9ICgoKSA9PiB7XG4gIC8vIFVuZm9ydHVuYXRlbHkgYnJvd3NlcnMgbWF5IHJlcG9ydCBhbiBpbmFjY3VyYXRlIHRpbWUgb3JpZ2luIGRhdGEsIHRocm91Z2ggZWl0aGVyIHBlcmZvcm1hbmNlLnRpbWVPcmlnaW4gb3JcbiAgLy8gcGVyZm9ybWFuY2UudGltaW5nLm5hdmlnYXRpb25TdGFydCwgd2hpY2ggcmVzdWx0cyBpbiBwb29yIHJlc3VsdHMgaW4gcGVyZm9ybWFuY2UgZGF0YS4gV2Ugb25seSB0cmVhdCB0aW1lIG9yaWdpblxuICAvLyBkYXRhIGFzIHJlbGlhYmxlIGlmIHRoZXkgYXJlIHdpdGhpbiBhIHJlYXNvbmFibGUgdGhyZXNob2xkIG9mIHRoZSBjdXJyZW50IHRpbWUuXG5cbiAgY29uc3QgeyBwZXJmb3JtYW5jZSB9ID0gd29ybGR3aWRlLkdMT0JBTF9PQkogO1xuICBpZiAoIXBlcmZvcm1hbmNlIHx8ICFwZXJmb3JtYW5jZS5ub3cpIHtcbiAgICBleHBvcnRzLl9icm93c2VyUGVyZm9ybWFuY2VUaW1lT3JpZ2luTW9kZSA9ICdub25lJztcbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG5cbiAgY29uc3QgdGhyZXNob2xkID0gMzYwMCAqIDEwMDA7XG4gIGNvbnN0IHBlcmZvcm1hbmNlTm93ID0gcGVyZm9ybWFuY2Uubm93KCk7XG4gIGNvbnN0IGRhdGVOb3cgPSBEYXRlLm5vdygpO1xuXG4gIC8vIGlmIHRpbWVPcmlnaW4gaXNuJ3QgYXZhaWxhYmxlIHNldCBkZWx0YSB0byB0aHJlc2hvbGQgc28gaXQgaXNuJ3QgdXNlZFxuICBjb25zdCB0aW1lT3JpZ2luRGVsdGEgPSBwZXJmb3JtYW5jZS50aW1lT3JpZ2luXG4gICAgPyBNYXRoLmFicyhwZXJmb3JtYW5jZS50aW1lT3JpZ2luICsgcGVyZm9ybWFuY2VOb3cgLSBkYXRlTm93KVxuICAgIDogdGhyZXNob2xkO1xuICBjb25zdCB0aW1lT3JpZ2luSXNSZWxpYWJsZSA9IHRpbWVPcmlnaW5EZWx0YSA8IHRocmVzaG9sZDtcblxuICAvLyBXaGlsZSBwZXJmb3JtYW5jZS50aW1pbmcubmF2aWdhdGlvblN0YXJ0IGlzIGRlcHJlY2F0ZWQgaW4gZmF2b3Igb2YgcGVyZm9ybWFuY2UudGltZU9yaWdpbiwgcGVyZm9ybWFuY2UudGltZU9yaWdpblxuICAvLyBpcyBub3QgYXMgd2lkZWx5IHN1cHBvcnRlZC4gTmFtZWx5LCBwZXJmb3JtYW5jZS50aW1lT3JpZ2luIGlzIHVuZGVmaW5lZCBpbiBTYWZhcmkgYXMgb2Ygd3JpdGluZy5cbiAgLy8gQWxzbyBhcyBvZiB3cml0aW5nLCBwZXJmb3JtYW5jZS50aW1pbmcgaXMgbm90IGF2YWlsYWJsZSBpbiBXZWIgV29ya2VycyBpbiBtYWluc3RyZWFtIGJyb3dzZXJzLCBzbyBpdCBpcyBub3QgYWx3YXlzXG4gIC8vIGEgdmFsaWQgZmFsbGJhY2suIEluIHRoZSBhYnNlbmNlIG9mIGFuIGluaXRpYWwgdGltZSBwcm92aWRlZCBieSB0aGUgYnJvd3NlciwgZmFsbGJhY2sgdG8gdGhlIGN1cnJlbnQgdGltZSBmcm9tIHRoZVxuICAvLyBEYXRlIEFQSS5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG4gIGNvbnN0IG5hdmlnYXRpb25TdGFydCA9IHBlcmZvcm1hbmNlLnRpbWluZyAmJiBwZXJmb3JtYW5jZS50aW1pbmcubmF2aWdhdGlvblN0YXJ0O1xuICBjb25zdCBoYXNOYXZpZ2F0aW9uU3RhcnQgPSB0eXBlb2YgbmF2aWdhdGlvblN0YXJ0ID09PSAnbnVtYmVyJztcbiAgLy8gaWYgbmF2aWdhdGlvblN0YXJ0IGlzbid0IGF2YWlsYWJsZSBzZXQgZGVsdGEgdG8gdGhyZXNob2xkIHNvIGl0IGlzbid0IHVzZWRcbiAgY29uc3QgbmF2aWdhdGlvblN0YXJ0RGVsdGEgPSBoYXNOYXZpZ2F0aW9uU3RhcnQgPyBNYXRoLmFicyhuYXZpZ2F0aW9uU3RhcnQgKyBwZXJmb3JtYW5jZU5vdyAtIGRhdGVOb3cpIDogdGhyZXNob2xkO1xuICBjb25zdCBuYXZpZ2F0aW9uU3RhcnRJc1JlbGlhYmxlID0gbmF2aWdhdGlvblN0YXJ0RGVsdGEgPCB0aHJlc2hvbGQ7XG5cbiAgaWYgKHRpbWVPcmlnaW5Jc1JlbGlhYmxlIHx8IG5hdmlnYXRpb25TdGFydElzUmVsaWFibGUpIHtcbiAgICAvLyBVc2UgdGhlIG1vcmUgcmVsaWFibGUgdGltZSBvcmlnaW5cbiAgICBpZiAodGltZU9yaWdpbkRlbHRhIDw9IG5hdmlnYXRpb25TdGFydERlbHRhKSB7XG4gICAgICBleHBvcnRzLl9icm93c2VyUGVyZm9ybWFuY2VUaW1lT3JpZ2luTW9kZSA9ICd0aW1lT3JpZ2luJztcbiAgICAgIHJldHVybiBwZXJmb3JtYW5jZS50aW1lT3JpZ2luO1xuICAgIH0gZWxzZSB7XG4gICAgICBleHBvcnRzLl9icm93c2VyUGVyZm9ybWFuY2VUaW1lT3JpZ2luTW9kZSA9ICduYXZpZ2F0aW9uU3RhcnQnO1xuICAgICAgcmV0dXJuIG5hdmlnYXRpb25TdGFydDtcbiAgICB9XG4gIH1cblxuICAvLyBFaXRoZXIgYm90aCB0aW1lT3JpZ2luIGFuZCBuYXZpZ2F0aW9uU3RhcnQgYXJlIHNrZXdlZCBvciBuZWl0aGVyIGlzIGF2YWlsYWJsZSwgZmFsbGJhY2sgdG8gRGF0ZS5cbiAgZXhwb3J0cy5fYnJvd3NlclBlcmZvcm1hbmNlVGltZU9yaWdpbk1vZGUgPSAnZGF0ZU5vdyc7XG4gIHJldHVybiBkYXRlTm93O1xufSkoKTtcblxuZXhwb3J0cy5icm93c2VyUGVyZm9ybWFuY2VUaW1lT3JpZ2luID0gYnJvd3NlclBlcmZvcm1hbmNlVGltZU9yaWdpbjtcbmV4cG9ydHMuZGF0ZVRpbWVzdGFtcEluU2Vjb25kcyA9IGRhdGVUaW1lc3RhbXBJblNlY29uZHM7XG5leHBvcnRzLnRpbWVzdGFtcEluU2Vjb25kcyA9IHRpbWVzdGFtcEluU2Vjb25kcztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRpbWUuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/time.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/tracing.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/tracing.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst baggage = __webpack_require__(/*! ./baggage.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/baggage.js\");\nconst misc = __webpack_require__(/*! ./misc.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/misc.js\");\n\n// eslint-disable-next-line @sentry-internal/sdk/no-regexp-constructor -- RegExp is used for readability here\nconst TRACEPARENT_REGEXP = new RegExp(\n  '^[ \\\\t]*' + // whitespace\n    '([0-9a-f]{32})?' + // trace_id\n    '-?([0-9a-f]{16})?' + // span_id\n    '-?([01])?' + // sampled\n    '[ \\\\t]*$', // whitespace\n);\n\n/**\n * Extract transaction context data from a `sentry-trace` header.\n *\n * @param traceparent Traceparent string\n *\n * @returns Object containing data from the header, or undefined if traceparent string is malformed\n */\nfunction extractTraceparentData(traceparent) {\n  if (!traceparent) {\n    return undefined;\n  }\n\n  const matches = traceparent.match(TRACEPARENT_REGEXP);\n  if (!matches) {\n    return undefined;\n  }\n\n  let parentSampled;\n  if (matches[3] === '1') {\n    parentSampled = true;\n  } else if (matches[3] === '0') {\n    parentSampled = false;\n  }\n\n  return {\n    traceId: matches[1],\n    parentSampled,\n    parentSpanId: matches[2],\n  };\n}\n\n/**\n * Create a propagation context from incoming headers or\n * creates a minimal new one if the headers are undefined.\n */\nfunction propagationContextFromHeaders(\n  sentryTrace,\n  baggage$1,\n) {\n  const traceparentData = extractTraceparentData(sentryTrace);\n  const dynamicSamplingContext = baggage.baggageHeaderToDynamicSamplingContext(baggage$1);\n\n  const { traceId, parentSpanId, parentSampled } = traceparentData || {};\n\n  if (!traceparentData) {\n    return {\n      traceId: traceId || misc.uuid4(),\n      spanId: misc.uuid4().substring(16),\n    };\n  } else {\n    return {\n      traceId: traceId || misc.uuid4(),\n      parentSpanId: parentSpanId || misc.uuid4().substring(16),\n      spanId: misc.uuid4().substring(16),\n      sampled: parentSampled,\n      dsc: dynamicSamplingContext || {}, // If we have traceparent data but no DSC it means we are not head of trace and we must freeze it\n    };\n  }\n}\n\n/**\n * Create sentry-trace header from span context values.\n */\nfunction generateSentryTraceHeader(\n  traceId = misc.uuid4(),\n  spanId = misc.uuid4().substring(16),\n  sampled,\n) {\n  let sampledString = '';\n  if (sampled !== undefined) {\n    sampledString = sampled ? '-1' : '-0';\n  }\n  return `${traceId}-${spanId}${sampledString}`;\n}\n\nexports.TRACEPARENT_REGEXP = TRACEPARENT_REGEXP;\nexports.extractTraceparentData = extractTraceparentData;\nexports.generateSentryTraceHeader = generateSentryTraceHeader;\nexports.propagationContextFromHeaders = propagationContextFromHeaders;\n//# sourceMappingURL=tracing.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL3RyYWNpbmcuanMiLCJtYXBwaW5ncyI6IkFBQUEsOENBQTZDLEVBQUUsYUFBYSxFQUFDOztBQUU3RCxnQkFBZ0IsbUJBQU8sQ0FBQyxxSEFBYztBQUN0QyxhQUFhLG1CQUFPLENBQUMsK0dBQVc7O0FBRWhDO0FBQ0E7QUFDQTtBQUNBLGVBQWUsR0FBRztBQUNsQixpQkFBaUIsR0FBRztBQUNwQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsVUFBVSx1Q0FBdUM7O0FBRWpEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QztBQUN2QztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxRQUFRLEdBQUcsT0FBTyxFQUFFLGNBQWM7QUFDOUM7O0FBRUEsMEJBQTBCO0FBQzFCLDhCQUE4QjtBQUM5QixpQ0FBaUM7QUFDakMscUNBQXFDO0FBQ3JDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLXByb2plY3QvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL3RyYWNpbmcuanM/OGY0OSJdLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG5jb25zdCBiYWdnYWdlID0gcmVxdWlyZSgnLi9iYWdnYWdlLmpzJyk7XG5jb25zdCBtaXNjID0gcmVxdWlyZSgnLi9taXNjLmpzJyk7XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAc2VudHJ5LWludGVybmFsL3Nkay9uby1yZWdleHAtY29uc3RydWN0b3IgLS0gUmVnRXhwIGlzIHVzZWQgZm9yIHJlYWRhYmlsaXR5IGhlcmVcbmNvbnN0IFRSQUNFUEFSRU5UX1JFR0VYUCA9IG5ldyBSZWdFeHAoXG4gICdeWyBcXFxcdF0qJyArIC8vIHdoaXRlc3BhY2VcbiAgICAnKFswLTlhLWZdezMyfSk/JyArIC8vIHRyYWNlX2lkXG4gICAgJy0/KFswLTlhLWZdezE2fSk/JyArIC8vIHNwYW5faWRcbiAgICAnLT8oWzAxXSk/JyArIC8vIHNhbXBsZWRcbiAgICAnWyBcXFxcdF0qJCcsIC8vIHdoaXRlc3BhY2Vcbik7XG5cbi8qKlxuICogRXh0cmFjdCB0cmFuc2FjdGlvbiBjb250ZXh0IGRhdGEgZnJvbSBhIGBzZW50cnktdHJhY2VgIGhlYWRlci5cbiAqXG4gKiBAcGFyYW0gdHJhY2VwYXJlbnQgVHJhY2VwYXJlbnQgc3RyaW5nXG4gKlxuICogQHJldHVybnMgT2JqZWN0IGNvbnRhaW5pbmcgZGF0YSBmcm9tIHRoZSBoZWFkZXIsIG9yIHVuZGVmaW5lZCBpZiB0cmFjZXBhcmVudCBzdHJpbmcgaXMgbWFsZm9ybWVkXG4gKi9cbmZ1bmN0aW9uIGV4dHJhY3RUcmFjZXBhcmVudERhdGEodHJhY2VwYXJlbnQpIHtcbiAgaWYgKCF0cmFjZXBhcmVudCkge1xuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cblxuICBjb25zdCBtYXRjaGVzID0gdHJhY2VwYXJlbnQubWF0Y2goVFJBQ0VQQVJFTlRfUkVHRVhQKTtcbiAgaWYgKCFtYXRjaGVzKSB7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxuXG4gIGxldCBwYXJlbnRTYW1wbGVkO1xuICBpZiAobWF0Y2hlc1szXSA9PT0gJzEnKSB7XG4gICAgcGFyZW50U2FtcGxlZCA9IHRydWU7XG4gIH0gZWxzZSBpZiAobWF0Y2hlc1szXSA9PT0gJzAnKSB7XG4gICAgcGFyZW50U2FtcGxlZCA9IGZhbHNlO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICB0cmFjZUlkOiBtYXRjaGVzWzFdLFxuICAgIHBhcmVudFNhbXBsZWQsXG4gICAgcGFyZW50U3BhbklkOiBtYXRjaGVzWzJdLFxuICB9O1xufVxuXG4vKipcbiAqIENyZWF0ZSBhIHByb3BhZ2F0aW9uIGNvbnRleHQgZnJvbSBpbmNvbWluZyBoZWFkZXJzIG9yXG4gKiBjcmVhdGVzIGEgbWluaW1hbCBuZXcgb25lIGlmIHRoZSBoZWFkZXJzIGFyZSB1bmRlZmluZWQuXG4gKi9cbmZ1bmN0aW9uIHByb3BhZ2F0aW9uQ29udGV4dEZyb21IZWFkZXJzKFxuICBzZW50cnlUcmFjZSxcbiAgYmFnZ2FnZSQxLFxuKSB7XG4gIGNvbnN0IHRyYWNlcGFyZW50RGF0YSA9IGV4dHJhY3RUcmFjZXBhcmVudERhdGEoc2VudHJ5VHJhY2UpO1xuICBjb25zdCBkeW5hbWljU2FtcGxpbmdDb250ZXh0ID0gYmFnZ2FnZS5iYWdnYWdlSGVhZGVyVG9EeW5hbWljU2FtcGxpbmdDb250ZXh0KGJhZ2dhZ2UkMSk7XG5cbiAgY29uc3QgeyB0cmFjZUlkLCBwYXJlbnRTcGFuSWQsIHBhcmVudFNhbXBsZWQgfSA9IHRyYWNlcGFyZW50RGF0YSB8fCB7fTtcblxuICBpZiAoIXRyYWNlcGFyZW50RGF0YSkge1xuICAgIHJldHVybiB7XG4gICAgICB0cmFjZUlkOiB0cmFjZUlkIHx8IG1pc2MudXVpZDQoKSxcbiAgICAgIHNwYW5JZDogbWlzYy51dWlkNCgpLnN1YnN0cmluZygxNiksXG4gICAgfTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4ge1xuICAgICAgdHJhY2VJZDogdHJhY2VJZCB8fCBtaXNjLnV1aWQ0KCksXG4gICAgICBwYXJlbnRTcGFuSWQ6IHBhcmVudFNwYW5JZCB8fCBtaXNjLnV1aWQ0KCkuc3Vic3RyaW5nKDE2KSxcbiAgICAgIHNwYW5JZDogbWlzYy51dWlkNCgpLnN1YnN0cmluZygxNiksXG4gICAgICBzYW1wbGVkOiBwYXJlbnRTYW1wbGVkLFxuICAgICAgZHNjOiBkeW5hbWljU2FtcGxpbmdDb250ZXh0IHx8IHt9LCAvLyBJZiB3ZSBoYXZlIHRyYWNlcGFyZW50IGRhdGEgYnV0IG5vIERTQyBpdCBtZWFucyB3ZSBhcmUgbm90IGhlYWQgb2YgdHJhY2UgYW5kIHdlIG11c3QgZnJlZXplIGl0XG4gICAgfTtcbiAgfVxufVxuXG4vKipcbiAqIENyZWF0ZSBzZW50cnktdHJhY2UgaGVhZGVyIGZyb20gc3BhbiBjb250ZXh0IHZhbHVlcy5cbiAqL1xuZnVuY3Rpb24gZ2VuZXJhdGVTZW50cnlUcmFjZUhlYWRlcihcbiAgdHJhY2VJZCA9IG1pc2MudXVpZDQoKSxcbiAgc3BhbklkID0gbWlzYy51dWlkNCgpLnN1YnN0cmluZygxNiksXG4gIHNhbXBsZWQsXG4pIHtcbiAgbGV0IHNhbXBsZWRTdHJpbmcgPSAnJztcbiAgaWYgKHNhbXBsZWQgIT09IHVuZGVmaW5lZCkge1xuICAgIHNhbXBsZWRTdHJpbmcgPSBzYW1wbGVkID8gJy0xJyA6ICctMCc7XG4gIH1cbiAgcmV0dXJuIGAke3RyYWNlSWR9LSR7c3BhbklkfSR7c2FtcGxlZFN0cmluZ31gO1xufVxuXG5leHBvcnRzLlRSQUNFUEFSRU5UX1JFR0VYUCA9IFRSQUNFUEFSRU5UX1JFR0VYUDtcbmV4cG9ydHMuZXh0cmFjdFRyYWNlcGFyZW50RGF0YSA9IGV4dHJhY3RUcmFjZXBhcmVudERhdGE7XG5leHBvcnRzLmdlbmVyYXRlU2VudHJ5VHJhY2VIZWFkZXIgPSBnZW5lcmF0ZVNlbnRyeVRyYWNlSGVhZGVyO1xuZXhwb3J0cy5wcm9wYWdhdGlvbkNvbnRleHRGcm9tSGVhZGVycyA9IHByb3BhZ2F0aW9uQ29udGV4dEZyb21IZWFkZXJzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHJhY2luZy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/tracing.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/url.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/url.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nfunction parseUrl(url) {\n  if (!url) {\n    return {};\n  }\n\n  const match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  const query = match[6] || '';\n  const fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    search: query,\n    hash: fragment,\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nfunction stripUrlQueryAndFragment(urlPath) {\n  return (urlPath.split(/[?#]/, 1) )[0];\n}\n\n/**\n * Returns number of URL segments of a passed string URL.\n */\nfunction getNumberOfUrlSegments(url) {\n  // split at '/' or at '\\/' to split regex urls correctly\n  return url.split(/\\\\?\\//).filter(s => s.length > 0 && s !== ',').length;\n}\n\n/**\n * Takes a URL object and returns a sanitized string which is safe to use as span name\n * see: https://develop.sentry.dev/sdk/data-handling/#structuring-data\n */\nfunction getSanitizedUrlString(url) {\n  const { protocol, host, path } = url;\n\n  const filteredHost =\n    (host &&\n      host\n        // Always filter out authority\n        .replace(/^.*@/, '[filtered]:[filtered]@')\n        // Don't show standard :80 (http) and :443 (https) ports to reduce the noise\n        // TODO: Use new URL global if it exists\n        .replace(/(:80)$/, '')\n        .replace(/(:443)$/, '')) ||\n    '';\n\n  return `${protocol ? `${protocol}://` : ''}${filteredHost}${path}`;\n}\n\nexports.getNumberOfUrlSegments = getNumberOfUrlSegments;\nexports.getSanitizedUrlString = getSanitizedUrlString;\nexports.parseUrl = parseUrl;\nexports.stripUrlQueryAndFragment = stripUrlQueryAndFragment;\n//# sourceMappingURL=url.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL3VybC5qcyIsIm1hcHBpbmdzIjoiQUFBQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7O0FBRTdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsdUJBQXVCOztBQUVqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxZQUFZLGNBQWMsU0FBUyxVQUFVLEVBQUUsYUFBYSxFQUFFLEtBQUs7QUFDbkU7O0FBRUEsOEJBQThCO0FBQzlCLDZCQUE2QjtBQUM3QixnQkFBZ0I7QUFDaEIsZ0NBQWdDO0FBQ2hDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLXByb2plY3QvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL3VybC5qcz84OTkwIl0sInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG5cbi8qKlxuICogUGFyc2VzIHN0cmluZyBmb3JtIG9mIFVSTCBpbnRvIGFuIG9iamVjdFxuICogLy8gYm9ycm93ZWQgZnJvbSBodHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjMzk4NiNhcHBlbmRpeC1CXG4gKiAvLyBpbnRlbnRpb25hbGx5IHVzaW5nIHJlZ2V4IGFuZCBub3QgPGEvPiBocmVmIHBhcnNpbmcgdHJpY2sgYmVjYXVzZSBSZWFjdCBOYXRpdmUgYW5kIG90aGVyXG4gKiAvLyBlbnZpcm9ubWVudHMgd2hlcmUgRE9NIG1pZ2h0IG5vdCBiZSBhdmFpbGFibGVcbiAqIEByZXR1cm5zIHBhcnNlZCBVUkwgb2JqZWN0XG4gKi9cbmZ1bmN0aW9uIHBhcnNlVXJsKHVybCkge1xuICBpZiAoIXVybCkge1xuICAgIHJldHVybiB7fTtcbiAgfVxuXG4gIGNvbnN0IG1hdGNoID0gdXJsLm1hdGNoKC9eKChbXjovPyNdKyk6KT8oXFwvXFwvKFteLz8jXSopKT8oW14/I10qKShcXD8oW14jXSopKT8oIyguKikpPyQvKTtcblxuICBpZiAoIW1hdGNoKSB7XG4gICAgcmV0dXJuIHt9O1xuICB9XG5cbiAgLy8gY29lcmNlIHRvIHVuZGVmaW5lZCB2YWx1ZXMgdG8gZW1wdHkgc3RyaW5nIHNvIHdlIGRvbid0IGdldCAndW5kZWZpbmVkJ1xuICBjb25zdCBxdWVyeSA9IG1hdGNoWzZdIHx8ICcnO1xuICBjb25zdCBmcmFnbWVudCA9IG1hdGNoWzhdIHx8ICcnO1xuICByZXR1cm4ge1xuICAgIGhvc3Q6IG1hdGNoWzRdLFxuICAgIHBhdGg6IG1hdGNoWzVdLFxuICAgIHByb3RvY29sOiBtYXRjaFsyXSxcbiAgICBzZWFyY2g6IHF1ZXJ5LFxuICAgIGhhc2g6IGZyYWdtZW50LFxuICAgIHJlbGF0aXZlOiBtYXRjaFs1XSArIHF1ZXJ5ICsgZnJhZ21lbnQsIC8vIGV2ZXJ5dGhpbmcgbWludXMgb3JpZ2luXG4gIH07XG59XG5cbi8qKlxuICogU3RyaXAgdGhlIHF1ZXJ5IHN0cmluZyBhbmQgZnJhZ21lbnQgb2ZmIG9mIGEgZ2l2ZW4gVVJMIG9yIHBhdGggKGlmIHByZXNlbnQpXG4gKlxuICogQHBhcmFtIHVybFBhdGggRnVsbCBVUkwgb3IgcGF0aCwgaW5jbHVkaW5nIHBvc3NpYmxlIHF1ZXJ5IHN0cmluZyBhbmQvb3IgZnJhZ21lbnRcbiAqIEByZXR1cm5zIFVSTCBvciBwYXRoIHdpdGhvdXQgcXVlcnkgc3RyaW5nIG9yIGZyYWdtZW50XG4gKi9cbmZ1bmN0aW9uIHN0cmlwVXJsUXVlcnlBbmRGcmFnbWVudCh1cmxQYXRoKSB7XG4gIHJldHVybiAodXJsUGF0aC5zcGxpdCgvWz8jXS8sIDEpIClbMF07XG59XG5cbi8qKlxuICogUmV0dXJucyBudW1iZXIgb2YgVVJMIHNlZ21lbnRzIG9mIGEgcGFzc2VkIHN0cmluZyBVUkwuXG4gKi9cbmZ1bmN0aW9uIGdldE51bWJlck9mVXJsU2VnbWVudHModXJsKSB7XG4gIC8vIHNwbGl0IGF0ICcvJyBvciBhdCAnXFwvJyB0byBzcGxpdCByZWdleCB1cmxzIGNvcnJlY3RseVxuICByZXR1cm4gdXJsLnNwbGl0KC9cXFxcP1xcLy8pLmZpbHRlcihzID0+IHMubGVuZ3RoID4gMCAmJiBzICE9PSAnLCcpLmxlbmd0aDtcbn1cblxuLyoqXG4gKiBUYWtlcyBhIFVSTCBvYmplY3QgYW5kIHJldHVybnMgYSBzYW5pdGl6ZWQgc3RyaW5nIHdoaWNoIGlzIHNhZmUgdG8gdXNlIGFzIHNwYW4gbmFtZVxuICogc2VlOiBodHRwczovL2RldmVsb3Auc2VudHJ5LmRldi9zZGsvZGF0YS1oYW5kbGluZy8jc3RydWN0dXJpbmctZGF0YVxuICovXG5mdW5jdGlvbiBnZXRTYW5pdGl6ZWRVcmxTdHJpbmcodXJsKSB7XG4gIGNvbnN0IHsgcHJvdG9jb2wsIGhvc3QsIHBhdGggfSA9IHVybDtcblxuICBjb25zdCBmaWx0ZXJlZEhvc3QgPVxuICAgIChob3N0ICYmXG4gICAgICBob3N0XG4gICAgICAgIC8vIEFsd2F5cyBmaWx0ZXIgb3V0IGF1dGhvcml0eVxuICAgICAgICAucmVwbGFjZSgvXi4qQC8sICdbZmlsdGVyZWRdOltmaWx0ZXJlZF1AJylcbiAgICAgICAgLy8gRG9uJ3Qgc2hvdyBzdGFuZGFyZCA6ODAgKGh0dHApIGFuZCA6NDQzIChodHRwcykgcG9ydHMgdG8gcmVkdWNlIHRoZSBub2lzZVxuICAgICAgICAvLyBUT0RPOiBVc2UgbmV3IFVSTCBnbG9iYWwgaWYgaXQgZXhpc3RzXG4gICAgICAgIC5yZXBsYWNlKC8oOjgwKSQvLCAnJylcbiAgICAgICAgLnJlcGxhY2UoLyg6NDQzKSQvLCAnJykpIHx8XG4gICAgJyc7XG5cbiAgcmV0dXJuIGAke3Byb3RvY29sID8gYCR7cHJvdG9jb2x9Oi8vYCA6ICcnfSR7ZmlsdGVyZWRIb3N0fSR7cGF0aH1gO1xufVxuXG5leHBvcnRzLmdldE51bWJlck9mVXJsU2VnbWVudHMgPSBnZXROdW1iZXJPZlVybFNlZ21lbnRzO1xuZXhwb3J0cy5nZXRTYW5pdGl6ZWRVcmxTdHJpbmcgPSBnZXRTYW5pdGl6ZWRVcmxTdHJpbmc7XG5leHBvcnRzLnBhcnNlVXJsID0gcGFyc2VVcmw7XG5leHBvcnRzLnN0cmlwVXJsUXVlcnlBbmRGcmFnbWVudCA9IHN0cmlwVXJsUXVlcnlBbmRGcmFnbWVudDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVybC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/url.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/vendor/escapeStringForRegex.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/vendor/escapeStringForRegex.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n// Based on https://github.com/sindresorhus/escape-string-regexp but with modifications to:\n//   a) reduce the size by skipping the runtime type - checking\n//   b) ensure it gets down - compiled for old versions of Node(the published package only supports Node 14+).\n//\n// MIT License\n//\n// Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (https://sindresorhus.com)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n// documentation files(the \"Software\"), to deal in the Software without restriction, including without limitation\n// the rights to use, copy, modify, merge, publish, distribute, sublicense, and / or sell copies of the Software, and\n// to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all copies or substantial portions of\n// the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO\n// THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n// IN THE SOFTWARE.\n\n/**\n * Given a string, escape characters which have meaning in the regex grammar, such that the result is safe to feed to\n * `new RegExp()`.\n *\n * @param regexString The string to escape\n * @returns An version of the string with all special regex characters escaped\n */\nfunction escapeStringForRegex(regexString) {\n  // escape the hyphen separately so we can also replace it with a unicode literal hyphen, to avoid the problems\n  // discussed in https://github.com/sindresorhus/escape-string-regexp/issues/20.\n  return regexString.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&').replace(/-/g, '\\\\x2d');\n}\n\nexports.escapeStringForRegex = escapeStringForRegex;\n//# sourceMappingURL=escapeStringForRegex.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL3ZlbmRvci9lc2NhcGVTdHJpbmdGb3JSZWdleC5qcyIsIm1hcHBpbmdzIjoiQUFBQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7O0FBRTdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQztBQUNwQzs7QUFFQSw0QkFBNEI7QUFDNUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0Zm9saW8tcHJvamVjdC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2VudHJ5K3V0aWxzQDguMTcuMC9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9idWlsZC9janMvdmVuZG9yL2VzY2FwZVN0cmluZ0ZvclJlZ2V4LmpzP2Q2MGEiXSwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxuLy8gQmFzZWQgb24gaHR0cHM6Ly9naXRodWIuY29tL3NpbmRyZXNvcmh1cy9lc2NhcGUtc3RyaW5nLXJlZ2V4cCBidXQgd2l0aCBtb2RpZmljYXRpb25zIHRvOlxuLy8gICBhKSByZWR1Y2UgdGhlIHNpemUgYnkgc2tpcHBpbmcgdGhlIHJ1bnRpbWUgdHlwZSAtIGNoZWNraW5nXG4vLyAgIGIpIGVuc3VyZSBpdCBnZXRzIGRvd24gLSBjb21waWxlZCBmb3Igb2xkIHZlcnNpb25zIG9mIE5vZGUodGhlIHB1Ymxpc2hlZCBwYWNrYWdlIG9ubHkgc3VwcG9ydHMgTm9kZSAxNCspLlxuLy9cbi8vIE1JVCBMaWNlbnNlXG4vL1xuLy8gQ29weXJpZ2h0IChjKSBTaW5kcmUgU29yaHVzIDxzaW5kcmVzb3JodXNAZ21haWwuY29tPiAoaHR0cHM6Ly9zaW5kcmVzb3JodXMuY29tKVxuLy9cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZFxuLy8gZG9jdW1lbnRhdGlvbiBmaWxlcyh0aGUgXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvblxuLy8gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZCAvIG9yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kXG4vLyB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2Zcbi8vIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE9cbi8vIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSwgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC5JTiBOTyBFVkVOVCBTSEFMTCBUSEVcbi8vIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCxcbi8vIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1Ncbi8vIElOIFRIRSBTT0ZUV0FSRS5cblxuLyoqXG4gKiBHaXZlbiBhIHN0cmluZywgZXNjYXBlIGNoYXJhY3RlcnMgd2hpY2ggaGF2ZSBtZWFuaW5nIGluIHRoZSByZWdleCBncmFtbWFyLCBzdWNoIHRoYXQgdGhlIHJlc3VsdCBpcyBzYWZlIHRvIGZlZWQgdG9cbiAqIGBuZXcgUmVnRXhwKClgLlxuICpcbiAqIEBwYXJhbSByZWdleFN0cmluZyBUaGUgc3RyaW5nIHRvIGVzY2FwZVxuICogQHJldHVybnMgQW4gdmVyc2lvbiBvZiB0aGUgc3RyaW5nIHdpdGggYWxsIHNwZWNpYWwgcmVnZXggY2hhcmFjdGVycyBlc2NhcGVkXG4gKi9cbmZ1bmN0aW9uIGVzY2FwZVN0cmluZ0ZvclJlZ2V4KHJlZ2V4U3RyaW5nKSB7XG4gIC8vIGVzY2FwZSB0aGUgaHlwaGVuIHNlcGFyYXRlbHkgc28gd2UgY2FuIGFsc28gcmVwbGFjZSBpdCB3aXRoIGEgdW5pY29kZSBsaXRlcmFsIGh5cGhlbiwgdG8gYXZvaWQgdGhlIHByb2JsZW1zXG4gIC8vIGRpc2N1c3NlZCBpbiBodHRwczovL2dpdGh1Yi5jb20vc2luZHJlc29yaHVzL2VzY2FwZS1zdHJpbmctcmVnZXhwL2lzc3Vlcy8yMC5cbiAgcmV0dXJuIHJlZ2V4U3RyaW5nLnJlcGxhY2UoL1t8XFxcXHt9KClbXFxdXiQrKj8uXS9nLCAnXFxcXCQmJykucmVwbGFjZSgvLS9nLCAnXFxcXHgyZCcpO1xufVxuXG5leHBvcnRzLmVzY2FwZVN0cmluZ0ZvclJlZ2V4ID0gZXNjYXBlU3RyaW5nRm9yUmVnZXg7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lc2NhcGVTdHJpbmdGb3JSZWdleC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/vendor/escapeStringForRegex.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/vendor/supportsHistory.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/vendor/supportsHistory.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst worldwide = __webpack_require__(/*! ../worldwide.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/worldwide.js\");\n\n// Based on https://github.com/angular/angular.js/pull/13945/files\n// The MIT License\n\n\nconst WINDOW = worldwide.GLOBAL_OBJ ;\n\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsHistory() {\n  // NOTE: in Chrome App environment, touching history.pushState, *even inside\n  //       a try/catch block*, will cause Chrome to output an error to console.error\n  // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n  /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const chromeVar = (WINDOW ).chrome;\n  const isChromePackagedApp = chromeVar && chromeVar.app && chromeVar.app.runtime;\n  /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n  const hasHistoryApi = 'history' in WINDOW && !!WINDOW.history.pushState && !!WINDOW.history.replaceState;\n\n  return !isChromePackagedApp && hasHistoryApi;\n}\n\nexports.supportsHistory = supportsHistory;\n//# sourceMappingURL=supportsHistory.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL3ZlbmRvci9zdXBwb3J0c0hpc3RvcnkuanMiLCJtYXBwaW5ncyI6IkFBQUEsOENBQTZDLEVBQUUsYUFBYSxFQUFDOztBQUU3RCxrQkFBa0IsbUJBQU8sQ0FBQywwSEFBaUI7O0FBRTNDO0FBQ0E7OztBQUdBOztBQUVBO0FBQ0E7QUFDQSxJQUFJLHNCQUFzQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLHVCQUF1QjtBQUN2QiIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy92ZW5kb3Ivc3VwcG9ydHNIaXN0b3J5LmpzPzViYzAiXSwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxuY29uc3Qgd29ybGR3aWRlID0gcmVxdWlyZSgnLi4vd29ybGR3aWRlLmpzJyk7XG5cbi8vIEJhc2VkIG9uIGh0dHBzOi8vZ2l0aHViLmNvbS9hbmd1bGFyL2FuZ3VsYXIuanMvcHVsbC8xMzk0NS9maWxlc1xuLy8gVGhlIE1JVCBMaWNlbnNlXG5cblxuY29uc3QgV0lORE9XID0gd29ybGR3aWRlLkdMT0JBTF9PQkogO1xuXG4vKipcbiAqIFRlbGxzIHdoZXRoZXIgY3VycmVudCBlbnZpcm9ubWVudCBzdXBwb3J0cyBIaXN0b3J5IEFQSVxuICoge0BsaW5rIHN1cHBvcnRzSGlzdG9yeX0uXG4gKlxuICogQHJldHVybnMgQW5zd2VyIHRvIHRoZSBnaXZlbiBxdWVzdGlvbi5cbiAqL1xuZnVuY3Rpb24gc3VwcG9ydHNIaXN0b3J5KCkge1xuICAvLyBOT1RFOiBpbiBDaHJvbWUgQXBwIGVudmlyb25tZW50LCB0b3VjaGluZyBoaXN0b3J5LnB1c2hTdGF0ZSwgKmV2ZW4gaW5zaWRlXG4gIC8vICAgICAgIGEgdHJ5L2NhdGNoIGJsb2NrKiwgd2lsbCBjYXVzZSBDaHJvbWUgdG8gb3V0cHV0IGFuIGVycm9yIHRvIGNvbnNvbGUuZXJyb3JcbiAgLy8gYm9ycm93ZWQgZnJvbTogaHR0cHM6Ly9naXRodWIuY29tL2FuZ3VsYXIvYW5ndWxhci5qcy9wdWxsLzEzOTQ1L2ZpbGVzXG4gIC8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnNhZmUtbWVtYmVyLWFjY2VzcyAqL1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuICBjb25zdCBjaHJvbWVWYXIgPSAoV0lORE9XICkuY2hyb21lO1xuICBjb25zdCBpc0Nocm9tZVBhY2thZ2VkQXBwID0gY2hyb21lVmFyICYmIGNocm9tZVZhci5hcHAgJiYgY2hyb21lVmFyLmFwcC5ydW50aW1lO1xuICAvKiBlc2xpbnQtZW5hYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnNhZmUtbWVtYmVyLWFjY2VzcyAqL1xuICBjb25zdCBoYXNIaXN0b3J5QXBpID0gJ2hpc3RvcnknIGluIFdJTkRPVyAmJiAhIVdJTkRPVy5oaXN0b3J5LnB1c2hTdGF0ZSAmJiAhIVdJTkRPVy5oaXN0b3J5LnJlcGxhY2VTdGF0ZTtcblxuICByZXR1cm4gIWlzQ2hyb21lUGFja2FnZWRBcHAgJiYgaGFzSGlzdG9yeUFwaTtcbn1cblxuZXhwb3J0cy5zdXBwb3J0c0hpc3RvcnkgPSBzdXBwb3J0c0hpc3Rvcnk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdXBwb3J0c0hpc3RvcnkuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/vendor/supportsHistory.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/version.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/version.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst SDK_VERSION = '8.17.0';\n\nexports.SDK_VERSION = SDK_VERSION;\n//# sourceMappingURL=version.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL3ZlcnNpb24uanMiLCJtYXBwaW5ncyI6IkFBQUEsOENBQTZDLEVBQUUsYUFBYSxFQUFDOztBQUU3RDs7QUFFQSxtQkFBbUI7QUFDbkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0Zm9saW8tcHJvamVjdC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2VudHJ5K3V0aWxzQDguMTcuMC9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9idWlsZC9janMvdmVyc2lvbi5qcz9jYTQxIl0sInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG5cbmNvbnN0IFNES19WRVJTSU9OID0gJzguMTcuMCc7XG5cbmV4cG9ydHMuU0RLX1ZFUlNJT04gPSBTREtfVkVSU0lPTjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXZlcnNpb24uanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/version.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/worldwide.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/worldwide.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst version = __webpack_require__(/*! ./version.js */ \"(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/version.js\");\n\n/** Get's the global object for the current JavaScript runtime */\nconst GLOBAL_OBJ = globalThis ;\n\n/**\n * Returns a global singleton contained in the global `__SENTRY__[]` object.\n *\n * If the singleton doesn't already exist in `__SENTRY__`, it will be created using the given factory\n * function and added to the `__SENTRY__` object.\n *\n * @param name name of the global singleton on __SENTRY__\n * @param creator creator Factory function to create the singleton if it doesn't already exist on `__SENTRY__`\n * @param obj (Optional) The global object on which to look for `__SENTRY__`, if not `GLOBAL_OBJ`'s return value\n * @returns the singleton\n */\nfunction getGlobalSingleton(name, creator, obj) {\n  const gbl = (obj || GLOBAL_OBJ) ;\n  const __SENTRY__ = (gbl.__SENTRY__ = gbl.__SENTRY__ || {});\n  const versionedCarrier = (__SENTRY__[version.SDK_VERSION] = __SENTRY__[version.SDK_VERSION] || {});\n  return versionedCarrier[name] || (versionedCarrier[name] = creator());\n}\n\nexports.GLOBAL_OBJ = GLOBAL_OBJ;\nexports.getGlobalSingleton = getGlobalSingleton;\n//# sourceMappingURL=worldwide.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL3dvcmxkd2lkZS5qcyIsIm1hcHBpbmdzIjoiQUFBQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7O0FBRTdELGdCQUFnQixtQkFBTyxDQUFDLHFIQUFjOztBQUV0QztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkRBQTJEO0FBQzNELG1HQUFtRztBQUNuRztBQUNBOztBQUVBLGtCQUFrQjtBQUNsQiwwQkFBMEI7QUFDMUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0Zm9saW8tcHJvamVjdC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2VudHJ5K3V0aWxzQDguMTcuMC9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9idWlsZC9janMvd29ybGR3aWRlLmpzPzJhM2UiXSwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxuY29uc3QgdmVyc2lvbiA9IHJlcXVpcmUoJy4vdmVyc2lvbi5qcycpO1xuXG4vKiogR2V0J3MgdGhlIGdsb2JhbCBvYmplY3QgZm9yIHRoZSBjdXJyZW50IEphdmFTY3JpcHQgcnVudGltZSAqL1xuY29uc3QgR0xPQkFMX09CSiA9IGdsb2JhbFRoaXMgO1xuXG4vKipcbiAqIFJldHVybnMgYSBnbG9iYWwgc2luZ2xldG9uIGNvbnRhaW5lZCBpbiB0aGUgZ2xvYmFsIGBfX1NFTlRSWV9fW11gIG9iamVjdC5cbiAqXG4gKiBJZiB0aGUgc2luZ2xldG9uIGRvZXNuJ3QgYWxyZWFkeSBleGlzdCBpbiBgX19TRU5UUllfX2AsIGl0IHdpbGwgYmUgY3JlYXRlZCB1c2luZyB0aGUgZ2l2ZW4gZmFjdG9yeVxuICogZnVuY3Rpb24gYW5kIGFkZGVkIHRvIHRoZSBgX19TRU5UUllfX2Agb2JqZWN0LlxuICpcbiAqIEBwYXJhbSBuYW1lIG5hbWUgb2YgdGhlIGdsb2JhbCBzaW5nbGV0b24gb24gX19TRU5UUllfX1xuICogQHBhcmFtIGNyZWF0b3IgY3JlYXRvciBGYWN0b3J5IGZ1bmN0aW9uIHRvIGNyZWF0ZSB0aGUgc2luZ2xldG9uIGlmIGl0IGRvZXNuJ3QgYWxyZWFkeSBleGlzdCBvbiBgX19TRU5UUllfX2BcbiAqIEBwYXJhbSBvYmogKE9wdGlvbmFsKSBUaGUgZ2xvYmFsIG9iamVjdCBvbiB3aGljaCB0byBsb29rIGZvciBgX19TRU5UUllfX2AsIGlmIG5vdCBgR0xPQkFMX09CSmAncyByZXR1cm4gdmFsdWVcbiAqIEByZXR1cm5zIHRoZSBzaW5nbGV0b25cbiAqL1xuZnVuY3Rpb24gZ2V0R2xvYmFsU2luZ2xldG9uKG5hbWUsIGNyZWF0b3IsIG9iaikge1xuICBjb25zdCBnYmwgPSAob2JqIHx8IEdMT0JBTF9PQkopIDtcbiAgY29uc3QgX19TRU5UUllfXyA9IChnYmwuX19TRU5UUllfXyA9IGdibC5fX1NFTlRSWV9fIHx8IHt9KTtcbiAgY29uc3QgdmVyc2lvbmVkQ2FycmllciA9IChfX1NFTlRSWV9fW3ZlcnNpb24uU0RLX1ZFUlNJT05dID0gX19TRU5UUllfX1t2ZXJzaW9uLlNES19WRVJTSU9OXSB8fCB7fSk7XG4gIHJldHVybiB2ZXJzaW9uZWRDYXJyaWVyW25hbWVdIHx8ICh2ZXJzaW9uZWRDYXJyaWVyW25hbWVdID0gY3JlYXRvcigpKTtcbn1cblxuZXhwb3J0cy5HTE9CQUxfT0JKID0gR0xPQkFMX09CSjtcbmV4cG9ydHMuZ2V0R2xvYmFsU2luZ2xldG9uID0gZ2V0R2xvYmFsU2luZ2xldG9uO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d29ybGR3aWRlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/worldwide.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/aggregate-errors.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/aggregate-errors.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst is = __webpack_require__(/*! ./is.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/is.js\");\nconst string = __webpack_require__(/*! ./string.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/string.js\");\n\n/**\n * Creates exceptions inside `event.exception.values` for errors that are nested on properties based on the `key` parameter.\n */\nfunction applyAggregateErrorsToEvent(\n  exceptionFromErrorImplementation,\n  parser,\n  maxValueLimit = 250,\n  key,\n  limit,\n  event,\n  hint,\n) {\n  if (!event.exception || !event.exception.values || !hint || !is.isInstanceOf(hint.originalException, Error)) {\n    return;\n  }\n\n  // Generally speaking the last item in `event.exception.values` is the exception originating from the original Error\n  const originalException =\n    event.exception.values.length > 0 ? event.exception.values[event.exception.values.length - 1] : undefined;\n\n  // We only create exception grouping if there is an exception in the event.\n  if (originalException) {\n    event.exception.values = truncateAggregateExceptions(\n      aggregateExceptionsFromError(\n        exceptionFromErrorImplementation,\n        parser,\n        limit,\n        hint.originalException ,\n        key,\n        event.exception.values,\n        originalException,\n        0,\n      ),\n      maxValueLimit,\n    );\n  }\n}\n\nfunction aggregateExceptionsFromError(\n  exceptionFromErrorImplementation,\n  parser,\n  limit,\n  error,\n  key,\n  prevExceptions,\n  exception,\n  exceptionId,\n) {\n  if (prevExceptions.length >= limit + 1) {\n    return prevExceptions;\n  }\n\n  let newExceptions = [...prevExceptions];\n\n  // Recursively call this function in order to walk down a chain of errors\n  if (is.isInstanceOf(error[key], Error)) {\n    applyExceptionGroupFieldsForParentException(exception, exceptionId);\n    const newException = exceptionFromErrorImplementation(parser, error[key]);\n    const newExceptionId = newExceptions.length;\n    applyExceptionGroupFieldsForChildException(newException, key, newExceptionId, exceptionId);\n    newExceptions = aggregateExceptionsFromError(\n      exceptionFromErrorImplementation,\n      parser,\n      limit,\n      error[key],\n      key,\n      [newException, ...newExceptions],\n      newException,\n      newExceptionId,\n    );\n  }\n\n  // This will create exception grouping for AggregateErrors\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/AggregateError\n  if (Array.isArray(error.errors)) {\n    error.errors.forEach((childError, i) => {\n      if (is.isInstanceOf(childError, Error)) {\n        applyExceptionGroupFieldsForParentException(exception, exceptionId);\n        const newException = exceptionFromErrorImplementation(parser, childError);\n        const newExceptionId = newExceptions.length;\n        applyExceptionGroupFieldsForChildException(newException, `errors[${i}]`, newExceptionId, exceptionId);\n        newExceptions = aggregateExceptionsFromError(\n          exceptionFromErrorImplementation,\n          parser,\n          limit,\n          childError,\n          key,\n          [newException, ...newExceptions],\n          newException,\n          newExceptionId,\n        );\n      }\n    });\n  }\n\n  return newExceptions;\n}\n\nfunction applyExceptionGroupFieldsForParentException(exception, exceptionId) {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    ...(exception.type === 'AggregateError' && { is_exception_group: true }),\n    exception_id: exceptionId,\n  };\n}\n\nfunction applyExceptionGroupFieldsForChildException(\n  exception,\n  source,\n  exceptionId,\n  parentId,\n) {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    type: 'chained',\n    source,\n    exception_id: exceptionId,\n    parent_id: parentId,\n  };\n}\n\n/**\n * Truncate the message (exception.value) of all exceptions in the event.\n * Because this event processor is ran after `applyClientOptions`,\n * we need to truncate the message of the added exceptions here.\n */\nfunction truncateAggregateExceptions(exceptions, maxValueLength) {\n  return exceptions.map(exception => {\n    if (exception.value) {\n      exception.value = string.truncate(exception.value, maxValueLength);\n    }\n    return exception;\n  });\n}\n\nexports.applyAggregateErrorsToEvent = applyAggregateErrorsToEvent;\n//# sourceMappingURL=aggregate-errors.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9hZ2dyZWdhdGUtZXJyb3JzLmpzIiwibWFwcGluZ3MiOiJBQUFBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQzs7QUFFN0QsV0FBVyxtQkFBTyxDQUFDLGtIQUFTO0FBQzVCLGVBQWUsbUJBQU8sQ0FBQywwSEFBYTs7QUFFcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJFQUEyRSxFQUFFO0FBQzdFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsaURBQWlEOztBQUVqRDtBQUNBO0FBQ0EsaURBQWlELDBCQUEwQjtBQUMzRTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpREFBaUQ7O0FBRWpEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQSxtQ0FBbUM7QUFDbkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0Zm9saW8tcHJvamVjdC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2VudHJ5K3V0aWxzQDguMTcuMC9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9idWlsZC9janMvYWdncmVnYXRlLWVycm9ycy5qcz9lYTAyIl0sInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG5cbmNvbnN0IGlzID0gcmVxdWlyZSgnLi9pcy5qcycpO1xuY29uc3Qgc3RyaW5nID0gcmVxdWlyZSgnLi9zdHJpbmcuanMnKTtcblxuLyoqXG4gKiBDcmVhdGVzIGV4Y2VwdGlvbnMgaW5zaWRlIGBldmVudC5leGNlcHRpb24udmFsdWVzYCBmb3IgZXJyb3JzIHRoYXQgYXJlIG5lc3RlZCBvbiBwcm9wZXJ0aWVzIGJhc2VkIG9uIHRoZSBga2V5YCBwYXJhbWV0ZXIuXG4gKi9cbmZ1bmN0aW9uIGFwcGx5QWdncmVnYXRlRXJyb3JzVG9FdmVudChcbiAgZXhjZXB0aW9uRnJvbUVycm9ySW1wbGVtZW50YXRpb24sXG4gIHBhcnNlcixcbiAgbWF4VmFsdWVMaW1pdCA9IDI1MCxcbiAga2V5LFxuICBsaW1pdCxcbiAgZXZlbnQsXG4gIGhpbnQsXG4pIHtcbiAgaWYgKCFldmVudC5leGNlcHRpb24gfHwgIWV2ZW50LmV4Y2VwdGlvbi52YWx1ZXMgfHwgIWhpbnQgfHwgIWlzLmlzSW5zdGFuY2VPZihoaW50Lm9yaWdpbmFsRXhjZXB0aW9uLCBFcnJvcikpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvLyBHZW5lcmFsbHkgc3BlYWtpbmcgdGhlIGxhc3QgaXRlbSBpbiBgZXZlbnQuZXhjZXB0aW9uLnZhbHVlc2AgaXMgdGhlIGV4Y2VwdGlvbiBvcmlnaW5hdGluZyBmcm9tIHRoZSBvcmlnaW5hbCBFcnJvclxuICBjb25zdCBvcmlnaW5hbEV4Y2VwdGlvbiA9XG4gICAgZXZlbnQuZXhjZXB0aW9uLnZhbHVlcy5sZW5ndGggPiAwID8gZXZlbnQuZXhjZXB0aW9uLnZhbHVlc1tldmVudC5leGNlcHRpb24udmFsdWVzLmxlbmd0aCAtIDFdIDogdW5kZWZpbmVkO1xuXG4gIC8vIFdlIG9ubHkgY3JlYXRlIGV4Y2VwdGlvbiBncm91cGluZyBpZiB0aGVyZSBpcyBhbiBleGNlcHRpb24gaW4gdGhlIGV2ZW50LlxuICBpZiAob3JpZ2luYWxFeGNlcHRpb24pIHtcbiAgICBldmVudC5leGNlcHRpb24udmFsdWVzID0gdHJ1bmNhdGVBZ2dyZWdhdGVFeGNlcHRpb25zKFxuICAgICAgYWdncmVnYXRlRXhjZXB0aW9uc0Zyb21FcnJvcihcbiAgICAgICAgZXhjZXB0aW9uRnJvbUVycm9ySW1wbGVtZW50YXRpb24sXG4gICAgICAgIHBhcnNlcixcbiAgICAgICAgbGltaXQsXG4gICAgICAgIGhpbnQub3JpZ2luYWxFeGNlcHRpb24gLFxuICAgICAgICBrZXksXG4gICAgICAgIGV2ZW50LmV4Y2VwdGlvbi52YWx1ZXMsXG4gICAgICAgIG9yaWdpbmFsRXhjZXB0aW9uLFxuICAgICAgICAwLFxuICAgICAgKSxcbiAgICAgIG1heFZhbHVlTGltaXQsXG4gICAgKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBhZ2dyZWdhdGVFeGNlcHRpb25zRnJvbUVycm9yKFxuICBleGNlcHRpb25Gcm9tRXJyb3JJbXBsZW1lbnRhdGlvbixcbiAgcGFyc2VyLFxuICBsaW1pdCxcbiAgZXJyb3IsXG4gIGtleSxcbiAgcHJldkV4Y2VwdGlvbnMsXG4gIGV4Y2VwdGlvbixcbiAgZXhjZXB0aW9uSWQsXG4pIHtcbiAgaWYgKHByZXZFeGNlcHRpb25zLmxlbmd0aCA+PSBsaW1pdCArIDEpIHtcbiAgICByZXR1cm4gcHJldkV4Y2VwdGlvbnM7XG4gIH1cblxuICBsZXQgbmV3RXhjZXB0aW9ucyA9IFsuLi5wcmV2RXhjZXB0aW9uc107XG5cbiAgLy8gUmVjdXJzaXZlbHkgY2FsbCB0aGlzIGZ1bmN0aW9uIGluIG9yZGVyIHRvIHdhbGsgZG93biBhIGNoYWluIG9mIGVycm9yc1xuICBpZiAoaXMuaXNJbnN0YW5jZU9mKGVycm9yW2tleV0sIEVycm9yKSkge1xuICAgIGFwcGx5RXhjZXB0aW9uR3JvdXBGaWVsZHNGb3JQYXJlbnRFeGNlcHRpb24oZXhjZXB0aW9uLCBleGNlcHRpb25JZCk7XG4gICAgY29uc3QgbmV3RXhjZXB0aW9uID0gZXhjZXB0aW9uRnJvbUVycm9ySW1wbGVtZW50YXRpb24ocGFyc2VyLCBlcnJvcltrZXldKTtcbiAgICBjb25zdCBuZXdFeGNlcHRpb25JZCA9IG5ld0V4Y2VwdGlvbnMubGVuZ3RoO1xuICAgIGFwcGx5RXhjZXB0aW9uR3JvdXBGaWVsZHNGb3JDaGlsZEV4Y2VwdGlvbihuZXdFeGNlcHRpb24sIGtleSwgbmV3RXhjZXB0aW9uSWQsIGV4Y2VwdGlvbklkKTtcbiAgICBuZXdFeGNlcHRpb25zID0gYWdncmVnYXRlRXhjZXB0aW9uc0Zyb21FcnJvcihcbiAgICAgIGV4Y2VwdGlvbkZyb21FcnJvckltcGxlbWVudGF0aW9uLFxuICAgICAgcGFyc2VyLFxuICAgICAgbGltaXQsXG4gICAgICBlcnJvcltrZXldLFxuICAgICAga2V5LFxuICAgICAgW25ld0V4Y2VwdGlvbiwgLi4ubmV3RXhjZXB0aW9uc10sXG4gICAgICBuZXdFeGNlcHRpb24sXG4gICAgICBuZXdFeGNlcHRpb25JZCxcbiAgICApO1xuICB9XG5cbiAgLy8gVGhpcyB3aWxsIGNyZWF0ZSBleGNlcHRpb24gZ3JvdXBpbmcgZm9yIEFnZ3JlZ2F0ZUVycm9yc1xuICAvLyBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9HbG9iYWxfT2JqZWN0cy9BZ2dyZWdhdGVFcnJvclxuICBpZiAoQXJyYXkuaXNBcnJheShlcnJvci5lcnJvcnMpKSB7XG4gICAgZXJyb3IuZXJyb3JzLmZvckVhY2goKGNoaWxkRXJyb3IsIGkpID0+IHtcbiAgICAgIGlmIChpcy5pc0luc3RhbmNlT2YoY2hpbGRFcnJvciwgRXJyb3IpKSB7XG4gICAgICAgIGFwcGx5RXhjZXB0aW9uR3JvdXBGaWVsZHNGb3JQYXJlbnRFeGNlcHRpb24oZXhjZXB0aW9uLCBleGNlcHRpb25JZCk7XG4gICAgICAgIGNvbnN0IG5ld0V4Y2VwdGlvbiA9IGV4Y2VwdGlvbkZyb21FcnJvckltcGxlbWVudGF0aW9uKHBhcnNlciwgY2hpbGRFcnJvcik7XG4gICAgICAgIGNvbnN0IG5ld0V4Y2VwdGlvbklkID0gbmV3RXhjZXB0aW9ucy5sZW5ndGg7XG4gICAgICAgIGFwcGx5RXhjZXB0aW9uR3JvdXBGaWVsZHNGb3JDaGlsZEV4Y2VwdGlvbihuZXdFeGNlcHRpb24sIGBlcnJvcnNbJHtpfV1gLCBuZXdFeGNlcHRpb25JZCwgZXhjZXB0aW9uSWQpO1xuICAgICAgICBuZXdFeGNlcHRpb25zID0gYWdncmVnYXRlRXhjZXB0aW9uc0Zyb21FcnJvcihcbiAgICAgICAgICBleGNlcHRpb25Gcm9tRXJyb3JJbXBsZW1lbnRhdGlvbixcbiAgICAgICAgICBwYXJzZXIsXG4gICAgICAgICAgbGltaXQsXG4gICAgICAgICAgY2hpbGRFcnJvcixcbiAgICAgICAgICBrZXksXG4gICAgICAgICAgW25ld0V4Y2VwdGlvbiwgLi4ubmV3RXhjZXB0aW9uc10sXG4gICAgICAgICAgbmV3RXhjZXB0aW9uLFxuICAgICAgICAgIG5ld0V4Y2VwdGlvbklkLFxuICAgICAgICApO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIG5ld0V4Y2VwdGlvbnM7XG59XG5cbmZ1bmN0aW9uIGFwcGx5RXhjZXB0aW9uR3JvdXBGaWVsZHNGb3JQYXJlbnRFeGNlcHRpb24oZXhjZXB0aW9uLCBleGNlcHRpb25JZCkge1xuICAvLyBEb24ndCBrbm93IGlmIHRoaXMgZGVmYXVsdCBtYWtlcyBzZW5zZS4gVGhlIHByb3RvY29sIHJlcXVpcmVzIHVzIHRvIHNldCB0aGVzZSB2YWx1ZXMgc28gd2UgcGljayAqc29tZSogZGVmYXVsdC5cbiAgZXhjZXB0aW9uLm1lY2hhbmlzbSA9IGV4Y2VwdGlvbi5tZWNoYW5pc20gfHwgeyB0eXBlOiAnZ2VuZXJpYycsIGhhbmRsZWQ6IHRydWUgfTtcblxuICBleGNlcHRpb24ubWVjaGFuaXNtID0ge1xuICAgIC4uLmV4Y2VwdGlvbi5tZWNoYW5pc20sXG4gICAgLi4uKGV4Y2VwdGlvbi50eXBlID09PSAnQWdncmVnYXRlRXJyb3InICYmIHsgaXNfZXhjZXB0aW9uX2dyb3VwOiB0cnVlIH0pLFxuICAgIGV4Y2VwdGlvbl9pZDogZXhjZXB0aW9uSWQsXG4gIH07XG59XG5cbmZ1bmN0aW9uIGFwcGx5RXhjZXB0aW9uR3JvdXBGaWVsZHNGb3JDaGlsZEV4Y2VwdGlvbihcbiAgZXhjZXB0aW9uLFxuICBzb3VyY2UsXG4gIGV4Y2VwdGlvbklkLFxuICBwYXJlbnRJZCxcbikge1xuICAvLyBEb24ndCBrbm93IGlmIHRoaXMgZGVmYXVsdCBtYWtlcyBzZW5zZS4gVGhlIHByb3RvY29sIHJlcXVpcmVzIHVzIHRvIHNldCB0aGVzZSB2YWx1ZXMgc28gd2UgcGljayAqc29tZSogZGVmYXVsdC5cbiAgZXhjZXB0aW9uLm1lY2hhbmlzbSA9IGV4Y2VwdGlvbi5tZWNoYW5pc20gfHwgeyB0eXBlOiAnZ2VuZXJpYycsIGhhbmRsZWQ6IHRydWUgfTtcblxuICBleGNlcHRpb24ubWVjaGFuaXNtID0ge1xuICAgIC4uLmV4Y2VwdGlvbi5tZWNoYW5pc20sXG4gICAgdHlwZTogJ2NoYWluZWQnLFxuICAgIHNvdXJjZSxcbiAgICBleGNlcHRpb25faWQ6IGV4Y2VwdGlvbklkLFxuICAgIHBhcmVudF9pZDogcGFyZW50SWQsXG4gIH07XG59XG5cbi8qKlxuICogVHJ1bmNhdGUgdGhlIG1lc3NhZ2UgKGV4Y2VwdGlvbi52YWx1ZSkgb2YgYWxsIGV4Y2VwdGlvbnMgaW4gdGhlIGV2ZW50LlxuICogQmVjYXVzZSB0aGlzIGV2ZW50IHByb2Nlc3NvciBpcyByYW4gYWZ0ZXIgYGFwcGx5Q2xpZW50T3B0aW9uc2AsXG4gKiB3ZSBuZWVkIHRvIHRydW5jYXRlIHRoZSBtZXNzYWdlIG9mIHRoZSBhZGRlZCBleGNlcHRpb25zIGhlcmUuXG4gKi9cbmZ1bmN0aW9uIHRydW5jYXRlQWdncmVnYXRlRXhjZXB0aW9ucyhleGNlcHRpb25zLCBtYXhWYWx1ZUxlbmd0aCkge1xuICByZXR1cm4gZXhjZXB0aW9ucy5tYXAoZXhjZXB0aW9uID0+IHtcbiAgICBpZiAoZXhjZXB0aW9uLnZhbHVlKSB7XG4gICAgICBleGNlcHRpb24udmFsdWUgPSBzdHJpbmcudHJ1bmNhdGUoZXhjZXB0aW9uLnZhbHVlLCBtYXhWYWx1ZUxlbmd0aCk7XG4gICAgfVxuICAgIHJldHVybiBleGNlcHRpb247XG4gIH0pO1xufVxuXG5leHBvcnRzLmFwcGx5QWdncmVnYXRlRXJyb3JzVG9FdmVudCA9IGFwcGx5QWdncmVnYXRlRXJyb3JzVG9FdmVudDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFnZ3JlZ2F0ZS1lcnJvcnMuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/aggregate-errors.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/anr.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/anr.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst nodeStackTrace = __webpack_require__(/*! ./node-stack-trace.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/node-stack-trace.js\");\nconst object = __webpack_require__(/*! ./object.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/object.js\");\nconst stacktrace = __webpack_require__(/*! ./stacktrace.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/stacktrace.js\");\n\n/**\n * A node.js watchdog timer\n * @param pollInterval The interval that we expect to get polled at\n * @param anrThreshold The threshold for when we consider ANR\n * @param callback The callback to call for ANR\n * @returns An object with `poll` and `enabled` functions {@link WatchdogReturn}\n */\nfunction watchdogTimer(\n  createTimer,\n  pollInterval,\n  anrThreshold,\n  callback,\n) {\n  const timer = createTimer();\n  let triggered = false;\n  let enabled = true;\n\n  setInterval(() => {\n    const diffMs = timer.getTimeMs();\n\n    if (triggered === false && diffMs > pollInterval + anrThreshold) {\n      triggered = true;\n      if (enabled) {\n        callback();\n      }\n    }\n\n    if (diffMs < pollInterval + anrThreshold) {\n      triggered = false;\n    }\n  }, 20);\n\n  return {\n    poll: () => {\n      timer.reset();\n    },\n    enabled: (state) => {\n      enabled = state;\n    },\n  };\n}\n\n// types copied from inspector.d.ts\n\n/**\n * Converts Debugger.CallFrame to Sentry StackFrame\n */\nfunction callFrameToStackFrame(\n  frame,\n  url,\n  getModuleFromFilename,\n) {\n  const filename = url ? url.replace(/^file:\\/\\//, '') : undefined;\n\n  // CallFrame row/col are 0 based, whereas StackFrame are 1 based\n  const colno = frame.location.columnNumber ? frame.location.columnNumber + 1 : undefined;\n  const lineno = frame.location.lineNumber ? frame.location.lineNumber + 1 : undefined;\n\n  return object.dropUndefinedKeys({\n    filename,\n    module: getModuleFromFilename(filename),\n    function: frame.functionName || stacktrace.UNKNOWN_FUNCTION,\n    colno,\n    lineno,\n    in_app: filename ? nodeStackTrace.filenameIsInApp(filename) : undefined,\n  });\n}\n\nexports.callFrameToStackFrame = callFrameToStackFrame;\nexports.watchdogTimer = watchdogTimer;\n//# sourceMappingURL=anr.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9hbnIuanMiLCJtYXBwaW5ncyI6IkFBQUEsOENBQTZDLEVBQUUsYUFBYSxFQUFDOztBQUU3RCx1QkFBdUIsbUJBQU8sQ0FBQyw4SUFBdUI7QUFDdEQsZUFBZSxtQkFBTyxDQUFDLDBIQUFhO0FBQ3BDLG1CQUFtQixtQkFBTyxDQUFDLGtJQUFpQjs7QUFFNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJEQUEyRDtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQSw2QkFBNkI7QUFDN0IscUJBQXFCO0FBQ3JCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLXByb2plY3QvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2Fuci5qcz9kMjE1Il0sInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG5cbmNvbnN0IG5vZGVTdGFja1RyYWNlID0gcmVxdWlyZSgnLi9ub2RlLXN0YWNrLXRyYWNlLmpzJyk7XG5jb25zdCBvYmplY3QgPSByZXF1aXJlKCcuL29iamVjdC5qcycpO1xuY29uc3Qgc3RhY2t0cmFjZSA9IHJlcXVpcmUoJy4vc3RhY2t0cmFjZS5qcycpO1xuXG4vKipcbiAqIEEgbm9kZS5qcyB3YXRjaGRvZyB0aW1lclxuICogQHBhcmFtIHBvbGxJbnRlcnZhbCBUaGUgaW50ZXJ2YWwgdGhhdCB3ZSBleHBlY3QgdG8gZ2V0IHBvbGxlZCBhdFxuICogQHBhcmFtIGFuclRocmVzaG9sZCBUaGUgdGhyZXNob2xkIGZvciB3aGVuIHdlIGNvbnNpZGVyIEFOUlxuICogQHBhcmFtIGNhbGxiYWNrIFRoZSBjYWxsYmFjayB0byBjYWxsIGZvciBBTlJcbiAqIEByZXR1cm5zIEFuIG9iamVjdCB3aXRoIGBwb2xsYCBhbmQgYGVuYWJsZWRgIGZ1bmN0aW9ucyB7QGxpbmsgV2F0Y2hkb2dSZXR1cm59XG4gKi9cbmZ1bmN0aW9uIHdhdGNoZG9nVGltZXIoXG4gIGNyZWF0ZVRpbWVyLFxuICBwb2xsSW50ZXJ2YWwsXG4gIGFuclRocmVzaG9sZCxcbiAgY2FsbGJhY2ssXG4pIHtcbiAgY29uc3QgdGltZXIgPSBjcmVhdGVUaW1lcigpO1xuICBsZXQgdHJpZ2dlcmVkID0gZmFsc2U7XG4gIGxldCBlbmFibGVkID0gdHJ1ZTtcblxuICBzZXRJbnRlcnZhbCgoKSA9PiB7XG4gICAgY29uc3QgZGlmZk1zID0gdGltZXIuZ2V0VGltZU1zKCk7XG5cbiAgICBpZiAodHJpZ2dlcmVkID09PSBmYWxzZSAmJiBkaWZmTXMgPiBwb2xsSW50ZXJ2YWwgKyBhbnJUaHJlc2hvbGQpIHtcbiAgICAgIHRyaWdnZXJlZCA9IHRydWU7XG4gICAgICBpZiAoZW5hYmxlZCkge1xuICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChkaWZmTXMgPCBwb2xsSW50ZXJ2YWwgKyBhbnJUaHJlc2hvbGQpIHtcbiAgICAgIHRyaWdnZXJlZCA9IGZhbHNlO1xuICAgIH1cbiAgfSwgMjApO1xuXG4gIHJldHVybiB7XG4gICAgcG9sbDogKCkgPT4ge1xuICAgICAgdGltZXIucmVzZXQoKTtcbiAgICB9LFxuICAgIGVuYWJsZWQ6IChzdGF0ZSkgPT4ge1xuICAgICAgZW5hYmxlZCA9IHN0YXRlO1xuICAgIH0sXG4gIH07XG59XG5cbi8vIHR5cGVzIGNvcGllZCBmcm9tIGluc3BlY3Rvci5kLnRzXG5cbi8qKlxuICogQ29udmVydHMgRGVidWdnZXIuQ2FsbEZyYW1lIHRvIFNlbnRyeSBTdGFja0ZyYW1lXG4gKi9cbmZ1bmN0aW9uIGNhbGxGcmFtZVRvU3RhY2tGcmFtZShcbiAgZnJhbWUsXG4gIHVybCxcbiAgZ2V0TW9kdWxlRnJvbUZpbGVuYW1lLFxuKSB7XG4gIGNvbnN0IGZpbGVuYW1lID0gdXJsID8gdXJsLnJlcGxhY2UoL15maWxlOlxcL1xcLy8sICcnKSA6IHVuZGVmaW5lZDtcblxuICAvLyBDYWxsRnJhbWUgcm93L2NvbCBhcmUgMCBiYXNlZCwgd2hlcmVhcyBTdGFja0ZyYW1lIGFyZSAxIGJhc2VkXG4gIGNvbnN0IGNvbG5vID0gZnJhbWUubG9jYXRpb24uY29sdW1uTnVtYmVyID8gZnJhbWUubG9jYXRpb24uY29sdW1uTnVtYmVyICsgMSA6IHVuZGVmaW5lZDtcbiAgY29uc3QgbGluZW5vID0gZnJhbWUubG9jYXRpb24ubGluZU51bWJlciA/IGZyYW1lLmxvY2F0aW9uLmxpbmVOdW1iZXIgKyAxIDogdW5kZWZpbmVkO1xuXG4gIHJldHVybiBvYmplY3QuZHJvcFVuZGVmaW5lZEtleXMoe1xuICAgIGZpbGVuYW1lLFxuICAgIG1vZHVsZTogZ2V0TW9kdWxlRnJvbUZpbGVuYW1lKGZpbGVuYW1lKSxcbiAgICBmdW5jdGlvbjogZnJhbWUuZnVuY3Rpb25OYW1lIHx8IHN0YWNrdHJhY2UuVU5LTk9XTl9GVU5DVElPTixcbiAgICBjb2xubyxcbiAgICBsaW5lbm8sXG4gICAgaW5fYXBwOiBmaWxlbmFtZSA/IG5vZGVTdGFja1RyYWNlLmZpbGVuYW1lSXNJbkFwcChmaWxlbmFtZSkgOiB1bmRlZmluZWQsXG4gIH0pO1xufVxuXG5leHBvcnRzLmNhbGxGcmFtZVRvU3RhY2tGcmFtZSA9IGNhbGxGcmFtZVRvU3RhY2tGcmFtZTtcbmV4cG9ydHMud2F0Y2hkb2dUaW1lciA9IHdhdGNoZG9nVGltZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hbnIuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/anr.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/array.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/array.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n/** Flattens a multi-dimensional array */\nfunction flatten(input) {\n  const result = [];\n\n  const flattenHelper = (input) => {\n    input.forEach((el) => {\n      if (Array.isArray(el)) {\n        flattenHelper(el );\n      } else {\n        result.push(el );\n      }\n    });\n  };\n\n  flattenHelper(input);\n  return result;\n}\n\nexports.flatten = flatten;\n//# sourceMappingURL=array.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9hcnJheS5qcyIsIm1hcHBpbmdzIjoiQUFBQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7O0FBRTdEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxlQUFlO0FBQ2YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0Zm9saW8tcHJvamVjdC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2VudHJ5K3V0aWxzQDguMTcuMC9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9idWlsZC9janMvYXJyYXkuanM/ZDQzMyJdLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG4vKiogRmxhdHRlbnMgYSBtdWx0aS1kaW1lbnNpb25hbCBhcnJheSAqL1xuZnVuY3Rpb24gZmxhdHRlbihpbnB1dCkge1xuICBjb25zdCByZXN1bHQgPSBbXTtcblxuICBjb25zdCBmbGF0dGVuSGVscGVyID0gKGlucHV0KSA9PiB7XG4gICAgaW5wdXQuZm9yRWFjaCgoZWwpID0+IHtcbiAgICAgIGlmIChBcnJheS5pc0FycmF5KGVsKSkge1xuICAgICAgICBmbGF0dGVuSGVscGVyKGVsICk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXN1bHQucHVzaChlbCApO1xuICAgICAgfVxuICAgIH0pO1xuICB9O1xuXG4gIGZsYXR0ZW5IZWxwZXIoaW5wdXQpO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG5leHBvcnRzLmZsYXR0ZW4gPSBmbGF0dGVuO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXJyYXkuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/array.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/baggage.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/baggage.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst debugBuild = __webpack_require__(/*! ./debug-build.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/debug-build.js\");\nconst is = __webpack_require__(/*! ./is.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/is.js\");\nconst logger = __webpack_require__(/*! ./logger.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/logger.js\");\n\nconst BAGGAGE_HEADER_NAME = 'baggage';\n\nconst SENTRY_BAGGAGE_KEY_PREFIX = 'sentry-';\n\nconst SENTRY_BAGGAGE_KEY_PREFIX_REGEX = /^sentry-/;\n\n/**\n * Max length of a serialized baggage string\n *\n * https://www.w3.org/TR/baggage/#limits\n */\nconst MAX_BAGGAGE_STRING_LENGTH = 8192;\n\n/**\n * Takes a baggage header and turns it into Dynamic Sampling Context, by extracting all the \"sentry-\" prefixed values\n * from it.\n *\n * @param baggageHeader A very bread definition of a baggage header as it might appear in various frameworks.\n * @returns The Dynamic Sampling Context that was found on `baggageHeader`, if there was any, `undefined` otherwise.\n */\nfunction baggageHeaderToDynamicSamplingContext(\n  // Very liberal definition of what any incoming header might look like\n  baggageHeader,\n) {\n  const baggageObject = parseBaggageHeader(baggageHeader);\n\n  if (!baggageObject) {\n    return undefined;\n  }\n\n  // Read all \"sentry-\" prefixed values out of the baggage object and put it onto a dynamic sampling context object.\n  const dynamicSamplingContext = Object.entries(baggageObject).reduce((acc, [key, value]) => {\n    if (key.match(SENTRY_BAGGAGE_KEY_PREFIX_REGEX)) {\n      const nonPrefixedKey = key.slice(SENTRY_BAGGAGE_KEY_PREFIX.length);\n      acc[nonPrefixedKey] = value;\n    }\n    return acc;\n  }, {});\n\n  // Only return a dynamic sampling context object if there are keys in it.\n  // A keyless object means there were no sentry values on the header, which means that there is no DSC.\n  if (Object.keys(dynamicSamplingContext).length > 0) {\n    return dynamicSamplingContext ;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Turns a Dynamic Sampling Object into a baggage header by prefixing all the keys on the object with \"sentry-\".\n *\n * @param dynamicSamplingContext The Dynamic Sampling Context to turn into a header. For convenience and compatibility\n * with the `getDynamicSamplingContext` method on the Transaction class ,this argument can also be `undefined`. If it is\n * `undefined` the function will return `undefined`.\n * @returns a baggage header, created from `dynamicSamplingContext`, or `undefined` either if `dynamicSamplingContext`\n * was `undefined`, or if `dynamicSamplingContext` didn't contain any values.\n */\nfunction dynamicSamplingContextToSentryBaggageHeader(\n  // this also takes undefined for convenience and bundle size in other places\n  dynamicSamplingContext,\n) {\n  if (!dynamicSamplingContext) {\n    return undefined;\n  }\n\n  // Prefix all DSC keys with \"sentry-\" and put them into a new object\n  const sentryPrefixedDSC = Object.entries(dynamicSamplingContext).reduce(\n    (acc, [dscKey, dscValue]) => {\n      if (dscValue) {\n        acc[`${SENTRY_BAGGAGE_KEY_PREFIX}${dscKey}`] = dscValue;\n      }\n      return acc;\n    },\n    {},\n  );\n\n  return objectToBaggageHeader(sentryPrefixedDSC);\n}\n\n/**\n * Take a baggage header and parse it into an object.\n */\nfunction parseBaggageHeader(\n  baggageHeader,\n) {\n  if (!baggageHeader || (!is.isString(baggageHeader) && !Array.isArray(baggageHeader))) {\n    return undefined;\n  }\n\n  if (Array.isArray(baggageHeader)) {\n    // Combine all baggage headers into one object containing the baggage values so we can later read the Sentry-DSC-values from it\n    return baggageHeader.reduce((acc, curr) => {\n      const currBaggageObject = baggageHeaderToObject(curr);\n      Object.entries(currBaggageObject).forEach(([key, value]) => {\n        acc[key] = value;\n      });\n      return acc;\n    }, {});\n  }\n\n  return baggageHeaderToObject(baggageHeader);\n}\n\n/**\n * Will parse a baggage header, which is a simple key-value map, into a flat object.\n *\n * @param baggageHeader The baggage header to parse.\n * @returns a flat object containing all the key-value pairs from `baggageHeader`.\n */\nfunction baggageHeaderToObject(baggageHeader) {\n  return baggageHeader\n    .split(',')\n    .map(baggageEntry => baggageEntry.split('=').map(keyOrValue => decodeURIComponent(keyOrValue.trim())))\n    .reduce((acc, [key, value]) => {\n      if (key && value) {\n        acc[key] = value;\n      }\n      return acc;\n    }, {});\n}\n\n/**\n * Turns a flat object (key-value pairs) into a baggage header, which is also just key-value pairs.\n *\n * @param object The object to turn into a baggage header.\n * @returns a baggage header string, or `undefined` if the object didn't have any values, since an empty baggage header\n * is not spec compliant.\n */\nfunction objectToBaggageHeader(object) {\n  if (Object.keys(object).length === 0) {\n    // An empty baggage header is not spec compliant: We return undefined.\n    return undefined;\n  }\n\n  return Object.entries(object).reduce((baggageHeader, [objectKey, objectValue], currentIndex) => {\n    const baggageEntry = `${encodeURIComponent(objectKey)}=${encodeURIComponent(objectValue)}`;\n    const newBaggageHeader = currentIndex === 0 ? baggageEntry : `${baggageHeader},${baggageEntry}`;\n    if (newBaggageHeader.length > MAX_BAGGAGE_STRING_LENGTH) {\n      debugBuild.DEBUG_BUILD &&\n        logger.logger.warn(\n          `Not adding key: ${objectKey} with val: ${objectValue} to baggage header due to exceeding baggage size limits.`,\n        );\n      return baggageHeader;\n    } else {\n      return newBaggageHeader;\n    }\n  }, '');\n}\n\nexports.BAGGAGE_HEADER_NAME = BAGGAGE_HEADER_NAME;\nexports.MAX_BAGGAGE_STRING_LENGTH = MAX_BAGGAGE_STRING_LENGTH;\nexports.SENTRY_BAGGAGE_KEY_PREFIX = SENTRY_BAGGAGE_KEY_PREFIX;\nexports.SENTRY_BAGGAGE_KEY_PREFIX_REGEX = SENTRY_BAGGAGE_KEY_PREFIX_REGEX;\nexports.baggageHeaderToDynamicSamplingContext = baggageHeaderToDynamicSamplingContext;\nexports.dynamicSamplingContextToSentryBaggageHeader = dynamicSamplingContextToSentryBaggageHeader;\nexports.parseBaggageHeader = parseBaggageHeader;\n//# sourceMappingURL=baggage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9iYWdnYWdlLmpzIiwibWFwcGluZ3MiOiJBQUFBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQzs7QUFFN0QsbUJBQW1CLG1CQUFPLENBQUMsb0lBQWtCO0FBQzdDLFdBQVcsbUJBQU8sQ0FBQyxrSEFBUztBQUM1QixlQUFlLG1CQUFPLENBQUMsMEhBQWE7O0FBRXBDOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRyxJQUFJOztBQUVQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsMEJBQTBCLEVBQUUsT0FBTztBQUNsRDtBQUNBO0FBQ0EsS0FBSztBQUNMLE1BQU07QUFDTjs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxLQUFLLElBQUk7QUFDVDs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUssSUFBSTtBQUNUOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDRCQUE0Qiw4QkFBOEIsR0FBRyxnQ0FBZ0M7QUFDN0Ysb0VBQW9FLGNBQWMsR0FBRyxhQUFhO0FBQ2xHO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixXQUFXLFlBQVksYUFBYTtBQUNqRTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUEsMkJBQTJCO0FBQzNCLGlDQUFpQztBQUNqQyxpQ0FBaUM7QUFDakMsdUNBQXVDO0FBQ3ZDLDZDQUE2QztBQUM3QyxtREFBbUQ7QUFDbkQsMEJBQTBCO0FBQzFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLXByb2plY3QvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2JhZ2dhZ2UuanM/OWU5MyJdLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG5jb25zdCBkZWJ1Z0J1aWxkID0gcmVxdWlyZSgnLi9kZWJ1Zy1idWlsZC5qcycpO1xuY29uc3QgaXMgPSByZXF1aXJlKCcuL2lzLmpzJyk7XG5jb25zdCBsb2dnZXIgPSByZXF1aXJlKCcuL2xvZ2dlci5qcycpO1xuXG5jb25zdCBCQUdHQUdFX0hFQURFUl9OQU1FID0gJ2JhZ2dhZ2UnO1xuXG5jb25zdCBTRU5UUllfQkFHR0FHRV9LRVlfUFJFRklYID0gJ3NlbnRyeS0nO1xuXG5jb25zdCBTRU5UUllfQkFHR0FHRV9LRVlfUFJFRklYX1JFR0VYID0gL15zZW50cnktLztcblxuLyoqXG4gKiBNYXggbGVuZ3RoIG9mIGEgc2VyaWFsaXplZCBiYWdnYWdlIHN0cmluZ1xuICpcbiAqIGh0dHBzOi8vd3d3LnczLm9yZy9UUi9iYWdnYWdlLyNsaW1pdHNcbiAqL1xuY29uc3QgTUFYX0JBR0dBR0VfU1RSSU5HX0xFTkdUSCA9IDgxOTI7XG5cbi8qKlxuICogVGFrZXMgYSBiYWdnYWdlIGhlYWRlciBhbmQgdHVybnMgaXQgaW50byBEeW5hbWljIFNhbXBsaW5nIENvbnRleHQsIGJ5IGV4dHJhY3RpbmcgYWxsIHRoZSBcInNlbnRyeS1cIiBwcmVmaXhlZCB2YWx1ZXNcbiAqIGZyb20gaXQuXG4gKlxuICogQHBhcmFtIGJhZ2dhZ2VIZWFkZXIgQSB2ZXJ5IGJyZWFkIGRlZmluaXRpb24gb2YgYSBiYWdnYWdlIGhlYWRlciBhcyBpdCBtaWdodCBhcHBlYXIgaW4gdmFyaW91cyBmcmFtZXdvcmtzLlxuICogQHJldHVybnMgVGhlIER5bmFtaWMgU2FtcGxpbmcgQ29udGV4dCB0aGF0IHdhcyBmb3VuZCBvbiBgYmFnZ2FnZUhlYWRlcmAsIGlmIHRoZXJlIHdhcyBhbnksIGB1bmRlZmluZWRgIG90aGVyd2lzZS5cbiAqL1xuZnVuY3Rpb24gYmFnZ2FnZUhlYWRlclRvRHluYW1pY1NhbXBsaW5nQ29udGV4dChcbiAgLy8gVmVyeSBsaWJlcmFsIGRlZmluaXRpb24gb2Ygd2hhdCBhbnkgaW5jb21pbmcgaGVhZGVyIG1pZ2h0IGxvb2sgbGlrZVxuICBiYWdnYWdlSGVhZGVyLFxuKSB7XG4gIGNvbnN0IGJhZ2dhZ2VPYmplY3QgPSBwYXJzZUJhZ2dhZ2VIZWFkZXIoYmFnZ2FnZUhlYWRlcik7XG5cbiAgaWYgKCFiYWdnYWdlT2JqZWN0KSB7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxuXG4gIC8vIFJlYWQgYWxsIFwic2VudHJ5LVwiIHByZWZpeGVkIHZhbHVlcyBvdXQgb2YgdGhlIGJhZ2dhZ2Ugb2JqZWN0IGFuZCBwdXQgaXQgb250byBhIGR5bmFtaWMgc2FtcGxpbmcgY29udGV4dCBvYmplY3QuXG4gIGNvbnN0IGR5bmFtaWNTYW1wbGluZ0NvbnRleHQgPSBPYmplY3QuZW50cmllcyhiYWdnYWdlT2JqZWN0KS5yZWR1Y2UoKGFjYywgW2tleSwgdmFsdWVdKSA9PiB7XG4gICAgaWYgKGtleS5tYXRjaChTRU5UUllfQkFHR0FHRV9LRVlfUFJFRklYX1JFR0VYKSkge1xuICAgICAgY29uc3Qgbm9uUHJlZml4ZWRLZXkgPSBrZXkuc2xpY2UoU0VOVFJZX0JBR0dBR0VfS0VZX1BSRUZJWC5sZW5ndGgpO1xuICAgICAgYWNjW25vblByZWZpeGVkS2V5XSA9IHZhbHVlO1xuICAgIH1cbiAgICByZXR1cm4gYWNjO1xuICB9LCB7fSk7XG5cbiAgLy8gT25seSByZXR1cm4gYSBkeW5hbWljIHNhbXBsaW5nIGNvbnRleHQgb2JqZWN0IGlmIHRoZXJlIGFyZSBrZXlzIGluIGl0LlxuICAvLyBBIGtleWxlc3Mgb2JqZWN0IG1lYW5zIHRoZXJlIHdlcmUgbm8gc2VudHJ5IHZhbHVlcyBvbiB0aGUgaGVhZGVyLCB3aGljaCBtZWFucyB0aGF0IHRoZXJlIGlzIG5vIERTQy5cbiAgaWYgKE9iamVjdC5rZXlzKGR5bmFtaWNTYW1wbGluZ0NvbnRleHQpLmxlbmd0aCA+IDApIHtcbiAgICByZXR1cm4gZHluYW1pY1NhbXBsaW5nQ29udGV4dCA7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxufVxuXG4vKipcbiAqIFR1cm5zIGEgRHluYW1pYyBTYW1wbGluZyBPYmplY3QgaW50byBhIGJhZ2dhZ2UgaGVhZGVyIGJ5IHByZWZpeGluZyBhbGwgdGhlIGtleXMgb24gdGhlIG9iamVjdCB3aXRoIFwic2VudHJ5LVwiLlxuICpcbiAqIEBwYXJhbSBkeW5hbWljU2FtcGxpbmdDb250ZXh0IFRoZSBEeW5hbWljIFNhbXBsaW5nIENvbnRleHQgdG8gdHVybiBpbnRvIGEgaGVhZGVyLiBGb3IgY29udmVuaWVuY2UgYW5kIGNvbXBhdGliaWxpdHlcbiAqIHdpdGggdGhlIGBnZXREeW5hbWljU2FtcGxpbmdDb250ZXh0YCBtZXRob2Qgb24gdGhlIFRyYW5zYWN0aW9uIGNsYXNzICx0aGlzIGFyZ3VtZW50IGNhbiBhbHNvIGJlIGB1bmRlZmluZWRgLiBJZiBpdCBpc1xuICogYHVuZGVmaW5lZGAgdGhlIGZ1bmN0aW9uIHdpbGwgcmV0dXJuIGB1bmRlZmluZWRgLlxuICogQHJldHVybnMgYSBiYWdnYWdlIGhlYWRlciwgY3JlYXRlZCBmcm9tIGBkeW5hbWljU2FtcGxpbmdDb250ZXh0YCwgb3IgYHVuZGVmaW5lZGAgZWl0aGVyIGlmIGBkeW5hbWljU2FtcGxpbmdDb250ZXh0YFxuICogd2FzIGB1bmRlZmluZWRgLCBvciBpZiBgZHluYW1pY1NhbXBsaW5nQ29udGV4dGAgZGlkbid0IGNvbnRhaW4gYW55IHZhbHVlcy5cbiAqL1xuZnVuY3Rpb24gZHluYW1pY1NhbXBsaW5nQ29udGV4dFRvU2VudHJ5QmFnZ2FnZUhlYWRlcihcbiAgLy8gdGhpcyBhbHNvIHRha2VzIHVuZGVmaW5lZCBmb3IgY29udmVuaWVuY2UgYW5kIGJ1bmRsZSBzaXplIGluIG90aGVyIHBsYWNlc1xuICBkeW5hbWljU2FtcGxpbmdDb250ZXh0LFxuKSB7XG4gIGlmICghZHluYW1pY1NhbXBsaW5nQ29udGV4dCkge1xuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cblxuICAvLyBQcmVmaXggYWxsIERTQyBrZXlzIHdpdGggXCJzZW50cnktXCIgYW5kIHB1dCB0aGVtIGludG8gYSBuZXcgb2JqZWN0XG4gIGNvbnN0IHNlbnRyeVByZWZpeGVkRFNDID0gT2JqZWN0LmVudHJpZXMoZHluYW1pY1NhbXBsaW5nQ29udGV4dCkucmVkdWNlKFxuICAgIChhY2MsIFtkc2NLZXksIGRzY1ZhbHVlXSkgPT4ge1xuICAgICAgaWYgKGRzY1ZhbHVlKSB7XG4gICAgICAgIGFjY1tgJHtTRU5UUllfQkFHR0FHRV9LRVlfUFJFRklYfSR7ZHNjS2V5fWBdID0gZHNjVmFsdWU7XG4gICAgICB9XG4gICAgICByZXR1cm4gYWNjO1xuICAgIH0sXG4gICAge30sXG4gICk7XG5cbiAgcmV0dXJuIG9iamVjdFRvQmFnZ2FnZUhlYWRlcihzZW50cnlQcmVmaXhlZERTQyk7XG59XG5cbi8qKlxuICogVGFrZSBhIGJhZ2dhZ2UgaGVhZGVyIGFuZCBwYXJzZSBpdCBpbnRvIGFuIG9iamVjdC5cbiAqL1xuZnVuY3Rpb24gcGFyc2VCYWdnYWdlSGVhZGVyKFxuICBiYWdnYWdlSGVhZGVyLFxuKSB7XG4gIGlmICghYmFnZ2FnZUhlYWRlciB8fCAoIWlzLmlzU3RyaW5nKGJhZ2dhZ2VIZWFkZXIpICYmICFBcnJheS5pc0FycmF5KGJhZ2dhZ2VIZWFkZXIpKSkge1xuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cblxuICBpZiAoQXJyYXkuaXNBcnJheShiYWdnYWdlSGVhZGVyKSkge1xuICAgIC8vIENvbWJpbmUgYWxsIGJhZ2dhZ2UgaGVhZGVycyBpbnRvIG9uZSBvYmplY3QgY29udGFpbmluZyB0aGUgYmFnZ2FnZSB2YWx1ZXMgc28gd2UgY2FuIGxhdGVyIHJlYWQgdGhlIFNlbnRyeS1EU0MtdmFsdWVzIGZyb20gaXRcbiAgICByZXR1cm4gYmFnZ2FnZUhlYWRlci5yZWR1Y2UoKGFjYywgY3VycikgPT4ge1xuICAgICAgY29uc3QgY3VyckJhZ2dhZ2VPYmplY3QgPSBiYWdnYWdlSGVhZGVyVG9PYmplY3QoY3Vycik7XG4gICAgICBPYmplY3QuZW50cmllcyhjdXJyQmFnZ2FnZU9iamVjdCkuZm9yRWFjaCgoW2tleSwgdmFsdWVdKSA9PiB7XG4gICAgICAgIGFjY1trZXldID0gdmFsdWU7XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBhY2M7XG4gICAgfSwge30pO1xuICB9XG5cbiAgcmV0dXJuIGJhZ2dhZ2VIZWFkZXJUb09iamVjdChiYWdnYWdlSGVhZGVyKTtcbn1cblxuLyoqXG4gKiBXaWxsIHBhcnNlIGEgYmFnZ2FnZSBoZWFkZXIsIHdoaWNoIGlzIGEgc2ltcGxlIGtleS12YWx1ZSBtYXAsIGludG8gYSBmbGF0IG9iamVjdC5cbiAqXG4gKiBAcGFyYW0gYmFnZ2FnZUhlYWRlciBUaGUgYmFnZ2FnZSBoZWFkZXIgdG8gcGFyc2UuXG4gKiBAcmV0dXJucyBhIGZsYXQgb2JqZWN0IGNvbnRhaW5pbmcgYWxsIHRoZSBrZXktdmFsdWUgcGFpcnMgZnJvbSBgYmFnZ2FnZUhlYWRlcmAuXG4gKi9cbmZ1bmN0aW9uIGJhZ2dhZ2VIZWFkZXJUb09iamVjdChiYWdnYWdlSGVhZGVyKSB7XG4gIHJldHVybiBiYWdnYWdlSGVhZGVyXG4gICAgLnNwbGl0KCcsJylcbiAgICAubWFwKGJhZ2dhZ2VFbnRyeSA9PiBiYWdnYWdlRW50cnkuc3BsaXQoJz0nKS5tYXAoa2V5T3JWYWx1ZSA9PiBkZWNvZGVVUklDb21wb25lbnQoa2V5T3JWYWx1ZS50cmltKCkpKSlcbiAgICAucmVkdWNlKChhY2MsIFtrZXksIHZhbHVlXSkgPT4ge1xuICAgICAgaWYgKGtleSAmJiB2YWx1ZSkge1xuICAgICAgICBhY2Nba2V5XSA9IHZhbHVlO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGFjYztcbiAgICB9LCB7fSk7XG59XG5cbi8qKlxuICogVHVybnMgYSBmbGF0IG9iamVjdCAoa2V5LXZhbHVlIHBhaXJzKSBpbnRvIGEgYmFnZ2FnZSBoZWFkZXIsIHdoaWNoIGlzIGFsc28ganVzdCBrZXktdmFsdWUgcGFpcnMuXG4gKlxuICogQHBhcmFtIG9iamVjdCBUaGUgb2JqZWN0IHRvIHR1cm4gaW50byBhIGJhZ2dhZ2UgaGVhZGVyLlxuICogQHJldHVybnMgYSBiYWdnYWdlIGhlYWRlciBzdHJpbmcsIG9yIGB1bmRlZmluZWRgIGlmIHRoZSBvYmplY3QgZGlkbid0IGhhdmUgYW55IHZhbHVlcywgc2luY2UgYW4gZW1wdHkgYmFnZ2FnZSBoZWFkZXJcbiAqIGlzIG5vdCBzcGVjIGNvbXBsaWFudC5cbiAqL1xuZnVuY3Rpb24gb2JqZWN0VG9CYWdnYWdlSGVhZGVyKG9iamVjdCkge1xuICBpZiAoT2JqZWN0LmtleXMob2JqZWN0KS5sZW5ndGggPT09IDApIHtcbiAgICAvLyBBbiBlbXB0eSBiYWdnYWdlIGhlYWRlciBpcyBub3Qgc3BlYyBjb21wbGlhbnQ6IFdlIHJldHVybiB1bmRlZmluZWQuXG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxuXG4gIHJldHVybiBPYmplY3QuZW50cmllcyhvYmplY3QpLnJlZHVjZSgoYmFnZ2FnZUhlYWRlciwgW29iamVjdEtleSwgb2JqZWN0VmFsdWVdLCBjdXJyZW50SW5kZXgpID0+IHtcbiAgICBjb25zdCBiYWdnYWdlRW50cnkgPSBgJHtlbmNvZGVVUklDb21wb25lbnQob2JqZWN0S2V5KX09JHtlbmNvZGVVUklDb21wb25lbnQob2JqZWN0VmFsdWUpfWA7XG4gICAgY29uc3QgbmV3QmFnZ2FnZUhlYWRlciA9IGN1cnJlbnRJbmRleCA9PT0gMCA/IGJhZ2dhZ2VFbnRyeSA6IGAke2JhZ2dhZ2VIZWFkZXJ9LCR7YmFnZ2FnZUVudHJ5fWA7XG4gICAgaWYgKG5ld0JhZ2dhZ2VIZWFkZXIubGVuZ3RoID4gTUFYX0JBR0dBR0VfU1RSSU5HX0xFTkdUSCkge1xuICAgICAgZGVidWdCdWlsZC5ERUJVR19CVUlMRCAmJlxuICAgICAgICBsb2dnZXIubG9nZ2VyLndhcm4oXG4gICAgICAgICAgYE5vdCBhZGRpbmcga2V5OiAke29iamVjdEtleX0gd2l0aCB2YWw6ICR7b2JqZWN0VmFsdWV9IHRvIGJhZ2dhZ2UgaGVhZGVyIGR1ZSB0byBleGNlZWRpbmcgYmFnZ2FnZSBzaXplIGxpbWl0cy5gLFxuICAgICAgICApO1xuICAgICAgcmV0dXJuIGJhZ2dhZ2VIZWFkZXI7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBuZXdCYWdnYWdlSGVhZGVyO1xuICAgIH1cbiAgfSwgJycpO1xufVxuXG5leHBvcnRzLkJBR0dBR0VfSEVBREVSX05BTUUgPSBCQUdHQUdFX0hFQURFUl9OQU1FO1xuZXhwb3J0cy5NQVhfQkFHR0FHRV9TVFJJTkdfTEVOR1RIID0gTUFYX0JBR0dBR0VfU1RSSU5HX0xFTkdUSDtcbmV4cG9ydHMuU0VOVFJZX0JBR0dBR0VfS0VZX1BSRUZJWCA9IFNFTlRSWV9CQUdHQUdFX0tFWV9QUkVGSVg7XG5leHBvcnRzLlNFTlRSWV9CQUdHQUdFX0tFWV9QUkVGSVhfUkVHRVggPSBTRU5UUllfQkFHR0FHRV9LRVlfUFJFRklYX1JFR0VYO1xuZXhwb3J0cy5iYWdnYWdlSGVhZGVyVG9EeW5hbWljU2FtcGxpbmdDb250ZXh0ID0gYmFnZ2FnZUhlYWRlclRvRHluYW1pY1NhbXBsaW5nQ29udGV4dDtcbmV4cG9ydHMuZHluYW1pY1NhbXBsaW5nQ29udGV4dFRvU2VudHJ5QmFnZ2FnZUhlYWRlciA9IGR5bmFtaWNTYW1wbGluZ0NvbnRleHRUb1NlbnRyeUJhZ2dhZ2VIZWFkZXI7XG5leHBvcnRzLnBhcnNlQmFnZ2FnZUhlYWRlciA9IHBhcnNlQmFnZ2FnZUhlYWRlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJhZ2dhZ2UuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/baggage.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/browser.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/browser.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst is = __webpack_require__(/*! ./is.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/is.js\");\nconst worldwide = __webpack_require__(/*! ./worldwide.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/worldwide.js\");\n\nconst WINDOW = worldwide.GLOBAL_OBJ ;\n\nconst DEFAULT_MAX_STRING_LENGTH = 80;\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction htmlTreeAsString(\n  elem,\n  options = {},\n) {\n  if (!elem) {\n    return '<unknown>';\n  }\n\n  // try/catch both:\n  // - accessing event.target (see getsentry/raven-js#838, #768)\n  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n  // - can throw an exception in some circumstances.\n  try {\n    let currentElem = elem ;\n    const MAX_TRAVERSE_HEIGHT = 5;\n    const out = [];\n    let height = 0;\n    let len = 0;\n    const separator = ' > ';\n    const sepLength = separator.length;\n    let nextStr;\n    const keyAttrs = Array.isArray(options) ? options : options.keyAttrs;\n    const maxStringLength = (!Array.isArray(options) && options.maxStringLength) || DEFAULT_MAX_STRING_LENGTH;\n\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n      nextStr = _htmlElementAsString(currentElem, keyAttrs);\n      // bail out if\n      // - nextStr is the 'html' element\n      // - the length of the string that would be created exceeds maxStringLength\n      //   (ignore this limit if we are on the first iteration)\n      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= maxStringLength)) {\n        break;\n      }\n\n      out.push(nextStr);\n\n      len += nextStr.length;\n      currentElem = currentElem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el, keyAttrs) {\n  const elem = el\n\n;\n\n  const out = [];\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  // @ts-expect-error WINDOW has HTMLElement\n  if (WINDOW.HTMLElement) {\n    // If using the component name annotation plugin, this value may be available on the DOM node\n    if (elem instanceof HTMLElement && elem.dataset) {\n      if (elem.dataset['sentryComponent']) {\n        return elem.dataset['sentryComponent'];\n      }\n      if (elem.dataset['sentryElement']) {\n        return elem.dataset['sentryElement'];\n      }\n    }\n  }\n\n  out.push(elem.tagName.toLowerCase());\n\n  // Pairs of attribute keys defined in `serializeAttribute` and their values on element.\n  const keyAttrPairs =\n    keyAttrs && keyAttrs.length\n      ? keyAttrs.filter(keyAttr => elem.getAttribute(keyAttr)).map(keyAttr => [keyAttr, elem.getAttribute(keyAttr)])\n      : null;\n\n  if (keyAttrPairs && keyAttrPairs.length) {\n    keyAttrPairs.forEach(keyAttrPair => {\n      out.push(`[${keyAttrPair[0]}=\"${keyAttrPair[1]}\"]`);\n    });\n  } else {\n    if (elem.id) {\n      out.push(`#${elem.id}`);\n    }\n\n    const className = elem.className;\n    if (className && is.isString(className)) {\n      const classes = className.split(/\\s+/);\n      for (const c of classes) {\n        out.push(`.${c}`);\n      }\n    }\n  }\n  const allowedAttrs = ['aria-label', 'type', 'name', 'title', 'alt'];\n  for (const k of allowedAttrs) {\n    const attr = elem.getAttribute(k);\n    if (attr) {\n      out.push(`[${k}=\"${attr}\"]`);\n    }\n  }\n\n  return out.join('');\n}\n\n/**\n * A safe form of location.href\n */\nfunction getLocationHref() {\n  try {\n    return WINDOW.document.location.href;\n  } catch (oO) {\n    return '';\n  }\n}\n\n/**\n * Gets a DOM element by using document.querySelector.\n *\n * This wrapper will first check for the existance of the function before\n * actually calling it so that we don't have to take care of this check,\n * every time we want to access the DOM.\n *\n * Reason: DOM/querySelector is not available in all environments.\n *\n * We have to cast to any because utils can be consumed by a variety of environments,\n * and we don't want to break TS users. If you know what element will be selected by\n * `document.querySelector`, specify it as part of the generic call. For example,\n * `const element = getDomElement<Element>('selector');`\n *\n * @param selector the selector string passed on to document.querySelector\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction getDomElement(selector) {\n  if (WINDOW.document && WINDOW.document.querySelector) {\n    return WINDOW.document.querySelector(selector) ;\n  }\n  return null;\n}\n\n/**\n * Given a DOM element, traverses up the tree until it finds the first ancestor node\n * that has the `data-sentry-component` or `data-sentry-element` attribute with `data-sentry-component` taking\n * precendence. This attribute is added at build-time by projects that have the component name annotation plugin installed.\n *\n * @returns a string representation of the component for the provided DOM element, or `null` if not found\n */\nfunction getComponentName(elem) {\n  // @ts-expect-error WINDOW has HTMLElement\n  if (!WINDOW.HTMLElement) {\n    return null;\n  }\n\n  let currentElem = elem ;\n  const MAX_TRAVERSE_HEIGHT = 5;\n  for (let i = 0; i < MAX_TRAVERSE_HEIGHT; i++) {\n    if (!currentElem) {\n      return null;\n    }\n\n    if (currentElem instanceof HTMLElement) {\n      if (currentElem.dataset['sentryComponent']) {\n        return currentElem.dataset['sentryComponent'];\n      }\n      if (currentElem.dataset['sentryElement']) {\n        return currentElem.dataset['sentryElement'];\n      }\n    }\n\n    currentElem = currentElem.parentNode;\n  }\n\n  return null;\n}\n\nexports.getComponentName = getComponentName;\nexports.getDomElement = getDomElement;\nexports.getLocationHref = getLocationHref;\nexports.htmlTreeAsString = htmlTreeAsString;\n//# sourceMappingURL=browser.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/browser.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_asyncNullishCoalesce.js":
/*!******************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_asyncNullishCoalesce.js ***!
  \******************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst _nullishCoalesce = __webpack_require__(/*! ./_nullishCoalesce.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_nullishCoalesce.js\");\n\n// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n\n/**\n * Polyfill for the nullish coalescing operator (`??`), when used in situations where at least one of the values is the\n * result of an async operation.\n *\n * Note that the RHS is wrapped in a function so that if it's a computed value, that evaluation won't happen unless the\n * LHS evaluates to a nullish value, to mimic the operator's short-circuiting behavior.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param lhs The value of the expression to the left of the `??`\n * @param rhsFn A function returning the value of the expression to the right of the `??`\n * @returns The LHS value, unless it's `null` or `undefined`, in which case, the RHS value\n */\nasync function _asyncNullishCoalesce(lhs, rhsFn) {\n  return _nullishCoalesce._nullishCoalesce(lhs, rhsFn);\n}\n\n// Sucrase version:\n// async function _asyncNullishCoalesce(lhs, rhsFn) {\n//   if (lhs != null) {\n//     return lhs;\n//   } else {\n//     return await rhsFn();\n//   }\n// }\n\nexports._asyncNullishCoalesce = _asyncNullishCoalesce;\n//# sourceMappingURL=_asyncNullishCoalesce.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9idWlsZFBvbHlmaWxscy9fYXN5bmNOdWxsaXNoQ29hbGVzY2UuanMiLCJtYXBwaW5ncyI6IkFBQUEsOENBQTZDLEVBQUUsYUFBYSxFQUFDOztBQUU3RCx5QkFBeUIsbUJBQU8sQ0FBQyw2SkFBdUI7O0FBRXhEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTs7QUFFQSw2QkFBNkI7QUFDN0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0Zm9saW8tcHJvamVjdC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2VudHJ5K3V0aWxzQDguMTcuMC9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9idWlsZC9janMvYnVpbGRQb2x5ZmlsbHMvX2FzeW5jTnVsbGlzaENvYWxlc2NlLmpzP2FlYjYiXSwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxuY29uc3QgX251bGxpc2hDb2FsZXNjZSA9IHJlcXVpcmUoJy4vX251bGxpc2hDb2FsZXNjZS5qcycpO1xuXG4vLyBodHRwczovL2dpdGh1Yi5jb20vYWxhbmdwaWVyY2Uvc3VjcmFzZS90cmVlLzI2NTg4Nzg2ODk2NjkxN2YzYjkyNGNlMzhkZmFkMDFmYmFiMTMyOWZcbi8vXG4vLyBUaGUgTUlUIExpY2Vuc2UgKE1JVClcbi8vXG4vLyBDb3B5cmlnaHQgKGMpIDIwMTItMjAxOCB2YXJpb3VzIGNvbnRyaWJ1dG9ycyAoc2VlIEFVVEhPUlMpXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weVxuLy8gb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbFxuLy8gaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0c1xuLy8gdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbFxuLy8gY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzXG4vLyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluIGFsbFxuLy8gY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXG4vLyBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbi8vIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRVxuLy8gQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxuLy8gTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSxcbi8vIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFXG4vLyBTT0ZUV0FSRS5cblxuXG4vKipcbiAqIFBvbHlmaWxsIGZvciB0aGUgbnVsbGlzaCBjb2FsZXNjaW5nIG9wZXJhdG9yIChgPz9gKSwgd2hlbiB1c2VkIGluIHNpdHVhdGlvbnMgd2hlcmUgYXQgbGVhc3Qgb25lIG9mIHRoZSB2YWx1ZXMgaXMgdGhlXG4gKiByZXN1bHQgb2YgYW4gYXN5bmMgb3BlcmF0aW9uLlxuICpcbiAqIE5vdGUgdGhhdCB0aGUgUkhTIGlzIHdyYXBwZWQgaW4gYSBmdW5jdGlvbiBzbyB0aGF0IGlmIGl0J3MgYSBjb21wdXRlZCB2YWx1ZSwgdGhhdCBldmFsdWF0aW9uIHdvbid0IGhhcHBlbiB1bmxlc3MgdGhlXG4gKiBMSFMgZXZhbHVhdGVzIHRvIGEgbnVsbGlzaCB2YWx1ZSwgdG8gbWltaWMgdGhlIG9wZXJhdG9yJ3Mgc2hvcnQtY2lyY3VpdGluZyBiZWhhdmlvci5cbiAqXG4gKiBBZGFwdGVkIGZyb20gU3VjcmFzZSAoaHR0cHM6Ly9naXRodWIuY29tL2FsYW5ncGllcmNlL3N1Y3Jhc2UpXG4gKlxuICogQHBhcmFtIGxocyBUaGUgdmFsdWUgb2YgdGhlIGV4cHJlc3Npb24gdG8gdGhlIGxlZnQgb2YgdGhlIGA/P2BcbiAqIEBwYXJhbSByaHNGbiBBIGZ1bmN0aW9uIHJldHVybmluZyB0aGUgdmFsdWUgb2YgdGhlIGV4cHJlc3Npb24gdG8gdGhlIHJpZ2h0IG9mIHRoZSBgPz9gXG4gKiBAcmV0dXJucyBUaGUgTEhTIHZhbHVlLCB1bmxlc3MgaXQncyBgbnVsbGAgb3IgYHVuZGVmaW5lZGAsIGluIHdoaWNoIGNhc2UsIHRoZSBSSFMgdmFsdWVcbiAqL1xuYXN5bmMgZnVuY3Rpb24gX2FzeW5jTnVsbGlzaENvYWxlc2NlKGxocywgcmhzRm4pIHtcbiAgcmV0dXJuIF9udWxsaXNoQ29hbGVzY2UuX251bGxpc2hDb2FsZXNjZShsaHMsIHJoc0ZuKTtcbn1cblxuLy8gU3VjcmFzZSB2ZXJzaW9uOlxuLy8gYXN5bmMgZnVuY3Rpb24gX2FzeW5jTnVsbGlzaENvYWxlc2NlKGxocywgcmhzRm4pIHtcbi8vICAgaWYgKGxocyAhPSBudWxsKSB7XG4vLyAgICAgcmV0dXJuIGxocztcbi8vICAgfSBlbHNlIHtcbi8vICAgICByZXR1cm4gYXdhaXQgcmhzRm4oKTtcbi8vICAgfVxuLy8gfVxuXG5leHBvcnRzLl9hc3luY051bGxpc2hDb2FsZXNjZSA9IF9hc3luY051bGxpc2hDb2FsZXNjZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPV9hc3luY051bGxpc2hDb2FsZXNjZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_asyncNullishCoalesce.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_asyncOptionalChain.js":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_asyncOptionalChain.js ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n/**\n * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,\n * descriptors, and functions, for situations in which at least one part of the expression is async.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase) See\n * https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15\n *\n * @param ops Array result of expression conversion\n * @returns The value of the expression\n */\nasync function _asyncOptionalChain(ops) {\n  let lastAccessLHS = undefined;\n  let value = ops[0];\n  let i = 1;\n  while (i < ops.length) {\n    const op = ops[i] ;\n    const fn = ops[i + 1] ;\n    i += 2;\n    // by checking for loose equality to `null`, we catch both `null` and `undefined`\n    if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n      // really we're meaning to return `undefined` as an actual value here, but it saves bytes not to write it\n      return;\n    }\n    if (op === 'access' || op === 'optionalAccess') {\n      lastAccessLHS = value;\n      value = await fn(value);\n    } else if (op === 'call' || op === 'optionalCall') {\n      value = await fn((...args) => (value ).call(lastAccessLHS, ...args));\n      lastAccessLHS = undefined;\n    }\n  }\n  return value;\n}\n\n// Sucrase version:\n// async function _asyncOptionalChain(ops) {\n//   let lastAccessLHS = undefined;\n//   let value = ops[0];\n//   let i = 1;\n//   while (i < ops.length) {\n//     const op = ops[i];\n//     const fn = ops[i + 1];\n//     i += 2;\n//     if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n//       return undefined;\n//     }\n//     if (op === 'access' || op === 'optionalAccess') {\n//       lastAccessLHS = value;\n//       value = await fn(value);\n//     } else if (op === 'call' || op === 'optionalCall') {\n//       value = await fn((...args) => value.call(lastAccessLHS, ...args));\n//       lastAccessLHS = undefined;\n//     }\n//   }\n//   return value;\n// }\n\nexports._asyncOptionalChain = _asyncOptionalChain;\n//# sourceMappingURL=_asyncOptionalChain.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9idWlsZFBvbHlmaWxscy9fYXN5bmNPcHRpb25hbENoYWluLmpzIiwibWFwcGluZ3MiOiJBQUFBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQzs7QUFFN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSwyQkFBMkI7QUFDM0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0Zm9saW8tcHJvamVjdC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2VudHJ5K3V0aWxzQDguMTcuMC9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9idWlsZC9janMvYnVpbGRQb2x5ZmlsbHMvX2FzeW5jT3B0aW9uYWxDaGFpbi5qcz82ZjgyIl0sInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG5cbi8qKlxuICogUG9seWZpbGwgZm9yIHRoZSBvcHRpb25hbCBjaGFpbiBvcGVyYXRvciwgYD8uYCwgZ2l2ZW4gcHJldmlvdXMgY29udmVyc2lvbiBvZiB0aGUgZXhwcmVzc2lvbiBpbnRvIGFuIGFycmF5IG9mIHZhbHVlcyxcbiAqIGRlc2NyaXB0b3JzLCBhbmQgZnVuY3Rpb25zLCBmb3Igc2l0dWF0aW9ucyBpbiB3aGljaCBhdCBsZWFzdCBvbmUgcGFydCBvZiB0aGUgZXhwcmVzc2lvbiBpcyBhc3luYy5cbiAqXG4gKiBBZGFwdGVkIGZyb20gU3VjcmFzZSAoaHR0cHM6Ly9naXRodWIuY29tL2FsYW5ncGllcmNlL3N1Y3Jhc2UpIFNlZVxuICogaHR0cHM6Ly9naXRodWIuY29tL2FsYW5ncGllcmNlL3N1Y3Jhc2UvYmxvYi8yNjU4ODc4Njg5NjY5MTdmM2I5MjRjZTM4ZGZhZDAxZmJhYjEzMjlmL3NyYy90cmFuc2Zvcm1lcnMvT3B0aW9uYWxDaGFpbmluZ051bGxpc2hUcmFuc2Zvcm1lci50cyNMMTVcbiAqXG4gKiBAcGFyYW0gb3BzIEFycmF5IHJlc3VsdCBvZiBleHByZXNzaW9uIGNvbnZlcnNpb25cbiAqIEByZXR1cm5zIFRoZSB2YWx1ZSBvZiB0aGUgZXhwcmVzc2lvblxuICovXG5hc3luYyBmdW5jdGlvbiBfYXN5bmNPcHRpb25hbENoYWluKG9wcykge1xuICBsZXQgbGFzdEFjY2Vzc0xIUyA9IHVuZGVmaW5lZDtcbiAgbGV0IHZhbHVlID0gb3BzWzBdO1xuICBsZXQgaSA9IDE7XG4gIHdoaWxlIChpIDwgb3BzLmxlbmd0aCkge1xuICAgIGNvbnN0IG9wID0gb3BzW2ldIDtcbiAgICBjb25zdCBmbiA9IG9wc1tpICsgMV0gO1xuICAgIGkgKz0gMjtcbiAgICAvLyBieSBjaGVja2luZyBmb3IgbG9vc2UgZXF1YWxpdHkgdG8gYG51bGxgLCB3ZSBjYXRjaCBib3RoIGBudWxsYCBhbmQgYHVuZGVmaW5lZGBcbiAgICBpZiAoKG9wID09PSAnb3B0aW9uYWxBY2Nlc3MnIHx8IG9wID09PSAnb3B0aW9uYWxDYWxsJykgJiYgdmFsdWUgPT0gbnVsbCkge1xuICAgICAgLy8gcmVhbGx5IHdlJ3JlIG1lYW5pbmcgdG8gcmV0dXJuIGB1bmRlZmluZWRgIGFzIGFuIGFjdHVhbCB2YWx1ZSBoZXJlLCBidXQgaXQgc2F2ZXMgYnl0ZXMgbm90IHRvIHdyaXRlIGl0XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmIChvcCA9PT0gJ2FjY2VzcycgfHwgb3AgPT09ICdvcHRpb25hbEFjY2VzcycpIHtcbiAgICAgIGxhc3RBY2Nlc3NMSFMgPSB2YWx1ZTtcbiAgICAgIHZhbHVlID0gYXdhaXQgZm4odmFsdWUpO1xuICAgIH0gZWxzZSBpZiAob3AgPT09ICdjYWxsJyB8fCBvcCA9PT0gJ29wdGlvbmFsQ2FsbCcpIHtcbiAgICAgIHZhbHVlID0gYXdhaXQgZm4oKC4uLmFyZ3MpID0+ICh2YWx1ZSApLmNhbGwobGFzdEFjY2Vzc0xIUywgLi4uYXJncykpO1xuICAgICAgbGFzdEFjY2Vzc0xIUyA9IHVuZGVmaW5lZDtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHZhbHVlO1xufVxuXG4vLyBTdWNyYXNlIHZlcnNpb246XG4vLyBhc3luYyBmdW5jdGlvbiBfYXN5bmNPcHRpb25hbENoYWluKG9wcykge1xuLy8gICBsZXQgbGFzdEFjY2Vzc0xIUyA9IHVuZGVmaW5lZDtcbi8vICAgbGV0IHZhbHVlID0gb3BzWzBdO1xuLy8gICBsZXQgaSA9IDE7XG4vLyAgIHdoaWxlIChpIDwgb3BzLmxlbmd0aCkge1xuLy8gICAgIGNvbnN0IG9wID0gb3BzW2ldO1xuLy8gICAgIGNvbnN0IGZuID0gb3BzW2kgKyAxXTtcbi8vICAgICBpICs9IDI7XG4vLyAgICAgaWYgKChvcCA9PT0gJ29wdGlvbmFsQWNjZXNzJyB8fCBvcCA9PT0gJ29wdGlvbmFsQ2FsbCcpICYmIHZhbHVlID09IG51bGwpIHtcbi8vICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4vLyAgICAgfVxuLy8gICAgIGlmIChvcCA9PT0gJ2FjY2VzcycgfHwgb3AgPT09ICdvcHRpb25hbEFjY2VzcycpIHtcbi8vICAgICAgIGxhc3RBY2Nlc3NMSFMgPSB2YWx1ZTtcbi8vICAgICAgIHZhbHVlID0gYXdhaXQgZm4odmFsdWUpO1xuLy8gICAgIH0gZWxzZSBpZiAob3AgPT09ICdjYWxsJyB8fCBvcCA9PT0gJ29wdGlvbmFsQ2FsbCcpIHtcbi8vICAgICAgIHZhbHVlID0gYXdhaXQgZm4oKC4uLmFyZ3MpID0+IHZhbHVlLmNhbGwobGFzdEFjY2Vzc0xIUywgLi4uYXJncykpO1xuLy8gICAgICAgbGFzdEFjY2Vzc0xIUyA9IHVuZGVmaW5lZDtcbi8vICAgICB9XG4vLyAgIH1cbi8vICAgcmV0dXJuIHZhbHVlO1xuLy8gfVxuXG5leHBvcnRzLl9hc3luY09wdGlvbmFsQ2hhaW4gPSBfYXN5bmNPcHRpb25hbENoYWluO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9X2FzeW5jT3B0aW9uYWxDaGFpbi5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_asyncOptionalChain.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_asyncOptionalChainDelete.js":
/*!**********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_asyncOptionalChainDelete.js ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst _asyncOptionalChain = __webpack_require__(/*! ./_asyncOptionalChain.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_asyncOptionalChain.js\");\n\n// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n\n/**\n * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,\n * descriptors, and functions, in cases where the value of the expression is to be deleted.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase) See\n * https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15\n *\n * @param ops Array result of expression conversion\n * @returns The return value of the `delete` operator: `true`, unless the deletion target is an own, non-configurable\n * property (one which can't be deleted or turned into an accessor, and whose enumerability can't be changed), in which\n * case `false`.\n */\nasync function _asyncOptionalChainDelete(ops) {\n  const result = (await _asyncOptionalChain._asyncOptionalChain(ops)) ;\n  // If `result` is `null`, it means we didn't get to the end of the chain and so nothing was deleted (in which case,\n  // return `true` since that's what `delete` does when it no-ops). If it's non-null, we know the delete happened, in\n  // which case we return whatever the `delete` returned, which will be a boolean.\n  return result == null ? true : (result );\n}\n\n// Sucrase version:\n// async function asyncOptionalChainDelete(ops) {\n//   const result = await ASYNC_OPTIONAL_CHAIN_NAME(ops);\n//   return result == null ? true : result;\n// }\n\nexports._asyncOptionalChainDelete = _asyncOptionalChainDelete;\n//# sourceMappingURL=_asyncOptionalChainDelete.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9idWlsZFBvbHlmaWxscy9fYXN5bmNPcHRpb25hbENoYWluRGVsZXRlLmpzIiwibWFwcGluZ3MiOiJBQUFBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQzs7QUFFN0QsNEJBQTRCLG1CQUFPLENBQUMsbUtBQTBCOztBQUU5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGlDQUFpQztBQUNqQyIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9idWlsZFBvbHlmaWxscy9fYXN5bmNPcHRpb25hbENoYWluRGVsZXRlLmpzPzY4YTkiXSwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxuY29uc3QgX2FzeW5jT3B0aW9uYWxDaGFpbiA9IHJlcXVpcmUoJy4vX2FzeW5jT3B0aW9uYWxDaGFpbi5qcycpO1xuXG4vLyBodHRwczovL2dpdGh1Yi5jb20vYWxhbmdwaWVyY2Uvc3VjcmFzZS90cmVlLzI2NTg4Nzg2ODk2NjkxN2YzYjkyNGNlMzhkZmFkMDFmYmFiMTMyOWZcbi8vXG4vLyBUaGUgTUlUIExpY2Vuc2UgKE1JVClcbi8vXG4vLyBDb3B5cmlnaHQgKGMpIDIwMTItMjAxOCB2YXJpb3VzIGNvbnRyaWJ1dG9ycyAoc2VlIEFVVEhPUlMpXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weVxuLy8gb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbFxuLy8gaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0c1xuLy8gdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbFxuLy8gY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzXG4vLyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluIGFsbFxuLy8gY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXG4vLyBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbi8vIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRVxuLy8gQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxuLy8gTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSxcbi8vIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFXG4vLyBTT0ZUV0FSRS5cblxuXG4vKipcbiAqIFBvbHlmaWxsIGZvciB0aGUgb3B0aW9uYWwgY2hhaW4gb3BlcmF0b3IsIGA/LmAsIGdpdmVuIHByZXZpb3VzIGNvbnZlcnNpb24gb2YgdGhlIGV4cHJlc3Npb24gaW50byBhbiBhcnJheSBvZiB2YWx1ZXMsXG4gKiBkZXNjcmlwdG9ycywgYW5kIGZ1bmN0aW9ucywgaW4gY2FzZXMgd2hlcmUgdGhlIHZhbHVlIG9mIHRoZSBleHByZXNzaW9uIGlzIHRvIGJlIGRlbGV0ZWQuXG4gKlxuICogQWRhcHRlZCBmcm9tIFN1Y3Jhc2UgKGh0dHBzOi8vZ2l0aHViLmNvbS9hbGFuZ3BpZXJjZS9zdWNyYXNlKSBTZWVcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9hbGFuZ3BpZXJjZS9zdWNyYXNlL2Jsb2IvMjY1ODg3ODY4OTY2OTE3ZjNiOTI0Y2UzOGRmYWQwMWZiYWIxMzI5Zi9zcmMvdHJhbnNmb3JtZXJzL09wdGlvbmFsQ2hhaW5pbmdOdWxsaXNoVHJhbnNmb3JtZXIudHMjTDE1XG4gKlxuICogQHBhcmFtIG9wcyBBcnJheSByZXN1bHQgb2YgZXhwcmVzc2lvbiBjb252ZXJzaW9uXG4gKiBAcmV0dXJucyBUaGUgcmV0dXJuIHZhbHVlIG9mIHRoZSBgZGVsZXRlYCBvcGVyYXRvcjogYHRydWVgLCB1bmxlc3MgdGhlIGRlbGV0aW9uIHRhcmdldCBpcyBhbiBvd24sIG5vbi1jb25maWd1cmFibGVcbiAqIHByb3BlcnR5IChvbmUgd2hpY2ggY2FuJ3QgYmUgZGVsZXRlZCBvciB0dXJuZWQgaW50byBhbiBhY2Nlc3NvciwgYW5kIHdob3NlIGVudW1lcmFiaWxpdHkgY2FuJ3QgYmUgY2hhbmdlZCksIGluIHdoaWNoXG4gKiBjYXNlIGBmYWxzZWAuXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIF9hc3luY09wdGlvbmFsQ2hhaW5EZWxldGUob3BzKSB7XG4gIGNvbnN0IHJlc3VsdCA9IChhd2FpdCBfYXN5bmNPcHRpb25hbENoYWluLl9hc3luY09wdGlvbmFsQ2hhaW4ob3BzKSkgO1xuICAvLyBJZiBgcmVzdWx0YCBpcyBgbnVsbGAsIGl0IG1lYW5zIHdlIGRpZG4ndCBnZXQgdG8gdGhlIGVuZCBvZiB0aGUgY2hhaW4gYW5kIHNvIG5vdGhpbmcgd2FzIGRlbGV0ZWQgKGluIHdoaWNoIGNhc2UsXG4gIC8vIHJldHVybiBgdHJ1ZWAgc2luY2UgdGhhdCdzIHdoYXQgYGRlbGV0ZWAgZG9lcyB3aGVuIGl0IG5vLW9wcykuIElmIGl0J3Mgbm9uLW51bGwsIHdlIGtub3cgdGhlIGRlbGV0ZSBoYXBwZW5lZCwgaW5cbiAgLy8gd2hpY2ggY2FzZSB3ZSByZXR1cm4gd2hhdGV2ZXIgdGhlIGBkZWxldGVgIHJldHVybmVkLCB3aGljaCB3aWxsIGJlIGEgYm9vbGVhbi5cbiAgcmV0dXJuIHJlc3VsdCA9PSBudWxsID8gdHJ1ZSA6IChyZXN1bHQgKTtcbn1cblxuLy8gU3VjcmFzZSB2ZXJzaW9uOlxuLy8gYXN5bmMgZnVuY3Rpb24gYXN5bmNPcHRpb25hbENoYWluRGVsZXRlKG9wcykge1xuLy8gICBjb25zdCByZXN1bHQgPSBhd2FpdCBBU1lOQ19PUFRJT05BTF9DSEFJTl9OQU1FKG9wcyk7XG4vLyAgIHJldHVybiByZXN1bHQgPT0gbnVsbCA/IHRydWUgOiByZXN1bHQ7XG4vLyB9XG5cbmV4cG9ydHMuX2FzeW5jT3B0aW9uYWxDaGFpbkRlbGV0ZSA9IF9hc3luY09wdGlvbmFsQ2hhaW5EZWxldGU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1fYXN5bmNPcHRpb25hbENoYWluRGVsZXRlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_asyncOptionalChainDelete.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_nullishCoalesce.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_nullishCoalesce.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n/**\n * Polyfill for the nullish coalescing operator (`??`).\n *\n * Note that the RHS is wrapped in a function so that if it's a computed value, that evaluation won't happen unless the\n * LHS evaluates to a nullish value, to mimic the operator's short-circuiting behavior.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param lhs The value of the expression to the left of the `??`\n * @param rhsFn A function returning the value of the expression to the right of the `??`\n * @returns The LHS value, unless it's `null` or `undefined`, in which case, the RHS value\n */\nfunction _nullishCoalesce(lhs, rhsFn) {\n  // by checking for loose equality to `null`, we catch both `null` and `undefined`\n  return lhs != null ? lhs : rhsFn();\n}\n\n// Sucrase version:\n// function _nullishCoalesce(lhs, rhsFn) {\n//   if (lhs != null) {\n//     return lhs;\n//   } else {\n//     return rhsFn();\n//   }\n// }\n\nexports._nullishCoalesce = _nullishCoalesce;\n//# sourceMappingURL=_nullishCoalesce.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9idWlsZFBvbHlmaWxscy9fbnVsbGlzaENvYWxlc2NlLmpzIiwibWFwcGluZ3MiOiJBQUFBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQzs7QUFFN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7O0FBRUEsd0JBQXdCO0FBQ3hCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLXByb2plY3QvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2J1aWxkUG9seWZpbGxzL19udWxsaXNoQ29hbGVzY2UuanM/NjJmOCJdLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG4vLyBodHRwczovL2dpdGh1Yi5jb20vYWxhbmdwaWVyY2Uvc3VjcmFzZS90cmVlLzI2NTg4Nzg2ODk2NjkxN2YzYjkyNGNlMzhkZmFkMDFmYmFiMTMyOWZcbi8vXG4vLyBUaGUgTUlUIExpY2Vuc2UgKE1JVClcbi8vXG4vLyBDb3B5cmlnaHQgKGMpIDIwMTItMjAxOCB2YXJpb3VzIGNvbnRyaWJ1dG9ycyAoc2VlIEFVVEhPUlMpXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weVxuLy8gb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbFxuLy8gaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0c1xuLy8gdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbFxuLy8gY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzXG4vLyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluIGFsbFxuLy8gY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXG4vLyBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbi8vIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRVxuLy8gQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxuLy8gTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSxcbi8vIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFXG4vLyBTT0ZUV0FSRS5cblxuLyoqXG4gKiBQb2x5ZmlsbCBmb3IgdGhlIG51bGxpc2ggY29hbGVzY2luZyBvcGVyYXRvciAoYD8/YCkuXG4gKlxuICogTm90ZSB0aGF0IHRoZSBSSFMgaXMgd3JhcHBlZCBpbiBhIGZ1bmN0aW9uIHNvIHRoYXQgaWYgaXQncyBhIGNvbXB1dGVkIHZhbHVlLCB0aGF0IGV2YWx1YXRpb24gd29uJ3QgaGFwcGVuIHVubGVzcyB0aGVcbiAqIExIUyBldmFsdWF0ZXMgdG8gYSBudWxsaXNoIHZhbHVlLCB0byBtaW1pYyB0aGUgb3BlcmF0b3IncyBzaG9ydC1jaXJjdWl0aW5nIGJlaGF2aW9yLlxuICpcbiAqIEFkYXB0ZWQgZnJvbSBTdWNyYXNlIChodHRwczovL2dpdGh1Yi5jb20vYWxhbmdwaWVyY2Uvc3VjcmFzZSlcbiAqXG4gKiBAcGFyYW0gbGhzIFRoZSB2YWx1ZSBvZiB0aGUgZXhwcmVzc2lvbiB0byB0aGUgbGVmdCBvZiB0aGUgYD8/YFxuICogQHBhcmFtIHJoc0ZuIEEgZnVuY3Rpb24gcmV0dXJuaW5nIHRoZSB2YWx1ZSBvZiB0aGUgZXhwcmVzc2lvbiB0byB0aGUgcmlnaHQgb2YgdGhlIGA/P2BcbiAqIEByZXR1cm5zIFRoZSBMSFMgdmFsdWUsIHVubGVzcyBpdCdzIGBudWxsYCBvciBgdW5kZWZpbmVkYCwgaW4gd2hpY2ggY2FzZSwgdGhlIFJIUyB2YWx1ZVxuICovXG5mdW5jdGlvbiBfbnVsbGlzaENvYWxlc2NlKGxocywgcmhzRm4pIHtcbiAgLy8gYnkgY2hlY2tpbmcgZm9yIGxvb3NlIGVxdWFsaXR5IHRvIGBudWxsYCwgd2UgY2F0Y2ggYm90aCBgbnVsbGAgYW5kIGB1bmRlZmluZWRgXG4gIHJldHVybiBsaHMgIT0gbnVsbCA/IGxocyA6IHJoc0ZuKCk7XG59XG5cbi8vIFN1Y3Jhc2UgdmVyc2lvbjpcbi8vIGZ1bmN0aW9uIF9udWxsaXNoQ29hbGVzY2UobGhzLCByaHNGbikge1xuLy8gICBpZiAobGhzICE9IG51bGwpIHtcbi8vICAgICByZXR1cm4gbGhzO1xuLy8gICB9IGVsc2Uge1xuLy8gICAgIHJldHVybiByaHNGbigpO1xuLy8gICB9XG4vLyB9XG5cbmV4cG9ydHMuX251bGxpc2hDb2FsZXNjZSA9IF9udWxsaXNoQ29hbGVzY2U7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1fbnVsbGlzaENvYWxlc2NlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_nullishCoalesce.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_optionalChain.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_optionalChain.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n/**\n * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,\n * descriptors, and functions.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n * See https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15\n *\n * @param ops Array result of expression conversion\n * @returns The value of the expression\n */\nfunction _optionalChain(ops) {\n  let lastAccessLHS = undefined;\n  let value = ops[0];\n  let i = 1;\n  while (i < ops.length) {\n    const op = ops[i] ;\n    const fn = ops[i + 1] ;\n    i += 2;\n    // by checking for loose equality to `null`, we catch both `null` and `undefined`\n    if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n      // really we're meaning to return `undefined` as an actual value here, but it saves bytes not to write it\n      return;\n    }\n    if (op === 'access' || op === 'optionalAccess') {\n      lastAccessLHS = value;\n      value = fn(value);\n    } else if (op === 'call' || op === 'optionalCall') {\n      value = fn((...args) => (value ).call(lastAccessLHS, ...args));\n      lastAccessLHS = undefined;\n    }\n  }\n  return value;\n}\n\n// Sucrase version\n// function _optionalChain(ops) {\n//   let lastAccessLHS = undefined;\n//   let value = ops[0];\n//   let i = 1;\n//   while (i < ops.length) {\n//     const op = ops[i];\n//     const fn = ops[i + 1];\n//     i += 2;\n//     if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n//       return undefined;\n//     }\n//     if (op === 'access' || op === 'optionalAccess') {\n//       lastAccessLHS = value;\n//       value = fn(value);\n//     } else if (op === 'call' || op === 'optionalCall') {\n//       value = fn((...args) => value.call(lastAccessLHS, ...args));\n//       lastAccessLHS = undefined;\n//     }\n//   }\n//   return value;\n// }\n\nexports._optionalChain = _optionalChain;\n//# sourceMappingURL=_optionalChain.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9idWlsZFBvbHlmaWxscy9fb3B0aW9uYWxDaGFpbi5qcyIsIm1hcHBpbmdzIjoiQUFBQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7O0FBRTdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsc0JBQXNCO0FBQ3RCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLXByb2plY3QvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2J1aWxkUG9seWZpbGxzL19vcHRpb25hbENoYWluLmpzPzc5YmEiXSwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxuLyoqXG4gKiBQb2x5ZmlsbCBmb3IgdGhlIG9wdGlvbmFsIGNoYWluIG9wZXJhdG9yLCBgPy5gLCBnaXZlbiBwcmV2aW91cyBjb252ZXJzaW9uIG9mIHRoZSBleHByZXNzaW9uIGludG8gYW4gYXJyYXkgb2YgdmFsdWVzLFxuICogZGVzY3JpcHRvcnMsIGFuZCBmdW5jdGlvbnMuXG4gKlxuICogQWRhcHRlZCBmcm9tIFN1Y3Jhc2UgKGh0dHBzOi8vZ2l0aHViLmNvbS9hbGFuZ3BpZXJjZS9zdWNyYXNlKVxuICogU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9hbGFuZ3BpZXJjZS9zdWNyYXNlL2Jsb2IvMjY1ODg3ODY4OTY2OTE3ZjNiOTI0Y2UzOGRmYWQwMWZiYWIxMzI5Zi9zcmMvdHJhbnNmb3JtZXJzL09wdGlvbmFsQ2hhaW5pbmdOdWxsaXNoVHJhbnNmb3JtZXIudHMjTDE1XG4gKlxuICogQHBhcmFtIG9wcyBBcnJheSByZXN1bHQgb2YgZXhwcmVzc2lvbiBjb252ZXJzaW9uXG4gKiBAcmV0dXJucyBUaGUgdmFsdWUgb2YgdGhlIGV4cHJlc3Npb25cbiAqL1xuZnVuY3Rpb24gX29wdGlvbmFsQ2hhaW4ob3BzKSB7XG4gIGxldCBsYXN0QWNjZXNzTEhTID0gdW5kZWZpbmVkO1xuICBsZXQgdmFsdWUgPSBvcHNbMF07XG4gIGxldCBpID0gMTtcbiAgd2hpbGUgKGkgPCBvcHMubGVuZ3RoKSB7XG4gICAgY29uc3Qgb3AgPSBvcHNbaV0gO1xuICAgIGNvbnN0IGZuID0gb3BzW2kgKyAxXSA7XG4gICAgaSArPSAyO1xuICAgIC8vIGJ5IGNoZWNraW5nIGZvciBsb29zZSBlcXVhbGl0eSB0byBgbnVsbGAsIHdlIGNhdGNoIGJvdGggYG51bGxgIGFuZCBgdW5kZWZpbmVkYFxuICAgIGlmICgob3AgPT09ICdvcHRpb25hbEFjY2VzcycgfHwgb3AgPT09ICdvcHRpb25hbENhbGwnKSAmJiB2YWx1ZSA9PSBudWxsKSB7XG4gICAgICAvLyByZWFsbHkgd2UncmUgbWVhbmluZyB0byByZXR1cm4gYHVuZGVmaW5lZGAgYXMgYW4gYWN0dWFsIHZhbHVlIGhlcmUsIGJ1dCBpdCBzYXZlcyBieXRlcyBub3QgdG8gd3JpdGUgaXRcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKG9wID09PSAnYWNjZXNzJyB8fCBvcCA9PT0gJ29wdGlvbmFsQWNjZXNzJykge1xuICAgICAgbGFzdEFjY2Vzc0xIUyA9IHZhbHVlO1xuICAgICAgdmFsdWUgPSBmbih2YWx1ZSk7XG4gICAgfSBlbHNlIGlmIChvcCA9PT0gJ2NhbGwnIHx8IG9wID09PSAnb3B0aW9uYWxDYWxsJykge1xuICAgICAgdmFsdWUgPSBmbigoLi4uYXJncykgPT4gKHZhbHVlICkuY2FsbChsYXN0QWNjZXNzTEhTLCAuLi5hcmdzKSk7XG4gICAgICBsYXN0QWNjZXNzTEhTID0gdW5kZWZpbmVkO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdmFsdWU7XG59XG5cbi8vIFN1Y3Jhc2UgdmVyc2lvblxuLy8gZnVuY3Rpb24gX29wdGlvbmFsQ2hhaW4ob3BzKSB7XG4vLyAgIGxldCBsYXN0QWNjZXNzTEhTID0gdW5kZWZpbmVkO1xuLy8gICBsZXQgdmFsdWUgPSBvcHNbMF07XG4vLyAgIGxldCBpID0gMTtcbi8vICAgd2hpbGUgKGkgPCBvcHMubGVuZ3RoKSB7XG4vLyAgICAgY29uc3Qgb3AgPSBvcHNbaV07XG4vLyAgICAgY29uc3QgZm4gPSBvcHNbaSArIDFdO1xuLy8gICAgIGkgKz0gMjtcbi8vICAgICBpZiAoKG9wID09PSAnb3B0aW9uYWxBY2Nlc3MnIHx8IG9wID09PSAnb3B0aW9uYWxDYWxsJykgJiYgdmFsdWUgPT0gbnVsbCkge1xuLy8gICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbi8vICAgICB9XG4vLyAgICAgaWYgKG9wID09PSAnYWNjZXNzJyB8fCBvcCA9PT0gJ29wdGlvbmFsQWNjZXNzJykge1xuLy8gICAgICAgbGFzdEFjY2Vzc0xIUyA9IHZhbHVlO1xuLy8gICAgICAgdmFsdWUgPSBmbih2YWx1ZSk7XG4vLyAgICAgfSBlbHNlIGlmIChvcCA9PT0gJ2NhbGwnIHx8IG9wID09PSAnb3B0aW9uYWxDYWxsJykge1xuLy8gICAgICAgdmFsdWUgPSBmbigoLi4uYXJncykgPT4gdmFsdWUuY2FsbChsYXN0QWNjZXNzTEhTLCAuLi5hcmdzKSk7XG4vLyAgICAgICBsYXN0QWNjZXNzTEhTID0gdW5kZWZpbmVkO1xuLy8gICAgIH1cbi8vICAgfVxuLy8gICByZXR1cm4gdmFsdWU7XG4vLyB9XG5cbmV4cG9ydHMuX29wdGlvbmFsQ2hhaW4gPSBfb3B0aW9uYWxDaGFpbjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPV9vcHRpb25hbENoYWluLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_optionalChain.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_optionalChainDelete.js":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_optionalChainDelete.js ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst _optionalChain = __webpack_require__(/*! ./_optionalChain.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_optionalChain.js\");\n\n// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n\n/**\n * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,\n * descriptors, and functions, in cases where the value of the expression is to be deleted.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase) See\n * https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15\n *\n * @param ops Array result of expression conversion\n * @returns The return value of the `delete` operator: `true`, unless the deletion target is an own, non-configurable\n * property (one which can't be deleted or turned into an accessor, and whose enumerability can't be changed), in which\n * case `false`.\n */\nfunction _optionalChainDelete(ops) {\n  const result = _optionalChain._optionalChain(ops) ;\n  // If `result` is `null`, it means we didn't get to the end of the chain and so nothing was deleted (in which case,\n  // return `true` since that's what `delete` does when it no-ops). If it's non-null, we know the delete happened, in\n  // which case we return whatever the `delete` returned, which will be a boolean.\n  return result == null ? true : result;\n}\n\n// Sucrase version:\n// function _optionalChainDelete(ops) {\n//   const result = _optionalChain(ops);\n//   // by checking for loose equality to `null`, we catch both `null` and `undefined`\n//   return result == null ? true : result;\n// }\n\nexports._optionalChainDelete = _optionalChainDelete;\n//# sourceMappingURL=_optionalChainDelete.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9idWlsZFBvbHlmaWxscy9fb3B0aW9uYWxDaGFpbkRlbGV0ZS5qcyIsIm1hcHBpbmdzIjoiQUFBQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7O0FBRTdELHVCQUF1QixtQkFBTyxDQUFDLHlKQUFxQjs7QUFFcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLDRCQUE0QjtBQUM1QiIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9idWlsZFBvbHlmaWxscy9fb3B0aW9uYWxDaGFpbkRlbGV0ZS5qcz80M2M1Il0sInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG5cbmNvbnN0IF9vcHRpb25hbENoYWluID0gcmVxdWlyZSgnLi9fb3B0aW9uYWxDaGFpbi5qcycpO1xuXG4vLyBodHRwczovL2dpdGh1Yi5jb20vYWxhbmdwaWVyY2Uvc3VjcmFzZS90cmVlLzI2NTg4Nzg2ODk2NjkxN2YzYjkyNGNlMzhkZmFkMDFmYmFiMTMyOWZcbi8vXG4vLyBUaGUgTUlUIExpY2Vuc2UgKE1JVClcbi8vXG4vLyBDb3B5cmlnaHQgKGMpIDIwMTItMjAxOCB2YXJpb3VzIGNvbnRyaWJ1dG9ycyAoc2VlIEFVVEhPUlMpXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weVxuLy8gb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbFxuLy8gaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0c1xuLy8gdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbFxuLy8gY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzXG4vLyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluIGFsbFxuLy8gY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXG4vLyBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbi8vIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRVxuLy8gQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxuLy8gTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSxcbi8vIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFXG4vLyBTT0ZUV0FSRS5cblxuXG4vKipcbiAqIFBvbHlmaWxsIGZvciB0aGUgb3B0aW9uYWwgY2hhaW4gb3BlcmF0b3IsIGA/LmAsIGdpdmVuIHByZXZpb3VzIGNvbnZlcnNpb24gb2YgdGhlIGV4cHJlc3Npb24gaW50byBhbiBhcnJheSBvZiB2YWx1ZXMsXG4gKiBkZXNjcmlwdG9ycywgYW5kIGZ1bmN0aW9ucywgaW4gY2FzZXMgd2hlcmUgdGhlIHZhbHVlIG9mIHRoZSBleHByZXNzaW9uIGlzIHRvIGJlIGRlbGV0ZWQuXG4gKlxuICogQWRhcHRlZCBmcm9tIFN1Y3Jhc2UgKGh0dHBzOi8vZ2l0aHViLmNvbS9hbGFuZ3BpZXJjZS9zdWNyYXNlKSBTZWVcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9hbGFuZ3BpZXJjZS9zdWNyYXNlL2Jsb2IvMjY1ODg3ODY4OTY2OTE3ZjNiOTI0Y2UzOGRmYWQwMWZiYWIxMzI5Zi9zcmMvdHJhbnNmb3JtZXJzL09wdGlvbmFsQ2hhaW5pbmdOdWxsaXNoVHJhbnNmb3JtZXIudHMjTDE1XG4gKlxuICogQHBhcmFtIG9wcyBBcnJheSByZXN1bHQgb2YgZXhwcmVzc2lvbiBjb252ZXJzaW9uXG4gKiBAcmV0dXJucyBUaGUgcmV0dXJuIHZhbHVlIG9mIHRoZSBgZGVsZXRlYCBvcGVyYXRvcjogYHRydWVgLCB1bmxlc3MgdGhlIGRlbGV0aW9uIHRhcmdldCBpcyBhbiBvd24sIG5vbi1jb25maWd1cmFibGVcbiAqIHByb3BlcnR5IChvbmUgd2hpY2ggY2FuJ3QgYmUgZGVsZXRlZCBvciB0dXJuZWQgaW50byBhbiBhY2Nlc3NvciwgYW5kIHdob3NlIGVudW1lcmFiaWxpdHkgY2FuJ3QgYmUgY2hhbmdlZCksIGluIHdoaWNoXG4gKiBjYXNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIF9vcHRpb25hbENoYWluRGVsZXRlKG9wcykge1xuICBjb25zdCByZXN1bHQgPSBfb3B0aW9uYWxDaGFpbi5fb3B0aW9uYWxDaGFpbihvcHMpIDtcbiAgLy8gSWYgYHJlc3VsdGAgaXMgYG51bGxgLCBpdCBtZWFucyB3ZSBkaWRuJ3QgZ2V0IHRvIHRoZSBlbmQgb2YgdGhlIGNoYWluIGFuZCBzbyBub3RoaW5nIHdhcyBkZWxldGVkIChpbiB3aGljaCBjYXNlLFxuICAvLyByZXR1cm4gYHRydWVgIHNpbmNlIHRoYXQncyB3aGF0IGBkZWxldGVgIGRvZXMgd2hlbiBpdCBuby1vcHMpLiBJZiBpdCdzIG5vbi1udWxsLCB3ZSBrbm93IHRoZSBkZWxldGUgaGFwcGVuZWQsIGluXG4gIC8vIHdoaWNoIGNhc2Ugd2UgcmV0dXJuIHdoYXRldmVyIHRoZSBgZGVsZXRlYCByZXR1cm5lZCwgd2hpY2ggd2lsbCBiZSBhIGJvb2xlYW4uXG4gIHJldHVybiByZXN1bHQgPT0gbnVsbCA/IHRydWUgOiByZXN1bHQ7XG59XG5cbi8vIFN1Y3Jhc2UgdmVyc2lvbjpcbi8vIGZ1bmN0aW9uIF9vcHRpb25hbENoYWluRGVsZXRlKG9wcykge1xuLy8gICBjb25zdCByZXN1bHQgPSBfb3B0aW9uYWxDaGFpbihvcHMpO1xuLy8gICAvLyBieSBjaGVja2luZyBmb3IgbG9vc2UgZXF1YWxpdHkgdG8gYG51bGxgLCB3ZSBjYXRjaCBib3RoIGBudWxsYCBhbmQgYHVuZGVmaW5lZGBcbi8vICAgcmV0dXJuIHJlc3VsdCA9PSBudWxsID8gdHJ1ZSA6IHJlc3VsdDtcbi8vIH1cblxuZXhwb3J0cy5fb3B0aW9uYWxDaGFpbkRlbGV0ZSA9IF9vcHRpb25hbENoYWluRGVsZXRlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9X29wdGlvbmFsQ2hhaW5EZWxldGUuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_optionalChainDelete.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/cache.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/cache.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n/**\n * Creates a cache that evicts keys in fifo order\n * @param size {Number}\n */\nfunction makeFifoCache(\n  size,\n)\n\n {\n  // Maintain a fifo queue of keys, we cannot rely on Object.keys as the browser may not support it.\n  let evictionOrder = [];\n  let cache = {};\n\n  return {\n    add(key, value) {\n      while (evictionOrder.length >= size) {\n        // shift is O(n) but this is small size and only happens if we are\n        // exceeding the cache size so it should be fine.\n        const evictCandidate = evictionOrder.shift();\n\n        if (evictCandidate !== undefined) {\n          // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n          delete cache[evictCandidate];\n        }\n      }\n\n      // in case we have a collision, delete the old key.\n      if (cache[key]) {\n        this.delete(key);\n      }\n\n      evictionOrder.push(key);\n      cache[key] = value;\n    },\n    clear() {\n      cache = {};\n      evictionOrder = [];\n    },\n    get(key) {\n      return cache[key];\n    },\n    size() {\n      return evictionOrder.length;\n    },\n    // Delete cache key and return true if it existed, false otherwise.\n    delete(key) {\n      if (!cache[key]) {\n        return false;\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete cache[key];\n\n      for (let i = 0; i < evictionOrder.length; i++) {\n        if (evictionOrder[i] === key) {\n          evictionOrder.splice(i, 1);\n          break;\n        }\n      }\n\n      return true;\n    },\n  };\n}\n\nexports.makeFifoCache = makeFifoCache;\n//# sourceMappingURL=cache.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9jYWNoZS5qcyIsIm1hcHBpbmdzIjoiQUFBQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7O0FBRTdEO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxzQkFBc0IsMEJBQTBCO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQSxxQkFBcUI7QUFDckIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0Zm9saW8tcHJvamVjdC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2VudHJ5K3V0aWxzQDguMTcuMC9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9idWlsZC9janMvY2FjaGUuanM/YzJjMCJdLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBjYWNoZSB0aGF0IGV2aWN0cyBrZXlzIGluIGZpZm8gb3JkZXJcbiAqIEBwYXJhbSBzaXplIHtOdW1iZXJ9XG4gKi9cbmZ1bmN0aW9uIG1ha2VGaWZvQ2FjaGUoXG4gIHNpemUsXG4pXG5cbiB7XG4gIC8vIE1haW50YWluIGEgZmlmbyBxdWV1ZSBvZiBrZXlzLCB3ZSBjYW5ub3QgcmVseSBvbiBPYmplY3Qua2V5cyBhcyB0aGUgYnJvd3NlciBtYXkgbm90IHN1cHBvcnQgaXQuXG4gIGxldCBldmljdGlvbk9yZGVyID0gW107XG4gIGxldCBjYWNoZSA9IHt9O1xuXG4gIHJldHVybiB7XG4gICAgYWRkKGtleSwgdmFsdWUpIHtcbiAgICAgIHdoaWxlIChldmljdGlvbk9yZGVyLmxlbmd0aCA+PSBzaXplKSB7XG4gICAgICAgIC8vIHNoaWZ0IGlzIE8obikgYnV0IHRoaXMgaXMgc21hbGwgc2l6ZSBhbmQgb25seSBoYXBwZW5zIGlmIHdlIGFyZVxuICAgICAgICAvLyBleGNlZWRpbmcgdGhlIGNhY2hlIHNpemUgc28gaXQgc2hvdWxkIGJlIGZpbmUuXG4gICAgICAgIGNvbnN0IGV2aWN0Q2FuZGlkYXRlID0gZXZpY3Rpb25PcmRlci5zaGlmdCgpO1xuXG4gICAgICAgIGlmIChldmljdENhbmRpZGF0ZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1keW5hbWljLWRlbGV0ZVxuICAgICAgICAgIGRlbGV0ZSBjYWNoZVtldmljdENhbmRpZGF0ZV07XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLy8gaW4gY2FzZSB3ZSBoYXZlIGEgY29sbGlzaW9uLCBkZWxldGUgdGhlIG9sZCBrZXkuXG4gICAgICBpZiAoY2FjaGVba2V5XSkge1xuICAgICAgICB0aGlzLmRlbGV0ZShrZXkpO1xuICAgICAgfVxuXG4gICAgICBldmljdGlvbk9yZGVyLnB1c2goa2V5KTtcbiAgICAgIGNhY2hlW2tleV0gPSB2YWx1ZTtcbiAgICB9LFxuICAgIGNsZWFyKCkge1xuICAgICAgY2FjaGUgPSB7fTtcbiAgICAgIGV2aWN0aW9uT3JkZXIgPSBbXTtcbiAgICB9LFxuICAgIGdldChrZXkpIHtcbiAgICAgIHJldHVybiBjYWNoZVtrZXldO1xuICAgIH0sXG4gICAgc2l6ZSgpIHtcbiAgICAgIHJldHVybiBldmljdGlvbk9yZGVyLmxlbmd0aDtcbiAgICB9LFxuICAgIC8vIERlbGV0ZSBjYWNoZSBrZXkgYW5kIHJldHVybiB0cnVlIGlmIGl0IGV4aXN0ZWQsIGZhbHNlIG90aGVyd2lzZS5cbiAgICBkZWxldGUoa2V5KSB7XG4gICAgICBpZiAoIWNhY2hlW2tleV0pIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuXG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWR5bmFtaWMtZGVsZXRlXG4gICAgICBkZWxldGUgY2FjaGVba2V5XTtcblxuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBldmljdGlvbk9yZGVyLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmIChldmljdGlvbk9yZGVyW2ldID09PSBrZXkpIHtcbiAgICAgICAgICBldmljdGlvbk9yZGVyLnNwbGljZShpLCAxKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9LFxuICB9O1xufVxuXG5leHBvcnRzLm1ha2VGaWZvQ2FjaGUgPSBtYWtlRmlmb0NhY2hlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2FjaGUuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/cache.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/clientreport.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/clientreport.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst envelope = __webpack_require__(/*! ./envelope.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/envelope.js\");\nconst time = __webpack_require__(/*! ./time.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/time.js\");\n\n/**\n * Creates client report envelope\n * @param discarded_events An array of discard events\n * @param dsn A DSN that can be set on the header. Optional.\n */\nfunction createClientReportEnvelope(\n  discarded_events,\n  dsn,\n  timestamp,\n) {\n  const clientReportItem = [\n    { type: 'client_report' },\n    {\n      timestamp: timestamp || time.dateTimestampInSeconds(),\n      discarded_events,\n    },\n  ];\n  return envelope.createEnvelope(dsn ? { dsn } : {}, [clientReportItem]);\n}\n\nexports.createClientReportEnvelope = createClientReportEnvelope;\n//# sourceMappingURL=clientreport.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9jbGllbnRyZXBvcnQuanMiLCJtYXBwaW5ncyI6IkFBQUEsOENBQTZDLEVBQUUsYUFBYSxFQUFDOztBQUU3RCxpQkFBaUIsbUJBQU8sQ0FBQyw4SEFBZTtBQUN4QyxhQUFhLG1CQUFPLENBQUMsc0hBQVc7O0FBRWhDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLHVCQUF1QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSx5Q0FBeUMsTUFBTSxJQUFJO0FBQ25EOztBQUVBLGtDQUFrQztBQUNsQyIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9jbGllbnRyZXBvcnQuanM/ODVhZSJdLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG5jb25zdCBlbnZlbG9wZSA9IHJlcXVpcmUoJy4vZW52ZWxvcGUuanMnKTtcbmNvbnN0IHRpbWUgPSByZXF1aXJlKCcuL3RpbWUuanMnKTtcblxuLyoqXG4gKiBDcmVhdGVzIGNsaWVudCByZXBvcnQgZW52ZWxvcGVcbiAqIEBwYXJhbSBkaXNjYXJkZWRfZXZlbnRzIEFuIGFycmF5IG9mIGRpc2NhcmQgZXZlbnRzXG4gKiBAcGFyYW0gZHNuIEEgRFNOIHRoYXQgY2FuIGJlIHNldCBvbiB0aGUgaGVhZGVyLiBPcHRpb25hbC5cbiAqL1xuZnVuY3Rpb24gY3JlYXRlQ2xpZW50UmVwb3J0RW52ZWxvcGUoXG4gIGRpc2NhcmRlZF9ldmVudHMsXG4gIGRzbixcbiAgdGltZXN0YW1wLFxuKSB7XG4gIGNvbnN0IGNsaWVudFJlcG9ydEl0ZW0gPSBbXG4gICAgeyB0eXBlOiAnY2xpZW50X3JlcG9ydCcgfSxcbiAgICB7XG4gICAgICB0aW1lc3RhbXA6IHRpbWVzdGFtcCB8fCB0aW1lLmRhdGVUaW1lc3RhbXBJblNlY29uZHMoKSxcbiAgICAgIGRpc2NhcmRlZF9ldmVudHMsXG4gICAgfSxcbiAgXTtcbiAgcmV0dXJuIGVudmVsb3BlLmNyZWF0ZUVudmVsb3BlKGRzbiA/IHsgZHNuIH0gOiB7fSwgW2NsaWVudFJlcG9ydEl0ZW1dKTtcbn1cblxuZXhwb3J0cy5jcmVhdGVDbGllbnRSZXBvcnRFbnZlbG9wZSA9IGNyZWF0ZUNsaWVudFJlcG9ydEVudmVsb3BlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2xpZW50cmVwb3J0LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/clientreport.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/cookie.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/cookie.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n/**\n * This code was originally copied from the 'cookie` module at v0.5.0 and was simplified for our use case.\n * https://github.com/jshttp/cookie/blob/a0c84147aab6266bdb3996cf4062e93907c0b0fc/index.js\n * It had the following license:\n *\n * (The MIT License)\n *\n * Copyright (c) 2012-2014 Roman Shtylman <shtylman@gmail.com>\n * Copyright (c) 2015 Douglas Christopher Wilson <doug@somethingdoug.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * 'Software'), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Parses a cookie string\n */\nfunction parseCookie(str) {\n  const obj = {};\n  let index = 0;\n\n  while (index < str.length) {\n    const eqIdx = str.indexOf('=', index);\n\n    // no more cookie pairs\n    if (eqIdx === -1) {\n      break;\n    }\n\n    let endIdx = str.indexOf(';', index);\n\n    if (endIdx === -1) {\n      endIdx = str.length;\n    } else if (endIdx < eqIdx) {\n      // backtrack on prior semicolon\n      index = str.lastIndexOf(';', eqIdx - 1) + 1;\n      continue;\n    }\n\n    const key = str.slice(index, eqIdx).trim();\n\n    // only assign once\n    if (undefined === obj[key]) {\n      let val = str.slice(eqIdx + 1, endIdx).trim();\n\n      // quoted values\n      if (val.charCodeAt(0) === 0x22) {\n        val = val.slice(1, -1);\n      }\n\n      try {\n        obj[key] = val.indexOf('%') !== -1 ? decodeURIComponent(val) : val;\n      } catch (e) {\n        obj[key] = val;\n      }\n    }\n\n    index = endIdx + 1;\n  }\n\n  return obj;\n}\n\nexports.parseCookie = parseCookie;\n//# sourceMappingURL=cookie.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9jb29raWUuanMiLCJtYXBwaW5ncyI6IkFBQUEsOENBQTZDLEVBQUUsYUFBYSxFQUFDOztBQUU3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLCtCQUErQjs7QUFFL0I7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBLGdDQUFnQztBQUNoQztBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsbUJBQW1CO0FBQ25CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLXByb2plY3QvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2Nvb2tpZS5qcz9iOWQ4Il0sInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG5cbi8qKlxuICogVGhpcyBjb2RlIHdhcyBvcmlnaW5hbGx5IGNvcGllZCBmcm9tIHRoZSAnY29va2llYCBtb2R1bGUgYXQgdjAuNS4wIGFuZCB3YXMgc2ltcGxpZmllZCBmb3Igb3VyIHVzZSBjYXNlLlxuICogaHR0cHM6Ly9naXRodWIuY29tL2pzaHR0cC9jb29raWUvYmxvYi9hMGM4NDE0N2FhYjYyNjZiZGIzOTk2Y2Y0MDYyZTkzOTA3YzBiMGZjL2luZGV4LmpzXG4gKiBJdCBoYWQgdGhlIGZvbGxvd2luZyBsaWNlbnNlOlxuICpcbiAqIChUaGUgTUlUIExpY2Vuc2UpXG4gKlxuICogQ29weXJpZ2h0IChjKSAyMDEyLTIwMTQgUm9tYW4gU2h0eWxtYW4gPHNodHlsbWFuQGdtYWlsLmNvbT5cbiAqIENvcHlyaWdodCAoYykgMjAxNSBEb3VnbGFzIENocmlzdG9waGVyIFdpbHNvbiA8ZG91Z0Bzb21ldGhpbmdkb3VnLmNvbT5cbiAqXG4gKiBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmdcbiAqIGEgY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZVxuICogJ1NvZnR3YXJlJyksIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZ1xuICogd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLFxuICogZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvXG4gKiBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG9cbiAqIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcbiAqXG4gKiBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZVxuICogaW5jbHVkZWQgaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4gKlxuICogVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEICdBUyBJUycsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsXG4gKiBFWFBSRVNTIE9SIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0ZcbiAqIE1FUkNIQU5UQUJJTElUWSwgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC5cbiAqIElOIE5PIEVWRU5UIFNIQUxMIFRIRSBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZXG4gKiBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULFxuICogVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEVcbiAqIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFIFNPRlRXQVJFLlxuICovXG5cbi8qKlxuICogUGFyc2VzIGEgY29va2llIHN0cmluZ1xuICovXG5mdW5jdGlvbiBwYXJzZUNvb2tpZShzdHIpIHtcbiAgY29uc3Qgb2JqID0ge307XG4gIGxldCBpbmRleCA9IDA7XG5cbiAgd2hpbGUgKGluZGV4IDwgc3RyLmxlbmd0aCkge1xuICAgIGNvbnN0IGVxSWR4ID0gc3RyLmluZGV4T2YoJz0nLCBpbmRleCk7XG5cbiAgICAvLyBubyBtb3JlIGNvb2tpZSBwYWlyc1xuICAgIGlmIChlcUlkeCA9PT0gLTEpIHtcbiAgICAgIGJyZWFrO1xuICAgIH1cblxuICAgIGxldCBlbmRJZHggPSBzdHIuaW5kZXhPZignOycsIGluZGV4KTtcblxuICAgIGlmIChlbmRJZHggPT09IC0xKSB7XG4gICAgICBlbmRJZHggPSBzdHIubGVuZ3RoO1xuICAgIH0gZWxzZSBpZiAoZW5kSWR4IDwgZXFJZHgpIHtcbiAgICAgIC8vIGJhY2t0cmFjayBvbiBwcmlvciBzZW1pY29sb25cbiAgICAgIGluZGV4ID0gc3RyLmxhc3RJbmRleE9mKCc7JywgZXFJZHggLSAxKSArIDE7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICBjb25zdCBrZXkgPSBzdHIuc2xpY2UoaW5kZXgsIGVxSWR4KS50cmltKCk7XG5cbiAgICAvLyBvbmx5IGFzc2lnbiBvbmNlXG4gICAgaWYgKHVuZGVmaW5lZCA9PT0gb2JqW2tleV0pIHtcbiAgICAgIGxldCB2YWwgPSBzdHIuc2xpY2UoZXFJZHggKyAxLCBlbmRJZHgpLnRyaW0oKTtcblxuICAgICAgLy8gcXVvdGVkIHZhbHVlc1xuICAgICAgaWYgKHZhbC5jaGFyQ29kZUF0KDApID09PSAweDIyKSB7XG4gICAgICAgIHZhbCA9IHZhbC5zbGljZSgxLCAtMSk7XG4gICAgICB9XG5cbiAgICAgIHRyeSB7XG4gICAgICAgIG9ialtrZXldID0gdmFsLmluZGV4T2YoJyUnKSAhPT0gLTEgPyBkZWNvZGVVUklDb21wb25lbnQodmFsKSA6IHZhbDtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgb2JqW2tleV0gPSB2YWw7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaW5kZXggPSBlbmRJZHggKyAxO1xuICB9XG5cbiAgcmV0dXJuIG9iajtcbn1cblxuZXhwb3J0cy5wYXJzZUNvb2tpZSA9IHBhcnNlQ29va2llO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29va2llLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/cookie.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/debug-build.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/debug-build.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = ( false || false);\n\nexports.DEBUG_BUILD = DEBUG_BUILD;\n//# sourceMappingURL=debug-build.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9kZWJ1Zy1idWlsZC5qcyIsIm1hcHBpbmdzIjoiQUFBQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7O0FBRTdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsTUFBdUMsSUFBSSxLQUFnQjs7QUFFaEYsbUJBQW1CO0FBQ25CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLXByb2plY3QvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2RlYnVnLWJ1aWxkLmpzP2VmMjIiXSwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxuLyoqXG4gKiBUaGlzIHNlcnZlcyBhcyBhIGJ1aWxkIHRpbWUgZmxhZyB0aGF0IHdpbGwgYmUgdHJ1ZSBieSBkZWZhdWx0LCBidXQgZmFsc2UgaW4gbm9uLWRlYnVnIGJ1aWxkcyBvciBpZiB1c2VycyByZXBsYWNlIGBfX1NFTlRSWV9ERUJVR19fYCBpbiB0aGVpciBnZW5lcmF0ZWQgY29kZS5cbiAqXG4gKiBBVFRFTlRJT046IFRoaXMgY29uc3RhbnQgbXVzdCBuZXZlciBjcm9zcyBwYWNrYWdlIGJvdW5kYXJpZXMgKGkuZS4gYmUgZXhwb3J0ZWQpIHRvIGd1YXJhbnRlZSB0aGF0IGl0IGNhbiBiZSB1c2VkIGZvciB0cmVlIHNoYWtpbmcuXG4gKi9cbmNvbnN0IERFQlVHX0JVSUxEID0gKHR5cGVvZiBfX1NFTlRSWV9ERUJVR19fID09PSAndW5kZWZpbmVkJyB8fCBfX1NFTlRSWV9ERUJVR19fKTtcblxuZXhwb3J0cy5ERUJVR19CVUlMRCA9IERFQlVHX0JVSUxEO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGVidWctYnVpbGQuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/debug-build.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/dsn.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/dsn.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst debugBuild = __webpack_require__(/*! ./debug-build.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/debug-build.js\");\nconst logger = __webpack_require__(/*! ./logger.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/logger.js\");\n\n/** Regular expression used to parse a Dsn. */\nconst DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+)?)?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n\nfunction isValidProtocol(protocol) {\n  return protocol === 'http' || protocol === 'https';\n}\n\n/**\n * Renders the string representation of this Dsn.\n *\n * By default, this will render the public representation without the password\n * component. To get the deprecated private representation, set `withPassword`\n * to true.\n *\n * @param withPassword When set to true, the password will be included.\n */\nfunction dsnToString(dsn, withPassword = false) {\n  const { host, path, pass, port, projectId, protocol, publicKey } = dsn;\n  return (\n    `${protocol}://${publicKey}${withPassword && pass ? `:${pass}` : ''}` +\n    `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n  );\n}\n\n/**\n * Parses a Dsn from a given string.\n *\n * @param str A Dsn as string\n * @returns Dsn as DsnComponents or undefined if @param str is not a valid DSN string\n */\nfunction dsnFromString(str) {\n  const match = DSN_REGEX.exec(str);\n\n  if (!match) {\n    // This should be logged to the console\n    logger.consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.error(`Invalid Sentry Dsn: ${str}`);\n    });\n    return undefined;\n  }\n\n  const [protocol, publicKey, pass = '', host = '', port = '', lastPath = ''] = match.slice(1);\n  let path = '';\n  let projectId = lastPath;\n\n  const split = projectId.split('/');\n  if (split.length > 1) {\n    path = split.slice(0, -1).join('/');\n    projectId = split.pop() ;\n  }\n\n  if (projectId) {\n    const projectMatch = projectId.match(/^\\d+/);\n    if (projectMatch) {\n      projectId = projectMatch[0];\n    }\n  }\n\n  return dsnFromComponents({ host, pass, path, projectId, port, protocol: protocol , publicKey });\n}\n\nfunction dsnFromComponents(components) {\n  return {\n    protocol: components.protocol,\n    publicKey: components.publicKey || '',\n    pass: components.pass || '',\n    host: components.host,\n    port: components.port || '',\n    path: components.path || '',\n    projectId: components.projectId,\n  };\n}\n\nfunction validateDsn(dsn) {\n  if (!debugBuild.DEBUG_BUILD) {\n    return true;\n  }\n\n  const { port, projectId, protocol } = dsn;\n\n  const requiredComponents = ['protocol', 'publicKey', 'host', 'projectId'];\n  const hasMissingRequiredComponent = requiredComponents.find(component => {\n    if (!dsn[component]) {\n      logger.logger.error(`Invalid Sentry Dsn: ${component} missing`);\n      return true;\n    }\n    return false;\n  });\n\n  if (hasMissingRequiredComponent) {\n    return false;\n  }\n\n  if (!projectId.match(/^\\d+$/)) {\n    logger.logger.error(`Invalid Sentry Dsn: Invalid projectId ${projectId}`);\n    return false;\n  }\n\n  if (!isValidProtocol(protocol)) {\n    logger.logger.error(`Invalid Sentry Dsn: Invalid protocol ${protocol}`);\n    return false;\n  }\n\n  if (port && isNaN(parseInt(port, 10))) {\n    logger.logger.error(`Invalid Sentry Dsn: Invalid port ${port}`);\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Creates a valid Sentry Dsn object, identifying a Sentry instance and project.\n * @returns a valid DsnComponents object or `undefined` if @param from is an invalid DSN source\n */\nfunction makeDsn(from) {\n  const components = typeof from === 'string' ? dsnFromString(from) : dsnFromComponents(from);\n  if (!components || !validateDsn(components)) {\n    return undefined;\n  }\n  return components;\n}\n\nexports.dsnFromString = dsnFromString;\nexports.dsnToString = dsnToString;\nexports.makeDsn = makeDsn;\n//# sourceMappingURL=dsn.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9kc24uanMiLCJtYXBwaW5ncyI6IkFBQUEsOENBQTZDLEVBQUUsYUFBYSxFQUFDOztBQUU3RCxtQkFBbUIsbUJBQU8sQ0FBQyxvSUFBa0I7QUFDN0MsZUFBZSxtQkFBTyxDQUFDLDBIQUFhOztBQUVwQztBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUseURBQXlEO0FBQ25FO0FBQ0EsT0FBTyxTQUFTLEtBQUssVUFBVSxFQUFFLDJCQUEyQixLQUFLLE9BQU87QUFDeEUsUUFBUSxLQUFLLEVBQUUsV0FBVyxLQUFLLE9BQU8sR0FBRyxVQUFVLEtBQUssVUFBVSxFQUFFLFVBQVU7QUFDOUU7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLElBQUk7QUFDL0MsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLDZCQUE2QixtRUFBbUU7QUFDaEc7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxVQUFVLDRCQUE0Qjs7QUFFdEM7QUFDQTtBQUNBO0FBQ0EsaURBQWlELFdBQVc7QUFDNUQ7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxpRUFBaUUsVUFBVTtBQUMzRTtBQUNBOztBQUVBO0FBQ0EsZ0VBQWdFLFNBQVM7QUFDekU7QUFDQTs7QUFFQTtBQUNBLDREQUE0RCxLQUFLO0FBQ2pFO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHFCQUFxQjtBQUNyQixtQkFBbUI7QUFDbkIsZUFBZTtBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLXByb2plY3QvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2Rzbi5qcz84YjQ0Il0sInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG5cbmNvbnN0IGRlYnVnQnVpbGQgPSByZXF1aXJlKCcuL2RlYnVnLWJ1aWxkLmpzJyk7XG5jb25zdCBsb2dnZXIgPSByZXF1aXJlKCcuL2xvZ2dlci5qcycpO1xuXG4vKiogUmVndWxhciBleHByZXNzaW9uIHVzZWQgdG8gcGFyc2UgYSBEc24uICovXG5jb25zdCBEU05fUkVHRVggPSAvXig/OihcXHcrKTopXFwvXFwvKD86KFxcdyspKD86OihcXHcrKT8pP0ApKFtcXHcuLV0rKSg/OjooXFxkKykpP1xcLyguKykvO1xuXG5mdW5jdGlvbiBpc1ZhbGlkUHJvdG9jb2wocHJvdG9jb2wpIHtcbiAgcmV0dXJuIHByb3RvY29sID09PSAnaHR0cCcgfHwgcHJvdG9jb2wgPT09ICdodHRwcyc7XG59XG5cbi8qKlxuICogUmVuZGVycyB0aGUgc3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIHRoaXMgRHNuLlxuICpcbiAqIEJ5IGRlZmF1bHQsIHRoaXMgd2lsbCByZW5kZXIgdGhlIHB1YmxpYyByZXByZXNlbnRhdGlvbiB3aXRob3V0IHRoZSBwYXNzd29yZFxuICogY29tcG9uZW50LiBUbyBnZXQgdGhlIGRlcHJlY2F0ZWQgcHJpdmF0ZSByZXByZXNlbnRhdGlvbiwgc2V0IGB3aXRoUGFzc3dvcmRgXG4gKiB0byB0cnVlLlxuICpcbiAqIEBwYXJhbSB3aXRoUGFzc3dvcmQgV2hlbiBzZXQgdG8gdHJ1ZSwgdGhlIHBhc3N3b3JkIHdpbGwgYmUgaW5jbHVkZWQuXG4gKi9cbmZ1bmN0aW9uIGRzblRvU3RyaW5nKGRzbiwgd2l0aFBhc3N3b3JkID0gZmFsc2UpIHtcbiAgY29uc3QgeyBob3N0LCBwYXRoLCBwYXNzLCBwb3J0LCBwcm9qZWN0SWQsIHByb3RvY29sLCBwdWJsaWNLZXkgfSA9IGRzbjtcbiAgcmV0dXJuIChcbiAgICBgJHtwcm90b2NvbH06Ly8ke3B1YmxpY0tleX0ke3dpdGhQYXNzd29yZCAmJiBwYXNzID8gYDoke3Bhc3N9YCA6ICcnfWAgK1xuICAgIGBAJHtob3N0fSR7cG9ydCA/IGA6JHtwb3J0fWAgOiAnJ30vJHtwYXRoID8gYCR7cGF0aH0vYCA6IHBhdGh9JHtwcm9qZWN0SWR9YFxuICApO1xufVxuXG4vKipcbiAqIFBhcnNlcyBhIERzbiBmcm9tIGEgZ2l2ZW4gc3RyaW5nLlxuICpcbiAqIEBwYXJhbSBzdHIgQSBEc24gYXMgc3RyaW5nXG4gKiBAcmV0dXJucyBEc24gYXMgRHNuQ29tcG9uZW50cyBvciB1bmRlZmluZWQgaWYgQHBhcmFtIHN0ciBpcyBub3QgYSB2YWxpZCBEU04gc3RyaW5nXG4gKi9cbmZ1bmN0aW9uIGRzbkZyb21TdHJpbmcoc3RyKSB7XG4gIGNvbnN0IG1hdGNoID0gRFNOX1JFR0VYLmV4ZWMoc3RyKTtcblxuICBpZiAoIW1hdGNoKSB7XG4gICAgLy8gVGhpcyBzaG91bGQgYmUgbG9nZ2VkIHRvIHRoZSBjb25zb2xlXG4gICAgbG9nZ2VyLmNvbnNvbGVTYW5kYm94KCgpID0+IHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgICBjb25zb2xlLmVycm9yKGBJbnZhbGlkIFNlbnRyeSBEc246ICR7c3RyfWApO1xuICAgIH0pO1xuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cblxuICBjb25zdCBbcHJvdG9jb2wsIHB1YmxpY0tleSwgcGFzcyA9ICcnLCBob3N0ID0gJycsIHBvcnQgPSAnJywgbGFzdFBhdGggPSAnJ10gPSBtYXRjaC5zbGljZSgxKTtcbiAgbGV0IHBhdGggPSAnJztcbiAgbGV0IHByb2plY3RJZCA9IGxhc3RQYXRoO1xuXG4gIGNvbnN0IHNwbGl0ID0gcHJvamVjdElkLnNwbGl0KCcvJyk7XG4gIGlmIChzcGxpdC5sZW5ndGggPiAxKSB7XG4gICAgcGF0aCA9IHNwbGl0LnNsaWNlKDAsIC0xKS5qb2luKCcvJyk7XG4gICAgcHJvamVjdElkID0gc3BsaXQucG9wKCkgO1xuICB9XG5cbiAgaWYgKHByb2plY3RJZCkge1xuICAgIGNvbnN0IHByb2plY3RNYXRjaCA9IHByb2plY3RJZC5tYXRjaCgvXlxcZCsvKTtcbiAgICBpZiAocHJvamVjdE1hdGNoKSB7XG4gICAgICBwcm9qZWN0SWQgPSBwcm9qZWN0TWF0Y2hbMF07XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGRzbkZyb21Db21wb25lbnRzKHsgaG9zdCwgcGFzcywgcGF0aCwgcHJvamVjdElkLCBwb3J0LCBwcm90b2NvbDogcHJvdG9jb2wgLCBwdWJsaWNLZXkgfSk7XG59XG5cbmZ1bmN0aW9uIGRzbkZyb21Db21wb25lbnRzKGNvbXBvbmVudHMpIHtcbiAgcmV0dXJuIHtcbiAgICBwcm90b2NvbDogY29tcG9uZW50cy5wcm90b2NvbCxcbiAgICBwdWJsaWNLZXk6IGNvbXBvbmVudHMucHVibGljS2V5IHx8ICcnLFxuICAgIHBhc3M6IGNvbXBvbmVudHMucGFzcyB8fCAnJyxcbiAgICBob3N0OiBjb21wb25lbnRzLmhvc3QsXG4gICAgcG9ydDogY29tcG9uZW50cy5wb3J0IHx8ICcnLFxuICAgIHBhdGg6IGNvbXBvbmVudHMucGF0aCB8fCAnJyxcbiAgICBwcm9qZWN0SWQ6IGNvbXBvbmVudHMucHJvamVjdElkLFxuICB9O1xufVxuXG5mdW5jdGlvbiB2YWxpZGF0ZURzbihkc24pIHtcbiAgaWYgKCFkZWJ1Z0J1aWxkLkRFQlVHX0JVSUxEKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICBjb25zdCB7IHBvcnQsIHByb2plY3RJZCwgcHJvdG9jb2wgfSA9IGRzbjtcblxuICBjb25zdCByZXF1aXJlZENvbXBvbmVudHMgPSBbJ3Byb3RvY29sJywgJ3B1YmxpY0tleScsICdob3N0JywgJ3Byb2plY3RJZCddO1xuICBjb25zdCBoYXNNaXNzaW5nUmVxdWlyZWRDb21wb25lbnQgPSByZXF1aXJlZENvbXBvbmVudHMuZmluZChjb21wb25lbnQgPT4ge1xuICAgIGlmICghZHNuW2NvbXBvbmVudF0pIHtcbiAgICAgIGxvZ2dlci5sb2dnZXIuZXJyb3IoYEludmFsaWQgU2VudHJ5IERzbjogJHtjb21wb25lbnR9IG1pc3NpbmdgKTtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG4gIH0pO1xuXG4gIGlmIChoYXNNaXNzaW5nUmVxdWlyZWRDb21wb25lbnQpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBpZiAoIXByb2plY3RJZC5tYXRjaCgvXlxcZCskLykpIHtcbiAgICBsb2dnZXIubG9nZ2VyLmVycm9yKGBJbnZhbGlkIFNlbnRyeSBEc246IEludmFsaWQgcHJvamVjdElkICR7cHJvamVjdElkfWApO1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGlmICghaXNWYWxpZFByb3RvY29sKHByb3RvY29sKSkge1xuICAgIGxvZ2dlci5sb2dnZXIuZXJyb3IoYEludmFsaWQgU2VudHJ5IERzbjogSW52YWxpZCBwcm90b2NvbCAke3Byb3RvY29sfWApO1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGlmIChwb3J0ICYmIGlzTmFOKHBhcnNlSW50KHBvcnQsIDEwKSkpIHtcbiAgICBsb2dnZXIubG9nZ2VyLmVycm9yKGBJbnZhbGlkIFNlbnRyeSBEc246IEludmFsaWQgcG9ydCAke3BvcnR9YCk7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgcmV0dXJuIHRydWU7XG59XG5cbi8qKlxuICogQ3JlYXRlcyBhIHZhbGlkIFNlbnRyeSBEc24gb2JqZWN0LCBpZGVudGlmeWluZyBhIFNlbnRyeSBpbnN0YW5jZSBhbmQgcHJvamVjdC5cbiAqIEByZXR1cm5zIGEgdmFsaWQgRHNuQ29tcG9uZW50cyBvYmplY3Qgb3IgYHVuZGVmaW5lZGAgaWYgQHBhcmFtIGZyb20gaXMgYW4gaW52YWxpZCBEU04gc291cmNlXG4gKi9cbmZ1bmN0aW9uIG1ha2VEc24oZnJvbSkge1xuICBjb25zdCBjb21wb25lbnRzID0gdHlwZW9mIGZyb20gPT09ICdzdHJpbmcnID8gZHNuRnJvbVN0cmluZyhmcm9tKSA6IGRzbkZyb21Db21wb25lbnRzKGZyb20pO1xuICBpZiAoIWNvbXBvbmVudHMgfHwgIXZhbGlkYXRlRHNuKGNvbXBvbmVudHMpKSB7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxuICByZXR1cm4gY29tcG9uZW50cztcbn1cblxuZXhwb3J0cy5kc25Gcm9tU3RyaW5nID0gZHNuRnJvbVN0cmluZztcbmV4cG9ydHMuZHNuVG9TdHJpbmcgPSBkc25Ub1N0cmluZztcbmV4cG9ydHMubWFrZURzbiA9IG1ha2VEc247XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kc24uanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/dsn.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/env.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/env.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n/*\n * This module exists for optimizations in the build process through rollup and terser.  We define some global\n * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these\n * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will\n * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to\n * `logger` and preventing node-related code from appearing in browser bundles.\n *\n * Attention:\n * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by\n * users. These flags should live in their respective packages, as we identified user tooling (specifically webpack)\n * having issues tree-shaking these constants across package boundaries.\n * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want\n * users to be able to shake away expressions that it guards.\n */\n\n/**\n * Figures out if we're building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nfunction isBrowserBundle() {\n  return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n\n/**\n * Get source of SDK.\n */\nfunction getSDKSource() {\n  // @ts-expect-error \"npm\" is injected by rollup during build process\n  return \"npm\";\n}\n\nexports.getSDKSource = getSDKSource;\nexports.isBrowserBundle = isBrowserBundle;\n//# sourceMappingURL=env.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9lbnYuanMiLCJtYXBwaW5ncyI6IkFBQUEsOENBQTZDLEVBQUUsYUFBYSxFQUFDOztBQUU3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsb0JBQW9CO0FBQ3BCLHVCQUF1QjtBQUN2QiIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9lbnYuanM/NjI2ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG4vKlxuICogVGhpcyBtb2R1bGUgZXhpc3RzIGZvciBvcHRpbWl6YXRpb25zIGluIHRoZSBidWlsZCBwcm9jZXNzIHRocm91Z2ggcm9sbHVwIGFuZCB0ZXJzZXIuICBXZSBkZWZpbmUgc29tZSBnbG9iYWxcbiAqIGNvbnN0YW50cywgd2hpY2ggY2FuIGJlIG92ZXJyaWRkZW4gZHVyaW5nIGJ1aWxkLiBCeSBndWFyZGluZyBjZXJ0YWluIHBpZWNlcyBvZiBjb2RlIHdpdGggZnVuY3Rpb25zIHRoYXQgcmV0dXJuIHRoZXNlXG4gKiBjb25zdGFudHMsIHdlIGNhbiBjb250cm9sIHdoZXRoZXIgb3Igbm90IHRoZXkgYXBwZWFyIGluIHRoZSBmaW5hbCBidW5kbGUuIChBbnkgY29kZSBndWFyZGVkIGJ5IGEgZmFsc2UgY29uZGl0aW9uIHdpbGxcbiAqIG5ldmVyIHJ1biwgYW5kIHdpbGwgaGVuY2UgYmUgZHJvcHBlZCBkdXJpbmcgdHJlZXNoYWtpbmcuKSBUaGUgdHdvIHByaW1hcnkgdXNlcyBmb3IgdGhpcyBhcmUgc3RyaXBwaW5nIG91dCBjYWxscyB0b1xuICogYGxvZ2dlcmAgYW5kIHByZXZlbnRpbmcgbm9kZS1yZWxhdGVkIGNvZGUgZnJvbSBhcHBlYXJpbmcgaW4gYnJvd3NlciBidW5kbGVzLlxuICpcbiAqIEF0dGVudGlvbjpcbiAqIFRoaXMgZmlsZSBzaG91bGQgbm90IGJlIHVzZWQgdG8gZGVmaW5lIGNvbnN0YW50cy9mbGFncyB0aGF0IGFyZSBpbnRlbmRlZCB0byBiZSB1c2VkIGZvciB0cmVlLXNoYWtpbmcgY29uZHVjdGVkIGJ5XG4gKiB1c2Vycy4gVGhlc2UgZmxhZ3Mgc2hvdWxkIGxpdmUgaW4gdGhlaXIgcmVzcGVjdGl2ZSBwYWNrYWdlcywgYXMgd2UgaWRlbnRpZmllZCB1c2VyIHRvb2xpbmcgKHNwZWNpZmljYWxseSB3ZWJwYWNrKVxuICogaGF2aW5nIGlzc3VlcyB0cmVlLXNoYWtpbmcgdGhlc2UgY29uc3RhbnRzIGFjcm9zcyBwYWNrYWdlIGJvdW5kYXJpZXMuXG4gKiBBbiBleGFtcGxlIGZvciB0aGlzIGlzIHRoZSBfX1NFTlRSWV9ERUJVR19fIGNvbnN0YW50LiBJdCBpcyBkZWNsYXJlZCBpbiBlYWNoIHBhY2thZ2UgaW5kaXZpZHVhbGx5IGJlY2F1c2Ugd2Ugd2FudFxuICogdXNlcnMgdG8gYmUgYWJsZSB0byBzaGFrZSBhd2F5IGV4cHJlc3Npb25zIHRoYXQgaXQgZ3VhcmRzLlxuICovXG5cbi8qKlxuICogRmlndXJlcyBvdXQgaWYgd2UncmUgYnVpbGRpbmcgYSBicm93c2VyIGJ1bmRsZS5cbiAqXG4gKiBAcmV0dXJucyB0cnVlIGlmIHRoaXMgaXMgYSBicm93c2VyIGJ1bmRsZSBidWlsZC5cbiAqL1xuZnVuY3Rpb24gaXNCcm93c2VyQnVuZGxlKCkge1xuICByZXR1cm4gdHlwZW9mIF9fU0VOVFJZX0JST1dTRVJfQlVORExFX18gIT09ICd1bmRlZmluZWQnICYmICEhX19TRU5UUllfQlJPV1NFUl9CVU5ETEVfXztcbn1cblxuLyoqXG4gKiBHZXQgc291cmNlIG9mIFNESy5cbiAqL1xuZnVuY3Rpb24gZ2V0U0RLU291cmNlKCkge1xuICAvLyBAdHMtZXhwZWN0LWVycm9yIFwibnBtXCIgaXMgaW5qZWN0ZWQgYnkgcm9sbHVwIGR1cmluZyBidWlsZCBwcm9jZXNzXG4gIHJldHVybiBcIm5wbVwiO1xufVxuXG5leHBvcnRzLmdldFNES1NvdXJjZSA9IGdldFNES1NvdXJjZTtcbmV4cG9ydHMuaXNCcm93c2VyQnVuZGxlID0gaXNCcm93c2VyQnVuZGxlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZW52LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/env.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/envelope.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/envelope.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst dsn = __webpack_require__(/*! ./dsn.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/dsn.js\");\nconst normalize = __webpack_require__(/*! ./normalize.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/normalize.js\");\nconst object = __webpack_require__(/*! ./object.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/object.js\");\nconst worldwide = __webpack_require__(/*! ./worldwide.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/worldwide.js\");\n\n/**\n * Creates an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction createEnvelope(headers, items = []) {\n  return [headers, items] ;\n}\n\n/**\n * Add an item to an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction addItemToEnvelope(envelope, newItem) {\n  const [headers, items] = envelope;\n  return [headers, [...items, newItem]] ;\n}\n\n/**\n * Convenience function to loop through the items and item types of an envelope.\n * (This function was mostly created because working with envelope types is painful at the moment)\n *\n * If the callback returns true, the rest of the items will be skipped.\n */\nfunction forEachEnvelopeItem(\n  envelope,\n  callback,\n) {\n  const envelopeItems = envelope[1];\n\n  for (const envelopeItem of envelopeItems) {\n    const envelopeItemType = envelopeItem[0].type;\n    const result = callback(envelopeItem, envelopeItemType);\n\n    if (result) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Returns true if the envelope contains any of the given envelope item types\n */\nfunction envelopeContainsItemType(envelope, types) {\n  return forEachEnvelopeItem(envelope, (_, type) => types.includes(type));\n}\n\n/**\n * Encode a string to UTF8 array.\n */\nfunction encodeUTF8(input) {\n  return worldwide.GLOBAL_OBJ.__SENTRY__ && worldwide.GLOBAL_OBJ.__SENTRY__.encodePolyfill\n    ? worldwide.GLOBAL_OBJ.__SENTRY__.encodePolyfill(input)\n    : new TextEncoder().encode(input);\n}\n\n/**\n * Decode a UTF8 array to string.\n */\nfunction decodeUTF8(input) {\n  return worldwide.GLOBAL_OBJ.__SENTRY__ && worldwide.GLOBAL_OBJ.__SENTRY__.decodePolyfill\n    ? worldwide.GLOBAL_OBJ.__SENTRY__.decodePolyfill(input)\n    : new TextDecoder().decode(input);\n}\n\n/**\n * Serializes an envelope.\n */\nfunction serializeEnvelope(envelope) {\n  const [envHeaders, items] = envelope;\n\n  // Initially we construct our envelope as a string and only convert to binary chunks if we encounter binary data\n  let parts = JSON.stringify(envHeaders);\n\n  function append(next) {\n    if (typeof parts === 'string') {\n      parts = typeof next === 'string' ? parts + next : [encodeUTF8(parts), next];\n    } else {\n      parts.push(typeof next === 'string' ? encodeUTF8(next) : next);\n    }\n  }\n\n  for (const item of items) {\n    const [itemHeaders, payload] = item;\n\n    append(`\\n${JSON.stringify(itemHeaders)}\\n`);\n\n    if (typeof payload === 'string' || payload instanceof Uint8Array) {\n      append(payload);\n    } else {\n      let stringifiedPayload;\n      try {\n        stringifiedPayload = JSON.stringify(payload);\n      } catch (e) {\n        // In case, despite all our efforts to keep `payload` circular-dependency-free, `JSON.strinify()` still\n        // fails, we try again after normalizing it again with infinite normalization depth. This of course has a\n        // performance impact but in this case a performance hit is better than throwing.\n        stringifiedPayload = JSON.stringify(normalize.normalize(payload));\n      }\n      append(stringifiedPayload);\n    }\n  }\n\n  return typeof parts === 'string' ? parts : concatBuffers(parts);\n}\n\nfunction concatBuffers(buffers) {\n  const totalLength = buffers.reduce((acc, buf) => acc + buf.length, 0);\n\n  const merged = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const buffer of buffers) {\n    merged.set(buffer, offset);\n    offset += buffer.length;\n  }\n\n  return merged;\n}\n\n/**\n * Parses an envelope\n */\nfunction parseEnvelope(env) {\n  let buffer = typeof env === 'string' ? encodeUTF8(env) : env;\n\n  function readBinary(length) {\n    const bin = buffer.subarray(0, length);\n    // Replace the buffer with the remaining data excluding trailing newline\n    buffer = buffer.subarray(length + 1);\n    return bin;\n  }\n\n  function readJson() {\n    let i = buffer.indexOf(0xa);\n    // If we couldn't find a newline, we must have found the end of the buffer\n    if (i < 0) {\n      i = buffer.length;\n    }\n\n    return JSON.parse(decodeUTF8(readBinary(i))) ;\n  }\n\n  const envelopeHeader = readJson();\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const items = [];\n\n  while (buffer.length) {\n    const itemHeader = readJson();\n    const binaryLength = typeof itemHeader.length === 'number' ? itemHeader.length : undefined;\n\n    items.push([itemHeader, binaryLength ? readBinary(binaryLength) : readJson()]);\n  }\n\n  return [envelopeHeader, items];\n}\n\n/**\n * Creates envelope item for a single span\n */\nfunction createSpanEnvelopeItem(spanJson) {\n  const spanHeaders = {\n    type: 'span',\n  };\n\n  return [spanHeaders, spanJson];\n}\n\n/**\n * Creates attachment envelope items\n */\nfunction createAttachmentEnvelopeItem(attachment) {\n  const buffer = typeof attachment.data === 'string' ? encodeUTF8(attachment.data) : attachment.data;\n\n  return [\n    object.dropUndefinedKeys({\n      type: 'attachment',\n      length: buffer.length,\n      filename: attachment.filename,\n      content_type: attachment.contentType,\n      attachment_type: attachment.attachmentType,\n    }),\n    buffer,\n  ];\n}\n\nconst ITEM_TYPE_TO_DATA_CATEGORY_MAP = {\n  session: 'session',\n  sessions: 'session',\n  attachment: 'attachment',\n  transaction: 'transaction',\n  event: 'error',\n  client_report: 'internal',\n  user_report: 'default',\n  profile: 'profile',\n  profile_chunk: 'profile',\n  replay_event: 'replay',\n  replay_recording: 'replay',\n  check_in: 'monitor',\n  feedback: 'feedback',\n  span: 'span',\n  statsd: 'metric_bucket',\n};\n\n/**\n * Maps the type of an envelope item to a data category.\n */\nfunction envelopeItemTypeToDataCategory(type) {\n  return ITEM_TYPE_TO_DATA_CATEGORY_MAP[type];\n}\n\n/** Extracts the minimal SDK info from the metadata or an events */\nfunction getSdkMetadataForEnvelopeHeader(metadataOrEvent) {\n  if (!metadataOrEvent || !metadataOrEvent.sdk) {\n    return;\n  }\n  const { name, version } = metadataOrEvent.sdk;\n  return { name, version };\n}\n\n/**\n * Creates event envelope headers, based on event, sdk info and tunnel\n * Note: This function was extracted from the core package to make it available in Replay\n */\nfunction createEventEnvelopeHeaders(\n  event,\n  sdkInfo,\n  tunnel,\n  dsn$1,\n) {\n  const dynamicSamplingContext = event.sdkProcessingMetadata && event.sdkProcessingMetadata.dynamicSamplingContext;\n  return {\n    event_id: event.event_id ,\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && dsn$1 && { dsn: dsn.dsnToString(dsn$1) }),\n    ...(dynamicSamplingContext && {\n      trace: object.dropUndefinedKeys({ ...dynamicSamplingContext }),\n    }),\n  };\n}\n\nexports.addItemToEnvelope = addItemToEnvelope;\nexports.createAttachmentEnvelopeItem = createAttachmentEnvelopeItem;\nexports.createEnvelope = createEnvelope;\nexports.createEventEnvelopeHeaders = createEventEnvelopeHeaders;\nexports.createSpanEnvelopeItem = createSpanEnvelopeItem;\nexports.envelopeContainsItemType = envelopeContainsItemType;\nexports.envelopeItemTypeToDataCategory = envelopeItemTypeToDataCategory;\nexports.forEachEnvelopeItem = forEachEnvelopeItem;\nexports.getSdkMetadataForEnvelopeHeader = getSdkMetadataForEnvelopeHeader;\nexports.parseEnvelope = parseEnvelope;\nexports.serializeEnvelope = serializeEnvelope;\n//# sourceMappingURL=envelope.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/envelope.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/error.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/error.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n/** An error emitted by Sentry SDKs and related utilities. */\nclass SentryError extends Error {\n  /** Display name of this error instance. */\n\n   constructor( message, logLevel = 'warn') {\n    super(message);this.message = message;\n    this.name = new.target.prototype.constructor.name;\n    // This sets the prototype to be `Error`, not `SentryError`. It's unclear why we do this, but commenting this line\n    // out causes various (seemingly totally unrelated) playwright tests consistently time out. FYI, this makes\n    // instances of `SentryError` fail `obj instanceof SentryError` checks.\n    Object.setPrototypeOf(this, new.target.prototype);\n    this.logLevel = logLevel;\n  }\n}\n\nexports.SentryError = SentryError;\n//# sourceMappingURL=error.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9lcnJvci5qcyIsIm1hcHBpbmdzIjoiQUFBQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7O0FBRTdEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLG1CQUFtQjtBQUNuQiIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9lcnJvci5qcz9hNWNmIl0sInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG5cbi8qKiBBbiBlcnJvciBlbWl0dGVkIGJ5IFNlbnRyeSBTREtzIGFuZCByZWxhdGVkIHV0aWxpdGllcy4gKi9cbmNsYXNzIFNlbnRyeUVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAvKiogRGlzcGxheSBuYW1lIG9mIHRoaXMgZXJyb3IgaW5zdGFuY2UuICovXG5cbiAgIGNvbnN0cnVjdG9yKCBtZXNzYWdlLCBsb2dMZXZlbCA9ICd3YXJuJykge1xuICAgIHN1cGVyKG1lc3NhZ2UpO3RoaXMubWVzc2FnZSA9IG1lc3NhZ2U7XG4gICAgdGhpcy5uYW1lID0gbmV3LnRhcmdldC5wcm90b3R5cGUuY29uc3RydWN0b3IubmFtZTtcbiAgICAvLyBUaGlzIHNldHMgdGhlIHByb3RvdHlwZSB0byBiZSBgRXJyb3JgLCBub3QgYFNlbnRyeUVycm9yYC4gSXQncyB1bmNsZWFyIHdoeSB3ZSBkbyB0aGlzLCBidXQgY29tbWVudGluZyB0aGlzIGxpbmVcbiAgICAvLyBvdXQgY2F1c2VzIHZhcmlvdXMgKHNlZW1pbmdseSB0b3RhbGx5IHVucmVsYXRlZCkgcGxheXdyaWdodCB0ZXN0cyBjb25zaXN0ZW50bHkgdGltZSBvdXQuIEZZSSwgdGhpcyBtYWtlc1xuICAgIC8vIGluc3RhbmNlcyBvZiBgU2VudHJ5RXJyb3JgIGZhaWwgYG9iaiBpbnN0YW5jZW9mIFNlbnRyeUVycm9yYCBjaGVja3MuXG4gICAgT2JqZWN0LnNldFByb3RvdHlwZU9mKHRoaXMsIG5ldy50YXJnZXQucHJvdG90eXBlKTtcbiAgICB0aGlzLmxvZ0xldmVsID0gbG9nTGV2ZWw7XG4gIH1cbn1cblxuZXhwb3J0cy5TZW50cnlFcnJvciA9IFNlbnRyeUVycm9yO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXJyb3IuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/error.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/eventbuilder.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/eventbuilder.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst is = __webpack_require__(/*! ./is.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/is.js\");\nconst misc = __webpack_require__(/*! ./misc.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/misc.js\");\nconst normalize = __webpack_require__(/*! ./normalize.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/normalize.js\");\nconst object = __webpack_require__(/*! ./object.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/object.js\");\n\n/**\n * Extracts stack frames from the error.stack string\n */\nfunction parseStackFrames(stackParser, error) {\n  return stackParser(error.stack || '', 1);\n}\n\n/**\n * Extracts stack frames from the error and builds a Sentry Exception\n */\nfunction exceptionFromError(stackParser, error) {\n  const exception = {\n    type: error.name || error.constructor.name,\n    value: error.message,\n  };\n\n  const frames = parseStackFrames(stackParser, error);\n  if (frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  return exception;\n}\n\n/** If a plain object has a property that is an `Error`, return this error. */\nfunction getErrorPropertyFromObject(obj) {\n  for (const prop in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n      const value = obj[prop];\n      if (value instanceof Error) {\n        return value;\n      }\n    }\n  }\n\n  return undefined;\n}\n\nfunction getMessageForObject(exception) {\n  if ('name' in exception && typeof exception.name === 'string') {\n    let message = `'${exception.name}' captured as exception`;\n\n    if ('message' in exception && typeof exception.message === 'string') {\n      message += ` with message '${exception.message}'`;\n    }\n\n    return message;\n  } else if ('message' in exception && typeof exception.message === 'string') {\n    return exception.message;\n  }\n\n  const keys = object.extractExceptionKeysForMessage(exception);\n\n  // Some ErrorEvent instances do not have an `error` property, which is why they are not handled before\n  // We still want to try to get a decent message for these cases\n  if (is.isErrorEvent(exception)) {\n    return `Event \\`ErrorEvent\\` captured as exception with message \\`${exception.message}\\``;\n  }\n\n  const className = getObjectClassName(exception);\n\n  return `${\n    className && className !== 'Object' ? `'${className}'` : 'Object'\n  } captured as exception with keys: ${keys}`;\n}\n\nfunction getObjectClassName(obj) {\n  try {\n    const prototype = Object.getPrototypeOf(obj);\n    return prototype ? prototype.constructor.name : undefined;\n  } catch (e) {\n    // ignore errors here\n  }\n}\n\nfunction getException(\n  client,\n  mechanism,\n  exception,\n  hint,\n) {\n  if (is.isError(exception)) {\n    return [exception, undefined];\n  }\n\n  // Mutate this!\n  mechanism.synthetic = true;\n\n  if (is.isPlainObject(exception)) {\n    const normalizeDepth = client && client.getOptions().normalizeDepth;\n    const extras = { ['__serialized__']: normalize.normalizeToSize(exception , normalizeDepth) };\n\n    const errorFromProp = getErrorPropertyFromObject(exception);\n    if (errorFromProp) {\n      return [errorFromProp, extras];\n    }\n\n    const message = getMessageForObject(exception);\n    const ex = (hint && hint.syntheticException) || new Error(message);\n    ex.message = message;\n\n    return [ex, extras];\n  }\n\n  // This handles when someone does: `throw \"something awesome\";`\n  // We use synthesized Error here so we can extract a (rough) stack trace.\n  const ex = (hint && hint.syntheticException) || new Error(exception );\n  ex.message = `${exception}`;\n\n  return [ex, undefined];\n}\n\n/**\n * Builds and Event from a Exception\n * @hidden\n */\nfunction eventFromUnknownInput(\n  client,\n  stackParser,\n  exception,\n  hint,\n) {\n  const providedMechanism =\n    hint && hint.data && (hint.data ).mechanism;\n  const mechanism = providedMechanism || {\n    handled: true,\n    type: 'generic',\n  };\n\n  const [ex, extras] = getException(client, mechanism, exception, hint);\n\n  const event = {\n    exception: {\n      values: [exceptionFromError(stackParser, ex)],\n    },\n  };\n\n  if (extras) {\n    event.extra = extras;\n  }\n\n  misc.addExceptionTypeValue(event, undefined, undefined);\n  misc.addExceptionMechanism(event, mechanism);\n\n  return {\n    ...event,\n    event_id: hint && hint.event_id,\n  };\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nfunction eventFromMessage(\n  stackParser,\n  message,\n  level = 'info',\n  hint,\n  attachStacktrace,\n) {\n  const event = {\n    event_id: hint && hint.event_id,\n    level,\n  };\n\n  if (attachStacktrace && hint && hint.syntheticException) {\n    const frames = parseStackFrames(stackParser, hint.syntheticException);\n    if (frames.length) {\n      event.exception = {\n        values: [\n          {\n            value: message,\n            stacktrace: { frames },\n          },\n        ],\n      };\n    }\n  }\n\n  if (is.isParameterizedString(message)) {\n    const { __sentry_template_string__, __sentry_template_values__ } = message;\n\n    event.logentry = {\n      message: __sentry_template_string__,\n      params: __sentry_template_values__,\n    };\n    return event;\n  }\n\n  event.message = message;\n  return event;\n}\n\nexports.eventFromMessage = eventFromMessage;\nexports.eventFromUnknownInput = eventFromUnknownInput;\nexports.exceptionFromError = exceptionFromError;\nexports.parseStackFrames = parseStackFrames;\n//# sourceMappingURL=eventbuilder.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/eventbuilder.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/index.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/index.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst aggregateErrors = __webpack_require__(/*! ./aggregate-errors.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/aggregate-errors.js\");\nconst array = __webpack_require__(/*! ./array.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/array.js\");\nconst browser = __webpack_require__(/*! ./browser.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/browser.js\");\nconst dsn = __webpack_require__(/*! ./dsn.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/dsn.js\");\nconst error = __webpack_require__(/*! ./error.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/error.js\");\nconst worldwide = __webpack_require__(/*! ./worldwide.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/worldwide.js\");\nconst console = __webpack_require__(/*! ./instrument/console.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/console.js\");\nconst fetch = __webpack_require__(/*! ./instrument/fetch.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/fetch.js\");\nconst globalError = __webpack_require__(/*! ./instrument/globalError.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/globalError.js\");\nconst globalUnhandledRejection = __webpack_require__(/*! ./instrument/globalUnhandledRejection.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/globalUnhandledRejection.js\");\nconst handlers = __webpack_require__(/*! ./instrument/handlers.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/handlers.js\");\nconst is = __webpack_require__(/*! ./is.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/is.js\");\nconst isBrowser = __webpack_require__(/*! ./isBrowser.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/isBrowser.js\");\nconst logger = __webpack_require__(/*! ./logger.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/logger.js\");\nconst memo = __webpack_require__(/*! ./memo.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/memo.js\");\nconst misc = __webpack_require__(/*! ./misc.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/misc.js\");\nconst node = __webpack_require__(/*! ./node.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/node.js\");\nconst normalize = __webpack_require__(/*! ./normalize.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/normalize.js\");\nconst object = __webpack_require__(/*! ./object.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/object.js\");\nconst path = __webpack_require__(/*! ./path.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/path.js\");\nconst promisebuffer = __webpack_require__(/*! ./promisebuffer.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/promisebuffer.js\");\nconst requestdata = __webpack_require__(/*! ./requestdata.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/requestdata.js\");\nconst severity = __webpack_require__(/*! ./severity.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/severity.js\");\nconst stacktrace = __webpack_require__(/*! ./stacktrace.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/stacktrace.js\");\nconst nodeStackTrace = __webpack_require__(/*! ./node-stack-trace.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/node-stack-trace.js\");\nconst string = __webpack_require__(/*! ./string.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/string.js\");\nconst supports = __webpack_require__(/*! ./supports.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/supports.js\");\nconst syncpromise = __webpack_require__(/*! ./syncpromise.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/syncpromise.js\");\nconst time = __webpack_require__(/*! ./time.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/time.js\");\nconst tracing = __webpack_require__(/*! ./tracing.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/tracing.js\");\nconst env = __webpack_require__(/*! ./env.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/env.js\");\nconst envelope = __webpack_require__(/*! ./envelope.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/envelope.js\");\nconst clientreport = __webpack_require__(/*! ./clientreport.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/clientreport.js\");\nconst ratelimit = __webpack_require__(/*! ./ratelimit.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/ratelimit.js\");\nconst baggage = __webpack_require__(/*! ./baggage.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/baggage.js\");\nconst url = __webpack_require__(/*! ./url.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/url.js\");\nconst cache = __webpack_require__(/*! ./cache.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/cache.js\");\nconst eventbuilder = __webpack_require__(/*! ./eventbuilder.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/eventbuilder.js\");\nconst anr = __webpack_require__(/*! ./anr.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/anr.js\");\nconst lru = __webpack_require__(/*! ./lru.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/lru.js\");\nconst _asyncNullishCoalesce = __webpack_require__(/*! ./buildPolyfills/_asyncNullishCoalesce.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_asyncNullishCoalesce.js\");\nconst _asyncOptionalChain = __webpack_require__(/*! ./buildPolyfills/_asyncOptionalChain.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_asyncOptionalChain.js\");\nconst _asyncOptionalChainDelete = __webpack_require__(/*! ./buildPolyfills/_asyncOptionalChainDelete.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_asyncOptionalChainDelete.js\");\nconst _nullishCoalesce = __webpack_require__(/*! ./buildPolyfills/_nullishCoalesce.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_nullishCoalesce.js\");\nconst _optionalChain = __webpack_require__(/*! ./buildPolyfills/_optionalChain.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_optionalChain.js\");\nconst _optionalChainDelete = __webpack_require__(/*! ./buildPolyfills/_optionalChainDelete.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_optionalChainDelete.js\");\nconst propagationContext = __webpack_require__(/*! ./propagationContext.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/propagationContext.js\");\nconst version = __webpack_require__(/*! ./version.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/version.js\");\nconst escapeStringForRegex = __webpack_require__(/*! ./vendor/escapeStringForRegex.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/vendor/escapeStringForRegex.js\");\nconst supportsHistory = __webpack_require__(/*! ./vendor/supportsHistory.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/vendor/supportsHistory.js\");\n\n\n\nexports.applyAggregateErrorsToEvent = aggregateErrors.applyAggregateErrorsToEvent;\nexports.flatten = array.flatten;\nexports.getComponentName = browser.getComponentName;\nexports.getDomElement = browser.getDomElement;\nexports.getLocationHref = browser.getLocationHref;\nexports.htmlTreeAsString = browser.htmlTreeAsString;\nexports.dsnFromString = dsn.dsnFromString;\nexports.dsnToString = dsn.dsnToString;\nexports.makeDsn = dsn.makeDsn;\nexports.SentryError = error.SentryError;\nexports.GLOBAL_OBJ = worldwide.GLOBAL_OBJ;\nexports.getGlobalSingleton = worldwide.getGlobalSingleton;\nexports.addConsoleInstrumentationHandler = console.addConsoleInstrumentationHandler;\nexports.addFetchInstrumentationHandler = fetch.addFetchInstrumentationHandler;\nexports.addGlobalErrorInstrumentationHandler = globalError.addGlobalErrorInstrumentationHandler;\nexports.addGlobalUnhandledRejectionInstrumentationHandler = globalUnhandledRejection.addGlobalUnhandledRejectionInstrumentationHandler;\nexports.addHandler = handlers.addHandler;\nexports.maybeInstrument = handlers.maybeInstrument;\nexports.resetInstrumentationHandlers = handlers.resetInstrumentationHandlers;\nexports.triggerHandlers = handlers.triggerHandlers;\nexports.isDOMError = is.isDOMError;\nexports.isDOMException = is.isDOMException;\nexports.isElement = is.isElement;\nexports.isError = is.isError;\nexports.isErrorEvent = is.isErrorEvent;\nexports.isEvent = is.isEvent;\nexports.isInstanceOf = is.isInstanceOf;\nexports.isParameterizedString = is.isParameterizedString;\nexports.isPlainObject = is.isPlainObject;\nexports.isPrimitive = is.isPrimitive;\nexports.isRegExp = is.isRegExp;\nexports.isString = is.isString;\nexports.isSyntheticEvent = is.isSyntheticEvent;\nexports.isThenable = is.isThenable;\nexports.isVueViewModel = is.isVueViewModel;\nexports.isBrowser = isBrowser.isBrowser;\nexports.CONSOLE_LEVELS = logger.CONSOLE_LEVELS;\nexports.consoleSandbox = logger.consoleSandbox;\nexports.logger = logger.logger;\nexports.originalConsoleMethods = logger.originalConsoleMethods;\nexports.memoBuilder = memo.memoBuilder;\nexports.addContextToFrame = misc.addContextToFrame;\nexports.addExceptionMechanism = misc.addExceptionMechanism;\nexports.addExceptionTypeValue = misc.addExceptionTypeValue;\nexports.arrayify = misc.arrayify;\nexports.checkOrSetAlreadyCaught = misc.checkOrSetAlreadyCaught;\nexports.getEventDescription = misc.getEventDescription;\nexports.parseSemver = misc.parseSemver;\nexports.uuid4 = misc.uuid4;\nexports.dynamicRequire = node.dynamicRequire;\nexports.isNodeEnv = node.isNodeEnv;\nexports.loadModule = node.loadModule;\nexports.normalize = normalize.normalize;\nexports.normalizeToSize = normalize.normalizeToSize;\nexports.normalizeUrlToBase = normalize.normalizeUrlToBase;\nexports.addNonEnumerableProperty = object.addNonEnumerableProperty;\nexports.convertToPlainObject = object.convertToPlainObject;\nexports.dropUndefinedKeys = object.dropUndefinedKeys;\nexports.extractExceptionKeysForMessage = object.extractExceptionKeysForMessage;\nexports.fill = object.fill;\nexports.getOriginalFunction = object.getOriginalFunction;\nexports.markFunctionWrapped = object.markFunctionWrapped;\nexports.objectify = object.objectify;\nexports.urlEncode = object.urlEncode;\nexports.basename = path.basename;\nexports.dirname = path.dirname;\nexports.isAbsolute = path.isAbsolute;\nexports.join = path.join;\nexports.normalizePath = path.normalizePath;\nexports.relative = path.relative;\nexports.resolve = path.resolve;\nexports.makePromiseBuffer = promisebuffer.makePromiseBuffer;\nexports.DEFAULT_USER_INCLUDES = requestdata.DEFAULT_USER_INCLUDES;\nexports.addRequestDataToEvent = requestdata.addRequestDataToEvent;\nexports.extractPathForTransaction = requestdata.extractPathForTransaction;\nexports.extractRequestData = requestdata.extractRequestData;\nexports.winterCGHeadersToDict = requestdata.winterCGHeadersToDict;\nexports.winterCGRequestToRequestData = requestdata.winterCGRequestToRequestData;\nexports.severityLevelFromString = severity.severityLevelFromString;\nexports.validSeverityLevels = severity.validSeverityLevels;\nexports.UNKNOWN_FUNCTION = stacktrace.UNKNOWN_FUNCTION;\nexports.createStackParser = stacktrace.createStackParser;\nexports.getFramesFromEvent = stacktrace.getFramesFromEvent;\nexports.getFunctionName = stacktrace.getFunctionName;\nexports.stackParserFromStackParserOptions = stacktrace.stackParserFromStackParserOptions;\nexports.stripSentryFramesAndReverse = stacktrace.stripSentryFramesAndReverse;\nexports.filenameIsInApp = nodeStackTrace.filenameIsInApp;\nexports.node = nodeStackTrace.node;\nexports.nodeStackLineParser = nodeStackTrace.nodeStackLineParser;\nexports.isMatchingPattern = string.isMatchingPattern;\nexports.safeJoin = string.safeJoin;\nexports.snipLine = string.snipLine;\nexports.stringMatchesSomePattern = string.stringMatchesSomePattern;\nexports.truncate = string.truncate;\nexports.isNativeFunction = supports.isNativeFunction;\nexports.supportsDOMError = supports.supportsDOMError;\nexports.supportsDOMException = supports.supportsDOMException;\nexports.supportsErrorEvent = supports.supportsErrorEvent;\nexports.supportsFetch = supports.supportsFetch;\nexports.supportsNativeFetch = supports.supportsNativeFetch;\nexports.supportsReferrerPolicy = supports.supportsReferrerPolicy;\nexports.supportsReportingObserver = supports.supportsReportingObserver;\nexports.SyncPromise = syncpromise.SyncPromise;\nexports.rejectedSyncPromise = syncpromise.rejectedSyncPromise;\nexports.resolvedSyncPromise = syncpromise.resolvedSyncPromise;\nObject.defineProperty(exports, \"_browserPerformanceTimeOriginMode\", ({\n\tenumerable: true,\n\tget: () => time._browserPerformanceTimeOriginMode\n}));\nexports.browserPerformanceTimeOrigin = time.browserPerformanceTimeOrigin;\nexports.dateTimestampInSeconds = time.dateTimestampInSeconds;\nexports.timestampInSeconds = time.timestampInSeconds;\nexports.TRACEPARENT_REGEXP = tracing.TRACEPARENT_REGEXP;\nexports.extractTraceparentData = tracing.extractTraceparentData;\nexports.generateSentryTraceHeader = tracing.generateSentryTraceHeader;\nexports.propagationContextFromHeaders = tracing.propagationContextFromHeaders;\nexports.getSDKSource = env.getSDKSource;\nexports.isBrowserBundle = env.isBrowserBundle;\nexports.addItemToEnvelope = envelope.addItemToEnvelope;\nexports.createAttachmentEnvelopeItem = envelope.createAttachmentEnvelopeItem;\nexports.createEnvelope = envelope.createEnvelope;\nexports.createEventEnvelopeHeaders = envelope.createEventEnvelopeHeaders;\nexports.createSpanEnvelopeItem = envelope.createSpanEnvelopeItem;\nexports.envelopeContainsItemType = envelope.envelopeContainsItemType;\nexports.envelopeItemTypeToDataCategory = envelope.envelopeItemTypeToDataCategory;\nexports.forEachEnvelopeItem = envelope.forEachEnvelopeItem;\nexports.getSdkMetadataForEnvelopeHeader = envelope.getSdkMetadataForEnvelopeHeader;\nexports.parseEnvelope = envelope.parseEnvelope;\nexports.serializeEnvelope = envelope.serializeEnvelope;\nexports.createClientReportEnvelope = clientreport.createClientReportEnvelope;\nexports.DEFAULT_RETRY_AFTER = ratelimit.DEFAULT_RETRY_AFTER;\nexports.disabledUntil = ratelimit.disabledUntil;\nexports.isRateLimited = ratelimit.isRateLimited;\nexports.parseRetryAfterHeader = ratelimit.parseRetryAfterHeader;\nexports.updateRateLimits = ratelimit.updateRateLimits;\nexports.BAGGAGE_HEADER_NAME = baggage.BAGGAGE_HEADER_NAME;\nexports.MAX_BAGGAGE_STRING_LENGTH = baggage.MAX_BAGGAGE_STRING_LENGTH;\nexports.SENTRY_BAGGAGE_KEY_PREFIX = baggage.SENTRY_BAGGAGE_KEY_PREFIX;\nexports.SENTRY_BAGGAGE_KEY_PREFIX_REGEX = baggage.SENTRY_BAGGAGE_KEY_PREFIX_REGEX;\nexports.baggageHeaderToDynamicSamplingContext = baggage.baggageHeaderToDynamicSamplingContext;\nexports.dynamicSamplingContextToSentryBaggageHeader = baggage.dynamicSamplingContextToSentryBaggageHeader;\nexports.parseBaggageHeader = baggage.parseBaggageHeader;\nexports.getNumberOfUrlSegments = url.getNumberOfUrlSegments;\nexports.getSanitizedUrlString = url.getSanitizedUrlString;\nexports.parseUrl = url.parseUrl;\nexports.stripUrlQueryAndFragment = url.stripUrlQueryAndFragment;\nexports.makeFifoCache = cache.makeFifoCache;\nexports.eventFromMessage = eventbuilder.eventFromMessage;\nexports.eventFromUnknownInput = eventbuilder.eventFromUnknownInput;\nexports.exceptionFromError = eventbuilder.exceptionFromError;\nexports.parseStackFrames = eventbuilder.parseStackFrames;\nexports.callFrameToStackFrame = anr.callFrameToStackFrame;\nexports.watchdogTimer = anr.watchdogTimer;\nexports.LRUMap = lru.LRUMap;\nexports._asyncNullishCoalesce = _asyncNullishCoalesce._asyncNullishCoalesce;\nexports._asyncOptionalChain = _asyncOptionalChain._asyncOptionalChain;\nexports._asyncOptionalChainDelete = _asyncOptionalChainDelete._asyncOptionalChainDelete;\nexports._nullishCoalesce = _nullishCoalesce._nullishCoalesce;\nexports._optionalChain = _optionalChain._optionalChain;\nexports._optionalChainDelete = _optionalChainDelete._optionalChainDelete;\nexports.generatePropagationContext = propagationContext.generatePropagationContext;\nexports.SDK_VERSION = version.SDK_VERSION;\nexports.escapeStringForRegex = escapeStringForRegex.escapeStringForRegex;\nexports.supportsHistory = supportsHistory.supportsHistory;\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/index.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/console.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/console.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst logger = __webpack_require__(/*! ../logger.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/logger.js\");\nconst object = __webpack_require__(/*! ../object.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/object.js\");\nconst worldwide = __webpack_require__(/*! ../worldwide.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/worldwide.js\");\nconst handlers = __webpack_require__(/*! ./handlers.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/handlers.js\");\n\n/**\n * Add an instrumentation handler for when a console.xxx method is called.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addConsoleInstrumentationHandler(handler) {\n  const type = 'console';\n  handlers.addHandler(type, handler);\n  handlers.maybeInstrument(type, instrumentConsole);\n}\n\nfunction instrumentConsole() {\n  if (!('console' in worldwide.GLOBAL_OBJ)) {\n    return;\n  }\n\n  logger.CONSOLE_LEVELS.forEach(function (level) {\n    if (!(level in worldwide.GLOBAL_OBJ.console)) {\n      return;\n    }\n\n    object.fill(worldwide.GLOBAL_OBJ.console, level, function (originalConsoleMethod) {\n      logger.originalConsoleMethods[level] = originalConsoleMethod;\n\n      return function (...args) {\n        const handlerData = { args, level };\n        handlers.triggerHandlers('console', handlerData);\n\n        const log = logger.originalConsoleMethods[level];\n        log && log.apply(worldwide.GLOBAL_OBJ.console, args);\n      };\n    });\n  });\n}\n\nexports.addConsoleInstrumentationHandler = addConsoleInstrumentationHandler;\n//# sourceMappingURL=console.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9pbnN0cnVtZW50L2NvbnNvbGUuanMiLCJtYXBwaW5ncyI6IkFBQUEsOENBQTZDLEVBQUUsYUFBYSxFQUFDOztBQUU3RCxlQUFlLG1CQUFPLENBQUMsMkhBQWM7QUFDckMsZUFBZSxtQkFBTyxDQUFDLDJIQUFjO0FBQ3JDLGtCQUFrQixtQkFBTyxDQUFDLGlJQUFpQjtBQUMzQyxpQkFBaUIsbUJBQU8sQ0FBQyx5SUFBZTs7QUFFeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsOEJBQThCO0FBQzlCOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7O0FBRUEsd0NBQXdDO0FBQ3hDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLXByb2plY3QvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2luc3RydW1lbnQvY29uc29sZS5qcz9lZjU5Il0sInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG5cbmNvbnN0IGxvZ2dlciA9IHJlcXVpcmUoJy4uL2xvZ2dlci5qcycpO1xuY29uc3Qgb2JqZWN0ID0gcmVxdWlyZSgnLi4vb2JqZWN0LmpzJyk7XG5jb25zdCB3b3JsZHdpZGUgPSByZXF1aXJlKCcuLi93b3JsZHdpZGUuanMnKTtcbmNvbnN0IGhhbmRsZXJzID0gcmVxdWlyZSgnLi9oYW5kbGVycy5qcycpO1xuXG4vKipcbiAqIEFkZCBhbiBpbnN0cnVtZW50YXRpb24gaGFuZGxlciBmb3Igd2hlbiBhIGNvbnNvbGUueHh4IG1ldGhvZCBpcyBjYWxsZWQuXG4gKlxuICogVXNlIGF0IHlvdXIgb3duIHJpc2ssIHRoaXMgbWlnaHQgYnJlYWsgd2l0aG91dCBjaGFuZ2Vsb2cgbm90aWNlLCBvbmx5IHVzZWQgaW50ZXJuYWxseS5cbiAqIEBoaWRkZW5cbiAqL1xuZnVuY3Rpb24gYWRkQ29uc29sZUluc3RydW1lbnRhdGlvbkhhbmRsZXIoaGFuZGxlcikge1xuICBjb25zdCB0eXBlID0gJ2NvbnNvbGUnO1xuICBoYW5kbGVycy5hZGRIYW5kbGVyKHR5cGUsIGhhbmRsZXIpO1xuICBoYW5kbGVycy5tYXliZUluc3RydW1lbnQodHlwZSwgaW5zdHJ1bWVudENvbnNvbGUpO1xufVxuXG5mdW5jdGlvbiBpbnN0cnVtZW50Q29uc29sZSgpIHtcbiAgaWYgKCEoJ2NvbnNvbGUnIGluIHdvcmxkd2lkZS5HTE9CQUxfT0JKKSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGxvZ2dlci5DT05TT0xFX0xFVkVMUy5mb3JFYWNoKGZ1bmN0aW9uIChsZXZlbCkge1xuICAgIGlmICghKGxldmVsIGluIHdvcmxkd2lkZS5HTE9CQUxfT0JKLmNvbnNvbGUpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgb2JqZWN0LmZpbGwod29ybGR3aWRlLkdMT0JBTF9PQkouY29uc29sZSwgbGV2ZWwsIGZ1bmN0aW9uIChvcmlnaW5hbENvbnNvbGVNZXRob2QpIHtcbiAgICAgIGxvZ2dlci5vcmlnaW5hbENvbnNvbGVNZXRob2RzW2xldmVsXSA9IG9yaWdpbmFsQ29uc29sZU1ldGhvZDtcblxuICAgICAgcmV0dXJuIGZ1bmN0aW9uICguLi5hcmdzKSB7XG4gICAgICAgIGNvbnN0IGhhbmRsZXJEYXRhID0geyBhcmdzLCBsZXZlbCB9O1xuICAgICAgICBoYW5kbGVycy50cmlnZ2VySGFuZGxlcnMoJ2NvbnNvbGUnLCBoYW5kbGVyRGF0YSk7XG5cbiAgICAgICAgY29uc3QgbG9nID0gbG9nZ2VyLm9yaWdpbmFsQ29uc29sZU1ldGhvZHNbbGV2ZWxdO1xuICAgICAgICBsb2cgJiYgbG9nLmFwcGx5KHdvcmxkd2lkZS5HTE9CQUxfT0JKLmNvbnNvbGUsIGFyZ3MpO1xuICAgICAgfTtcbiAgICB9KTtcbiAgfSk7XG59XG5cbmV4cG9ydHMuYWRkQ29uc29sZUluc3RydW1lbnRhdGlvbkhhbmRsZXIgPSBhZGRDb25zb2xlSW5zdHJ1bWVudGF0aW9uSGFuZGxlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnNvbGUuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/console.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/fetch.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/fetch.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst is = __webpack_require__(/*! ../is.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/is.js\");\nconst object = __webpack_require__(/*! ../object.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/object.js\");\nconst supports = __webpack_require__(/*! ../supports.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/supports.js\");\nconst time = __webpack_require__(/*! ../time.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/time.js\");\nconst worldwide = __webpack_require__(/*! ../worldwide.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/worldwide.js\");\nconst handlers = __webpack_require__(/*! ./handlers.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/handlers.js\");\n\n/**\n * Add an instrumentation handler for when a fetch request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addFetchInstrumentationHandler(handler) {\n  const type = 'fetch';\n  handlers.addHandler(type, handler);\n  handlers.maybeInstrument(type, instrumentFetch);\n}\n\nfunction instrumentFetch() {\n  if (!supports.supportsNativeFetch()) {\n    return;\n  }\n\n  object.fill(worldwide.GLOBAL_OBJ, 'fetch', function (originalFetch) {\n    return function (...args) {\n      const { method, url } = parseFetchArgs(args);\n\n      const handlerData = {\n        args,\n        fetchData: {\n          method,\n          url,\n        },\n        startTimestamp: time.timestampInSeconds() * 1000,\n      };\n\n      handlers.triggerHandlers('fetch', {\n        ...handlerData,\n      });\n\n      // We capture the stack right here and not in the Promise error callback because Safari (and probably other\n      // browsers too) will wipe the stack trace up to this point, only leaving us with this file which is useless.\n\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n      //       it means the error, that was caused by your fetch call did not\n      //       have a stack trace, so the SDK backfilled the stack trace so\n      //       you can see which fetch call failed.\n      const virtualStackTrace = new Error().stack;\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return originalFetch.apply(worldwide.GLOBAL_OBJ, args).then(\n        (response) => {\n          const finishedHandlerData = {\n            ...handlerData,\n            endTimestamp: time.timestampInSeconds() * 1000,\n            response,\n          };\n\n          handlers.triggerHandlers('fetch', finishedHandlerData);\n          return response;\n        },\n        (error) => {\n          const erroredHandlerData = {\n            ...handlerData,\n            endTimestamp: time.timestampInSeconds() * 1000,\n            error,\n          };\n\n          handlers.triggerHandlers('fetch', erroredHandlerData);\n\n          if (is.isError(error) && error.stack === undefined) {\n            // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n            //       it means the error, that was caused by your fetch call did not\n            //       have a stack trace, so the SDK backfilled the stack trace so\n            //       you can see which fetch call failed.\n            error.stack = virtualStackTrace;\n            object.addNonEnumerableProperty(error, 'framesToPop', 1);\n          }\n\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n          //       it means the sentry.javascript SDK caught an error invoking your application code.\n          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n          throw error;\n        },\n      );\n    };\n  });\n}\n\nfunction hasProp(obj, prop) {\n  return !!obj && typeof obj === 'object' && !!(obj )[prop];\n}\n\nfunction getUrlFromResource(resource) {\n  if (typeof resource === 'string') {\n    return resource;\n  }\n\n  if (!resource) {\n    return '';\n  }\n\n  if (hasProp(resource, 'url')) {\n    return resource.url;\n  }\n\n  if (resource.toString) {\n    return resource.toString();\n  }\n\n  return '';\n}\n\n/**\n * Parses the fetch arguments to find the used Http method and the url of the request.\n * Exported for tests only.\n */\nfunction parseFetchArgs(fetchArgs) {\n  if (fetchArgs.length === 0) {\n    return { method: 'GET', url: '' };\n  }\n\n  if (fetchArgs.length === 2) {\n    const [url, options] = fetchArgs ;\n\n    return {\n      url: getUrlFromResource(url),\n      method: hasProp(options, 'method') ? String(options.method).toUpperCase() : 'GET',\n    };\n  }\n\n  const arg = fetchArgs[0];\n  return {\n    url: getUrlFromResource(arg ),\n    method: hasProp(arg, 'method') ? String(arg.method).toUpperCase() : 'GET',\n  };\n}\n\nexports.addFetchInstrumentationHandler = addFetchInstrumentationHandler;\nexports.parseFetchArgs = parseFetchArgs;\n//# sourceMappingURL=fetch.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9pbnN0cnVtZW50L2ZldGNoLmpzIiwibWFwcGluZ3MiOiJBQUFBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQzs7QUFFN0QsV0FBVyxtQkFBTyxDQUFDLG1IQUFVO0FBQzdCLGVBQWUsbUJBQU8sQ0FBQywySEFBYztBQUNyQyxpQkFBaUIsbUJBQU8sQ0FBQywrSEFBZ0I7QUFDekMsYUFBYSxtQkFBTyxDQUFDLHVIQUFZO0FBQ2pDLGtCQUFrQixtQkFBTyxDQUFDLGlJQUFpQjtBQUMzQyxpQkFBaUIsbUJBQU8sQ0FBQyx5SUFBZTs7QUFFeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGNBQWMsY0FBYzs7QUFFNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBOztBQUVBO0FBQ0E7QUFDQSxPQUFPOztBQUVQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxzQ0FBc0M7QUFDdEMsc0JBQXNCO0FBQ3RCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLXByb2plY3QvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2luc3RydW1lbnQvZmV0Y2guanM/MWQ3NiJdLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG5jb25zdCBpcyA9IHJlcXVpcmUoJy4uL2lzLmpzJyk7XG5jb25zdCBvYmplY3QgPSByZXF1aXJlKCcuLi9vYmplY3QuanMnKTtcbmNvbnN0IHN1cHBvcnRzID0gcmVxdWlyZSgnLi4vc3VwcG9ydHMuanMnKTtcbmNvbnN0IHRpbWUgPSByZXF1aXJlKCcuLi90aW1lLmpzJyk7XG5jb25zdCB3b3JsZHdpZGUgPSByZXF1aXJlKCcuLi93b3JsZHdpZGUuanMnKTtcbmNvbnN0IGhhbmRsZXJzID0gcmVxdWlyZSgnLi9oYW5kbGVycy5qcycpO1xuXG4vKipcbiAqIEFkZCBhbiBpbnN0cnVtZW50YXRpb24gaGFuZGxlciBmb3Igd2hlbiBhIGZldGNoIHJlcXVlc3QgaGFwcGVucy5cbiAqIFRoZSBoYW5kbGVyIGZ1bmN0aW9uIGlzIGNhbGxlZCBvbmNlIHdoZW4gdGhlIHJlcXVlc3Qgc3RhcnRzIGFuZCBvbmNlIHdoZW4gaXQgZW5kcyxcbiAqIHdoaWNoIGNhbiBiZSBpZGVudGlmaWVkIGJ5IGNoZWNraW5nIGlmIGl0IGhhcyBhbiBgZW5kVGltZXN0YW1wYC5cbiAqXG4gKiBVc2UgYXQgeW91ciBvd24gcmlzaywgdGhpcyBtaWdodCBicmVhayB3aXRob3V0IGNoYW5nZWxvZyBub3RpY2UsIG9ubHkgdXNlZCBpbnRlcm5hbGx5LlxuICogQGhpZGRlblxuICovXG5mdW5jdGlvbiBhZGRGZXRjaEluc3RydW1lbnRhdGlvbkhhbmRsZXIoaGFuZGxlcikge1xuICBjb25zdCB0eXBlID0gJ2ZldGNoJztcbiAgaGFuZGxlcnMuYWRkSGFuZGxlcih0eXBlLCBoYW5kbGVyKTtcbiAgaGFuZGxlcnMubWF5YmVJbnN0cnVtZW50KHR5cGUsIGluc3RydW1lbnRGZXRjaCk7XG59XG5cbmZ1bmN0aW9uIGluc3RydW1lbnRGZXRjaCgpIHtcbiAgaWYgKCFzdXBwb3J0cy5zdXBwb3J0c05hdGl2ZUZldGNoKCkpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBvYmplY3QuZmlsbCh3b3JsZHdpZGUuR0xPQkFMX09CSiwgJ2ZldGNoJywgZnVuY3Rpb24gKG9yaWdpbmFsRmV0Y2gpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKC4uLmFyZ3MpIHtcbiAgICAgIGNvbnN0IHsgbWV0aG9kLCB1cmwgfSA9IHBhcnNlRmV0Y2hBcmdzKGFyZ3MpO1xuXG4gICAgICBjb25zdCBoYW5kbGVyRGF0YSA9IHtcbiAgICAgICAgYXJncyxcbiAgICAgICAgZmV0Y2hEYXRhOiB7XG4gICAgICAgICAgbWV0aG9kLFxuICAgICAgICAgIHVybCxcbiAgICAgICAgfSxcbiAgICAgICAgc3RhcnRUaW1lc3RhbXA6IHRpbWUudGltZXN0YW1wSW5TZWNvbmRzKCkgKiAxMDAwLFxuICAgICAgfTtcblxuICAgICAgaGFuZGxlcnMudHJpZ2dlckhhbmRsZXJzKCdmZXRjaCcsIHtcbiAgICAgICAgLi4uaGFuZGxlckRhdGEsXG4gICAgICB9KTtcblxuICAgICAgLy8gV2UgY2FwdHVyZSB0aGUgc3RhY2sgcmlnaHQgaGVyZSBhbmQgbm90IGluIHRoZSBQcm9taXNlIGVycm9yIGNhbGxiYWNrIGJlY2F1c2UgU2FmYXJpIChhbmQgcHJvYmFibHkgb3RoZXJcbiAgICAgIC8vIGJyb3dzZXJzIHRvbykgd2lsbCB3aXBlIHRoZSBzdGFjayB0cmFjZSB1cCB0byB0aGlzIHBvaW50LCBvbmx5IGxlYXZpbmcgdXMgd2l0aCB0aGlzIGZpbGUgd2hpY2ggaXMgdXNlbGVzcy5cblxuICAgICAgLy8gTk9URTogSWYgeW91IGFyZSBhIFNlbnRyeSB1c2VyLCBhbmQgeW91IGFyZSBzZWVpbmcgdGhpcyBzdGFjayBmcmFtZSxcbiAgICAgIC8vICAgICAgIGl0IG1lYW5zIHRoZSBlcnJvciwgdGhhdCB3YXMgY2F1c2VkIGJ5IHlvdXIgZmV0Y2ggY2FsbCBkaWQgbm90XG4gICAgICAvLyAgICAgICBoYXZlIGEgc3RhY2sgdHJhY2UsIHNvIHRoZSBTREsgYmFja2ZpbGxlZCB0aGUgc3RhY2sgdHJhY2Ugc29cbiAgICAgIC8vICAgICAgIHlvdSBjYW4gc2VlIHdoaWNoIGZldGNoIGNhbGwgZmFpbGVkLlxuICAgICAgY29uc3QgdmlydHVhbFN0YWNrVHJhY2UgPSBuZXcgRXJyb3IoKS5zdGFjaztcblxuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnNhZmUtbWVtYmVyLWFjY2Vzc1xuICAgICAgcmV0dXJuIG9yaWdpbmFsRmV0Y2guYXBwbHkod29ybGR3aWRlLkdMT0JBTF9PQkosIGFyZ3MpLnRoZW4oXG4gICAgICAgIChyZXNwb25zZSkgPT4ge1xuICAgICAgICAgIGNvbnN0IGZpbmlzaGVkSGFuZGxlckRhdGEgPSB7XG4gICAgICAgICAgICAuLi5oYW5kbGVyRGF0YSxcbiAgICAgICAgICAgIGVuZFRpbWVzdGFtcDogdGltZS50aW1lc3RhbXBJblNlY29uZHMoKSAqIDEwMDAsXG4gICAgICAgICAgICByZXNwb25zZSxcbiAgICAgICAgICB9O1xuXG4gICAgICAgICAgaGFuZGxlcnMudHJpZ2dlckhhbmRsZXJzKCdmZXRjaCcsIGZpbmlzaGVkSGFuZGxlckRhdGEpO1xuICAgICAgICAgIHJldHVybiByZXNwb25zZTtcbiAgICAgICAgfSxcbiAgICAgICAgKGVycm9yKSA9PiB7XG4gICAgICAgICAgY29uc3QgZXJyb3JlZEhhbmRsZXJEYXRhID0ge1xuICAgICAgICAgICAgLi4uaGFuZGxlckRhdGEsXG4gICAgICAgICAgICBlbmRUaW1lc3RhbXA6IHRpbWUudGltZXN0YW1wSW5TZWNvbmRzKCkgKiAxMDAwLFxuICAgICAgICAgICAgZXJyb3IsXG4gICAgICAgICAgfTtcblxuICAgICAgICAgIGhhbmRsZXJzLnRyaWdnZXJIYW5kbGVycygnZmV0Y2gnLCBlcnJvcmVkSGFuZGxlckRhdGEpO1xuXG4gICAgICAgICAgaWYgKGlzLmlzRXJyb3IoZXJyb3IpICYmIGVycm9yLnN0YWNrID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIC8vIE5PVEU6IElmIHlvdSBhcmUgYSBTZW50cnkgdXNlciwgYW5kIHlvdSBhcmUgc2VlaW5nIHRoaXMgc3RhY2sgZnJhbWUsXG4gICAgICAgICAgICAvLyAgICAgICBpdCBtZWFucyB0aGUgZXJyb3IsIHRoYXQgd2FzIGNhdXNlZCBieSB5b3VyIGZldGNoIGNhbGwgZGlkIG5vdFxuICAgICAgICAgICAgLy8gICAgICAgaGF2ZSBhIHN0YWNrIHRyYWNlLCBzbyB0aGUgU0RLIGJhY2tmaWxsZWQgdGhlIHN0YWNrIHRyYWNlIHNvXG4gICAgICAgICAgICAvLyAgICAgICB5b3UgY2FuIHNlZSB3aGljaCBmZXRjaCBjYWxsIGZhaWxlZC5cbiAgICAgICAgICAgIGVycm9yLnN0YWNrID0gdmlydHVhbFN0YWNrVHJhY2U7XG4gICAgICAgICAgICBvYmplY3QuYWRkTm9uRW51bWVyYWJsZVByb3BlcnR5KGVycm9yLCAnZnJhbWVzVG9Qb3AnLCAxKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAvLyBOT1RFOiBJZiB5b3UgYXJlIGEgU2VudHJ5IHVzZXIsIGFuZCB5b3UgYXJlIHNlZWluZyB0aGlzIHN0YWNrIGZyYW1lLFxuICAgICAgICAgIC8vICAgICAgIGl0IG1lYW5zIHRoZSBzZW50cnkuamF2YXNjcmlwdCBTREsgY2F1Z2h0IGFuIGVycm9yIGludm9raW5nIHlvdXIgYXBwbGljYXRpb24gY29kZS5cbiAgICAgICAgICAvLyAgICAgICBUaGlzIGlzIGV4cGVjdGVkIGJlaGF2aW9yIGFuZCBOT1QgaW5kaWNhdGl2ZSBvZiBhIGJ1ZyB3aXRoIHNlbnRyeS5qYXZhc2NyaXB0LlxuICAgICAgICAgIHRocm93IGVycm9yO1xuICAgICAgICB9LFxuICAgICAgKTtcbiAgICB9O1xuICB9KTtcbn1cblxuZnVuY3Rpb24gaGFzUHJvcChvYmosIHByb3ApIHtcbiAgcmV0dXJuICEhb2JqICYmIHR5cGVvZiBvYmogPT09ICdvYmplY3QnICYmICEhKG9iaiApW3Byb3BdO1xufVxuXG5mdW5jdGlvbiBnZXRVcmxGcm9tUmVzb3VyY2UocmVzb3VyY2UpIHtcbiAgaWYgKHR5cGVvZiByZXNvdXJjZSA9PT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gcmVzb3VyY2U7XG4gIH1cblxuICBpZiAoIXJlc291cmNlKSB7XG4gICAgcmV0dXJuICcnO1xuICB9XG5cbiAgaWYgKGhhc1Byb3AocmVzb3VyY2UsICd1cmwnKSkge1xuICAgIHJldHVybiByZXNvdXJjZS51cmw7XG4gIH1cblxuICBpZiAocmVzb3VyY2UudG9TdHJpbmcpIHtcbiAgICByZXR1cm4gcmVzb3VyY2UudG9TdHJpbmcoKTtcbiAgfVxuXG4gIHJldHVybiAnJztcbn1cblxuLyoqXG4gKiBQYXJzZXMgdGhlIGZldGNoIGFyZ3VtZW50cyB0byBmaW5kIHRoZSB1c2VkIEh0dHAgbWV0aG9kIGFuZCB0aGUgdXJsIG9mIHRoZSByZXF1ZXN0LlxuICogRXhwb3J0ZWQgZm9yIHRlc3RzIG9ubHkuXG4gKi9cbmZ1bmN0aW9uIHBhcnNlRmV0Y2hBcmdzKGZldGNoQXJncykge1xuICBpZiAoZmV0Y2hBcmdzLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiB7IG1ldGhvZDogJ0dFVCcsIHVybDogJycgfTtcbiAgfVxuXG4gIGlmIChmZXRjaEFyZ3MubGVuZ3RoID09PSAyKSB7XG4gICAgY29uc3QgW3VybCwgb3B0aW9uc10gPSBmZXRjaEFyZ3MgO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIHVybDogZ2V0VXJsRnJvbVJlc291cmNlKHVybCksXG4gICAgICBtZXRob2Q6IGhhc1Byb3Aob3B0aW9ucywgJ21ldGhvZCcpID8gU3RyaW5nKG9wdGlvbnMubWV0aG9kKS50b1VwcGVyQ2FzZSgpIDogJ0dFVCcsXG4gICAgfTtcbiAgfVxuXG4gIGNvbnN0IGFyZyA9IGZldGNoQXJnc1swXTtcbiAgcmV0dXJuIHtcbiAgICB1cmw6IGdldFVybEZyb21SZXNvdXJjZShhcmcgKSxcbiAgICBtZXRob2Q6IGhhc1Byb3AoYXJnLCAnbWV0aG9kJykgPyBTdHJpbmcoYXJnLm1ldGhvZCkudG9VcHBlckNhc2UoKSA6ICdHRVQnLFxuICB9O1xufVxuXG5leHBvcnRzLmFkZEZldGNoSW5zdHJ1bWVudGF0aW9uSGFuZGxlciA9IGFkZEZldGNoSW5zdHJ1bWVudGF0aW9uSGFuZGxlcjtcbmV4cG9ydHMucGFyc2VGZXRjaEFyZ3MgPSBwYXJzZUZldGNoQXJncztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZldGNoLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/fetch.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/globalError.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/globalError.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst worldwide = __webpack_require__(/*! ../worldwide.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/worldwide.js\");\nconst handlers = __webpack_require__(/*! ./handlers.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/handlers.js\");\n\nlet _oldOnErrorHandler = null;\n\n/**\n * Add an instrumentation handler for when an error is captured by the global error handler.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addGlobalErrorInstrumentationHandler(handler) {\n  const type = 'error';\n  handlers.addHandler(type, handler);\n  handlers.maybeInstrument(type, instrumentError);\n}\n\nfunction instrumentError() {\n  _oldOnErrorHandler = worldwide.GLOBAL_OBJ.onerror;\n\n  worldwide.GLOBAL_OBJ.onerror = function (\n    msg,\n    url,\n    line,\n    column,\n    error,\n  ) {\n    const handlerData = {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    };\n    handlers.triggerHandlers('error', handlerData);\n\n    if (_oldOnErrorHandler && !_oldOnErrorHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n\n  worldwide.GLOBAL_OBJ.onerror.__SENTRY_INSTRUMENTED__ = true;\n}\n\nexports.addGlobalErrorInstrumentationHandler = addGlobalErrorInstrumentationHandler;\n//# sourceMappingURL=globalError.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9pbnN0cnVtZW50L2dsb2JhbEVycm9yLmpzIiwibWFwcGluZ3MiOiJBQUFBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQzs7QUFFN0Qsa0JBQWtCLG1CQUFPLENBQUMsaUlBQWlCO0FBQzNDLGlCQUFpQixtQkFBTyxDQUFDLHlJQUFlOztBQUV4Qzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSw0Q0FBNEM7QUFDNUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0Zm9saW8tcHJvamVjdC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2VudHJ5K3V0aWxzQDguMTcuMC9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9idWlsZC9janMvaW5zdHJ1bWVudC9nbG9iYWxFcnJvci5qcz85NGU2Il0sInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG5cbmNvbnN0IHdvcmxkd2lkZSA9IHJlcXVpcmUoJy4uL3dvcmxkd2lkZS5qcycpO1xuY29uc3QgaGFuZGxlcnMgPSByZXF1aXJlKCcuL2hhbmRsZXJzLmpzJyk7XG5cbmxldCBfb2xkT25FcnJvckhhbmRsZXIgPSBudWxsO1xuXG4vKipcbiAqIEFkZCBhbiBpbnN0cnVtZW50YXRpb24gaGFuZGxlciBmb3Igd2hlbiBhbiBlcnJvciBpcyBjYXB0dXJlZCBieSB0aGUgZ2xvYmFsIGVycm9yIGhhbmRsZXIuXG4gKlxuICogVXNlIGF0IHlvdXIgb3duIHJpc2ssIHRoaXMgbWlnaHQgYnJlYWsgd2l0aG91dCBjaGFuZ2Vsb2cgbm90aWNlLCBvbmx5IHVzZWQgaW50ZXJuYWxseS5cbiAqIEBoaWRkZW5cbiAqL1xuZnVuY3Rpb24gYWRkR2xvYmFsRXJyb3JJbnN0cnVtZW50YXRpb25IYW5kbGVyKGhhbmRsZXIpIHtcbiAgY29uc3QgdHlwZSA9ICdlcnJvcic7XG4gIGhhbmRsZXJzLmFkZEhhbmRsZXIodHlwZSwgaGFuZGxlcik7XG4gIGhhbmRsZXJzLm1heWJlSW5zdHJ1bWVudCh0eXBlLCBpbnN0cnVtZW50RXJyb3IpO1xufVxuXG5mdW5jdGlvbiBpbnN0cnVtZW50RXJyb3IoKSB7XG4gIF9vbGRPbkVycm9ySGFuZGxlciA9IHdvcmxkd2lkZS5HTE9CQUxfT0JKLm9uZXJyb3I7XG5cbiAgd29ybGR3aWRlLkdMT0JBTF9PQkoub25lcnJvciA9IGZ1bmN0aW9uIChcbiAgICBtc2csXG4gICAgdXJsLFxuICAgIGxpbmUsXG4gICAgY29sdW1uLFxuICAgIGVycm9yLFxuICApIHtcbiAgICBjb25zdCBoYW5kbGVyRGF0YSA9IHtcbiAgICAgIGNvbHVtbixcbiAgICAgIGVycm9yLFxuICAgICAgbGluZSxcbiAgICAgIG1zZyxcbiAgICAgIHVybCxcbiAgICB9O1xuICAgIGhhbmRsZXJzLnRyaWdnZXJIYW5kbGVycygnZXJyb3InLCBoYW5kbGVyRGF0YSk7XG5cbiAgICBpZiAoX29sZE9uRXJyb3JIYW5kbGVyICYmICFfb2xkT25FcnJvckhhbmRsZXIuX19TRU5UUllfTE9BREVSX18pIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBwcmVmZXItcmVzdC1wYXJhbXNcbiAgICAgIHJldHVybiBfb2xkT25FcnJvckhhbmRsZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICB9XG5cbiAgICByZXR1cm4gZmFsc2U7XG4gIH07XG5cbiAgd29ybGR3aWRlLkdMT0JBTF9PQkoub25lcnJvci5fX1NFTlRSWV9JTlNUUlVNRU5URURfXyA9IHRydWU7XG59XG5cbmV4cG9ydHMuYWRkR2xvYmFsRXJyb3JJbnN0cnVtZW50YXRpb25IYW5kbGVyID0gYWRkR2xvYmFsRXJyb3JJbnN0cnVtZW50YXRpb25IYW5kbGVyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2xvYmFsRXJyb3IuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/globalError.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/globalUnhandledRejection.js":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/globalUnhandledRejection.js ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst worldwide = __webpack_require__(/*! ../worldwide.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/worldwide.js\");\nconst handlers = __webpack_require__(/*! ./handlers.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/handlers.js\");\n\nlet _oldOnUnhandledRejectionHandler = null;\n\n/**\n * Add an instrumentation handler for when an unhandled promise rejection is captured.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addGlobalUnhandledRejectionInstrumentationHandler(\n  handler,\n) {\n  const type = 'unhandledrejection';\n  handlers.addHandler(type, handler);\n  handlers.maybeInstrument(type, instrumentUnhandledRejection);\n}\n\nfunction instrumentUnhandledRejection() {\n  _oldOnUnhandledRejectionHandler = worldwide.GLOBAL_OBJ.onunhandledrejection;\n\n  worldwide.GLOBAL_OBJ.onunhandledrejection = function (e) {\n    const handlerData = e;\n    handlers.triggerHandlers('unhandledrejection', handlerData);\n\n    if (_oldOnUnhandledRejectionHandler && !_oldOnUnhandledRejectionHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n\n  worldwide.GLOBAL_OBJ.onunhandledrejection.__SENTRY_INSTRUMENTED__ = true;\n}\n\nexports.addGlobalUnhandledRejectionInstrumentationHandler = addGlobalUnhandledRejectionInstrumentationHandler;\n//# sourceMappingURL=globalUnhandledRejection.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9pbnN0cnVtZW50L2dsb2JhbFVuaGFuZGxlZFJlamVjdGlvbi5qcyIsIm1hcHBpbmdzIjoiQUFBQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7O0FBRTdELGtCQUFrQixtQkFBTyxDQUFDLGlJQUFpQjtBQUMzQyxpQkFBaUIsbUJBQU8sQ0FBQyx5SUFBZTs7QUFFeEM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBLHlEQUF5RDtBQUN6RCIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9pbnN0cnVtZW50L2dsb2JhbFVuaGFuZGxlZFJlamVjdGlvbi5qcz80Mjk5Il0sInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG5cbmNvbnN0IHdvcmxkd2lkZSA9IHJlcXVpcmUoJy4uL3dvcmxkd2lkZS5qcycpO1xuY29uc3QgaGFuZGxlcnMgPSByZXF1aXJlKCcuL2hhbmRsZXJzLmpzJyk7XG5cbmxldCBfb2xkT25VbmhhbmRsZWRSZWplY3Rpb25IYW5kbGVyID0gbnVsbDtcblxuLyoqXG4gKiBBZGQgYW4gaW5zdHJ1bWVudGF0aW9uIGhhbmRsZXIgZm9yIHdoZW4gYW4gdW5oYW5kbGVkIHByb21pc2UgcmVqZWN0aW9uIGlzIGNhcHR1cmVkLlxuICpcbiAqIFVzZSBhdCB5b3VyIG93biByaXNrLCB0aGlzIG1pZ2h0IGJyZWFrIHdpdGhvdXQgY2hhbmdlbG9nIG5vdGljZSwgb25seSB1c2VkIGludGVybmFsbHkuXG4gKiBAaGlkZGVuXG4gKi9cbmZ1bmN0aW9uIGFkZEdsb2JhbFVuaGFuZGxlZFJlamVjdGlvbkluc3RydW1lbnRhdGlvbkhhbmRsZXIoXG4gIGhhbmRsZXIsXG4pIHtcbiAgY29uc3QgdHlwZSA9ICd1bmhhbmRsZWRyZWplY3Rpb24nO1xuICBoYW5kbGVycy5hZGRIYW5kbGVyKHR5cGUsIGhhbmRsZXIpO1xuICBoYW5kbGVycy5tYXliZUluc3RydW1lbnQodHlwZSwgaW5zdHJ1bWVudFVuaGFuZGxlZFJlamVjdGlvbik7XG59XG5cbmZ1bmN0aW9uIGluc3RydW1lbnRVbmhhbmRsZWRSZWplY3Rpb24oKSB7XG4gIF9vbGRPblVuaGFuZGxlZFJlamVjdGlvbkhhbmRsZXIgPSB3b3JsZHdpZGUuR0xPQkFMX09CSi5vbnVuaGFuZGxlZHJlamVjdGlvbjtcblxuICB3b3JsZHdpZGUuR0xPQkFMX09CSi5vbnVuaGFuZGxlZHJlamVjdGlvbiA9IGZ1bmN0aW9uIChlKSB7XG4gICAgY29uc3QgaGFuZGxlckRhdGEgPSBlO1xuICAgIGhhbmRsZXJzLnRyaWdnZXJIYW5kbGVycygndW5oYW5kbGVkcmVqZWN0aW9uJywgaGFuZGxlckRhdGEpO1xuXG4gICAgaWYgKF9vbGRPblVuaGFuZGxlZFJlamVjdGlvbkhhbmRsZXIgJiYgIV9vbGRPblVuaGFuZGxlZFJlamVjdGlvbkhhbmRsZXIuX19TRU5UUllfTE9BREVSX18pIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBwcmVmZXItcmVzdC1wYXJhbXNcbiAgICAgIHJldHVybiBfb2xkT25VbmhhbmRsZWRSZWplY3Rpb25IYW5kbGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRydWU7XG4gIH07XG5cbiAgd29ybGR3aWRlLkdMT0JBTF9PQkoub251bmhhbmRsZWRyZWplY3Rpb24uX19TRU5UUllfSU5TVFJVTUVOVEVEX18gPSB0cnVlO1xufVxuXG5leHBvcnRzLmFkZEdsb2JhbFVuaGFuZGxlZFJlamVjdGlvbkluc3RydW1lbnRhdGlvbkhhbmRsZXIgPSBhZGRHbG9iYWxVbmhhbmRsZWRSZWplY3Rpb25JbnN0cnVtZW50YXRpb25IYW5kbGVyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2xvYmFsVW5oYW5kbGVkUmVqZWN0aW9uLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/globalUnhandledRejection.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/handlers.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/handlers.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst debugBuild = __webpack_require__(/*! ../debug-build.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/debug-build.js\");\nconst logger = __webpack_require__(/*! ../logger.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/logger.js\");\nconst stacktrace = __webpack_require__(/*! ../stacktrace.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/stacktrace.js\");\n\n// We keep the handlers globally\nconst handlers = {};\nconst instrumented = {};\n\n/** Add a handler function. */\nfunction addHandler(type, handler) {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] ).push(handler);\n}\n\n/**\n * Reset all instrumentation handlers.\n * This can be used by tests to ensure we have a clean slate of instrumentation handlers.\n */\nfunction resetInstrumentationHandlers() {\n  Object.keys(handlers).forEach(key => {\n    handlers[key ] = undefined;\n  });\n}\n\n/** Maybe run an instrumentation function, unless it was already called. */\nfunction maybeInstrument(type, instrumentFn) {\n  if (!instrumented[type]) {\n    instrumentFn();\n    instrumented[type] = true;\n  }\n}\n\n/** Trigger handlers for a given instrumentation type. */\nfunction triggerHandlers(type, data) {\n  const typeHandlers = type && handlers[type];\n  if (!typeHandlers) {\n    return;\n  }\n\n  for (const handler of typeHandlers) {\n    try {\n      handler(data);\n    } catch (e) {\n      debugBuild.DEBUG_BUILD &&\n        logger.logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${stacktrace.getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\nexports.addHandler = addHandler;\nexports.maybeInstrument = maybeInstrument;\nexports.resetInstrumentationHandlers = resetInstrumentationHandlers;\nexports.triggerHandlers = triggerHandlers;\n//# sourceMappingURL=handlers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9pbnN0cnVtZW50L2hhbmRsZXJzLmpzIiwibWFwcGluZ3MiOiJBQUFBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQzs7QUFFN0QsbUJBQW1CLG1CQUFPLENBQUMscUlBQW1CO0FBQzlDLGVBQWUsbUJBQU8sQ0FBQywySEFBYztBQUNyQyxtQkFBbUIsbUJBQU8sQ0FBQyxtSUFBa0I7O0FBRTdDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLG9FQUFvRSxLQUFLLFVBQVUsb0NBQW9DO0FBQ3ZIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsa0JBQWtCO0FBQ2xCLHVCQUF1QjtBQUN2QixvQ0FBb0M7QUFDcEMsdUJBQXVCO0FBQ3ZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLXByb2plY3QvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2luc3RydW1lbnQvaGFuZGxlcnMuanM/OThjMSJdLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG5jb25zdCBkZWJ1Z0J1aWxkID0gcmVxdWlyZSgnLi4vZGVidWctYnVpbGQuanMnKTtcbmNvbnN0IGxvZ2dlciA9IHJlcXVpcmUoJy4uL2xvZ2dlci5qcycpO1xuY29uc3Qgc3RhY2t0cmFjZSA9IHJlcXVpcmUoJy4uL3N0YWNrdHJhY2UuanMnKTtcblxuLy8gV2Uga2VlcCB0aGUgaGFuZGxlcnMgZ2xvYmFsbHlcbmNvbnN0IGhhbmRsZXJzID0ge307XG5jb25zdCBpbnN0cnVtZW50ZWQgPSB7fTtcblxuLyoqIEFkZCBhIGhhbmRsZXIgZnVuY3Rpb24uICovXG5mdW5jdGlvbiBhZGRIYW5kbGVyKHR5cGUsIGhhbmRsZXIpIHtcbiAgaGFuZGxlcnNbdHlwZV0gPSBoYW5kbGVyc1t0eXBlXSB8fCBbXTtcbiAgKGhhbmRsZXJzW3R5cGVdICkucHVzaChoYW5kbGVyKTtcbn1cblxuLyoqXG4gKiBSZXNldCBhbGwgaW5zdHJ1bWVudGF0aW9uIGhhbmRsZXJzLlxuICogVGhpcyBjYW4gYmUgdXNlZCBieSB0ZXN0cyB0byBlbnN1cmUgd2UgaGF2ZSBhIGNsZWFuIHNsYXRlIG9mIGluc3RydW1lbnRhdGlvbiBoYW5kbGVycy5cbiAqL1xuZnVuY3Rpb24gcmVzZXRJbnN0cnVtZW50YXRpb25IYW5kbGVycygpIHtcbiAgT2JqZWN0LmtleXMoaGFuZGxlcnMpLmZvckVhY2goa2V5ID0+IHtcbiAgICBoYW5kbGVyc1trZXkgXSA9IHVuZGVmaW5lZDtcbiAgfSk7XG59XG5cbi8qKiBNYXliZSBydW4gYW4gaW5zdHJ1bWVudGF0aW9uIGZ1bmN0aW9uLCB1bmxlc3MgaXQgd2FzIGFscmVhZHkgY2FsbGVkLiAqL1xuZnVuY3Rpb24gbWF5YmVJbnN0cnVtZW50KHR5cGUsIGluc3RydW1lbnRGbikge1xuICBpZiAoIWluc3RydW1lbnRlZFt0eXBlXSkge1xuICAgIGluc3RydW1lbnRGbigpO1xuICAgIGluc3RydW1lbnRlZFt0eXBlXSA9IHRydWU7XG4gIH1cbn1cblxuLyoqIFRyaWdnZXIgaGFuZGxlcnMgZm9yIGEgZ2l2ZW4gaW5zdHJ1bWVudGF0aW9uIHR5cGUuICovXG5mdW5jdGlvbiB0cmlnZ2VySGFuZGxlcnModHlwZSwgZGF0YSkge1xuICBjb25zdCB0eXBlSGFuZGxlcnMgPSB0eXBlICYmIGhhbmRsZXJzW3R5cGVdO1xuICBpZiAoIXR5cGVIYW5kbGVycykge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGZvciAoY29uc3QgaGFuZGxlciBvZiB0eXBlSGFuZGxlcnMpIHtcbiAgICB0cnkge1xuICAgICAgaGFuZGxlcihkYXRhKTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBkZWJ1Z0J1aWxkLkRFQlVHX0JVSUxEICYmXG4gICAgICAgIGxvZ2dlci5sb2dnZXIuZXJyb3IoXG4gICAgICAgICAgYEVycm9yIHdoaWxlIHRyaWdnZXJpbmcgaW5zdHJ1bWVudGF0aW9uIGhhbmRsZXIuXFxuVHlwZTogJHt0eXBlfVxcbk5hbWU6ICR7c3RhY2t0cmFjZS5nZXRGdW5jdGlvbk5hbWUoaGFuZGxlcil9XFxuRXJyb3I6YCxcbiAgICAgICAgICBlLFxuICAgICAgICApO1xuICAgIH1cbiAgfVxufVxuXG5leHBvcnRzLmFkZEhhbmRsZXIgPSBhZGRIYW5kbGVyO1xuZXhwb3J0cy5tYXliZUluc3RydW1lbnQgPSBtYXliZUluc3RydW1lbnQ7XG5leHBvcnRzLnJlc2V0SW5zdHJ1bWVudGF0aW9uSGFuZGxlcnMgPSByZXNldEluc3RydW1lbnRhdGlvbkhhbmRsZXJzO1xuZXhwb3J0cy50cmlnZ2VySGFuZGxlcnMgPSB0cmlnZ2VySGFuZGxlcnM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1oYW5kbGVycy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/handlers.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/is.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/is.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nconst objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isError(wat) {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n/**\n * Checks whether given value is an instance of the given built-in class.\n *\n * @param wat The value to be checked\n * @param className\n * @returns A boolean representing the result.\n */\nfunction isBuiltin(wat, className) {\n  return objectToString.call(wat) === `[object ${className}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isErrorEvent(wat) {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMError(wat) {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMException(wat) {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isString(wat) {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given string is parameterized\n * {@link isParameterizedString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isParameterizedString(wat) {\n  return (\n    typeof wat === 'object' &&\n    wat !== null &&\n    '__sentry_template_string__' in wat &&\n    '__sentry_template_values__' in wat\n  );\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPrimitive(wat) {\n  return wat === null || isParameterizedString(wat) || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal, or a class instance.\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPlainObject(wat) {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isEvent(wat) {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isElement(wat) {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isRegExp(wat) {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nfunction isThenable(wat) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isSyntheticEvent(wat) {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nfunction isInstanceOf(wat, base) {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n\n/**\n * Checks whether given value's type is a Vue ViewModel.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isVueViewModel(wat) {\n  // Not using Object.prototype.toString because in Vue 3 it would read the instance's Symbol(Symbol.toStringTag) property.\n  return !!(typeof wat === 'object' && wat !== null && ((wat ).__isVue || (wat )._isVue));\n}\n\nexports.isDOMError = isDOMError;\nexports.isDOMException = isDOMException;\nexports.isElement = isElement;\nexports.isError = isError;\nexports.isErrorEvent = isErrorEvent;\nexports.isEvent = isEvent;\nexports.isInstanceOf = isInstanceOf;\nexports.isParameterizedString = isParameterizedString;\nexports.isPlainObject = isPlainObject;\nexports.isPrimitive = isPrimitive;\nexports.isRegExp = isRegExp;\nexports.isString = isString;\nexports.isSyntheticEvent = isSyntheticEvent;\nexports.isThenable = isThenable;\nexports.isVueViewModel = isVueViewModel;\n//# sourceMappingURL=is.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/is.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/isBrowser.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/isBrowser.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst node = __webpack_require__(/*! ./node.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/node.js\");\nconst worldwide = __webpack_require__(/*! ./worldwide.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/worldwide.js\");\n\n/**\n * Returns true if we are in the browser.\n */\nfunction isBrowser() {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof window !== 'undefined' && (!node.isNodeEnv() || isElectronNodeRenderer());\n}\n\n// Electron renderers with nodeIntegration enabled are detected as Node.js so we specifically test for them\nfunction isElectronNodeRenderer() {\n  return (\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n    (worldwide.GLOBAL_OBJ ).process !== undefined && ((worldwide.GLOBAL_OBJ ).process ).type === 'renderer'\n  );\n}\n\nexports.isBrowser = isBrowser;\n//# sourceMappingURL=isBrowser.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9pc0Jyb3dzZXIuanMiLCJtYXBwaW5ncyI6IkFBQUEsOENBQTZDLEVBQUUsYUFBYSxFQUFDOztBQUU3RCxhQUFhLG1CQUFPLENBQUMsc0hBQVc7QUFDaEMsa0JBQWtCLG1CQUFPLENBQUMsZ0lBQWdCOztBQUUxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxpQkFBaUI7QUFDakIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0Zm9saW8tcHJvamVjdC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2VudHJ5K3V0aWxzQDguMTcuMC9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9idWlsZC9janMvaXNCcm93c2VyLmpzP2MzYWYiXSwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxuY29uc3Qgbm9kZSA9IHJlcXVpcmUoJy4vbm9kZS5qcycpO1xuY29uc3Qgd29ybGR3aWRlID0gcmVxdWlyZSgnLi93b3JsZHdpZGUuanMnKTtcblxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgd2UgYXJlIGluIHRoZSBicm93c2VyLlxuICovXG5mdW5jdGlvbiBpc0Jyb3dzZXIoKSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1yZXN0cmljdGVkLWdsb2JhbHNcbiAgcmV0dXJuIHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmICghbm9kZS5pc05vZGVFbnYoKSB8fCBpc0VsZWN0cm9uTm9kZVJlbmRlcmVyKCkpO1xufVxuXG4vLyBFbGVjdHJvbiByZW5kZXJlcnMgd2l0aCBub2RlSW50ZWdyYXRpb24gZW5hYmxlZCBhcmUgZGV0ZWN0ZWQgYXMgTm9kZS5qcyBzbyB3ZSBzcGVjaWZpY2FsbHkgdGVzdCBmb3IgdGhlbVxuZnVuY3Rpb24gaXNFbGVjdHJvbk5vZGVSZW5kZXJlcigpIHtcbiAgcmV0dXJuIChcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVuc2FmZS1tZW1iZXItYWNjZXNzLCBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG4gICAgKHdvcmxkd2lkZS5HTE9CQUxfT0JKICkucHJvY2VzcyAhPT0gdW5kZWZpbmVkICYmICgod29ybGR3aWRlLkdMT0JBTF9PQkogKS5wcm9jZXNzICkudHlwZSA9PT0gJ3JlbmRlcmVyJ1xuICApO1xufVxuXG5leHBvcnRzLmlzQnJvd3NlciA9IGlzQnJvd3Nlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWlzQnJvd3Nlci5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/isBrowser.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/logger.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/logger.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst debugBuild = __webpack_require__(/*! ./debug-build.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/debug-build.js\");\nconst worldwide = __webpack_require__(/*! ./worldwide.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/worldwide.js\");\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\nconst CONSOLE_LEVELS = [\n  'debug',\n  'info',\n  'warn',\n  'error',\n  'log',\n  'assert',\n  'trace',\n] ;\n\n/** This may be mutated by the console instrumentation. */\nconst originalConsoleMethods\n\n = {};\n\n/** JSDoc */\n\n/**\n * Temporarily disable sentry console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nfunction consoleSandbox(callback) {\n  if (!('console' in worldwide.GLOBAL_OBJ)) {\n    return callback();\n  }\n\n  const console = worldwide.GLOBAL_OBJ.console ;\n  const wrappedFuncs = {};\n\n  const wrappedLevels = Object.keys(originalConsoleMethods) ;\n\n  // Restore all wrapped console methods\n  wrappedLevels.forEach(level => {\n    const originalConsoleMethod = originalConsoleMethods[level] ;\n    wrappedFuncs[level] = console[level] ;\n    console[level] = originalConsoleMethod;\n  });\n\n  try {\n    return callback();\n  } finally {\n    // Revert restoration to wrapped state\n    wrappedLevels.forEach(level => {\n      console[level] = wrappedFuncs[level] ;\n    });\n  }\n}\n\nfunction makeLogger() {\n  let enabled = false;\n  const logger = {\n    enable: () => {\n      enabled = true;\n    },\n    disable: () => {\n      enabled = false;\n    },\n    isEnabled: () => enabled,\n  };\n\n  if (debugBuild.DEBUG_BUILD) {\n    CONSOLE_LEVELS.forEach(name => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      logger[name] = (...args) => {\n        if (enabled) {\n          consoleSandbox(() => {\n            worldwide.GLOBAL_OBJ.console[name](`${PREFIX}[${name}]:`, ...args);\n          });\n        }\n      };\n    });\n  } else {\n    CONSOLE_LEVELS.forEach(name => {\n      logger[name] = () => undefined;\n    });\n  }\n\n  return logger ;\n}\n\nconst logger = makeLogger();\n\nexports.CONSOLE_LEVELS = CONSOLE_LEVELS;\nexports.consoleSandbox = consoleSandbox;\nexports.logger = logger;\nexports.originalConsoleMethods = originalConsoleMethods;\n//# sourceMappingURL=logger.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9sb2dnZXIuanMiLCJtYXBwaW5ncyI6IkFBQUEsOENBQTZDLEVBQUUsYUFBYSxFQUFDOztBQUU3RCxtQkFBbUIsbUJBQU8sQ0FBQyxvSUFBa0I7QUFDN0Msa0JBQWtCLG1CQUFPLENBQUMsZ0lBQWdCOztBQUUxQztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrREFBa0QsT0FBTyxHQUFHLEtBQUs7QUFDakUsV0FBVztBQUNYO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsSUFBSTtBQUNKO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQSxzQkFBc0I7QUFDdEIsc0JBQXNCO0FBQ3RCLGNBQWM7QUFDZCw4QkFBOEI7QUFDOUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0Zm9saW8tcHJvamVjdC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2VudHJ5K3V0aWxzQDguMTcuMC9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9idWlsZC9janMvbG9nZ2VyLmpzPzRlM2EiXSwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxuY29uc3QgZGVidWdCdWlsZCA9IHJlcXVpcmUoJy4vZGVidWctYnVpbGQuanMnKTtcbmNvbnN0IHdvcmxkd2lkZSA9IHJlcXVpcmUoJy4vd29ybGR3aWRlLmpzJyk7XG5cbi8qKiBQcmVmaXggZm9yIGxvZ2dpbmcgc3RyaW5ncyAqL1xuY29uc3QgUFJFRklYID0gJ1NlbnRyeSBMb2dnZXIgJztcblxuY29uc3QgQ09OU09MRV9MRVZFTFMgPSBbXG4gICdkZWJ1ZycsXG4gICdpbmZvJyxcbiAgJ3dhcm4nLFxuICAnZXJyb3InLFxuICAnbG9nJyxcbiAgJ2Fzc2VydCcsXG4gICd0cmFjZScsXG5dIDtcblxuLyoqIFRoaXMgbWF5IGJlIG11dGF0ZWQgYnkgdGhlIGNvbnNvbGUgaW5zdHJ1bWVudGF0aW9uLiAqL1xuY29uc3Qgb3JpZ2luYWxDb25zb2xlTWV0aG9kc1xuXG4gPSB7fTtcblxuLyoqIEpTRG9jICovXG5cbi8qKlxuICogVGVtcG9yYXJpbHkgZGlzYWJsZSBzZW50cnkgY29uc29sZSBpbnN0cnVtZW50YXRpb25zLlxuICpcbiAqIEBwYXJhbSBjYWxsYmFjayBUaGUgZnVuY3Rpb24gdG8gcnVuIGFnYWluc3QgdGhlIG9yaWdpbmFsIGBjb25zb2xlYCBtZXNzYWdlc1xuICogQHJldHVybnMgVGhlIHJlc3VsdHMgb2YgdGhlIGNhbGxiYWNrXG4gKi9cbmZ1bmN0aW9uIGNvbnNvbGVTYW5kYm94KGNhbGxiYWNrKSB7XG4gIGlmICghKCdjb25zb2xlJyBpbiB3b3JsZHdpZGUuR0xPQkFMX09CSikpIHtcbiAgICByZXR1cm4gY2FsbGJhY2soKTtcbiAgfVxuXG4gIGNvbnN0IGNvbnNvbGUgPSB3b3JsZHdpZGUuR0xPQkFMX09CSi5jb25zb2xlIDtcbiAgY29uc3Qgd3JhcHBlZEZ1bmNzID0ge307XG5cbiAgY29uc3Qgd3JhcHBlZExldmVscyA9IE9iamVjdC5rZXlzKG9yaWdpbmFsQ29uc29sZU1ldGhvZHMpIDtcblxuICAvLyBSZXN0b3JlIGFsbCB3cmFwcGVkIGNvbnNvbGUgbWV0aG9kc1xuICB3cmFwcGVkTGV2ZWxzLmZvckVhY2gobGV2ZWwgPT4ge1xuICAgIGNvbnN0IG9yaWdpbmFsQ29uc29sZU1ldGhvZCA9IG9yaWdpbmFsQ29uc29sZU1ldGhvZHNbbGV2ZWxdIDtcbiAgICB3cmFwcGVkRnVuY3NbbGV2ZWxdID0gY29uc29sZVtsZXZlbF0gO1xuICAgIGNvbnNvbGVbbGV2ZWxdID0gb3JpZ2luYWxDb25zb2xlTWV0aG9kO1xuICB9KTtcblxuICB0cnkge1xuICAgIHJldHVybiBjYWxsYmFjaygpO1xuICB9IGZpbmFsbHkge1xuICAgIC8vIFJldmVydCByZXN0b3JhdGlvbiB0byB3cmFwcGVkIHN0YXRlXG4gICAgd3JhcHBlZExldmVscy5mb3JFYWNoKGxldmVsID0+IHtcbiAgICAgIGNvbnNvbGVbbGV2ZWxdID0gd3JhcHBlZEZ1bmNzW2xldmVsXSA7XG4gICAgfSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gbWFrZUxvZ2dlcigpIHtcbiAgbGV0IGVuYWJsZWQgPSBmYWxzZTtcbiAgY29uc3QgbG9nZ2VyID0ge1xuICAgIGVuYWJsZTogKCkgPT4ge1xuICAgICAgZW5hYmxlZCA9IHRydWU7XG4gICAgfSxcbiAgICBkaXNhYmxlOiAoKSA9PiB7XG4gICAgICBlbmFibGVkID0gZmFsc2U7XG4gICAgfSxcbiAgICBpc0VuYWJsZWQ6ICgpID0+IGVuYWJsZWQsXG4gIH07XG5cbiAgaWYgKGRlYnVnQnVpbGQuREVCVUdfQlVJTEQpIHtcbiAgICBDT05TT0xFX0xFVkVMUy5mb3JFYWNoKG5hbWUgPT4ge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbiAgICAgIGxvZ2dlcltuYW1lXSA9ICguLi5hcmdzKSA9PiB7XG4gICAgICAgIGlmIChlbmFibGVkKSB7XG4gICAgICAgICAgY29uc29sZVNhbmRib3goKCkgPT4ge1xuICAgICAgICAgICAgd29ybGR3aWRlLkdMT0JBTF9PQkouY29uc29sZVtuYW1lXShgJHtQUkVGSVh9WyR7bmFtZX1dOmAsIC4uLmFyZ3MpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH0pO1xuICB9IGVsc2Uge1xuICAgIENPTlNPTEVfTEVWRUxTLmZvckVhY2gobmFtZSA9PiB7XG4gICAgICBsb2dnZXJbbmFtZV0gPSAoKSA9PiB1bmRlZmluZWQ7XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4gbG9nZ2VyIDtcbn1cblxuY29uc3QgbG9nZ2VyID0gbWFrZUxvZ2dlcigpO1xuXG5leHBvcnRzLkNPTlNPTEVfTEVWRUxTID0gQ09OU09MRV9MRVZFTFM7XG5leHBvcnRzLmNvbnNvbGVTYW5kYm94ID0gY29uc29sZVNhbmRib3g7XG5leHBvcnRzLmxvZ2dlciA9IGxvZ2dlcjtcbmV4cG9ydHMub3JpZ2luYWxDb25zb2xlTWV0aG9kcyA9IG9yaWdpbmFsQ29uc29sZU1ldGhvZHM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1sb2dnZXIuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/logger.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/lru.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/lru.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n/** A simple Least Recently Used map */\nclass LRUMap {\n\n   constructor(  _maxSize) {this._maxSize = _maxSize;\n    this._cache = new Map();\n  }\n\n  /** Get the current size of the cache */\n   get size() {\n    return this._cache.size;\n  }\n\n  /** Get an entry or undefined if it was not in the cache. Re-inserts to update the recently used order */\n   get(key) {\n    const value = this._cache.get(key);\n    if (value === undefined) {\n      return undefined;\n    }\n    // Remove and re-insert to update the order\n    this._cache.delete(key);\n    this._cache.set(key, value);\n    return value;\n  }\n\n  /** Insert an entry and evict an older entry if we've reached maxSize */\n   set(key, value) {\n    if (this._cache.size >= this._maxSize) {\n      // keys() returns an iterator in insertion order so keys().next() gives us the oldest key\n      this._cache.delete(this._cache.keys().next().value);\n    }\n    this._cache.set(key, value);\n  }\n\n  /** Remove an entry and return the entry if it was in the cache */\n   remove(key) {\n    const value = this._cache.get(key);\n    if (value) {\n      this._cache.delete(key);\n    }\n    return value;\n  }\n\n  /** Clear all entries */\n   clear() {\n    this._cache.clear();\n  }\n\n  /** Get all the keys */\n   keys() {\n    return Array.from(this._cache.keys());\n  }\n\n  /** Get all the values */\n   values() {\n    const values = [];\n    this._cache.forEach(value => values.push(value));\n    return values;\n  }\n}\n\nexports.LRUMap = LRUMap;\n//# sourceMappingURL=lru.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9scnUuanMiLCJtYXBwaW5ncyI6IkFBQUEsOENBQTZDLEVBQUUsYUFBYSxFQUFDOztBQUU3RDtBQUNBOztBQUVBLDRCQUE0QjtBQUM1QjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGNBQWM7QUFDZCIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9scnUuanM/NmM3OCJdLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG4vKiogQSBzaW1wbGUgTGVhc3QgUmVjZW50bHkgVXNlZCBtYXAgKi9cbmNsYXNzIExSVU1hcCB7XG5cbiAgIGNvbnN0cnVjdG9yKCAgX21heFNpemUpIHt0aGlzLl9tYXhTaXplID0gX21heFNpemU7XG4gICAgdGhpcy5fY2FjaGUgPSBuZXcgTWFwKCk7XG4gIH1cblxuICAvKiogR2V0IHRoZSBjdXJyZW50IHNpemUgb2YgdGhlIGNhY2hlICovXG4gICBnZXQgc2l6ZSgpIHtcbiAgICByZXR1cm4gdGhpcy5fY2FjaGUuc2l6ZTtcbiAgfVxuXG4gIC8qKiBHZXQgYW4gZW50cnkgb3IgdW5kZWZpbmVkIGlmIGl0IHdhcyBub3QgaW4gdGhlIGNhY2hlLiBSZS1pbnNlcnRzIHRvIHVwZGF0ZSB0aGUgcmVjZW50bHkgdXNlZCBvcmRlciAqL1xuICAgZ2V0KGtleSkge1xuICAgIGNvbnN0IHZhbHVlID0gdGhpcy5fY2FjaGUuZ2V0KGtleSk7XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIC8vIFJlbW92ZSBhbmQgcmUtaW5zZXJ0IHRvIHVwZGF0ZSB0aGUgb3JkZXJcbiAgICB0aGlzLl9jYWNoZS5kZWxldGUoa2V5KTtcbiAgICB0aGlzLl9jYWNoZS5zZXQoa2V5LCB2YWx1ZSk7XG4gICAgcmV0dXJuIHZhbHVlO1xuICB9XG5cbiAgLyoqIEluc2VydCBhbiBlbnRyeSBhbmQgZXZpY3QgYW4gb2xkZXIgZW50cnkgaWYgd2UndmUgcmVhY2hlZCBtYXhTaXplICovXG4gICBzZXQoa2V5LCB2YWx1ZSkge1xuICAgIGlmICh0aGlzLl9jYWNoZS5zaXplID49IHRoaXMuX21heFNpemUpIHtcbiAgICAgIC8vIGtleXMoKSByZXR1cm5zIGFuIGl0ZXJhdG9yIGluIGluc2VydGlvbiBvcmRlciBzbyBrZXlzKCkubmV4dCgpIGdpdmVzIHVzIHRoZSBvbGRlc3Qga2V5XG4gICAgICB0aGlzLl9jYWNoZS5kZWxldGUodGhpcy5fY2FjaGUua2V5cygpLm5leHQoKS52YWx1ZSk7XG4gICAgfVxuICAgIHRoaXMuX2NhY2hlLnNldChrZXksIHZhbHVlKTtcbiAgfVxuXG4gIC8qKiBSZW1vdmUgYW4gZW50cnkgYW5kIHJldHVybiB0aGUgZW50cnkgaWYgaXQgd2FzIGluIHRoZSBjYWNoZSAqL1xuICAgcmVtb3ZlKGtleSkge1xuICAgIGNvbnN0IHZhbHVlID0gdGhpcy5fY2FjaGUuZ2V0KGtleSk7XG4gICAgaWYgKHZhbHVlKSB7XG4gICAgICB0aGlzLl9jYWNoZS5kZWxldGUoa2V5KTtcbiAgICB9XG4gICAgcmV0dXJuIHZhbHVlO1xuICB9XG5cbiAgLyoqIENsZWFyIGFsbCBlbnRyaWVzICovXG4gICBjbGVhcigpIHtcbiAgICB0aGlzLl9jYWNoZS5jbGVhcigpO1xuICB9XG5cbiAgLyoqIEdldCBhbGwgdGhlIGtleXMgKi9cbiAgIGtleXMoKSB7XG4gICAgcmV0dXJuIEFycmF5LmZyb20odGhpcy5fY2FjaGUua2V5cygpKTtcbiAgfVxuXG4gIC8qKiBHZXQgYWxsIHRoZSB2YWx1ZXMgKi9cbiAgIHZhbHVlcygpIHtcbiAgICBjb25zdCB2YWx1ZXMgPSBbXTtcbiAgICB0aGlzLl9jYWNoZS5mb3JFYWNoKHZhbHVlID0+IHZhbHVlcy5wdXNoKHZhbHVlKSk7XG4gICAgcmV0dXJuIHZhbHVlcztcbiAgfVxufVxuXG5leHBvcnRzLkxSVU1hcCA9IExSVU1hcDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxydS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/lru.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/memo.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/memo.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * Helper to decycle json objects\n */\nfunction memoBuilder() {\n  const hasWeakSet = typeof WeakSet === 'function';\n  const inner = hasWeakSet ? new WeakSet() : [];\n  function memoize(obj) {\n    if (hasWeakSet) {\n      if (inner.has(obj)) {\n        return true;\n      }\n      inner.add(obj);\n      return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let i = 0; i < inner.length; i++) {\n      const value = inner[i];\n      if (value === obj) {\n        return true;\n      }\n    }\n    inner.push(obj);\n    return false;\n  }\n\n  function unmemoize(obj) {\n    if (hasWeakSet) {\n      inner.delete(obj);\n    } else {\n      for (let i = 0; i < inner.length; i++) {\n        if (inner[i] === obj) {\n          inner.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n  return [memoize, unmemoize];\n}\n\nexports.memoBuilder = memoBuilder;\n//# sourceMappingURL=memo.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9tZW1vLmpzIiwibWFwcGluZ3MiOiJBQUFBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQzs7QUFFN0Q7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0Isa0JBQWtCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOLHNCQUFzQixrQkFBa0I7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLG1CQUFtQjtBQUNuQiIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9tZW1vLmpzPzkzYjIiXSwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxuLyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVuc2FmZS1tZW1iZXItYWNjZXNzICovXG4vKiBlc2xpbnQtZGlzYWJsZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55ICovXG5cbi8qKlxuICogSGVscGVyIHRvIGRlY3ljbGUganNvbiBvYmplY3RzXG4gKi9cbmZ1bmN0aW9uIG1lbW9CdWlsZGVyKCkge1xuICBjb25zdCBoYXNXZWFrU2V0ID0gdHlwZW9mIFdlYWtTZXQgPT09ICdmdW5jdGlvbic7XG4gIGNvbnN0IGlubmVyID0gaGFzV2Vha1NldCA/IG5ldyBXZWFrU2V0KCkgOiBbXTtcbiAgZnVuY3Rpb24gbWVtb2l6ZShvYmopIHtcbiAgICBpZiAoaGFzV2Vha1NldCkge1xuICAgICAgaWYgKGlubmVyLmhhcyhvYmopKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuICAgICAgaW5uZXIuYWRkKG9iaik7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvcHJlZmVyLWZvci1vZlxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgaW5uZXIubGVuZ3RoOyBpKyspIHtcbiAgICAgIGNvbnN0IHZhbHVlID0gaW5uZXJbaV07XG4gICAgICBpZiAodmFsdWUgPT09IG9iaikge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cbiAgICB9XG4gICAgaW5uZXIucHVzaChvYmopO1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHVubWVtb2l6ZShvYmopIHtcbiAgICBpZiAoaGFzV2Vha1NldCkge1xuICAgICAgaW5uZXIuZGVsZXRlKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgaW5uZXIubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKGlubmVyW2ldID09PSBvYmopIHtcbiAgICAgICAgICBpbm5lci5zcGxpY2UoaSwgMSk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgcmV0dXJuIFttZW1vaXplLCB1bm1lbW9pemVdO1xufVxuXG5leHBvcnRzLm1lbW9CdWlsZGVyID0gbWVtb0J1aWxkZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tZW1vLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/memo.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/misc.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/misc.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst object = __webpack_require__(/*! ./object.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/object.js\");\nconst string = __webpack_require__(/*! ./string.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/string.js\");\nconst worldwide = __webpack_require__(/*! ./worldwide.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/worldwide.js\");\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nfunction uuid4() {\n  const gbl = worldwide.GLOBAL_OBJ ;\n  const crypto = gbl.crypto || gbl.msCrypto;\n\n  let getRandomByte = () => Math.random() * 16;\n  try {\n    if (crypto && crypto.randomUUID) {\n      return crypto.randomUUID().replace(/-/g, '');\n    }\n    if (crypto && crypto.getRandomValues) {\n      getRandomByte = () => {\n        // crypto.getRandomValues might return undefined instead of the typed array\n        // in old Chromium versions (e.g. 23.0.1235.0 (151422))\n        // However, `typedArray` is still filled in-place.\n        // @see https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues#typedarray\n        const typedArray = new Uint8Array(1);\n        crypto.getRandomValues(typedArray);\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return typedArray[0];\n      };\n    }\n  } catch (_) {\n    // some runtimes can crash invoking crypto\n    // https://github.com/getsentry/sentry-javascript/issues/8935\n  }\n\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  // Concatenating the following numbers as strings results in '10000000100040008000100000000000'\n  return (([1e7] ) + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, c =>\n    // eslint-disable-next-line no-bitwise\n    ((c ) ^ ((getRandomByte() & 15) >> ((c ) / 4))).toString(16),\n  );\n}\n\nfunction getFirstException(event) {\n  return event.exception && event.exception.values ? event.exception.values[0] : undefined;\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nfunction getEventDescription(event) {\n  const { message, event_id: eventId } = event;\n  if (message) {\n    return message;\n  }\n\n  const firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return `${firstException.type}: ${firstException.value}`;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nfunction addExceptionTypeValue(event, value, type) {\n  const exception = (event.exception = event.exception || {});\n  const values = (exception.values = exception.values || []);\n  const firstException = (values[0] = values[0] || {});\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nfunction addExceptionMechanism(event, newMechanism) {\n  const firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n\n  const defaultMechanism = { type: 'generic', handled: true };\n  const currentMechanism = firstException.mechanism;\n  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\n\n  if (newMechanism && 'data' in newMechanism) {\n    const mergedData = { ...(currentMechanism && currentMechanism.data), ...newMechanism.data };\n    firstException.mechanism.data = mergedData;\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\n\nfunction _parseInt(input) {\n  return parseInt(input || '', 10);\n}\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nfunction parseSemver(input) {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = _parseInt(match[1]);\n  const minor = _parseInt(match[2]);\n  const patch = _parseInt(match[3]);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nfunction addContextToFrame(lines, frame, linesOfContext = 5) {\n  // When there is no line number in the frame, attaching context is nonsensical and will even break grouping\n  if (frame.lineno === undefined) {\n    return;\n  }\n\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines - 1, frame.lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line) => string.snipLine(line, 0));\n\n  // We guard here to ensure this is not larger than the existing number of lines\n  const lineIndex = Math.min(maxLines - 1, sourceLine);\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  frame.context_line = string.snipLine(lines[lineIndex], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line) => string.snipLine(line, 0));\n}\n\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nfunction checkOrSetAlreadyCaught(exception) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (exception && (exception ).__sentry_captured__) {\n    return true;\n  }\n\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    object.addNonEnumerableProperty(exception , '__sentry_captured__', true);\n  } catch (err) {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n\n  return false;\n}\n\n/**\n * Checks whether the given input is already an array, and if it isn't, wraps it in one.\n *\n * @param maybeArray Input to turn into an array, if necessary\n * @returns The input, if already an array, or an array with the input as the only element, if not\n */\nfunction arrayify(maybeArray) {\n  return Array.isArray(maybeArray) ? maybeArray : [maybeArray];\n}\n\nexports.addContextToFrame = addContextToFrame;\nexports.addExceptionMechanism = addExceptionMechanism;\nexports.addExceptionTypeValue = addExceptionTypeValue;\nexports.arrayify = arrayify;\nexports.checkOrSetAlreadyCaught = checkOrSetAlreadyCaught;\nexports.getEventDescription = getEventDescription;\nexports.parseSemver = parseSemver;\nexports.uuid4 = uuid4;\n//# sourceMappingURL=misc.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/misc.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/node-stack-trace.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/node-stack-trace.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst stacktrace = __webpack_require__(/*! ./stacktrace.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/stacktrace.js\");\n\n/**\n * Does this filename look like it's part of the app code?\n */\nfunction filenameIsInApp(filename, isNative = false) {\n  const isInternal =\n    isNative ||\n    (filename &&\n      // It's not internal if it's an absolute linux path\n      !filename.startsWith('/') &&\n      // It's not internal if it's an absolute windows path\n      !filename.match(/^[A-Z]:/) &&\n      // It's not internal if the path is starting with a dot\n      !filename.startsWith('.') &&\n      // It's not internal if the frame has a protocol. In node, this is usually the case if the file got pre-processed with a bundler like webpack\n      !filename.match(/^[a-zA-Z]([a-zA-Z0-9.\\-+])*:\\/\\//)); // Schema from: https://stackoverflow.com/a/3641782\n\n  // in_app is all that's not an internal Node function or a module within node_modules\n  // note that isNative appears to return true even for node core libraries\n  // see https://github.com/getsentry/raven-node/issues/176\n\n  return !isInternal && filename !== undefined && !filename.includes('node_modules/');\n}\n\n/** Node Stack line parser */\nfunction node(getModule) {\n  const FILENAME_MATCH = /^\\s*[-]{4,}$/;\n  const FULL_MATCH = /at (?:async )?(?:(.+?)\\s+\\()?(?:(.+):(\\d+):(\\d+)?|([^)]+))\\)?/;\n\n  // eslint-disable-next-line complexity\n  return (line) => {\n    const lineMatch = line.match(FULL_MATCH);\n\n    if (lineMatch) {\n      let object;\n      let method;\n      let functionName;\n      let typeName;\n      let methodName;\n\n      if (lineMatch[1]) {\n        functionName = lineMatch[1];\n\n        let methodStart = functionName.lastIndexOf('.');\n        if (functionName[methodStart - 1] === '.') {\n          methodStart--;\n        }\n\n        if (methodStart > 0) {\n          object = functionName.slice(0, methodStart);\n          method = functionName.slice(methodStart + 1);\n          const objectEnd = object.indexOf('.Module');\n          if (objectEnd > 0) {\n            functionName = functionName.slice(objectEnd + 1);\n            object = object.slice(0, objectEnd);\n          }\n        }\n        typeName = undefined;\n      }\n\n      if (method) {\n        typeName = object;\n        methodName = method;\n      }\n\n      if (method === '<anonymous>') {\n        methodName = undefined;\n        functionName = undefined;\n      }\n\n      if (functionName === undefined) {\n        methodName = methodName || stacktrace.UNKNOWN_FUNCTION;\n        functionName = typeName ? `${typeName}.${methodName}` : methodName;\n      }\n\n      let filename = lineMatch[2] && lineMatch[2].startsWith('file://') ? lineMatch[2].slice(7) : lineMatch[2];\n      const isNative = lineMatch[5] === 'native';\n\n      // If it's a Windows path, trim the leading slash so that `/C:/foo` becomes `C:/foo`\n      if (filename && filename.match(/\\/[A-Z]:/)) {\n        filename = filename.slice(1);\n      }\n\n      if (!filename && lineMatch[5] && !isNative) {\n        filename = lineMatch[5];\n      }\n\n      return {\n        filename,\n        module: getModule ? getModule(filename) : undefined,\n        function: functionName,\n        lineno: _parseIntOrUndefined(lineMatch[3]),\n        colno: _parseIntOrUndefined(lineMatch[4]),\n        in_app: filenameIsInApp(filename || '', isNative),\n      };\n    }\n\n    if (line.match(FILENAME_MATCH)) {\n      return {\n        filename: line,\n      };\n    }\n\n    return undefined;\n  };\n}\n\n/**\n * Node.js stack line parser\n *\n * This is in @sentry/utils so it can be used from the Electron SDK in the browser for when `nodeIntegration == true`.\n * This allows it to be used without referencing or importing any node specific code which causes bundlers to complain\n */\nfunction nodeStackLineParser(getModule) {\n  return [90, node(getModule)];\n}\n\nfunction _parseIntOrUndefined(input) {\n  return parseInt(input || '', 10) || undefined;\n}\n\nexports.filenameIsInApp = filenameIsInApp;\nexports.node = node;\nexports.nodeStackLineParser = nodeStackLineParser;\n//# sourceMappingURL=node-stack-trace.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9ub2RlLXN0YWNrLXRyYWNlLmpzIiwibWFwcGluZ3MiOiJBQUFBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQzs7QUFFN0QsbUJBQW1CLG1CQUFPLENBQUMsa0lBQWlCOztBQUU1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNERBQTREOztBQUU1RDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esa0NBQWtDLEdBQUc7QUFDckM7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHFDQUFxQyxTQUFTLEdBQUcsV0FBVztBQUM1RDs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSx1QkFBdUI7QUFDdkIsWUFBWTtBQUNaLDJCQUEyQjtBQUMzQiIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9ub2RlLXN0YWNrLXRyYWNlLmpzPzU2MDgiXSwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxuY29uc3Qgc3RhY2t0cmFjZSA9IHJlcXVpcmUoJy4vc3RhY2t0cmFjZS5qcycpO1xuXG4vKipcbiAqIERvZXMgdGhpcyBmaWxlbmFtZSBsb29rIGxpa2UgaXQncyBwYXJ0IG9mIHRoZSBhcHAgY29kZT9cbiAqL1xuZnVuY3Rpb24gZmlsZW5hbWVJc0luQXBwKGZpbGVuYW1lLCBpc05hdGl2ZSA9IGZhbHNlKSB7XG4gIGNvbnN0IGlzSW50ZXJuYWwgPVxuICAgIGlzTmF0aXZlIHx8XG4gICAgKGZpbGVuYW1lICYmXG4gICAgICAvLyBJdCdzIG5vdCBpbnRlcm5hbCBpZiBpdCdzIGFuIGFic29sdXRlIGxpbnV4IHBhdGhcbiAgICAgICFmaWxlbmFtZS5zdGFydHNXaXRoKCcvJykgJiZcbiAgICAgIC8vIEl0J3Mgbm90IGludGVybmFsIGlmIGl0J3MgYW4gYWJzb2x1dGUgd2luZG93cyBwYXRoXG4gICAgICAhZmlsZW5hbWUubWF0Y2goL15bQS1aXTovKSAmJlxuICAgICAgLy8gSXQncyBub3QgaW50ZXJuYWwgaWYgdGhlIHBhdGggaXMgc3RhcnRpbmcgd2l0aCBhIGRvdFxuICAgICAgIWZpbGVuYW1lLnN0YXJ0c1dpdGgoJy4nKSAmJlxuICAgICAgLy8gSXQncyBub3QgaW50ZXJuYWwgaWYgdGhlIGZyYW1lIGhhcyBhIHByb3RvY29sLiBJbiBub2RlLCB0aGlzIGlzIHVzdWFsbHkgdGhlIGNhc2UgaWYgdGhlIGZpbGUgZ290IHByZS1wcm9jZXNzZWQgd2l0aCBhIGJ1bmRsZXIgbGlrZSB3ZWJwYWNrXG4gICAgICAhZmlsZW5hbWUubWF0Y2goL15bYS16QS1aXShbYS16QS1aMC05LlxcLStdKSo6XFwvXFwvLykpOyAvLyBTY2hlbWEgZnJvbTogaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9hLzM2NDE3ODJcblxuICAvLyBpbl9hcHAgaXMgYWxsIHRoYXQncyBub3QgYW4gaW50ZXJuYWwgTm9kZSBmdW5jdGlvbiBvciBhIG1vZHVsZSB3aXRoaW4gbm9kZV9tb2R1bGVzXG4gIC8vIG5vdGUgdGhhdCBpc05hdGl2ZSBhcHBlYXJzIHRvIHJldHVybiB0cnVlIGV2ZW4gZm9yIG5vZGUgY29yZSBsaWJyYXJpZXNcbiAgLy8gc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9nZXRzZW50cnkvcmF2ZW4tbm9kZS9pc3N1ZXMvMTc2XG5cbiAgcmV0dXJuICFpc0ludGVybmFsICYmIGZpbGVuYW1lICE9PSB1bmRlZmluZWQgJiYgIWZpbGVuYW1lLmluY2x1ZGVzKCdub2RlX21vZHVsZXMvJyk7XG59XG5cbi8qKiBOb2RlIFN0YWNrIGxpbmUgcGFyc2VyICovXG5mdW5jdGlvbiBub2RlKGdldE1vZHVsZSkge1xuICBjb25zdCBGSUxFTkFNRV9NQVRDSCA9IC9eXFxzKlstXXs0LH0kLztcbiAgY29uc3QgRlVMTF9NQVRDSCA9IC9hdCAoPzphc3luYyApPyg/OiguKz8pXFxzK1xcKCk/KD86KC4rKTooXFxkKyk6KFxcZCspP3woW14pXSspKVxcKT8vO1xuXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBjb21wbGV4aXR5XG4gIHJldHVybiAobGluZSkgPT4ge1xuICAgIGNvbnN0IGxpbmVNYXRjaCA9IGxpbmUubWF0Y2goRlVMTF9NQVRDSCk7XG5cbiAgICBpZiAobGluZU1hdGNoKSB7XG4gICAgICBsZXQgb2JqZWN0O1xuICAgICAgbGV0IG1ldGhvZDtcbiAgICAgIGxldCBmdW5jdGlvbk5hbWU7XG4gICAgICBsZXQgdHlwZU5hbWU7XG4gICAgICBsZXQgbWV0aG9kTmFtZTtcblxuICAgICAgaWYgKGxpbmVNYXRjaFsxXSkge1xuICAgICAgICBmdW5jdGlvbk5hbWUgPSBsaW5lTWF0Y2hbMV07XG5cbiAgICAgICAgbGV0IG1ldGhvZFN0YXJ0ID0gZnVuY3Rpb25OYW1lLmxhc3RJbmRleE9mKCcuJyk7XG4gICAgICAgIGlmIChmdW5jdGlvbk5hbWVbbWV0aG9kU3RhcnQgLSAxXSA9PT0gJy4nKSB7XG4gICAgICAgICAgbWV0aG9kU3RhcnQtLTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChtZXRob2RTdGFydCA+IDApIHtcbiAgICAgICAgICBvYmplY3QgPSBmdW5jdGlvbk5hbWUuc2xpY2UoMCwgbWV0aG9kU3RhcnQpO1xuICAgICAgICAgIG1ldGhvZCA9IGZ1bmN0aW9uTmFtZS5zbGljZShtZXRob2RTdGFydCArIDEpO1xuICAgICAgICAgIGNvbnN0IG9iamVjdEVuZCA9IG9iamVjdC5pbmRleE9mKCcuTW9kdWxlJyk7XG4gICAgICAgICAgaWYgKG9iamVjdEVuZCA+IDApIHtcbiAgICAgICAgICAgIGZ1bmN0aW9uTmFtZSA9IGZ1bmN0aW9uTmFtZS5zbGljZShvYmplY3RFbmQgKyAxKTtcbiAgICAgICAgICAgIG9iamVjdCA9IG9iamVjdC5zbGljZSgwLCBvYmplY3RFbmQpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB0eXBlTmFtZSA9IHVuZGVmaW5lZDtcbiAgICAgIH1cblxuICAgICAgaWYgKG1ldGhvZCkge1xuICAgICAgICB0eXBlTmFtZSA9IG9iamVjdDtcbiAgICAgICAgbWV0aG9kTmFtZSA9IG1ldGhvZDtcbiAgICAgIH1cblxuICAgICAgaWYgKG1ldGhvZCA9PT0gJzxhbm9ueW1vdXM+Jykge1xuICAgICAgICBtZXRob2ROYW1lID0gdW5kZWZpbmVkO1xuICAgICAgICBmdW5jdGlvbk5hbWUgPSB1bmRlZmluZWQ7XG4gICAgICB9XG5cbiAgICAgIGlmIChmdW5jdGlvbk5hbWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICBtZXRob2ROYW1lID0gbWV0aG9kTmFtZSB8fCBzdGFja3RyYWNlLlVOS05PV05fRlVOQ1RJT047XG4gICAgICAgIGZ1bmN0aW9uTmFtZSA9IHR5cGVOYW1lID8gYCR7dHlwZU5hbWV9LiR7bWV0aG9kTmFtZX1gIDogbWV0aG9kTmFtZTtcbiAgICAgIH1cblxuICAgICAgbGV0IGZpbGVuYW1lID0gbGluZU1hdGNoWzJdICYmIGxpbmVNYXRjaFsyXS5zdGFydHNXaXRoKCdmaWxlOi8vJykgPyBsaW5lTWF0Y2hbMl0uc2xpY2UoNykgOiBsaW5lTWF0Y2hbMl07XG4gICAgICBjb25zdCBpc05hdGl2ZSA9IGxpbmVNYXRjaFs1XSA9PT0gJ25hdGl2ZSc7XG5cbiAgICAgIC8vIElmIGl0J3MgYSBXaW5kb3dzIHBhdGgsIHRyaW0gdGhlIGxlYWRpbmcgc2xhc2ggc28gdGhhdCBgL0M6L2Zvb2AgYmVjb21lcyBgQzovZm9vYFxuICAgICAgaWYgKGZpbGVuYW1lICYmIGZpbGVuYW1lLm1hdGNoKC9cXC9bQS1aXTovKSkge1xuICAgICAgICBmaWxlbmFtZSA9IGZpbGVuYW1lLnNsaWNlKDEpO1xuICAgICAgfVxuXG4gICAgICBpZiAoIWZpbGVuYW1lICYmIGxpbmVNYXRjaFs1XSAmJiAhaXNOYXRpdmUpIHtcbiAgICAgICAgZmlsZW5hbWUgPSBsaW5lTWF0Y2hbNV07XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIGZpbGVuYW1lLFxuICAgICAgICBtb2R1bGU6IGdldE1vZHVsZSA/IGdldE1vZHVsZShmaWxlbmFtZSkgOiB1bmRlZmluZWQsXG4gICAgICAgIGZ1bmN0aW9uOiBmdW5jdGlvbk5hbWUsXG4gICAgICAgIGxpbmVubzogX3BhcnNlSW50T3JVbmRlZmluZWQobGluZU1hdGNoWzNdKSxcbiAgICAgICAgY29sbm86IF9wYXJzZUludE9yVW5kZWZpbmVkKGxpbmVNYXRjaFs0XSksXG4gICAgICAgIGluX2FwcDogZmlsZW5hbWVJc0luQXBwKGZpbGVuYW1lIHx8ICcnLCBpc05hdGl2ZSksXG4gICAgICB9O1xuICAgIH1cblxuICAgIGlmIChsaW5lLm1hdGNoKEZJTEVOQU1FX01BVENIKSkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgZmlsZW5hbWU6IGxpbmUsXG4gICAgICB9O1xuICAgIH1cblxuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH07XG59XG5cbi8qKlxuICogTm9kZS5qcyBzdGFjayBsaW5lIHBhcnNlclxuICpcbiAqIFRoaXMgaXMgaW4gQHNlbnRyeS91dGlscyBzbyBpdCBjYW4gYmUgdXNlZCBmcm9tIHRoZSBFbGVjdHJvbiBTREsgaW4gdGhlIGJyb3dzZXIgZm9yIHdoZW4gYG5vZGVJbnRlZ3JhdGlvbiA9PSB0cnVlYC5cbiAqIFRoaXMgYWxsb3dzIGl0IHRvIGJlIHVzZWQgd2l0aG91dCByZWZlcmVuY2luZyBvciBpbXBvcnRpbmcgYW55IG5vZGUgc3BlY2lmaWMgY29kZSB3aGljaCBjYXVzZXMgYnVuZGxlcnMgdG8gY29tcGxhaW5cbiAqL1xuZnVuY3Rpb24gbm9kZVN0YWNrTGluZVBhcnNlcihnZXRNb2R1bGUpIHtcbiAgcmV0dXJuIFs5MCwgbm9kZShnZXRNb2R1bGUpXTtcbn1cblxuZnVuY3Rpb24gX3BhcnNlSW50T3JVbmRlZmluZWQoaW5wdXQpIHtcbiAgcmV0dXJuIHBhcnNlSW50KGlucHV0IHx8ICcnLCAxMCkgfHwgdW5kZWZpbmVkO1xufVxuXG5leHBvcnRzLmZpbGVuYW1lSXNJbkFwcCA9IGZpbGVuYW1lSXNJbkFwcDtcbmV4cG9ydHMubm9kZSA9IG5vZGU7XG5leHBvcnRzLm5vZGVTdGFja0xpbmVQYXJzZXIgPSBub2RlU3RhY2tMaW5lUGFyc2VyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bm9kZS1zdGFjay10cmFjZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/node-stack-trace.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/node.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/node.js ***!
  \**********************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst env = __webpack_require__(/*! ./env.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/env.js\");\n\n/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\n\n\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nfunction isNodeEnv() {\n  // explicitly check for browser bundles as those can be optimized statically\n  // by terser/rollup.\n  return (\n    !env.isBrowserBundle() &&\n    Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'\n  );\n}\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction dynamicRequire(mod, request) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return mod.require(request);\n}\n\n/**\n * Helper for dynamically loading module that should work with linked dependencies.\n * The problem is that we _should_ be using `require(require.resolve(moduleName, { paths: [cwd()] }))`\n * However it's _not possible_ to do that with Webpack, as it has to know all the dependencies during\n * build time. `require.resolve` is also not available in any other way, so we cannot create,\n * a fake helper like we do with `dynamicRequire`.\n *\n * We always prefer to use local package, thus the value is not returned early from each `try/catch` block.\n * That is to mimic the behavior of `require.resolve` exactly.\n *\n * @param moduleName module name to require\n * @returns possibly required module\n */\nfunction loadModule(moduleName) {\n  let mod;\n\n  try {\n    mod = dynamicRequire(module, moduleName);\n  } catch (e) {\n    // no-empty\n  }\n\n  try {\n    const { cwd } = dynamicRequire(module, 'process');\n    mod = dynamicRequire(module, `${cwd()}/node_modules/${moduleName}`) ;\n  } catch (e) {\n    // no-empty\n  }\n\n  return mod;\n}\n\nexports.dynamicRequire = dynamicRequire;\nexports.isNodeEnv = isNodeEnv;\nexports.loadModule = loadModule;\n//# sourceMappingURL=node.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9ub2RlLmpzIiwibWFwcGluZ3MiOiI7QUFBQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7O0FBRTdELFlBQVksbUJBQU8sQ0FBQyxvSEFBVTs7QUFFOUI7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxtRkFBbUYsZ0JBQWdCO0FBQ25HO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7QUFDQSxZQUFZLE1BQU07QUFDbEIsb0NBQW9DLE1BQU0sZ0JBQWdCLFdBQVc7QUFDckUsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxzQkFBc0I7QUFDdEIsaUJBQWlCO0FBQ2pCLGtCQUFrQjtBQUNsQiIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9ub2RlLmpzPzM3OTAiXSwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxuY29uc3QgZW52ID0gcmVxdWlyZSgnLi9lbnYuanMnKTtcblxuLyoqXG4gKiBOT1RFOiBJbiBvcmRlciB0byBhdm9pZCBjaXJjdWxhciBkZXBlbmRlbmNpZXMsIGlmIHlvdSBhZGQgYSBmdW5jdGlvbiB0byB0aGlzIG1vZHVsZSBhbmQgaXQgbmVlZHMgdG8gcHJpbnQgc29tZXRoaW5nLFxuICogeW91IG11c3QgZWl0aGVyIGEpIHVzZSBgY29uc29sZS5sb2dgIHJhdGhlciB0aGFuIHRoZSBsb2dnZXIsIG9yIGIpIHB1dCB5b3VyIGZ1bmN0aW9uIGVsc2V3aGVyZS5cbiAqL1xuXG5cbi8qKlxuICogQ2hlY2tzIHdoZXRoZXIgd2UncmUgaW4gdGhlIE5vZGUuanMgb3IgQnJvd3NlciBlbnZpcm9ubWVudFxuICpcbiAqIEByZXR1cm5zIEFuc3dlciB0byBnaXZlbiBxdWVzdGlvblxuICovXG5mdW5jdGlvbiBpc05vZGVFbnYoKSB7XG4gIC8vIGV4cGxpY2l0bHkgY2hlY2sgZm9yIGJyb3dzZXIgYnVuZGxlcyBhcyB0aG9zZSBjYW4gYmUgb3B0aW1pemVkIHN0YXRpY2FsbHlcbiAgLy8gYnkgdGVyc2VyL3JvbGx1cC5cbiAgcmV0dXJuIChcbiAgICAhZW52LmlzQnJvd3NlckJ1bmRsZSgpICYmXG4gICAgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHR5cGVvZiBwcm9jZXNzICE9PSAndW5kZWZpbmVkJyA/IHByb2Nlc3MgOiAwKSA9PT0gJ1tvYmplY3QgcHJvY2Vzc10nXG4gICk7XG59XG5cbi8qKlxuICogUmVxdWlyZXMgYSBtb2R1bGUgd2hpY2ggaXMgcHJvdGVjdGVkIGFnYWluc3QgYnVuZGxlciBtaW5pZmljYXRpb24uXG4gKlxuICogQHBhcmFtIHJlcXVlc3QgVGhlIG1vZHVsZSBwYXRoIHRvIHJlc29sdmVcbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbmZ1bmN0aW9uIGR5bmFtaWNSZXF1aXJlKG1vZCwgcmVxdWVzdCkge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVuc2FmZS1tZW1iZXItYWNjZXNzXG4gIHJldHVybiBtb2QucmVxdWlyZShyZXF1ZXN0KTtcbn1cblxuLyoqXG4gKiBIZWxwZXIgZm9yIGR5bmFtaWNhbGx5IGxvYWRpbmcgbW9kdWxlIHRoYXQgc2hvdWxkIHdvcmsgd2l0aCBsaW5rZWQgZGVwZW5kZW5jaWVzLlxuICogVGhlIHByb2JsZW0gaXMgdGhhdCB3ZSBfc2hvdWxkXyBiZSB1c2luZyBgcmVxdWlyZShyZXF1aXJlLnJlc29sdmUobW9kdWxlTmFtZSwgeyBwYXRoczogW2N3ZCgpXSB9KSlgXG4gKiBIb3dldmVyIGl0J3MgX25vdCBwb3NzaWJsZV8gdG8gZG8gdGhhdCB3aXRoIFdlYnBhY2ssIGFzIGl0IGhhcyB0byBrbm93IGFsbCB0aGUgZGVwZW5kZW5jaWVzIGR1cmluZ1xuICogYnVpbGQgdGltZS4gYHJlcXVpcmUucmVzb2x2ZWAgaXMgYWxzbyBub3QgYXZhaWxhYmxlIGluIGFueSBvdGhlciB3YXksIHNvIHdlIGNhbm5vdCBjcmVhdGUsXG4gKiBhIGZha2UgaGVscGVyIGxpa2Ugd2UgZG8gd2l0aCBgZHluYW1pY1JlcXVpcmVgLlxuICpcbiAqIFdlIGFsd2F5cyBwcmVmZXIgdG8gdXNlIGxvY2FsIHBhY2thZ2UsIHRodXMgdGhlIHZhbHVlIGlzIG5vdCByZXR1cm5lZCBlYXJseSBmcm9tIGVhY2ggYHRyeS9jYXRjaGAgYmxvY2suXG4gKiBUaGF0IGlzIHRvIG1pbWljIHRoZSBiZWhhdmlvciBvZiBgcmVxdWlyZS5yZXNvbHZlYCBleGFjdGx5LlxuICpcbiAqIEBwYXJhbSBtb2R1bGVOYW1lIG1vZHVsZSBuYW1lIHRvIHJlcXVpcmVcbiAqIEByZXR1cm5zIHBvc3NpYmx5IHJlcXVpcmVkIG1vZHVsZVxuICovXG5mdW5jdGlvbiBsb2FkTW9kdWxlKG1vZHVsZU5hbWUpIHtcbiAgbGV0IG1vZDtcblxuICB0cnkge1xuICAgIG1vZCA9IGR5bmFtaWNSZXF1aXJlKG1vZHVsZSwgbW9kdWxlTmFtZSk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICAvLyBuby1lbXB0eVxuICB9XG5cbiAgdHJ5IHtcbiAgICBjb25zdCB7IGN3ZCB9ID0gZHluYW1pY1JlcXVpcmUobW9kdWxlLCAncHJvY2VzcycpO1xuICAgIG1vZCA9IGR5bmFtaWNSZXF1aXJlKG1vZHVsZSwgYCR7Y3dkKCl9L25vZGVfbW9kdWxlcy8ke21vZHVsZU5hbWV9YCkgO1xuICB9IGNhdGNoIChlKSB7XG4gICAgLy8gbm8tZW1wdHlcbiAgfVxuXG4gIHJldHVybiBtb2Q7XG59XG5cbmV4cG9ydHMuZHluYW1pY1JlcXVpcmUgPSBkeW5hbWljUmVxdWlyZTtcbmV4cG9ydHMuaXNOb2RlRW52ID0gaXNOb2RlRW52O1xuZXhwb3J0cy5sb2FkTW9kdWxlID0gbG9hZE1vZHVsZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW5vZGUuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/node.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/normalize.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/normalize.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst is = __webpack_require__(/*! ./is.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/is.js\");\nconst memo = __webpack_require__(/*! ./memo.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/memo.js\");\nconst object = __webpack_require__(/*! ./object.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/object.js\");\nconst stacktrace = __webpack_require__(/*! ./stacktrace.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/stacktrace.js\");\n\n/**\n * Recursively normalizes the given object.\n *\n * - Creates a copy to prevent original input mutation\n * - Skips non-enumerable properties\n * - When stringifying, calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializable values (`undefined`/`NaN`/functions) to serializable format\n * - Translates known global objects/classes to a string representations\n * - Takes care of `Error` object serialization\n * - Optionally limits depth of final output\n * - Optionally limits number of properties/elements included in any single object/array\n *\n * @param input The object to be normalized.\n * @param depth The max depth to which to normalize the object. (Anything deeper stringified whole.)\n * @param maxProperties The max number of elements or properties to be included in any single array or\n * object in the normallized output.\n * @returns A normalized version of the object, or `\"**non-serializable**\"` if any errors are thrown during normalization.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction normalize(input, depth = 100, maxProperties = +Infinity) {\n  try {\n    // since we're at the outermost level, we don't provide a key\n    return visit('', input, depth, maxProperties);\n  } catch (err) {\n    return { ERROR: `**non-serializable** (${err})` };\n  }\n}\n\n/** JSDoc */\nfunction normalizeToSize(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  object,\n  // Default Node.js REPL depth\n  depth = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize = 100 * 1024,\n) {\n  const normalized = normalize(object, depth);\n\n  if (jsonSize(normalized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return normalized ;\n}\n\n/**\n * Visits a node to perform normalization on it\n *\n * @param key The key corresponding to the given node\n * @param value The node to be visited\n * @param depth Optional number indicating the maximum recursion depth\n * @param maxProperties Optional maximum number of properties/elements included in any single object/array\n * @param memo Optional Memo class handling decycling\n */\nfunction visit(\n  key,\n  value,\n  depth = +Infinity,\n  maxProperties = +Infinity,\n  memo$1 = memo.memoBuilder(),\n) {\n  const [memoize, unmemoize] = memo$1;\n\n  // Get the simple cases out of the way first\n  if (\n    value == null || // this matches null and undefined -> eqeq not eqeqeq\n    (['number', 'boolean', 'string'].includes(typeof value) && !Number.isNaN(value))\n  ) {\n    return value ;\n  }\n\n  const stringified = stringifyValue(key, value);\n\n  // Anything we could potentially dig into more (objects or arrays) will have come back as `\"[object XXXX]\"`.\n  // Everything else will have already been serialized, so if we don't see that pattern, we're done.\n  if (!stringified.startsWith('[object ')) {\n    return stringified;\n  }\n\n  // From here on, we can assert that `value` is either an object or an array.\n\n  // Do not normalize objects that we know have already been normalized. As a general rule, the\n  // \"__sentry_skip_normalization__\" property should only be used sparingly and only should only be set on objects that\n  // have already been normalized.\n  if ((value )['__sentry_skip_normalization__']) {\n    return value ;\n  }\n\n  // We can set `__sentry_override_normalization_depth__` on an object to ensure that from there\n  // We keep a certain amount of depth.\n  // This should be used sparingly, e.g. we use it for the redux integration to ensure we get a certain amount of state.\n  const remainingDepth =\n    typeof (value )['__sentry_override_normalization_depth__'] === 'number'\n      ? ((value )['__sentry_override_normalization_depth__'] )\n      : depth;\n\n  // We're also done if we've reached the max depth\n  if (remainingDepth === 0) {\n    // At this point we know `serialized` is a string of the form `\"[object XXXX]\"`. Clean it up so it's just `\"[XXXX]\"`.\n    return stringified.replace('object ', '');\n  }\n\n  // If we've already visited this branch, bail out, as it's circular reference. If not, note that we're seeing it now.\n  if (memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // If the value has a `toJSON` method, we call it to extract more information\n  const valueWithToJSON = value ;\n  if (valueWithToJSON && typeof valueWithToJSON.toJSON === 'function') {\n    try {\n      const jsonValue = valueWithToJSON.toJSON();\n      // We need to normalize the return value of `.toJSON()` in case it has circular references\n      return visit('', jsonValue, remainingDepth - 1, maxProperties, memo$1);\n    } catch (err) {\n      // pass (The built-in `toJSON` failed, but we can still try to do it ourselves)\n    }\n  }\n\n  // At this point we know we either have an object or an array, we haven't seen it before, and we're going to recurse\n  // because we haven't yet reached the max depth. Create an accumulator to hold the results of visiting each\n  // property/entry, and keep track of the number of items we add to it.\n  const normalized = (Array.isArray(value) ? [] : {}) ;\n  let numAdded = 0;\n\n  // Before we begin, convert`Error` and`Event` instances into plain objects, since some of each of their relevant\n  // properties are non-enumerable and otherwise would get missed.\n  const visitable = object.convertToPlainObject(value );\n\n  for (const visitKey in visitable) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(visitable, visitKey)) {\n      continue;\n    }\n\n    if (numAdded >= maxProperties) {\n      normalized[visitKey] = '[MaxProperties ~]';\n      break;\n    }\n\n    // Recursively visit all the child nodes\n    const visitValue = visitable[visitKey];\n    normalized[visitKey] = visit(visitKey, visitValue, remainingDepth - 1, maxProperties, memo$1);\n\n    numAdded++;\n  }\n\n  // Once we've visited all the branches, remove the parent from memo storage\n  unmemoize(value);\n\n  // Return accumulated values\n  return normalized;\n}\n\n/* eslint-disable complexity */\n/**\n * Stringify the given value. Handles various known special values and types.\n *\n * Not meant to be used on simple primitives which already have a string representation, as it will, for example, turn\n * the number 1231 into \"[Object Number]\", nor on `null`, as it will throw.\n *\n * @param value The value to stringify\n * @returns A stringified representation of the given value\n */\nfunction stringifyValue(\n  key,\n  // this type is a tiny bit of a cheat, since this function does handle NaN (which is technically a number), but for\n  // our internal use, it'll do\n  value,\n) {\n  try {\n    if (key === 'domain' && value && typeof value === 'object' && (value )._events) {\n      return '[Domain]';\n    }\n\n    if (key === 'domainEmitter') {\n      return '[DomainEmitter]';\n    }\n\n    // It's safe to use `global`, `window`, and `document` here in this manner, as we are asserting using `typeof` first\n    // which won't throw if they are not present.\n\n    if (typeof global !== 'undefined' && value === global) {\n      return '[Global]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof window !== 'undefined' && value === window) {\n      return '[Window]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof document !== 'undefined' && value === document) {\n      return '[Document]';\n    }\n\n    if (is.isVueViewModel(value)) {\n      return '[VueViewModel]';\n    }\n\n    // React's SyntheticEvent thingy\n    if (is.isSyntheticEvent(value)) {\n      return '[SyntheticEvent]';\n    }\n\n    if (typeof value === 'number' && value !== value) {\n      return '[NaN]';\n    }\n\n    if (typeof value === 'function') {\n      return `[Function: ${stacktrace.getFunctionName(value)}]`;\n    }\n\n    if (typeof value === 'symbol') {\n      return `[${String(value)}]`;\n    }\n\n    // stringified BigInts are indistinguishable from regular numbers, so we need to label them to avoid confusion\n    if (typeof value === 'bigint') {\n      return `[BigInt: ${String(value)}]`;\n    }\n\n    // Now that we've knocked out all the special cases and the primitives, all we have left are objects. Simply casting\n    // them to strings means that instances of classes which haven't defined their `toStringTag` will just come out as\n    // `\"[object Object]\"`. If we instead look at the constructor's name (which is the same as the name of the class),\n    // we can make sure that only plain objects come out that way.\n    const objName = getConstructorName(value);\n\n    // Handle HTML Elements\n    if (/^HTML(\\w*)Element$/.test(objName)) {\n      return `[HTMLElement: ${objName}]`;\n    }\n\n    return `[object ${objName}]`;\n  } catch (err) {\n    return `**non-serializable** (${err})`;\n  }\n}\n/* eslint-enable complexity */\n\nfunction getConstructorName(value) {\n  const prototype = Object.getPrototypeOf(value);\n\n  return prototype ? prototype.constructor.name : 'null prototype';\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value) {\n  // eslint-disable-next-line no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction jsonSize(value) {\n  return utf8Length(JSON.stringify(value));\n}\n\n/**\n * Normalizes URLs in exceptions and stacktraces to a base path so Sentry can fingerprint\n * across platforms and working directory.\n *\n * @param url The URL to be normalized.\n * @param basePath The application base path.\n * @returns The normalized URL.\n */\nfunction normalizeUrlToBase(url, basePath) {\n  const escapedBase = basePath\n    // Backslash to forward\n    .replace(/\\\\/g, '/')\n    // Escape RegExp special characters\n    .replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&');\n\n  let newUrl = url;\n  try {\n    newUrl = decodeURI(url);\n  } catch (_Oo) {\n    // Sometime this breaks\n  }\n  return (\n    newUrl\n      .replace(/\\\\/g, '/')\n      .replace(/webpack:\\/?/g, '') // Remove intermediate base path\n      // eslint-disable-next-line @sentry-internal/sdk/no-regexp-constructor\n      .replace(new RegExp(`(file://)?/*${escapedBase}/*`, 'ig'), 'app:///')\n  );\n}\n\nexports.normalize = normalize;\nexports.normalizeToSize = normalizeToSize;\nexports.normalizeUrlToBase = normalizeUrlToBase;\n//# sourceMappingURL=normalize.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/normalize.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/object.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/object.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst browser = __webpack_require__(/*! ./browser.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/browser.js\");\nconst debugBuild = __webpack_require__(/*! ./debug-build.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/debug-build.js\");\nconst is = __webpack_require__(/*! ./is.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/is.js\");\nconst logger = __webpack_require__(/*! ./logger.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/logger.js\");\nconst string = __webpack_require__(/*! ./string.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/string.js\");\n\n/**\n * Replace a method in an object with a wrapped version of itself.\n *\n * @param source An object that contains a method to be wrapped.\n * @param name The name of the method to be wrapped.\n * @param replacementFactory A higher-order function that takes the original version of the given method and returns a\n * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to\n * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other\n * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.\n * @returns void\n */\nfunction fill(source, name, replacementFactory) {\n  if (!(name in source)) {\n    return;\n  }\n\n  const original = source[name] ;\n  const wrapped = replacementFactory(original) ;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    markFunctionWrapped(wrapped, original);\n  }\n\n  source[name] = wrapped;\n}\n\n/**\n * Defines a non-enumerable property on the given object.\n *\n * @param obj The object on which to set the property\n * @param name The name of the property to be set\n * @param value The value to which to set the property\n */\nfunction addNonEnumerableProperty(obj, name, value) {\n  try {\n    Object.defineProperty(obj, name, {\n      // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it\n      value: value,\n      writable: true,\n      configurable: true,\n    });\n  } catch (o_O) {\n    debugBuild.DEBUG_BUILD && logger.logger.log(`Failed to add non-enumerable property \"${name}\" to object`, obj);\n  }\n}\n\n/**\n * Remembers the original function on the wrapped function and\n * patches up the prototype.\n *\n * @param wrapped the wrapper function\n * @param original the original function that gets wrapped\n */\nfunction markFunctionWrapped(wrapped, original) {\n  try {\n    const proto = original.prototype || {};\n    wrapped.prototype = original.prototype = proto;\n    addNonEnumerableProperty(wrapped, '__sentry_original__', original);\n  } catch (o_O) {} // eslint-disable-line no-empty\n}\n\n/**\n * This extracts the original function if available.  See\n * `markFunctionWrapped` for more information.\n *\n * @param func the function to unwrap\n * @returns the unwrapped version of the function if available.\n */\nfunction getOriginalFunction(func) {\n  return func.__sentry_original__;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nfunction urlEncode(object) {\n  return Object.keys(object)\n    .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`)\n    .join('&');\n}\n\n/**\n * Transforms any `Error` or `Event` into a plain object with all of their enumerable properties, and some of their\n * non-enumerable properties attached.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n * @returns An Event or Error turned into an object - or the value argurment itself, when value is neither an Event nor\n *  an Error.\n */\nfunction convertToPlainObject(\n  value,\n)\n\n {\n  if (is.isError(value)) {\n    return {\n      message: value.message,\n      name: value.name,\n      stack: value.stack,\n      ...getOwnProperties(value),\n    };\n  } else if (is.isEvent(value)) {\n    const newObj\n\n = {\n      type: value.type,\n      target: serializeEventTarget(value.target),\n      currentTarget: serializeEventTarget(value.currentTarget),\n      ...getOwnProperties(value),\n    };\n\n    if (typeof CustomEvent !== 'undefined' && is.isInstanceOf(value, CustomEvent)) {\n      newObj.detail = value.detail;\n    }\n\n    return newObj;\n  } else {\n    return value;\n  }\n}\n\n/** Creates a string representation of the target of an `Event` object */\nfunction serializeEventTarget(target) {\n  try {\n    return is.isElement(target) ? browser.htmlTreeAsString(target) : Object.prototype.toString.call(target);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/** Filters out all but an object's own properties */\nfunction getOwnProperties(obj) {\n  if (typeof obj === 'object' && obj !== null) {\n    const extractedProps = {};\n    for (const property in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, property)) {\n        extractedProps[property] = (obj )[property];\n      }\n    }\n    return extractedProps;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\nfunction extractExceptionKeysForMessage(exception, maxLength = 40) {\n  const keys = Object.keys(convertToPlainObject(exception));\n  keys.sort();\n\n  const firstKey = keys[0];\n\n  if (!firstKey) {\n    return '[object has no keys]';\n  }\n\n  if (firstKey.length >= maxLength) {\n    return string.truncate(firstKey, maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return string.truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return a new object having removed all fields whose value was `undefined`.\n * Works recursively on objects and arrays.\n *\n * Attention: This function keeps circular references in the returned object.\n */\nfunction dropUndefinedKeys(inputValue) {\n  // This map keeps track of what already visited nodes map to.\n  // Our Set - based memoBuilder doesn't work here because we want to the output object to have the same circular\n  // references as the input object.\n  const memoizationMap = new Map();\n\n  // This function just proxies `_dropUndefinedKeys` to keep the `memoBuilder` out of this function's API\n  return _dropUndefinedKeys(inputValue, memoizationMap);\n}\n\nfunction _dropUndefinedKeys(inputValue, memoizationMap) {\n  if (isPojo(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the object it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    const returnValue = {};\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    for (const key of Object.keys(inputValue)) {\n      if (typeof inputValue[key] !== 'undefined') {\n        returnValue[key] = _dropUndefinedKeys(inputValue[key], memoizationMap);\n      }\n    }\n\n    return returnValue ;\n  }\n\n  if (Array.isArray(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the array it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    const returnValue = [];\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    inputValue.forEach((item) => {\n      returnValue.push(_dropUndefinedKeys(item, memoizationMap));\n    });\n\n    return returnValue ;\n  }\n\n  return inputValue;\n}\n\nfunction isPojo(input) {\n  if (!is.isPlainObject(input)) {\n    return false;\n  }\n\n  try {\n    const name = (Object.getPrototypeOf(input) ).constructor.name;\n    return !name || name === 'Object';\n  } catch (e) {\n    return true;\n  }\n}\n\n/**\n * Ensure that something is an object.\n *\n * Turns `undefined` and `null` into `String`s and all other primitives into instances of their respective wrapper\n * classes (String, Boolean, Number, etc.). Acts as the identity function on non-primitives.\n *\n * @param wat The subject of the objectification\n * @returns A version of `wat` which can safely be used with `Object` class methods\n */\nfunction objectify(wat) {\n  let objectified;\n  switch (true) {\n    case wat === undefined || wat === null:\n      objectified = new String(wat);\n      break;\n\n    // Though symbols and bigints do have wrapper classes (`Symbol` and `BigInt`, respectively), for whatever reason\n    // those classes don't have constructors which can be used with the `new` keyword. We therefore need to cast each as\n    // an object in order to wrap it.\n    case typeof wat === 'symbol' || typeof wat === 'bigint':\n      objectified = Object(wat);\n      break;\n\n    // this will catch the remaining primitives: `String`, `Number`, and `Boolean`\n    case is.isPrimitive(wat):\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      objectified = new (wat ).constructor(wat);\n      break;\n\n    // by process of elimination, at this point we know that `wat` must already be an object\n    default:\n      objectified = wat;\n      break;\n  }\n  return objectified;\n}\n\nexports.addNonEnumerableProperty = addNonEnumerableProperty;\nexports.convertToPlainObject = convertToPlainObject;\nexports.dropUndefinedKeys = dropUndefinedKeys;\nexports.extractExceptionKeysForMessage = extractExceptionKeysForMessage;\nexports.fill = fill;\nexports.getOriginalFunction = getOriginalFunction;\nexports.markFunctionWrapped = markFunctionWrapped;\nexports.objectify = objectify;\nexports.urlEncode = urlEncode;\n//# sourceMappingURL=object.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9vYmplY3QuanMiLCJtYXBwaW5ncyI6IkFBQUEsOENBQTZDLEVBQUUsYUFBYSxFQUFDOztBQUU3RCxnQkFBZ0IsbUJBQU8sQ0FBQyw0SEFBYztBQUN0QyxtQkFBbUIsbUJBQU8sQ0FBQyxvSUFBa0I7QUFDN0MsV0FBVyxtQkFBTyxDQUFDLGtIQUFTO0FBQzVCLGVBQWUsbUJBQU8sQ0FBQywwSEFBYTtBQUNwQyxlQUFlLG1CQUFPLENBQUMsMEhBQWE7O0FBRXBDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLElBQUk7QUFDSiwwRkFBMEYsS0FBSztBQUMvRjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksZUFBZTtBQUNuQjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHdCQUF3QixHQUFHLGdDQUFnQztBQUM5RTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSx1Q0FBdUMsa0JBQWtCO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsZ0NBQWdDO0FBQ2hDLDRCQUE0QjtBQUM1Qix5QkFBeUI7QUFDekIsc0NBQXNDO0FBQ3RDLFlBQVk7QUFDWiwyQkFBMkI7QUFDM0IsMkJBQTJCO0FBQzNCLGlCQUFpQjtBQUNqQixpQkFBaUI7QUFDakIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0Zm9saW8tcHJvamVjdC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2VudHJ5K3V0aWxzQDguMTcuMC9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9idWlsZC9janMvb2JqZWN0LmpzP2U0N2MiXSwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxuY29uc3QgYnJvd3NlciA9IHJlcXVpcmUoJy4vYnJvd3Nlci5qcycpO1xuY29uc3QgZGVidWdCdWlsZCA9IHJlcXVpcmUoJy4vZGVidWctYnVpbGQuanMnKTtcbmNvbnN0IGlzID0gcmVxdWlyZSgnLi9pcy5qcycpO1xuY29uc3QgbG9nZ2VyID0gcmVxdWlyZSgnLi9sb2dnZXIuanMnKTtcbmNvbnN0IHN0cmluZyA9IHJlcXVpcmUoJy4vc3RyaW5nLmpzJyk7XG5cbi8qKlxuICogUmVwbGFjZSBhIG1ldGhvZCBpbiBhbiBvYmplY3Qgd2l0aCBhIHdyYXBwZWQgdmVyc2lvbiBvZiBpdHNlbGYuXG4gKlxuICogQHBhcmFtIHNvdXJjZSBBbiBvYmplY3QgdGhhdCBjb250YWlucyBhIG1ldGhvZCB0byBiZSB3cmFwcGVkLlxuICogQHBhcmFtIG5hbWUgVGhlIG5hbWUgb2YgdGhlIG1ldGhvZCB0byBiZSB3cmFwcGVkLlxuICogQHBhcmFtIHJlcGxhY2VtZW50RmFjdG9yeSBBIGhpZ2hlci1vcmRlciBmdW5jdGlvbiB0aGF0IHRha2VzIHRoZSBvcmlnaW5hbCB2ZXJzaW9uIG9mIHRoZSBnaXZlbiBtZXRob2QgYW5kIHJldHVybnMgYVxuICogd3JhcHBlZCB2ZXJzaW9uLiBOb3RlOiBUaGUgZnVuY3Rpb24gcmV0dXJuZWQgYnkgYHJlcGxhY2VtZW50RmFjdG9yeWAgbmVlZHMgdG8gYmUgYSBub24tYXJyb3cgZnVuY3Rpb24sIGluIG9yZGVyIHRvXG4gKiBwcmVzZXJ2ZSB0aGUgY29ycmVjdCB2YWx1ZSBvZiBgdGhpc2AsIGFuZCB0aGUgb3JpZ2luYWwgbWV0aG9kIG11c3QgYmUgY2FsbGVkIHVzaW5nIGBvcmlnTWV0aG9kLmNhbGwodGhpcywgPG90aGVyXG4gKiBhcmdzPilgIG9yIGBvcmlnTWV0aG9kLmFwcGx5KHRoaXMsIFs8b3RoZXIgYXJncz5dKWAgKHJhdGhlciB0aGFuIGJlaW5nIGNhbGxlZCBkaXJlY3RseSksIGFnYWluIHRvIHByZXNlcnZlIGB0aGlzYC5cbiAqIEByZXR1cm5zIHZvaWRcbiAqL1xuZnVuY3Rpb24gZmlsbChzb3VyY2UsIG5hbWUsIHJlcGxhY2VtZW50RmFjdG9yeSkge1xuICBpZiAoIShuYW1lIGluIHNvdXJjZSkpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBjb25zdCBvcmlnaW5hbCA9IHNvdXJjZVtuYW1lXSA7XG4gIGNvbnN0IHdyYXBwZWQgPSByZXBsYWNlbWVudEZhY3Rvcnkob3JpZ2luYWwpIDtcblxuICAvLyBNYWtlIHN1cmUgaXQncyBhIGZ1bmN0aW9uIGZpcnN0LCBhcyB3ZSBuZWVkIHRvIGF0dGFjaCBhbiBlbXB0eSBwcm90b3R5cGUgZm9yIGBkZWZpbmVQcm9wZXJ0aWVzYCB0byB3b3JrXG4gIC8vIG90aGVyd2lzZSBpdCdsbCB0aHJvdyBcIlR5cGVFcnJvcjogT2JqZWN0LmRlZmluZVByb3BlcnRpZXMgY2FsbGVkIG9uIG5vbi1vYmplY3RcIlxuICBpZiAodHlwZW9mIHdyYXBwZWQgPT09ICdmdW5jdGlvbicpIHtcbiAgICBtYXJrRnVuY3Rpb25XcmFwcGVkKHdyYXBwZWQsIG9yaWdpbmFsKTtcbiAgfVxuXG4gIHNvdXJjZVtuYW1lXSA9IHdyYXBwZWQ7XG59XG5cbi8qKlxuICogRGVmaW5lcyBhIG5vbi1lbnVtZXJhYmxlIHByb3BlcnR5IG9uIHRoZSBnaXZlbiBvYmplY3QuXG4gKlxuICogQHBhcmFtIG9iaiBUaGUgb2JqZWN0IG9uIHdoaWNoIHRvIHNldCB0aGUgcHJvcGVydHlcbiAqIEBwYXJhbSBuYW1lIFRoZSBuYW1lIG9mIHRoZSBwcm9wZXJ0eSB0byBiZSBzZXRcbiAqIEBwYXJhbSB2YWx1ZSBUaGUgdmFsdWUgdG8gd2hpY2ggdG8gc2V0IHRoZSBwcm9wZXJ0eVxuICovXG5mdW5jdGlvbiBhZGROb25FbnVtZXJhYmxlUHJvcGVydHkob2JqLCBuYW1lLCB2YWx1ZSkge1xuICB0cnkge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIG5hbWUsIHtcbiAgICAgIC8vIGVudW1lcmFibGU6IGZhbHNlLCAvLyB0aGUgZGVmYXVsdCwgc28gd2UgY2FuIHNhdmUgb24gYnVuZGxlIHNpemUgYnkgbm90IGV4cGxpY2l0bHkgc2V0dGluZyBpdFxuICAgICAgdmFsdWU6IHZhbHVlLFxuICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgfSk7XG4gIH0gY2F0Y2ggKG9fTykge1xuICAgIGRlYnVnQnVpbGQuREVCVUdfQlVJTEQgJiYgbG9nZ2VyLmxvZ2dlci5sb2coYEZhaWxlZCB0byBhZGQgbm9uLWVudW1lcmFibGUgcHJvcGVydHkgXCIke25hbWV9XCIgdG8gb2JqZWN0YCwgb2JqKTtcbiAgfVxufVxuXG4vKipcbiAqIFJlbWVtYmVycyB0aGUgb3JpZ2luYWwgZnVuY3Rpb24gb24gdGhlIHdyYXBwZWQgZnVuY3Rpb24gYW5kXG4gKiBwYXRjaGVzIHVwIHRoZSBwcm90b3R5cGUuXG4gKlxuICogQHBhcmFtIHdyYXBwZWQgdGhlIHdyYXBwZXIgZnVuY3Rpb25cbiAqIEBwYXJhbSBvcmlnaW5hbCB0aGUgb3JpZ2luYWwgZnVuY3Rpb24gdGhhdCBnZXRzIHdyYXBwZWRcbiAqL1xuZnVuY3Rpb24gbWFya0Z1bmN0aW9uV3JhcHBlZCh3cmFwcGVkLCBvcmlnaW5hbCkge1xuICB0cnkge1xuICAgIGNvbnN0IHByb3RvID0gb3JpZ2luYWwucHJvdG90eXBlIHx8IHt9O1xuICAgIHdyYXBwZWQucHJvdG90eXBlID0gb3JpZ2luYWwucHJvdG90eXBlID0gcHJvdG87XG4gICAgYWRkTm9uRW51bWVyYWJsZVByb3BlcnR5KHdyYXBwZWQsICdfX3NlbnRyeV9vcmlnaW5hbF9fJywgb3JpZ2luYWwpO1xuICB9IGNhdGNoIChvX08pIHt9IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tZW1wdHlcbn1cblxuLyoqXG4gKiBUaGlzIGV4dHJhY3RzIHRoZSBvcmlnaW5hbCBmdW5jdGlvbiBpZiBhdmFpbGFibGUuICBTZWVcbiAqIGBtYXJrRnVuY3Rpb25XcmFwcGVkYCBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cbiAqXG4gKiBAcGFyYW0gZnVuYyB0aGUgZnVuY3Rpb24gdG8gdW53cmFwXG4gKiBAcmV0dXJucyB0aGUgdW53cmFwcGVkIHZlcnNpb24gb2YgdGhlIGZ1bmN0aW9uIGlmIGF2YWlsYWJsZS5cbiAqL1xuZnVuY3Rpb24gZ2V0T3JpZ2luYWxGdW5jdGlvbihmdW5jKSB7XG4gIHJldHVybiBmdW5jLl9fc2VudHJ5X29yaWdpbmFsX187XG59XG5cbi8qKlxuICogRW5jb2RlcyBnaXZlbiBvYmplY3QgaW50byB1cmwtZnJpZW5kbHkgZm9ybWF0XG4gKlxuICogQHBhcmFtIG9iamVjdCBBbiBvYmplY3QgdGhhdCBjb250YWlucyBzZXJpYWxpemFibGUgdmFsdWVzXG4gKiBAcmV0dXJucyBzdHJpbmcgRW5jb2RlZFxuICovXG5mdW5jdGlvbiB1cmxFbmNvZGUob2JqZWN0KSB7XG4gIHJldHVybiBPYmplY3Qua2V5cyhvYmplY3QpXG4gICAgLm1hcChrZXkgPT4gYCR7ZW5jb2RlVVJJQ29tcG9uZW50KGtleSl9PSR7ZW5jb2RlVVJJQ29tcG9uZW50KG9iamVjdFtrZXldKX1gKVxuICAgIC5qb2luKCcmJyk7XG59XG5cbi8qKlxuICogVHJhbnNmb3JtcyBhbnkgYEVycm9yYCBvciBgRXZlbnRgIGludG8gYSBwbGFpbiBvYmplY3Qgd2l0aCBhbGwgb2YgdGhlaXIgZW51bWVyYWJsZSBwcm9wZXJ0aWVzLCBhbmQgc29tZSBvZiB0aGVpclxuICogbm9uLWVudW1lcmFibGUgcHJvcGVydGllcyBhdHRhY2hlZC5cbiAqXG4gKiBAcGFyYW0gdmFsdWUgSW5pdGlhbCBzb3VyY2UgdGhhdCB3ZSBoYXZlIHRvIHRyYW5zZm9ybSBpbiBvcmRlciBmb3IgaXQgdG8gYmUgdXNhYmxlIGJ5IHRoZSBzZXJpYWxpemVyXG4gKiBAcmV0dXJucyBBbiBFdmVudCBvciBFcnJvciB0dXJuZWQgaW50byBhbiBvYmplY3QgLSBvciB0aGUgdmFsdWUgYXJndXJtZW50IGl0c2VsZiwgd2hlbiB2YWx1ZSBpcyBuZWl0aGVyIGFuIEV2ZW50IG5vclxuICogIGFuIEVycm9yLlxuICovXG5mdW5jdGlvbiBjb252ZXJ0VG9QbGFpbk9iamVjdChcbiAgdmFsdWUsXG4pXG5cbiB7XG4gIGlmIChpcy5pc0Vycm9yKHZhbHVlKSkge1xuICAgIHJldHVybiB7XG4gICAgICBtZXNzYWdlOiB2YWx1ZS5tZXNzYWdlLFxuICAgICAgbmFtZTogdmFsdWUubmFtZSxcbiAgICAgIHN0YWNrOiB2YWx1ZS5zdGFjayxcbiAgICAgIC4uLmdldE93blByb3BlcnRpZXModmFsdWUpLFxuICAgIH07XG4gIH0gZWxzZSBpZiAoaXMuaXNFdmVudCh2YWx1ZSkpIHtcbiAgICBjb25zdCBuZXdPYmpcblxuID0ge1xuICAgICAgdHlwZTogdmFsdWUudHlwZSxcbiAgICAgIHRhcmdldDogc2VyaWFsaXplRXZlbnRUYXJnZXQodmFsdWUudGFyZ2V0KSxcbiAgICAgIGN1cnJlbnRUYXJnZXQ6IHNlcmlhbGl6ZUV2ZW50VGFyZ2V0KHZhbHVlLmN1cnJlbnRUYXJnZXQpLFxuICAgICAgLi4uZ2V0T3duUHJvcGVydGllcyh2YWx1ZSksXG4gICAgfTtcblxuICAgIGlmICh0eXBlb2YgQ3VzdG9tRXZlbnQgIT09ICd1bmRlZmluZWQnICYmIGlzLmlzSW5zdGFuY2VPZih2YWx1ZSwgQ3VzdG9tRXZlbnQpKSB7XG4gICAgICBuZXdPYmouZGV0YWlsID0gdmFsdWUuZGV0YWlsO1xuICAgIH1cblxuICAgIHJldHVybiBuZXdPYmo7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHZhbHVlO1xuICB9XG59XG5cbi8qKiBDcmVhdGVzIGEgc3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIHRoZSB0YXJnZXQgb2YgYW4gYEV2ZW50YCBvYmplY3QgKi9cbmZ1bmN0aW9uIHNlcmlhbGl6ZUV2ZW50VGFyZ2V0KHRhcmdldCkge1xuICB0cnkge1xuICAgIHJldHVybiBpcy5pc0VsZW1lbnQodGFyZ2V0KSA/IGJyb3dzZXIuaHRtbFRyZWVBc1N0cmluZyh0YXJnZXQpIDogT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHRhcmdldCk7XG4gIH0gY2F0Y2ggKF9vTykge1xuICAgIHJldHVybiAnPHVua25vd24+JztcbiAgfVxufVxuXG4vKiogRmlsdGVycyBvdXQgYWxsIGJ1dCBhbiBvYmplY3QncyBvd24gcHJvcGVydGllcyAqL1xuZnVuY3Rpb24gZ2V0T3duUHJvcGVydGllcyhvYmopIHtcbiAgaWYgKHR5cGVvZiBvYmogPT09ICdvYmplY3QnICYmIG9iaiAhPT0gbnVsbCkge1xuICAgIGNvbnN0IGV4dHJhY3RlZFByb3BzID0ge307XG4gICAgZm9yIChjb25zdCBwcm9wZXJ0eSBpbiBvYmopIHtcbiAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wZXJ0eSkpIHtcbiAgICAgICAgZXh0cmFjdGVkUHJvcHNbcHJvcGVydHldID0gKG9iaiApW3Byb3BlcnR5XTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGV4dHJhY3RlZFByb3BzO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiB7fTtcbiAgfVxufVxuXG4vKipcbiAqIEdpdmVuIGFueSBjYXB0dXJlZCBleGNlcHRpb24sIGV4dHJhY3QgaXRzIGtleXMgYW5kIGNyZWF0ZSBhIHNvcnRlZFxuICogYW5kIHRydW5jYXRlZCBsaXN0IHRoYXQgd2lsbCBiZSB1c2VkIGluc2lkZSB0aGUgZXZlbnQgbWVzc2FnZS5cbiAqIGVnLiBgTm9uLWVycm9yIGV4Y2VwdGlvbiBjYXB0dXJlZCB3aXRoIGtleXM6IGZvbywgYmFyLCBiYXpgXG4gKi9cbmZ1bmN0aW9uIGV4dHJhY3RFeGNlcHRpb25LZXlzRm9yTWVzc2FnZShleGNlcHRpb24sIG1heExlbmd0aCA9IDQwKSB7XG4gIGNvbnN0IGtleXMgPSBPYmplY3Qua2V5cyhjb252ZXJ0VG9QbGFpbk9iamVjdChleGNlcHRpb24pKTtcbiAga2V5cy5zb3J0KCk7XG5cbiAgY29uc3QgZmlyc3RLZXkgPSBrZXlzWzBdO1xuXG4gIGlmICghZmlyc3RLZXkpIHtcbiAgICByZXR1cm4gJ1tvYmplY3QgaGFzIG5vIGtleXNdJztcbiAgfVxuXG4gIGlmIChmaXJzdEtleS5sZW5ndGggPj0gbWF4TGVuZ3RoKSB7XG4gICAgcmV0dXJuIHN0cmluZy50cnVuY2F0ZShmaXJzdEtleSwgbWF4TGVuZ3RoKTtcbiAgfVxuXG4gIGZvciAobGV0IGluY2x1ZGVkS2V5cyA9IGtleXMubGVuZ3RoOyBpbmNsdWRlZEtleXMgPiAwOyBpbmNsdWRlZEtleXMtLSkge1xuICAgIGNvbnN0IHNlcmlhbGl6ZWQgPSBrZXlzLnNsaWNlKDAsIGluY2x1ZGVkS2V5cykuam9pbignLCAnKTtcbiAgICBpZiAoc2VyaWFsaXplZC5sZW5ndGggPiBtYXhMZW5ndGgpIHtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cbiAgICBpZiAoaW5jbHVkZWRLZXlzID09PSBrZXlzLmxlbmd0aCkge1xuICAgICAgcmV0dXJuIHNlcmlhbGl6ZWQ7XG4gICAgfVxuICAgIHJldHVybiBzdHJpbmcudHJ1bmNhdGUoc2VyaWFsaXplZCwgbWF4TGVuZ3RoKTtcbiAgfVxuXG4gIHJldHVybiAnJztcbn1cblxuLyoqXG4gKiBHaXZlbiBhbnkgb2JqZWN0LCByZXR1cm4gYSBuZXcgb2JqZWN0IGhhdmluZyByZW1vdmVkIGFsbCBmaWVsZHMgd2hvc2UgdmFsdWUgd2FzIGB1bmRlZmluZWRgLlxuICogV29ya3MgcmVjdXJzaXZlbHkgb24gb2JqZWN0cyBhbmQgYXJyYXlzLlxuICpcbiAqIEF0dGVudGlvbjogVGhpcyBmdW5jdGlvbiBrZWVwcyBjaXJjdWxhciByZWZlcmVuY2VzIGluIHRoZSByZXR1cm5lZCBvYmplY3QuXG4gKi9cbmZ1bmN0aW9uIGRyb3BVbmRlZmluZWRLZXlzKGlucHV0VmFsdWUpIHtcbiAgLy8gVGhpcyBtYXAga2VlcHMgdHJhY2sgb2Ygd2hhdCBhbHJlYWR5IHZpc2l0ZWQgbm9kZXMgbWFwIHRvLlxuICAvLyBPdXIgU2V0IC0gYmFzZWQgbWVtb0J1aWxkZXIgZG9lc24ndCB3b3JrIGhlcmUgYmVjYXVzZSB3ZSB3YW50IHRvIHRoZSBvdXRwdXQgb2JqZWN0IHRvIGhhdmUgdGhlIHNhbWUgY2lyY3VsYXJcbiAgLy8gcmVmZXJlbmNlcyBhcyB0aGUgaW5wdXQgb2JqZWN0LlxuICBjb25zdCBtZW1vaXphdGlvbk1hcCA9IG5ldyBNYXAoKTtcblxuICAvLyBUaGlzIGZ1bmN0aW9uIGp1c3QgcHJveGllcyBgX2Ryb3BVbmRlZmluZWRLZXlzYCB0byBrZWVwIHRoZSBgbWVtb0J1aWxkZXJgIG91dCBvZiB0aGlzIGZ1bmN0aW9uJ3MgQVBJXG4gIHJldHVybiBfZHJvcFVuZGVmaW5lZEtleXMoaW5wdXRWYWx1ZSwgbWVtb2l6YXRpb25NYXApO1xufVxuXG5mdW5jdGlvbiBfZHJvcFVuZGVmaW5lZEtleXMoaW5wdXRWYWx1ZSwgbWVtb2l6YXRpb25NYXApIHtcbiAgaWYgKGlzUG9qbyhpbnB1dFZhbHVlKSkge1xuICAgIC8vIElmIHRoaXMgbm9kZSBoYXMgYWxyZWFkeSBiZWVuIHZpc2l0ZWQgZHVlIHRvIGEgY2lyY3VsYXIgcmVmZXJlbmNlLCByZXR1cm4gdGhlIG9iamVjdCBpdCB3YXMgbWFwcGVkIHRvIGluIHRoZSBuZXcgb2JqZWN0XG4gICAgY29uc3QgbWVtb1ZhbCA9IG1lbW9pemF0aW9uTWFwLmdldChpbnB1dFZhbHVlKTtcbiAgICBpZiAobWVtb1ZhbCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICByZXR1cm4gbWVtb1ZhbCA7XG4gICAgfVxuXG4gICAgY29uc3QgcmV0dXJuVmFsdWUgPSB7fTtcbiAgICAvLyBTdG9yZSB0aGUgbWFwcGluZyBvZiB0aGlzIHZhbHVlIGluIGNhc2Ugd2UgdmlzaXQgaXQgYWdhaW4sIGluIGNhc2Ugb2YgY2lyY3VsYXIgZGF0YVxuICAgIG1lbW9pemF0aW9uTWFwLnNldChpbnB1dFZhbHVlLCByZXR1cm5WYWx1ZSk7XG5cbiAgICBmb3IgKGNvbnN0IGtleSBvZiBPYmplY3Qua2V5cyhpbnB1dFZhbHVlKSkge1xuICAgICAgaWYgKHR5cGVvZiBpbnB1dFZhbHVlW2tleV0gIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHJldHVyblZhbHVlW2tleV0gPSBfZHJvcFVuZGVmaW5lZEtleXMoaW5wdXRWYWx1ZVtrZXldLCBtZW1vaXphdGlvbk1hcCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHJldHVyblZhbHVlIDtcbiAgfVxuXG4gIGlmIChBcnJheS5pc0FycmF5KGlucHV0VmFsdWUpKSB7XG4gICAgLy8gSWYgdGhpcyBub2RlIGhhcyBhbHJlYWR5IGJlZW4gdmlzaXRlZCBkdWUgdG8gYSBjaXJjdWxhciByZWZlcmVuY2UsIHJldHVybiB0aGUgYXJyYXkgaXQgd2FzIG1hcHBlZCB0byBpbiB0aGUgbmV3IG9iamVjdFxuICAgIGNvbnN0IG1lbW9WYWwgPSBtZW1vaXphdGlvbk1hcC5nZXQoaW5wdXRWYWx1ZSk7XG4gICAgaWYgKG1lbW9WYWwgIT09IHVuZGVmaW5lZCkge1xuICAgICAgcmV0dXJuIG1lbW9WYWwgO1xuICAgIH1cblxuICAgIGNvbnN0IHJldHVyblZhbHVlID0gW107XG4gICAgLy8gU3RvcmUgdGhlIG1hcHBpbmcgb2YgdGhpcyB2YWx1ZSBpbiBjYXNlIHdlIHZpc2l0IGl0IGFnYWluLCBpbiBjYXNlIG9mIGNpcmN1bGFyIGRhdGFcbiAgICBtZW1vaXphdGlvbk1hcC5zZXQoaW5wdXRWYWx1ZSwgcmV0dXJuVmFsdWUpO1xuXG4gICAgaW5wdXRWYWx1ZS5mb3JFYWNoKChpdGVtKSA9PiB7XG4gICAgICByZXR1cm5WYWx1ZS5wdXNoKF9kcm9wVW5kZWZpbmVkS2V5cyhpdGVtLCBtZW1vaXphdGlvbk1hcCkpO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIHJldHVyblZhbHVlIDtcbiAgfVxuXG4gIHJldHVybiBpbnB1dFZhbHVlO1xufVxuXG5mdW5jdGlvbiBpc1Bvam8oaW5wdXQpIHtcbiAgaWYgKCFpcy5pc1BsYWluT2JqZWN0KGlucHV0KSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHRyeSB7XG4gICAgY29uc3QgbmFtZSA9IChPYmplY3QuZ2V0UHJvdG90eXBlT2YoaW5wdXQpICkuY29uc3RydWN0b3IubmFtZTtcbiAgICByZXR1cm4gIW5hbWUgfHwgbmFtZSA9PT0gJ09iamVjdCc7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxufVxuXG4vKipcbiAqIEVuc3VyZSB0aGF0IHNvbWV0aGluZyBpcyBhbiBvYmplY3QuXG4gKlxuICogVHVybnMgYHVuZGVmaW5lZGAgYW5kIGBudWxsYCBpbnRvIGBTdHJpbmdgcyBhbmQgYWxsIG90aGVyIHByaW1pdGl2ZXMgaW50byBpbnN0YW5jZXMgb2YgdGhlaXIgcmVzcGVjdGl2ZSB3cmFwcGVyXG4gKiBjbGFzc2VzIChTdHJpbmcsIEJvb2xlYW4sIE51bWJlciwgZXRjLikuIEFjdHMgYXMgdGhlIGlkZW50aXR5IGZ1bmN0aW9uIG9uIG5vbi1wcmltaXRpdmVzLlxuICpcbiAqIEBwYXJhbSB3YXQgVGhlIHN1YmplY3Qgb2YgdGhlIG9iamVjdGlmaWNhdGlvblxuICogQHJldHVybnMgQSB2ZXJzaW9uIG9mIGB3YXRgIHdoaWNoIGNhbiBzYWZlbHkgYmUgdXNlZCB3aXRoIGBPYmplY3RgIGNsYXNzIG1ldGhvZHNcbiAqL1xuZnVuY3Rpb24gb2JqZWN0aWZ5KHdhdCkge1xuICBsZXQgb2JqZWN0aWZpZWQ7XG4gIHN3aXRjaCAodHJ1ZSkge1xuICAgIGNhc2Ugd2F0ID09PSB1bmRlZmluZWQgfHwgd2F0ID09PSBudWxsOlxuICAgICAgb2JqZWN0aWZpZWQgPSBuZXcgU3RyaW5nKHdhdCk7XG4gICAgICBicmVhaztcblxuICAgIC8vIFRob3VnaCBzeW1ib2xzIGFuZCBiaWdpbnRzIGRvIGhhdmUgd3JhcHBlciBjbGFzc2VzIChgU3ltYm9sYCBhbmQgYEJpZ0ludGAsIHJlc3BlY3RpdmVseSksIGZvciB3aGF0ZXZlciByZWFzb25cbiAgICAvLyB0aG9zZSBjbGFzc2VzIGRvbid0IGhhdmUgY29uc3RydWN0b3JzIHdoaWNoIGNhbiBiZSB1c2VkIHdpdGggdGhlIGBuZXdgIGtleXdvcmQuIFdlIHRoZXJlZm9yZSBuZWVkIHRvIGNhc3QgZWFjaCBhc1xuICAgIC8vIGFuIG9iamVjdCBpbiBvcmRlciB0byB3cmFwIGl0LlxuICAgIGNhc2UgdHlwZW9mIHdhdCA9PT0gJ3N5bWJvbCcgfHwgdHlwZW9mIHdhdCA9PT0gJ2JpZ2ludCc6XG4gICAgICBvYmplY3RpZmllZCA9IE9iamVjdCh3YXQpO1xuICAgICAgYnJlYWs7XG5cbiAgICAvLyB0aGlzIHdpbGwgY2F0Y2ggdGhlIHJlbWFpbmluZyBwcmltaXRpdmVzOiBgU3RyaW5nYCwgYE51bWJlcmAsIGFuZCBgQm9vbGVhbmBcbiAgICBjYXNlIGlzLmlzUHJpbWl0aXZlKHdhdCk6XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVuc2FmZS1tZW1iZXItYWNjZXNzXG4gICAgICBvYmplY3RpZmllZCA9IG5ldyAod2F0ICkuY29uc3RydWN0b3Iod2F0KTtcbiAgICAgIGJyZWFrO1xuXG4gICAgLy8gYnkgcHJvY2VzcyBvZiBlbGltaW5hdGlvbiwgYXQgdGhpcyBwb2ludCB3ZSBrbm93IHRoYXQgYHdhdGAgbXVzdCBhbHJlYWR5IGJlIGFuIG9iamVjdFxuICAgIGRlZmF1bHQ6XG4gICAgICBvYmplY3RpZmllZCA9IHdhdDtcbiAgICAgIGJyZWFrO1xuICB9XG4gIHJldHVybiBvYmplY3RpZmllZDtcbn1cblxuZXhwb3J0cy5hZGROb25FbnVtZXJhYmxlUHJvcGVydHkgPSBhZGROb25FbnVtZXJhYmxlUHJvcGVydHk7XG5leHBvcnRzLmNvbnZlcnRUb1BsYWluT2JqZWN0ID0gY29udmVydFRvUGxhaW5PYmplY3Q7XG5leHBvcnRzLmRyb3BVbmRlZmluZWRLZXlzID0gZHJvcFVuZGVmaW5lZEtleXM7XG5leHBvcnRzLmV4dHJhY3RFeGNlcHRpb25LZXlzRm9yTWVzc2FnZSA9IGV4dHJhY3RFeGNlcHRpb25LZXlzRm9yTWVzc2FnZTtcbmV4cG9ydHMuZmlsbCA9IGZpbGw7XG5leHBvcnRzLmdldE9yaWdpbmFsRnVuY3Rpb24gPSBnZXRPcmlnaW5hbEZ1bmN0aW9uO1xuZXhwb3J0cy5tYXJrRnVuY3Rpb25XcmFwcGVkID0gbWFya0Z1bmN0aW9uV3JhcHBlZDtcbmV4cG9ydHMub2JqZWN0aWZ5ID0gb2JqZWN0aWZ5O1xuZXhwb3J0cy51cmxFbmNvZGUgPSB1cmxFbmNvZGU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1vYmplY3QuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/object.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/path.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/path.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n// Slightly modified (no IE8 support, ES6) and transcribed to TypeScript\n// https://github.com/calvinmetcalf/rollup-plugin-node-builtins/blob/63ab8aacd013767445ca299e468d9a60a95328d7/src/es6/path.js\n//\n// Copyright Joyent, Inc.and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n/** JSDoc */\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  let up = 0;\n  for (let i = parts.length - 1; i >= 0; i--) {\n    const last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nconst splitPathRe = /^(\\S+:\\\\|\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^/\\\\]+?|)(\\.[^./\\\\]*|))(?:[/\\\\]*)$/;\n/** JSDoc */\nfunction splitPath(filename) {\n  // Truncate files names greater than 1024 characters to avoid regex dos\n  // https://github.com/getsentry/sentry-javascript/pull/8737#discussion_r1285719172\n  const truncated = filename.length > 1024 ? `<truncated>${filename.slice(-1024)}` : filename;\n  const parts = splitPathRe.exec(truncated);\n  return parts ? parts.slice(1) : [];\n}\n\n// path.resolve([from ...], to)\n// posix version\n/** JSDoc */\nfunction resolve(...args) {\n  let resolvedPath = '';\n  let resolvedAbsolute = false;\n\n  for (let i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    const path = i >= 0 ? args[i] : '/';\n\n    // Skip empty entries\n    if (!path) {\n      continue;\n    }\n\n    resolvedPath = `${path}/${resolvedPath}`;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(\n    resolvedPath.split('/').filter(p => !!p),\n    !resolvedAbsolute,\n  ).join('/');\n\n  return (resolvedAbsolute ? '/' : '') + resolvedPath || '.';\n}\n\n/** JSDoc */\nfunction trim(arr) {\n  let start = 0;\n  for (; start < arr.length; start++) {\n    if (arr[start] !== '') {\n      break;\n    }\n  }\n\n  let end = arr.length - 1;\n  for (; end >= 0; end--) {\n    if (arr[end] !== '') {\n      break;\n    }\n  }\n\n  if (start > end) {\n    return [];\n  }\n  return arr.slice(start, end - start + 1);\n}\n\n// path.relative(from, to)\n// posix version\n/** JSDoc */\nfunction relative(from, to) {\n  /* eslint-disable no-param-reassign */\n  from = resolve(from).slice(1);\n  to = resolve(to).slice(1);\n  /* eslint-enable no-param-reassign */\n\n  const fromParts = trim(from.split('/'));\n  const toParts = trim(to.split('/'));\n\n  const length = Math.min(fromParts.length, toParts.length);\n  let samePartsLength = length;\n  for (let i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  let outputParts = [];\n  for (let i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n}\n\n// path.normalize(path)\n// posix version\n/** JSDoc */\nfunction normalizePath(path) {\n  const isPathAbsolute = isAbsolute(path);\n  const trailingSlash = path.slice(-1) === '/';\n\n  // Normalize the path\n  let normalizedPath = normalizeArray(\n    path.split('/').filter(p => !!p),\n    !isPathAbsolute,\n  ).join('/');\n\n  if (!normalizedPath && !isPathAbsolute) {\n    normalizedPath = '.';\n  }\n  if (normalizedPath && trailingSlash) {\n    normalizedPath += '/';\n  }\n\n  return (isPathAbsolute ? '/' : '') + normalizedPath;\n}\n\n// posix version\n/** JSDoc */\nfunction isAbsolute(path) {\n  return path.charAt(0) === '/';\n}\n\n// posix version\n/** JSDoc */\nfunction join(...args) {\n  return normalizePath(args.join('/'));\n}\n\n/** JSDoc */\nfunction dirname(path) {\n  const result = splitPath(path);\n  const root = result[0] || '';\n  let dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.slice(0, dir.length - 1);\n  }\n\n  return root + dir;\n}\n\n/** JSDoc */\nfunction basename(path, ext) {\n  let f = splitPath(path)[2] || '';\n  if (ext && f.slice(ext.length * -1) === ext) {\n    f = f.slice(0, f.length - ext.length);\n  }\n  return f;\n}\n\nexports.basename = basename;\nexports.dirname = dirname;\nexports.isAbsolute = isAbsolute;\nexports.join = join;\nexports.normalizePath = normalizePath;\nexports.relative = relative;\nexports.resolve = resolve;\n//# sourceMappingURL=path.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/path.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/promisebuffer.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/promisebuffer.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst error = __webpack_require__(/*! ./error.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/error.js\");\nconst syncpromise = __webpack_require__(/*! ./syncpromise.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/syncpromise.js\");\n\n/**\n * Creates an new PromiseBuffer object with the specified limit\n * @param limit max number of promises that can be stored in the buffer\n */\nfunction makePromiseBuffer(limit) {\n  const buffer = [];\n\n  function isReady() {\n    return limit === undefined || buffer.length < limit;\n  }\n\n  /**\n   * Remove a promise from the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns Removed promise.\n   */\n  function remove(task) {\n    return buffer.splice(buffer.indexOf(task), 1)[0] || Promise.resolve(undefined);\n  }\n\n  /**\n   * Add a promise (representing an in-flight action) to the queue, and set it to remove itself on fulfillment.\n   *\n   * @param taskProducer A function producing any PromiseLike<T>; In previous versions this used to be `task:\n   *        PromiseLike<T>`, but under that model, Promises were instantly created on the call-site and their executor\n   *        functions therefore ran immediately. Thus, even if the buffer was full, the action still happened. By\n   *        requiring the promise to be wrapped in a function, we can defer promise creation until after the buffer\n   *        limit check.\n   * @returns The original promise.\n   */\n  function add(taskProducer) {\n    if (!isReady()) {\n      return syncpromise.rejectedSyncPromise(new error.SentryError('Not adding Promise because buffer limit was reached.'));\n    }\n\n    // start the task and add its promise to the queue\n    const task = taskProducer();\n    if (buffer.indexOf(task) === -1) {\n      buffer.push(task);\n    }\n    void task\n      .then(() => remove(task))\n      // Use `then(null, rejectionHandler)` rather than `catch(rejectionHandler)` so that we can use `PromiseLike`\n      // rather than `Promise`. `PromiseLike` doesn't have a `.catch` method, making its polyfill smaller. (ES5 didn't\n      // have promises, so TS has to polyfill when down-compiling.)\n      .then(null, () =>\n        remove(task).then(null, () => {\n          // We have to add another catch here because `remove()` starts a new promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Wait for all promises in the queue to resolve or for timeout to expire, whichever comes first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the queue is still non-empty. Passing `0` (or\n   * not passing anything) will make the promise wait as long as it takes for the queue to drain before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if the queue is already empty or drains before the timeout, and\n   * `false` otherwise\n   */\n  function drain(timeout) {\n    return new syncpromise.SyncPromise((resolve, reject) => {\n      let counter = buffer.length;\n\n      if (!counter) {\n        return resolve(true);\n      }\n\n      // wait for `timeout` ms and then resolve to `false` (if not cancelled first)\n      const capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n\n      // if all promises resolve in time, cancel the timer and resolve to `true`\n      buffer.forEach(item => {\n        void syncpromise.resolvedSyncPromise(item).then(() => {\n          if (!--counter) {\n            clearTimeout(capturedSetTimeout);\n            resolve(true);\n          }\n        }, reject);\n      });\n    });\n  }\n\n  return {\n    $: buffer,\n    add,\n    drain,\n  };\n}\n\nexports.makePromiseBuffer = makePromiseBuffer;\n//# sourceMappingURL=promisebuffer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9wcm9taXNlYnVmZmVyLmpzIiwibWFwcGluZ3MiOiJBQUFBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQzs7QUFFN0QsY0FBYyxtQkFBTyxDQUFDLHdIQUFZO0FBQ2xDLG9CQUFvQixtQkFBTyxDQUFDLG9JQUFrQjs7QUFFOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esa0VBQWtFO0FBQ2xFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPOztBQUVQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULE9BQU87QUFDUCxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHlCQUF5QjtBQUN6QiIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9wcm9taXNlYnVmZmVyLmpzPzdkMDkiXSwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxuY29uc3QgZXJyb3IgPSByZXF1aXJlKCcuL2Vycm9yLmpzJyk7XG5jb25zdCBzeW5jcHJvbWlzZSA9IHJlcXVpcmUoJy4vc3luY3Byb21pc2UuanMnKTtcblxuLyoqXG4gKiBDcmVhdGVzIGFuIG5ldyBQcm9taXNlQnVmZmVyIG9iamVjdCB3aXRoIHRoZSBzcGVjaWZpZWQgbGltaXRcbiAqIEBwYXJhbSBsaW1pdCBtYXggbnVtYmVyIG9mIHByb21pc2VzIHRoYXQgY2FuIGJlIHN0b3JlZCBpbiB0aGUgYnVmZmVyXG4gKi9cbmZ1bmN0aW9uIG1ha2VQcm9taXNlQnVmZmVyKGxpbWl0KSB7XG4gIGNvbnN0IGJ1ZmZlciA9IFtdO1xuXG4gIGZ1bmN0aW9uIGlzUmVhZHkoKSB7XG4gICAgcmV0dXJuIGxpbWl0ID09PSB1bmRlZmluZWQgfHwgYnVmZmVyLmxlbmd0aCA8IGxpbWl0O1xuICB9XG5cbiAgLyoqXG4gICAqIFJlbW92ZSBhIHByb21pc2UgZnJvbSB0aGUgcXVldWUuXG4gICAqXG4gICAqIEBwYXJhbSB0YXNrIENhbiBiZSBhbnkgUHJvbWlzZUxpa2U8VD5cbiAgICogQHJldHVybnMgUmVtb3ZlZCBwcm9taXNlLlxuICAgKi9cbiAgZnVuY3Rpb24gcmVtb3ZlKHRhc2spIHtcbiAgICByZXR1cm4gYnVmZmVyLnNwbGljZShidWZmZXIuaW5kZXhPZih0YXNrKSwgMSlbMF0gfHwgUHJvbWlzZS5yZXNvbHZlKHVuZGVmaW5lZCk7XG4gIH1cblxuICAvKipcbiAgICogQWRkIGEgcHJvbWlzZSAocmVwcmVzZW50aW5nIGFuIGluLWZsaWdodCBhY3Rpb24pIHRvIHRoZSBxdWV1ZSwgYW5kIHNldCBpdCB0byByZW1vdmUgaXRzZWxmIG9uIGZ1bGZpbGxtZW50LlxuICAgKlxuICAgKiBAcGFyYW0gdGFza1Byb2R1Y2VyIEEgZnVuY3Rpb24gcHJvZHVjaW5nIGFueSBQcm9taXNlTGlrZTxUPjsgSW4gcHJldmlvdXMgdmVyc2lvbnMgdGhpcyB1c2VkIHRvIGJlIGB0YXNrOlxuICAgKiAgICAgICAgUHJvbWlzZUxpa2U8VD5gLCBidXQgdW5kZXIgdGhhdCBtb2RlbCwgUHJvbWlzZXMgd2VyZSBpbnN0YW50bHkgY3JlYXRlZCBvbiB0aGUgY2FsbC1zaXRlIGFuZCB0aGVpciBleGVjdXRvclxuICAgKiAgICAgICAgZnVuY3Rpb25zIHRoZXJlZm9yZSByYW4gaW1tZWRpYXRlbHkuIFRodXMsIGV2ZW4gaWYgdGhlIGJ1ZmZlciB3YXMgZnVsbCwgdGhlIGFjdGlvbiBzdGlsbCBoYXBwZW5lZC4gQnlcbiAgICogICAgICAgIHJlcXVpcmluZyB0aGUgcHJvbWlzZSB0byBiZSB3cmFwcGVkIGluIGEgZnVuY3Rpb24sIHdlIGNhbiBkZWZlciBwcm9taXNlIGNyZWF0aW9uIHVudGlsIGFmdGVyIHRoZSBidWZmZXJcbiAgICogICAgICAgIGxpbWl0IGNoZWNrLlxuICAgKiBAcmV0dXJucyBUaGUgb3JpZ2luYWwgcHJvbWlzZS5cbiAgICovXG4gIGZ1bmN0aW9uIGFkZCh0YXNrUHJvZHVjZXIpIHtcbiAgICBpZiAoIWlzUmVhZHkoKSkge1xuICAgICAgcmV0dXJuIHN5bmNwcm9taXNlLnJlamVjdGVkU3luY1Byb21pc2UobmV3IGVycm9yLlNlbnRyeUVycm9yKCdOb3QgYWRkaW5nIFByb21pc2UgYmVjYXVzZSBidWZmZXIgbGltaXQgd2FzIHJlYWNoZWQuJykpO1xuICAgIH1cblxuICAgIC8vIHN0YXJ0IHRoZSB0YXNrIGFuZCBhZGQgaXRzIHByb21pc2UgdG8gdGhlIHF1ZXVlXG4gICAgY29uc3QgdGFzayA9IHRhc2tQcm9kdWNlcigpO1xuICAgIGlmIChidWZmZXIuaW5kZXhPZih0YXNrKSA9PT0gLTEpIHtcbiAgICAgIGJ1ZmZlci5wdXNoKHRhc2spO1xuICAgIH1cbiAgICB2b2lkIHRhc2tcbiAgICAgIC50aGVuKCgpID0+IHJlbW92ZSh0YXNrKSlcbiAgICAgIC8vIFVzZSBgdGhlbihudWxsLCByZWplY3Rpb25IYW5kbGVyKWAgcmF0aGVyIHRoYW4gYGNhdGNoKHJlamVjdGlvbkhhbmRsZXIpYCBzbyB0aGF0IHdlIGNhbiB1c2UgYFByb21pc2VMaWtlYFxuICAgICAgLy8gcmF0aGVyIHRoYW4gYFByb21pc2VgLiBgUHJvbWlzZUxpa2VgIGRvZXNuJ3QgaGF2ZSBhIGAuY2F0Y2hgIG1ldGhvZCwgbWFraW5nIGl0cyBwb2x5ZmlsbCBzbWFsbGVyLiAoRVM1IGRpZG4ndFxuICAgICAgLy8gaGF2ZSBwcm9taXNlcywgc28gVFMgaGFzIHRvIHBvbHlmaWxsIHdoZW4gZG93bi1jb21waWxpbmcuKVxuICAgICAgLnRoZW4obnVsbCwgKCkgPT5cbiAgICAgICAgcmVtb3ZlKHRhc2spLnRoZW4obnVsbCwgKCkgPT4ge1xuICAgICAgICAgIC8vIFdlIGhhdmUgdG8gYWRkIGFub3RoZXIgY2F0Y2ggaGVyZSBiZWNhdXNlIGByZW1vdmUoKWAgc3RhcnRzIGEgbmV3IHByb21pc2UgY2hhaW4uXG4gICAgICAgIH0pLFxuICAgICAgKTtcbiAgICByZXR1cm4gdGFzaztcbiAgfVxuXG4gIC8qKlxuICAgKiBXYWl0IGZvciBhbGwgcHJvbWlzZXMgaW4gdGhlIHF1ZXVlIHRvIHJlc29sdmUgb3IgZm9yIHRpbWVvdXQgdG8gZXhwaXJlLCB3aGljaGV2ZXIgY29tZXMgZmlyc3QuXG4gICAqXG4gICAqIEBwYXJhbSB0aW1lb3V0IFRoZSB0aW1lLCBpbiBtcywgYWZ0ZXIgd2hpY2ggdG8gcmVzb2x2ZSB0byBgZmFsc2VgIGlmIHRoZSBxdWV1ZSBpcyBzdGlsbCBub24tZW1wdHkuIFBhc3NpbmcgYDBgIChvclxuICAgKiBub3QgcGFzc2luZyBhbnl0aGluZykgd2lsbCBtYWtlIHRoZSBwcm9taXNlIHdhaXQgYXMgbG9uZyBhcyBpdCB0YWtlcyBmb3IgdGhlIHF1ZXVlIHRvIGRyYWluIGJlZm9yZSByZXNvbHZpbmcgdG9cbiAgICogYHRydWVgLlxuICAgKiBAcmV0dXJucyBBIHByb21pc2Ugd2hpY2ggd2lsbCByZXNvbHZlIHRvIGB0cnVlYCBpZiB0aGUgcXVldWUgaXMgYWxyZWFkeSBlbXB0eSBvciBkcmFpbnMgYmVmb3JlIHRoZSB0aW1lb3V0LCBhbmRcbiAgICogYGZhbHNlYCBvdGhlcndpc2VcbiAgICovXG4gIGZ1bmN0aW9uIGRyYWluKHRpbWVvdXQpIHtcbiAgICByZXR1cm4gbmV3IHN5bmNwcm9taXNlLlN5bmNQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIGxldCBjb3VudGVyID0gYnVmZmVyLmxlbmd0aDtcblxuICAgICAgaWYgKCFjb3VudGVyKSB7XG4gICAgICAgIHJldHVybiByZXNvbHZlKHRydWUpO1xuICAgICAgfVxuXG4gICAgICAvLyB3YWl0IGZvciBgdGltZW91dGAgbXMgYW5kIHRoZW4gcmVzb2x2ZSB0byBgZmFsc2VgIChpZiBub3QgY2FuY2VsbGVkIGZpcnN0KVxuICAgICAgY29uc3QgY2FwdHVyZWRTZXRUaW1lb3V0ID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIGlmICh0aW1lb3V0ICYmIHRpbWVvdXQgPiAwKSB7XG4gICAgICAgICAgcmVzb2x2ZShmYWxzZSk7XG4gICAgICAgIH1cbiAgICAgIH0sIHRpbWVvdXQpO1xuXG4gICAgICAvLyBpZiBhbGwgcHJvbWlzZXMgcmVzb2x2ZSBpbiB0aW1lLCBjYW5jZWwgdGhlIHRpbWVyIGFuZCByZXNvbHZlIHRvIGB0cnVlYFxuICAgICAgYnVmZmVyLmZvckVhY2goaXRlbSA9PiB7XG4gICAgICAgIHZvaWQgc3luY3Byb21pc2UucmVzb2x2ZWRTeW5jUHJvbWlzZShpdGVtKS50aGVuKCgpID0+IHtcbiAgICAgICAgICBpZiAoIS0tY291bnRlcikge1xuICAgICAgICAgICAgY2xlYXJUaW1lb3V0KGNhcHR1cmVkU2V0VGltZW91dCk7XG4gICAgICAgICAgICByZXNvbHZlKHRydWUpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSwgcmVqZWN0KTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICAkOiBidWZmZXIsXG4gICAgYWRkLFxuICAgIGRyYWluLFxuICB9O1xufVxuXG5leHBvcnRzLm1ha2VQcm9taXNlQnVmZmVyID0gbWFrZVByb21pc2VCdWZmZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wcm9taXNlYnVmZmVyLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/promisebuffer.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/propagationContext.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/propagationContext.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst misc = __webpack_require__(/*! ./misc.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/misc.js\");\n\n/**\n * Returns a new minimal propagation context\n */\nfunction generatePropagationContext() {\n  return {\n    traceId: misc.uuid4(),\n    spanId: misc.uuid4().substring(16),\n  };\n}\n\nexports.generatePropagationContext = generatePropagationContext;\n//# sourceMappingURL=propagationContext.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9wcm9wYWdhdGlvbkNvbnRleHQuanMiLCJtYXBwaW5ncyI6IkFBQUEsOENBQTZDLEVBQUUsYUFBYSxFQUFDOztBQUU3RCxhQUFhLG1CQUFPLENBQUMsc0hBQVc7O0FBRWhDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxrQ0FBa0M7QUFDbEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0Zm9saW8tcHJvamVjdC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2VudHJ5K3V0aWxzQDguMTcuMC9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9idWlsZC9janMvcHJvcGFnYXRpb25Db250ZXh0LmpzP2NiMDkiXSwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxuY29uc3QgbWlzYyA9IHJlcXVpcmUoJy4vbWlzYy5qcycpO1xuXG4vKipcbiAqIFJldHVybnMgYSBuZXcgbWluaW1hbCBwcm9wYWdhdGlvbiBjb250ZXh0XG4gKi9cbmZ1bmN0aW9uIGdlbmVyYXRlUHJvcGFnYXRpb25Db250ZXh0KCkge1xuICByZXR1cm4ge1xuICAgIHRyYWNlSWQ6IG1pc2MudXVpZDQoKSxcbiAgICBzcGFuSWQ6IG1pc2MudXVpZDQoKS5zdWJzdHJpbmcoMTYpLFxuICB9O1xufVxuXG5leHBvcnRzLmdlbmVyYXRlUHJvcGFnYXRpb25Db250ZXh0ID0gZ2VuZXJhdGVQcm9wYWdhdGlvbkNvbnRleHQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wcm9wYWdhdGlvbkNvbnRleHQuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/propagationContext.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/ratelimit.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/ratelimit.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n// Intentionally keeping the key broad, as we don't know for sure what rate limit headers get returned from backend\n\nconst DEFAULT_RETRY_AFTER = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param header string representation of 'Retry-After' header\n * @param now current unix timestamp\n *\n */\nfunction parseRetryAfterHeader(header, now = Date.now()) {\n  const headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  const headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return DEFAULT_RETRY_AFTER;\n}\n\n/**\n * Gets the time that the given category is disabled until for rate limiting.\n * In case no category-specific limit is set but a general rate limit across all categories is active,\n * that time is returned.\n *\n * @return the time in ms that the category is disabled until or 0 if there's no active rate limit.\n */\nfunction disabledUntil(limits, dataCategory) {\n  return limits[dataCategory] || limits.all || 0;\n}\n\n/**\n * Checks if a category is rate limited\n */\nfunction isRateLimited(limits, dataCategory, now = Date.now()) {\n  return disabledUntil(limits, dataCategory) > now;\n}\n\n/**\n * Update ratelimits from incoming headers.\n *\n * @return the updated RateLimits object.\n */\nfunction updateRateLimits(\n  limits,\n  { statusCode, headers },\n  now = Date.now(),\n) {\n  const updatedRateLimits = {\n    ...limits,\n  };\n\n  // \"The name is case-insensitive.\"\n  // https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n  const rateLimitHeader = headers && headers['x-sentry-rate-limits'];\n  const retryAfterHeader = headers && headers['retry-after'];\n\n  if (rateLimitHeader) {\n    /**\n     * rate limit headers are of the form\n     *     <header>,<header>,..\n     * where each <header> is of the form\n     *     <retry_after>: <categories>: <scope>: <reason_code>: <namespaces>\n     * where\n     *     <retry_after> is a delay in seconds\n     *     <categories> is the event type(s) (error, transaction, etc) being rate limited and is of the form\n     *         <category>;<category>;...\n     *     <scope> is what's being limited (org, project, or key) - ignored by SDK\n     *     <reason_code> is an arbitrary string like \"org_quota\" - ignored by SDK\n     *     <namespaces> Semicolon-separated list of metric namespace identifiers. Defines which namespace(s) will be affected.\n     *         Only present if rate limit applies to the metric_bucket data category.\n     */\n    for (const limit of rateLimitHeader.trim().split(',')) {\n      const [retryAfter, categories, , , namespaces] = limit.split(':', 5) ;\n      const headerDelay = parseInt(retryAfter, 10);\n      const delay = (!isNaN(headerDelay) ? headerDelay : 60) * 1000; // 60sec default\n      if (!categories) {\n        updatedRateLimits.all = now + delay;\n      } else {\n        for (const category of categories.split(';')) {\n          if (category === 'metric_bucket') {\n            // namespaces will be present when category === 'metric_bucket'\n            if (!namespaces || namespaces.split(';').includes('custom')) {\n              updatedRateLimits[category] = now + delay;\n            }\n          } else {\n            updatedRateLimits[category] = now + delay;\n          }\n        }\n      }\n    }\n  } else if (retryAfterHeader) {\n    updatedRateLimits.all = now + parseRetryAfterHeader(retryAfterHeader, now);\n  } else if (statusCode === 429) {\n    updatedRateLimits.all = now + 60 * 1000;\n  }\n\n  return updatedRateLimits;\n}\n\nexports.DEFAULT_RETRY_AFTER = DEFAULT_RETRY_AFTER;\nexports.disabledUntil = disabledUntil;\nexports.isRateLimited = isRateLimited;\nexports.parseRetryAfterHeader = parseRetryAfterHeader;\nexports.updateRateLimits = updateRateLimits;\n//# sourceMappingURL=ratelimit.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9yYXRlbGltaXQuanMiLCJtYXBwaW5ncyI6IkFBQUEsOENBQTZDLEVBQUUsYUFBYSxFQUFDOztBQUU3RDs7QUFFQSx1Q0FBdUM7O0FBRXZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLE9BQU87QUFDekM7QUFDQTtBQUNBOztBQUVBLG1DQUFtQyxPQUFPO0FBQzFDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUkscUJBQXFCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLFdBQVc7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFFQUFxRTtBQUNyRTtBQUNBO0FBQ0EsUUFBUTtBQUNSLGtEQUFrRDtBQUNsRDtBQUNBO0FBQ0Esa0RBQWtEO0FBQ2xEO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBLElBQUk7QUFDSjtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsMkJBQTJCO0FBQzNCLHFCQUFxQjtBQUNyQixxQkFBcUI7QUFDckIsNkJBQTZCO0FBQzdCLHdCQUF3QjtBQUN4QiIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9yYXRlbGltaXQuanM/YWIyMCJdLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG4vLyBJbnRlbnRpb25hbGx5IGtlZXBpbmcgdGhlIGtleSBicm9hZCwgYXMgd2UgZG9uJ3Qga25vdyBmb3Igc3VyZSB3aGF0IHJhdGUgbGltaXQgaGVhZGVycyBnZXQgcmV0dXJuZWQgZnJvbSBiYWNrZW5kXG5cbmNvbnN0IERFRkFVTFRfUkVUUllfQUZURVIgPSA2MCAqIDEwMDA7IC8vIDYwIHNlY29uZHNcblxuLyoqXG4gKiBFeHRyYWN0cyBSZXRyeS1BZnRlciB2YWx1ZSBmcm9tIHRoZSByZXF1ZXN0IGhlYWRlciBvciByZXR1cm5zIGRlZmF1bHQgdmFsdWVcbiAqIEBwYXJhbSBoZWFkZXIgc3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mICdSZXRyeS1BZnRlcicgaGVhZGVyXG4gKiBAcGFyYW0gbm93IGN1cnJlbnQgdW5peCB0aW1lc3RhbXBcbiAqXG4gKi9cbmZ1bmN0aW9uIHBhcnNlUmV0cnlBZnRlckhlYWRlcihoZWFkZXIsIG5vdyA9IERhdGUubm93KCkpIHtcbiAgY29uc3QgaGVhZGVyRGVsYXkgPSBwYXJzZUludChgJHtoZWFkZXJ9YCwgMTApO1xuICBpZiAoIWlzTmFOKGhlYWRlckRlbGF5KSkge1xuICAgIHJldHVybiBoZWFkZXJEZWxheSAqIDEwMDA7XG4gIH1cblxuICBjb25zdCBoZWFkZXJEYXRlID0gRGF0ZS5wYXJzZShgJHtoZWFkZXJ9YCk7XG4gIGlmICghaXNOYU4oaGVhZGVyRGF0ZSkpIHtcbiAgICByZXR1cm4gaGVhZGVyRGF0ZSAtIG5vdztcbiAgfVxuXG4gIHJldHVybiBERUZBVUxUX1JFVFJZX0FGVEVSO1xufVxuXG4vKipcbiAqIEdldHMgdGhlIHRpbWUgdGhhdCB0aGUgZ2l2ZW4gY2F0ZWdvcnkgaXMgZGlzYWJsZWQgdW50aWwgZm9yIHJhdGUgbGltaXRpbmcuXG4gKiBJbiBjYXNlIG5vIGNhdGVnb3J5LXNwZWNpZmljIGxpbWl0IGlzIHNldCBidXQgYSBnZW5lcmFsIHJhdGUgbGltaXQgYWNyb3NzIGFsbCBjYXRlZ29yaWVzIGlzIGFjdGl2ZSxcbiAqIHRoYXQgdGltZSBpcyByZXR1cm5lZC5cbiAqXG4gKiBAcmV0dXJuIHRoZSB0aW1lIGluIG1zIHRoYXQgdGhlIGNhdGVnb3J5IGlzIGRpc2FibGVkIHVudGlsIG9yIDAgaWYgdGhlcmUncyBubyBhY3RpdmUgcmF0ZSBsaW1pdC5cbiAqL1xuZnVuY3Rpb24gZGlzYWJsZWRVbnRpbChsaW1pdHMsIGRhdGFDYXRlZ29yeSkge1xuICByZXR1cm4gbGltaXRzW2RhdGFDYXRlZ29yeV0gfHwgbGltaXRzLmFsbCB8fCAwO1xufVxuXG4vKipcbiAqIENoZWNrcyBpZiBhIGNhdGVnb3J5IGlzIHJhdGUgbGltaXRlZFxuICovXG5mdW5jdGlvbiBpc1JhdGVMaW1pdGVkKGxpbWl0cywgZGF0YUNhdGVnb3J5LCBub3cgPSBEYXRlLm5vdygpKSB7XG4gIHJldHVybiBkaXNhYmxlZFVudGlsKGxpbWl0cywgZGF0YUNhdGVnb3J5KSA+IG5vdztcbn1cblxuLyoqXG4gKiBVcGRhdGUgcmF0ZWxpbWl0cyBmcm9tIGluY29taW5nIGhlYWRlcnMuXG4gKlxuICogQHJldHVybiB0aGUgdXBkYXRlZCBSYXRlTGltaXRzIG9iamVjdC5cbiAqL1xuZnVuY3Rpb24gdXBkYXRlUmF0ZUxpbWl0cyhcbiAgbGltaXRzLFxuICB7IHN0YXR1c0NvZGUsIGhlYWRlcnMgfSxcbiAgbm93ID0gRGF0ZS5ub3coKSxcbikge1xuICBjb25zdCB1cGRhdGVkUmF0ZUxpbWl0cyA9IHtcbiAgICAuLi5saW1pdHMsXG4gIH07XG5cbiAgLy8gXCJUaGUgbmFtZSBpcyBjYXNlLWluc2Vuc2l0aXZlLlwiXG4gIC8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FQSS9IZWFkZXJzL2dldFxuICBjb25zdCByYXRlTGltaXRIZWFkZXIgPSBoZWFkZXJzICYmIGhlYWRlcnNbJ3gtc2VudHJ5LXJhdGUtbGltaXRzJ107XG4gIGNvbnN0IHJldHJ5QWZ0ZXJIZWFkZXIgPSBoZWFkZXJzICYmIGhlYWRlcnNbJ3JldHJ5LWFmdGVyJ107XG5cbiAgaWYgKHJhdGVMaW1pdEhlYWRlcikge1xuICAgIC8qKlxuICAgICAqIHJhdGUgbGltaXQgaGVhZGVycyBhcmUgb2YgdGhlIGZvcm1cbiAgICAgKiAgICAgPGhlYWRlcj4sPGhlYWRlcj4sLi5cbiAgICAgKiB3aGVyZSBlYWNoIDxoZWFkZXI+IGlzIG9mIHRoZSBmb3JtXG4gICAgICogICAgIDxyZXRyeV9hZnRlcj46IDxjYXRlZ29yaWVzPjogPHNjb3BlPjogPHJlYXNvbl9jb2RlPjogPG5hbWVzcGFjZXM+XG4gICAgICogd2hlcmVcbiAgICAgKiAgICAgPHJldHJ5X2FmdGVyPiBpcyBhIGRlbGF5IGluIHNlY29uZHNcbiAgICAgKiAgICAgPGNhdGVnb3JpZXM+IGlzIHRoZSBldmVudCB0eXBlKHMpIChlcnJvciwgdHJhbnNhY3Rpb24sIGV0YykgYmVpbmcgcmF0ZSBsaW1pdGVkIGFuZCBpcyBvZiB0aGUgZm9ybVxuICAgICAqICAgICAgICAgPGNhdGVnb3J5Pjs8Y2F0ZWdvcnk+Oy4uLlxuICAgICAqICAgICA8c2NvcGU+IGlzIHdoYXQncyBiZWluZyBsaW1pdGVkIChvcmcsIHByb2plY3QsIG9yIGtleSkgLSBpZ25vcmVkIGJ5IFNES1xuICAgICAqICAgICA8cmVhc29uX2NvZGU+IGlzIGFuIGFyYml0cmFyeSBzdHJpbmcgbGlrZSBcIm9yZ19xdW90YVwiIC0gaWdub3JlZCBieSBTREtcbiAgICAgKiAgICAgPG5hbWVzcGFjZXM+IFNlbWljb2xvbi1zZXBhcmF0ZWQgbGlzdCBvZiBtZXRyaWMgbmFtZXNwYWNlIGlkZW50aWZpZXJzLiBEZWZpbmVzIHdoaWNoIG5hbWVzcGFjZShzKSB3aWxsIGJlIGFmZmVjdGVkLlxuICAgICAqICAgICAgICAgT25seSBwcmVzZW50IGlmIHJhdGUgbGltaXQgYXBwbGllcyB0byB0aGUgbWV0cmljX2J1Y2tldCBkYXRhIGNhdGVnb3J5LlxuICAgICAqL1xuICAgIGZvciAoY29uc3QgbGltaXQgb2YgcmF0ZUxpbWl0SGVhZGVyLnRyaW0oKS5zcGxpdCgnLCcpKSB7XG4gICAgICBjb25zdCBbcmV0cnlBZnRlciwgY2F0ZWdvcmllcywgLCAsIG5hbWVzcGFjZXNdID0gbGltaXQuc3BsaXQoJzonLCA1KSA7XG4gICAgICBjb25zdCBoZWFkZXJEZWxheSA9IHBhcnNlSW50KHJldHJ5QWZ0ZXIsIDEwKTtcbiAgICAgIGNvbnN0IGRlbGF5ID0gKCFpc05hTihoZWFkZXJEZWxheSkgPyBoZWFkZXJEZWxheSA6IDYwKSAqIDEwMDA7IC8vIDYwc2VjIGRlZmF1bHRcbiAgICAgIGlmICghY2F0ZWdvcmllcykge1xuICAgICAgICB1cGRhdGVkUmF0ZUxpbWl0cy5hbGwgPSBub3cgKyBkZWxheTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGZvciAoY29uc3QgY2F0ZWdvcnkgb2YgY2F0ZWdvcmllcy5zcGxpdCgnOycpKSB7XG4gICAgICAgICAgaWYgKGNhdGVnb3J5ID09PSAnbWV0cmljX2J1Y2tldCcpIHtcbiAgICAgICAgICAgIC8vIG5hbWVzcGFjZXMgd2lsbCBiZSBwcmVzZW50IHdoZW4gY2F0ZWdvcnkgPT09ICdtZXRyaWNfYnVja2V0J1xuICAgICAgICAgICAgaWYgKCFuYW1lc3BhY2VzIHx8IG5hbWVzcGFjZXMuc3BsaXQoJzsnKS5pbmNsdWRlcygnY3VzdG9tJykpIHtcbiAgICAgICAgICAgICAgdXBkYXRlZFJhdGVMaW1pdHNbY2F0ZWdvcnldID0gbm93ICsgZGVsYXk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHVwZGF0ZWRSYXRlTGltaXRzW2NhdGVnb3J5XSA9IG5vdyArIGRlbGF5O1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfSBlbHNlIGlmIChyZXRyeUFmdGVySGVhZGVyKSB7XG4gICAgdXBkYXRlZFJhdGVMaW1pdHMuYWxsID0gbm93ICsgcGFyc2VSZXRyeUFmdGVySGVhZGVyKHJldHJ5QWZ0ZXJIZWFkZXIsIG5vdyk7XG4gIH0gZWxzZSBpZiAoc3RhdHVzQ29kZSA9PT0gNDI5KSB7XG4gICAgdXBkYXRlZFJhdGVMaW1pdHMuYWxsID0gbm93ICsgNjAgKiAxMDAwO1xuICB9XG5cbiAgcmV0dXJuIHVwZGF0ZWRSYXRlTGltaXRzO1xufVxuXG5leHBvcnRzLkRFRkFVTFRfUkVUUllfQUZURVIgPSBERUZBVUxUX1JFVFJZX0FGVEVSO1xuZXhwb3J0cy5kaXNhYmxlZFVudGlsID0gZGlzYWJsZWRVbnRpbDtcbmV4cG9ydHMuaXNSYXRlTGltaXRlZCA9IGlzUmF0ZUxpbWl0ZWQ7XG5leHBvcnRzLnBhcnNlUmV0cnlBZnRlckhlYWRlciA9IHBhcnNlUmV0cnlBZnRlckhlYWRlcjtcbmV4cG9ydHMudXBkYXRlUmF0ZUxpbWl0cyA9IHVwZGF0ZVJhdGVMaW1pdHM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yYXRlbGltaXQuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/ratelimit.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/requestdata.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/requestdata.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst cookie = __webpack_require__(/*! ./cookie.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/cookie.js\");\nconst debugBuild = __webpack_require__(/*! ./debug-build.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/debug-build.js\");\nconst is = __webpack_require__(/*! ./is.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/is.js\");\nconst logger = __webpack_require__(/*! ./logger.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/logger.js\");\nconst normalize = __webpack_require__(/*! ./normalize.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/normalize.js\");\nconst url = __webpack_require__(/*! ./url.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/url.js\");\n\nconst DEFAULT_INCLUDES = {\n  ip: false,\n  request: true,\n  transaction: true,\n  user: true,\n};\nconst DEFAULT_REQUEST_INCLUDES = ['cookies', 'data', 'headers', 'method', 'query_string', 'url'];\nconst DEFAULT_USER_INCLUDES = ['id', 'username', 'email'];\n\n/**\n * Options deciding what parts of the request to use when enhancing an event\n */\n\n/**\n * Extracts a complete and parameterized path from the request object and uses it to construct transaction name.\n * If the parameterized transaction name cannot be extracted, we fall back to the raw URL.\n *\n * Additionally, this function determines and returns the transaction name source\n *\n * eg. GET /mountpoint/user/:id\n *\n * @param req A request object\n * @param options What to include in the transaction name (method, path, or a custom route name to be\n *                used instead of the request's route)\n *\n * @returns A tuple of the fully constructed transaction name [0] and its source [1] (can be either 'route' or 'url')\n */\nfunction extractPathForTransaction(\n  req,\n  options = {},\n) {\n  const method = req.method && req.method.toUpperCase();\n\n  let path = '';\n  let source = 'url';\n\n  // Check to see if there's a parameterized route we can use (as there is in Express)\n  if (options.customRoute || req.route) {\n    path = options.customRoute || `${req.baseUrl || ''}${req.route && req.route.path}`;\n    source = 'route';\n  }\n\n  // Otherwise, just take the original URL\n  else if (req.originalUrl || req.url) {\n    path = url.stripUrlQueryAndFragment(req.originalUrl || req.url || '');\n  }\n\n  let name = '';\n  if (options.method && method) {\n    name += method;\n  }\n  if (options.method && options.path) {\n    name += ' ';\n  }\n  if (options.path && path) {\n    name += path;\n  }\n\n  return [name, source];\n}\n\n/** JSDoc */\nfunction extractTransaction(req, type) {\n  switch (type) {\n    case 'path': {\n      return extractPathForTransaction(req, { path: true })[0];\n    }\n    case 'handler': {\n      return (req.route && req.route.stack && req.route.stack[0] && req.route.stack[0].name) || '<anonymous>';\n    }\n    case 'methodPath':\n    default: {\n      // if exist _reconstructedRoute return that path instead of route.path\n      const customRoute = req._reconstructedRoute ? req._reconstructedRoute : undefined;\n      return extractPathForTransaction(req, { path: true, method: true, customRoute })[0];\n    }\n  }\n}\n\n/** JSDoc */\nfunction extractUserData(\n  user\n\n,\n  keys,\n) {\n  const extractedUser = {};\n  const attributes = Array.isArray(keys) ? keys : DEFAULT_USER_INCLUDES;\n\n  attributes.forEach(key => {\n    if (user && key in user) {\n      extractedUser[key] = user[key];\n    }\n  });\n\n  return extractedUser;\n}\n\n/**\n * Normalize data from the request object, accounting for framework differences.\n *\n * @param req The request object from which to extract data\n * @param options.include An optional array of keys to include in the normalized data. Defaults to\n * DEFAULT_REQUEST_INCLUDES if not provided.\n * @param options.deps Injected, platform-specific dependencies\n * @returns An object containing normalized request data\n */\nfunction extractRequestData(\n  req,\n  options\n\n,\n) {\n  const { include = DEFAULT_REQUEST_INCLUDES } = options || {};\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const requestData = {};\n\n  // headers:\n  //   node, express, koa, nextjs: req.headers\n  const headers = (req.headers || {})\n\n;\n  // method:\n  //   node, express, koa, nextjs: req.method\n  const method = req.method;\n  // host:\n  //   express: req.hostname in > 4 and req.host in < 4\n  //   koa: req.host\n  //   node, nextjs: req.headers.host\n  // Express 4 mistakenly strips off port number from req.host / req.hostname so we can't rely on them\n  // See: https://github.com/expressjs/express/issues/3047#issuecomment-236653223\n  // Also: https://github.com/getsentry/sentry-javascript/issues/1917\n  const host = headers.host || req.hostname || req.host || '<no host>';\n  // protocol:\n  //   node, nextjs: <n/a>\n  //   express, koa: req.protocol\n  const protocol = req.protocol === 'https' || (req.socket && req.socket.encrypted) ? 'https' : 'http';\n  // url (including path and query string):\n  //   node, express: req.originalUrl\n  //   koa, nextjs: req.url\n  const originalUrl = req.originalUrl || req.url || '';\n  // absolute url\n  const absoluteUrl = originalUrl.startsWith(protocol) ? originalUrl : `${protocol}://${host}${originalUrl}`;\n  include.forEach(key => {\n    switch (key) {\n      case 'headers': {\n        requestData.headers = headers;\n\n        // Remove the Cookie header in case cookie data should not be included in the event\n        if (!include.includes('cookies')) {\n          delete (requestData.headers ).cookie;\n        }\n\n        break;\n      }\n      case 'method': {\n        requestData.method = method;\n        break;\n      }\n      case 'url': {\n        requestData.url = absoluteUrl;\n        break;\n      }\n      case 'cookies': {\n        // cookies:\n        //   node, express, koa: req.headers.cookie\n        //   vercel, sails.js, express (w/ cookie middleware), nextjs: req.cookies\n        requestData.cookies =\n          // TODO (v8 / #5257): We're only sending the empty object for backwards compatibility, so the last bit can\n          // come off in v8\n          req.cookies || (headers.cookie && cookie.parseCookie(headers.cookie)) || {};\n        break;\n      }\n      case 'query_string': {\n        // query string:\n        //   node: req.url (raw)\n        //   express, koa, nextjs: req.query\n        requestData.query_string = extractQueryParams(req);\n        break;\n      }\n      case 'data': {\n        if (method === 'GET' || method === 'HEAD') {\n          break;\n        }\n        // body data:\n        //   express, koa, nextjs: req.body\n        //\n        //   when using node by itself, you have to read the incoming stream(see\n        //   https://nodejs.dev/learn/get-http-request-body-data-using-nodejs); if a user is doing that, we can't know\n        //   where they're going to store the final result, so they'll have to capture this data themselves\n        if (req.body !== undefined) {\n          requestData.data = is.isString(req.body) ? req.body : JSON.stringify(normalize.normalize(req.body));\n        }\n        break;\n      }\n      default: {\n        if ({}.hasOwnProperty.call(req, key)) {\n          requestData[key] = (req )[key];\n        }\n      }\n    }\n  });\n\n  return requestData;\n}\n\n/**\n * Add data from the given request to the given event\n *\n * @param event The event to which the request data will be added\n * @param req Request object\n * @param options.include Flags to control what data is included\n * @param options.deps Injected platform-specific dependencies\n * @returns The mutated `Event` object\n */\nfunction addRequestDataToEvent(\n  event,\n  req,\n  options,\n) {\n  const include = {\n    ...DEFAULT_INCLUDES,\n    ...(options && options.include),\n  };\n\n  if (include.request) {\n    const extractedRequestData = Array.isArray(include.request)\n      ? extractRequestData(req, { include: include.request })\n      : extractRequestData(req);\n\n    event.request = {\n      ...event.request,\n      ...extractedRequestData,\n    };\n  }\n\n  if (include.user) {\n    const extractedUser = req.user && is.isPlainObject(req.user) ? extractUserData(req.user, include.user) : {};\n\n    if (Object.keys(extractedUser).length) {\n      event.user = {\n        ...event.user,\n        ...extractedUser,\n      };\n    }\n  }\n\n  // client ip:\n  //   node, nextjs: req.socket.remoteAddress\n  //   express, koa: req.ip\n  if (include.ip) {\n    const ip = req.ip || (req.socket && req.socket.remoteAddress);\n    if (ip) {\n      event.user = {\n        ...event.user,\n        ip_address: ip,\n      };\n    }\n  }\n\n  if (include.transaction && !event.transaction && event.type === 'transaction') {\n    // TODO do we even need this anymore?\n    // TODO make this work for nextjs\n    event.transaction = extractTransaction(req, include.transaction);\n  }\n\n  return event;\n}\n\nfunction extractQueryParams(req) {\n  // url (including path and query string):\n  //   node, express: req.originalUrl\n  //   koa, nextjs: req.url\n  let originalUrl = req.originalUrl || req.url || '';\n\n  if (!originalUrl) {\n    return;\n  }\n\n  // The `URL` constructor can't handle internal URLs of the form `/some/path/here`, so stick a dummy protocol and\n  // hostname on the beginning. Since the point here is just to grab the query string, it doesn't matter what we use.\n  if (originalUrl.startsWith('/')) {\n    originalUrl = `http://dogs.are.great${originalUrl}`;\n  }\n\n  try {\n    const queryParams = req.query || new URL(originalUrl).search.slice(1);\n    return queryParams.length ? queryParams : undefined;\n  } catch (e2) {\n    return undefined;\n  }\n}\n\n/**\n * Transforms a `Headers` object that implements the `Web Fetch API` (https://developer.mozilla.org/en-US/docs/Web/API/Headers) into a simple key-value dict.\n * The header keys will be lower case: e.g. A \"Content-Type\" header will be stored as \"content-type\".\n */\n// TODO(v8): Make this function return undefined when the extraction fails.\nfunction winterCGHeadersToDict(winterCGHeaders) {\n  const headers = {};\n  try {\n    winterCGHeaders.forEach((value, key) => {\n      if (typeof value === 'string') {\n        // We check that value is a string even though it might be redundant to make sure prototype pollution is not possible.\n        headers[key] = value;\n      }\n    });\n  } catch (e) {\n    debugBuild.DEBUG_BUILD &&\n      logger.logger.warn('Sentry failed extracting headers from a request object. If you see this, please file an issue.');\n  }\n\n  return headers;\n}\n\n/**\n * Converts a `Request` object that implements the `Web Fetch API` (https://developer.mozilla.org/en-US/docs/Web/API/Headers) into the format that the `RequestData` integration understands.\n */\nfunction winterCGRequestToRequestData(req) {\n  const headers = winterCGHeadersToDict(req.headers);\n  return {\n    method: req.method,\n    url: req.url,\n    headers,\n  };\n}\n\nexports.DEFAULT_USER_INCLUDES = DEFAULT_USER_INCLUDES;\nexports.addRequestDataToEvent = addRequestDataToEvent;\nexports.extractPathForTransaction = extractPathForTransaction;\nexports.extractRequestData = extractRequestData;\nexports.winterCGHeadersToDict = winterCGHeadersToDict;\nexports.winterCGRequestToRequestData = winterCGRequestToRequestData;\n//# sourceMappingURL=requestdata.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9yZXF1ZXN0ZGF0YS5qcyIsIm1hcHBpbmdzIjoiQUFBQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7O0FBRTdELGVBQWUsbUJBQU8sQ0FBQywwSEFBYTtBQUNwQyxtQkFBbUIsbUJBQU8sQ0FBQyxvSUFBa0I7QUFDN0MsV0FBVyxtQkFBTyxDQUFDLGtIQUFTO0FBQzVCLGVBQWUsbUJBQU8sQ0FBQywwSEFBYTtBQUNwQyxrQkFBa0IsbUJBQU8sQ0FBQyxnSUFBZ0I7QUFDMUMsWUFBWSxtQkFBTyxDQUFDLG9IQUFVOztBQUU5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHFDQUFxQyxrQkFBa0IsRUFBRSw0QkFBNEI7QUFDckY7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLFlBQVk7QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4Qyx1Q0FBdUM7QUFDckY7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsVUFBVSxxQ0FBcUM7QUFDL0M7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esb0NBQW9DOztBQUVwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwRUFBMEUsU0FBUyxLQUFLLEtBQUssRUFBRSxZQUFZO0FBQzNHO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnRkFBZ0Y7QUFDaEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxrQ0FBa0MsMEJBQTBCO0FBQzVEOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLDBDQUEwQyxZQUFZO0FBQ3REOztBQUVBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsNkJBQTZCO0FBQzdCLDZCQUE2QjtBQUM3QixpQ0FBaUM7QUFDakMsMEJBQTBCO0FBQzFCLDZCQUE2QjtBQUM3QixvQ0FBb0M7QUFDcEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0Zm9saW8tcHJvamVjdC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2VudHJ5K3V0aWxzQDguMTcuMC9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9idWlsZC9janMvcmVxdWVzdGRhdGEuanM/YzUxZiJdLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG5jb25zdCBjb29raWUgPSByZXF1aXJlKCcuL2Nvb2tpZS5qcycpO1xuY29uc3QgZGVidWdCdWlsZCA9IHJlcXVpcmUoJy4vZGVidWctYnVpbGQuanMnKTtcbmNvbnN0IGlzID0gcmVxdWlyZSgnLi9pcy5qcycpO1xuY29uc3QgbG9nZ2VyID0gcmVxdWlyZSgnLi9sb2dnZXIuanMnKTtcbmNvbnN0IG5vcm1hbGl6ZSA9IHJlcXVpcmUoJy4vbm9ybWFsaXplLmpzJyk7XG5jb25zdCB1cmwgPSByZXF1aXJlKCcuL3VybC5qcycpO1xuXG5jb25zdCBERUZBVUxUX0lOQ0xVREVTID0ge1xuICBpcDogZmFsc2UsXG4gIHJlcXVlc3Q6IHRydWUsXG4gIHRyYW5zYWN0aW9uOiB0cnVlLFxuICB1c2VyOiB0cnVlLFxufTtcbmNvbnN0IERFRkFVTFRfUkVRVUVTVF9JTkNMVURFUyA9IFsnY29va2llcycsICdkYXRhJywgJ2hlYWRlcnMnLCAnbWV0aG9kJywgJ3F1ZXJ5X3N0cmluZycsICd1cmwnXTtcbmNvbnN0IERFRkFVTFRfVVNFUl9JTkNMVURFUyA9IFsnaWQnLCAndXNlcm5hbWUnLCAnZW1haWwnXTtcblxuLyoqXG4gKiBPcHRpb25zIGRlY2lkaW5nIHdoYXQgcGFydHMgb2YgdGhlIHJlcXVlc3QgdG8gdXNlIHdoZW4gZW5oYW5jaW5nIGFuIGV2ZW50XG4gKi9cblxuLyoqXG4gKiBFeHRyYWN0cyBhIGNvbXBsZXRlIGFuZCBwYXJhbWV0ZXJpemVkIHBhdGggZnJvbSB0aGUgcmVxdWVzdCBvYmplY3QgYW5kIHVzZXMgaXQgdG8gY29uc3RydWN0IHRyYW5zYWN0aW9uIG5hbWUuXG4gKiBJZiB0aGUgcGFyYW1ldGVyaXplZCB0cmFuc2FjdGlvbiBuYW1lIGNhbm5vdCBiZSBleHRyYWN0ZWQsIHdlIGZhbGwgYmFjayB0byB0aGUgcmF3IFVSTC5cbiAqXG4gKiBBZGRpdGlvbmFsbHksIHRoaXMgZnVuY3Rpb24gZGV0ZXJtaW5lcyBhbmQgcmV0dXJucyB0aGUgdHJhbnNhY3Rpb24gbmFtZSBzb3VyY2VcbiAqXG4gKiBlZy4gR0VUIC9tb3VudHBvaW50L3VzZXIvOmlkXG4gKlxuICogQHBhcmFtIHJlcSBBIHJlcXVlc3Qgb2JqZWN0XG4gKiBAcGFyYW0gb3B0aW9ucyBXaGF0IHRvIGluY2x1ZGUgaW4gdGhlIHRyYW5zYWN0aW9uIG5hbWUgKG1ldGhvZCwgcGF0aCwgb3IgYSBjdXN0b20gcm91dGUgbmFtZSB0byBiZVxuICogICAgICAgICAgICAgICAgdXNlZCBpbnN0ZWFkIG9mIHRoZSByZXF1ZXN0J3Mgcm91dGUpXG4gKlxuICogQHJldHVybnMgQSB0dXBsZSBvZiB0aGUgZnVsbHkgY29uc3RydWN0ZWQgdHJhbnNhY3Rpb24gbmFtZSBbMF0gYW5kIGl0cyBzb3VyY2UgWzFdIChjYW4gYmUgZWl0aGVyICdyb3V0ZScgb3IgJ3VybCcpXG4gKi9cbmZ1bmN0aW9uIGV4dHJhY3RQYXRoRm9yVHJhbnNhY3Rpb24oXG4gIHJlcSxcbiAgb3B0aW9ucyA9IHt9LFxuKSB7XG4gIGNvbnN0IG1ldGhvZCA9IHJlcS5tZXRob2QgJiYgcmVxLm1ldGhvZC50b1VwcGVyQ2FzZSgpO1xuXG4gIGxldCBwYXRoID0gJyc7XG4gIGxldCBzb3VyY2UgPSAndXJsJztcblxuICAvLyBDaGVjayB0byBzZWUgaWYgdGhlcmUncyBhIHBhcmFtZXRlcml6ZWQgcm91dGUgd2UgY2FuIHVzZSAoYXMgdGhlcmUgaXMgaW4gRXhwcmVzcylcbiAgaWYgKG9wdGlvbnMuY3VzdG9tUm91dGUgfHwgcmVxLnJvdXRlKSB7XG4gICAgcGF0aCA9IG9wdGlvbnMuY3VzdG9tUm91dGUgfHwgYCR7cmVxLmJhc2VVcmwgfHwgJyd9JHtyZXEucm91dGUgJiYgcmVxLnJvdXRlLnBhdGh9YDtcbiAgICBzb3VyY2UgPSAncm91dGUnO1xuICB9XG5cbiAgLy8gT3RoZXJ3aXNlLCBqdXN0IHRha2UgdGhlIG9yaWdpbmFsIFVSTFxuICBlbHNlIGlmIChyZXEub3JpZ2luYWxVcmwgfHwgcmVxLnVybCkge1xuICAgIHBhdGggPSB1cmwuc3RyaXBVcmxRdWVyeUFuZEZyYWdtZW50KHJlcS5vcmlnaW5hbFVybCB8fCByZXEudXJsIHx8ICcnKTtcbiAgfVxuXG4gIGxldCBuYW1lID0gJyc7XG4gIGlmIChvcHRpb25zLm1ldGhvZCAmJiBtZXRob2QpIHtcbiAgICBuYW1lICs9IG1ldGhvZDtcbiAgfVxuICBpZiAob3B0aW9ucy5tZXRob2QgJiYgb3B0aW9ucy5wYXRoKSB7XG4gICAgbmFtZSArPSAnICc7XG4gIH1cbiAgaWYgKG9wdGlvbnMucGF0aCAmJiBwYXRoKSB7XG4gICAgbmFtZSArPSBwYXRoO1xuICB9XG5cbiAgcmV0dXJuIFtuYW1lLCBzb3VyY2VdO1xufVxuXG4vKiogSlNEb2MgKi9cbmZ1bmN0aW9uIGV4dHJhY3RUcmFuc2FjdGlvbihyZXEsIHR5cGUpIHtcbiAgc3dpdGNoICh0eXBlKSB7XG4gICAgY2FzZSAncGF0aCc6IHtcbiAgICAgIHJldHVybiBleHRyYWN0UGF0aEZvclRyYW5zYWN0aW9uKHJlcSwgeyBwYXRoOiB0cnVlIH0pWzBdO1xuICAgIH1cbiAgICBjYXNlICdoYW5kbGVyJzoge1xuICAgICAgcmV0dXJuIChyZXEucm91dGUgJiYgcmVxLnJvdXRlLnN0YWNrICYmIHJlcS5yb3V0ZS5zdGFja1swXSAmJiByZXEucm91dGUuc3RhY2tbMF0ubmFtZSkgfHwgJzxhbm9ueW1vdXM+JztcbiAgICB9XG4gICAgY2FzZSAnbWV0aG9kUGF0aCc6XG4gICAgZGVmYXVsdDoge1xuICAgICAgLy8gaWYgZXhpc3QgX3JlY29uc3RydWN0ZWRSb3V0ZSByZXR1cm4gdGhhdCBwYXRoIGluc3RlYWQgb2Ygcm91dGUucGF0aFxuICAgICAgY29uc3QgY3VzdG9tUm91dGUgPSByZXEuX3JlY29uc3RydWN0ZWRSb3V0ZSA/IHJlcS5fcmVjb25zdHJ1Y3RlZFJvdXRlIDogdW5kZWZpbmVkO1xuICAgICAgcmV0dXJuIGV4dHJhY3RQYXRoRm9yVHJhbnNhY3Rpb24ocmVxLCB7IHBhdGg6IHRydWUsIG1ldGhvZDogdHJ1ZSwgY3VzdG9tUm91dGUgfSlbMF07XG4gICAgfVxuICB9XG59XG5cbi8qKiBKU0RvYyAqL1xuZnVuY3Rpb24gZXh0cmFjdFVzZXJEYXRhKFxuICB1c2VyXG5cbixcbiAga2V5cyxcbikge1xuICBjb25zdCBleHRyYWN0ZWRVc2VyID0ge307XG4gIGNvbnN0IGF0dHJpYnV0ZXMgPSBBcnJheS5pc0FycmF5KGtleXMpID8ga2V5cyA6IERFRkFVTFRfVVNFUl9JTkNMVURFUztcblxuICBhdHRyaWJ1dGVzLmZvckVhY2goa2V5ID0+IHtcbiAgICBpZiAodXNlciAmJiBrZXkgaW4gdXNlcikge1xuICAgICAgZXh0cmFjdGVkVXNlcltrZXldID0gdXNlcltrZXldO1xuICAgIH1cbiAgfSk7XG5cbiAgcmV0dXJuIGV4dHJhY3RlZFVzZXI7XG59XG5cbi8qKlxuICogTm9ybWFsaXplIGRhdGEgZnJvbSB0aGUgcmVxdWVzdCBvYmplY3QsIGFjY291bnRpbmcgZm9yIGZyYW1ld29yayBkaWZmZXJlbmNlcy5cbiAqXG4gKiBAcGFyYW0gcmVxIFRoZSByZXF1ZXN0IG9iamVjdCBmcm9tIHdoaWNoIHRvIGV4dHJhY3QgZGF0YVxuICogQHBhcmFtIG9wdGlvbnMuaW5jbHVkZSBBbiBvcHRpb25hbCBhcnJheSBvZiBrZXlzIHRvIGluY2x1ZGUgaW4gdGhlIG5vcm1hbGl6ZWQgZGF0YS4gRGVmYXVsdHMgdG9cbiAqIERFRkFVTFRfUkVRVUVTVF9JTkNMVURFUyBpZiBub3QgcHJvdmlkZWQuXG4gKiBAcGFyYW0gb3B0aW9ucy5kZXBzIEluamVjdGVkLCBwbGF0Zm9ybS1zcGVjaWZpYyBkZXBlbmRlbmNpZXNcbiAqIEByZXR1cm5zIEFuIG9iamVjdCBjb250YWluaW5nIG5vcm1hbGl6ZWQgcmVxdWVzdCBkYXRhXG4gKi9cbmZ1bmN0aW9uIGV4dHJhY3RSZXF1ZXN0RGF0YShcbiAgcmVxLFxuICBvcHRpb25zXG5cbixcbikge1xuICBjb25zdCB7IGluY2x1ZGUgPSBERUZBVUxUX1JFUVVFU1RfSU5DTFVERVMgfSA9IG9wdGlvbnMgfHwge307XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG4gIGNvbnN0IHJlcXVlc3REYXRhID0ge307XG5cbiAgLy8gaGVhZGVyczpcbiAgLy8gICBub2RlLCBleHByZXNzLCBrb2EsIG5leHRqczogcmVxLmhlYWRlcnNcbiAgY29uc3QgaGVhZGVycyA9IChyZXEuaGVhZGVycyB8fCB7fSlcblxuO1xuICAvLyBtZXRob2Q6XG4gIC8vICAgbm9kZSwgZXhwcmVzcywga29hLCBuZXh0anM6IHJlcS5tZXRob2RcbiAgY29uc3QgbWV0aG9kID0gcmVxLm1ldGhvZDtcbiAgLy8gaG9zdDpcbiAgLy8gICBleHByZXNzOiByZXEuaG9zdG5hbWUgaW4gPiA0IGFuZCByZXEuaG9zdCBpbiA8IDRcbiAgLy8gICBrb2E6IHJlcS5ob3N0XG4gIC8vICAgbm9kZSwgbmV4dGpzOiByZXEuaGVhZGVycy5ob3N0XG4gIC8vIEV4cHJlc3MgNCBtaXN0YWtlbmx5IHN0cmlwcyBvZmYgcG9ydCBudW1iZXIgZnJvbSByZXEuaG9zdCAvIHJlcS5ob3N0bmFtZSBzbyB3ZSBjYW4ndCByZWx5IG9uIHRoZW1cbiAgLy8gU2VlOiBodHRwczovL2dpdGh1Yi5jb20vZXhwcmVzc2pzL2V4cHJlc3MvaXNzdWVzLzMwNDcjaXNzdWVjb21tZW50LTIzNjY1MzIyM1xuICAvLyBBbHNvOiBodHRwczovL2dpdGh1Yi5jb20vZ2V0c2VudHJ5L3NlbnRyeS1qYXZhc2NyaXB0L2lzc3Vlcy8xOTE3XG4gIGNvbnN0IGhvc3QgPSBoZWFkZXJzLmhvc3QgfHwgcmVxLmhvc3RuYW1lIHx8IHJlcS5ob3N0IHx8ICc8bm8gaG9zdD4nO1xuICAvLyBwcm90b2NvbDpcbiAgLy8gICBub2RlLCBuZXh0anM6IDxuL2E+XG4gIC8vICAgZXhwcmVzcywga29hOiByZXEucHJvdG9jb2xcbiAgY29uc3QgcHJvdG9jb2wgPSByZXEucHJvdG9jb2wgPT09ICdodHRwcycgfHwgKHJlcS5zb2NrZXQgJiYgcmVxLnNvY2tldC5lbmNyeXB0ZWQpID8gJ2h0dHBzJyA6ICdodHRwJztcbiAgLy8gdXJsIChpbmNsdWRpbmcgcGF0aCBhbmQgcXVlcnkgc3RyaW5nKTpcbiAgLy8gICBub2RlLCBleHByZXNzOiByZXEub3JpZ2luYWxVcmxcbiAgLy8gICBrb2EsIG5leHRqczogcmVxLnVybFxuICBjb25zdCBvcmlnaW5hbFVybCA9IHJlcS5vcmlnaW5hbFVybCB8fCByZXEudXJsIHx8ICcnO1xuICAvLyBhYnNvbHV0ZSB1cmxcbiAgY29uc3QgYWJzb2x1dGVVcmwgPSBvcmlnaW5hbFVybC5zdGFydHNXaXRoKHByb3RvY29sKSA/IG9yaWdpbmFsVXJsIDogYCR7cHJvdG9jb2x9Oi8vJHtob3N0fSR7b3JpZ2luYWxVcmx9YDtcbiAgaW5jbHVkZS5mb3JFYWNoKGtleSA9PiB7XG4gICAgc3dpdGNoIChrZXkpIHtcbiAgICAgIGNhc2UgJ2hlYWRlcnMnOiB7XG4gICAgICAgIHJlcXVlc3REYXRhLmhlYWRlcnMgPSBoZWFkZXJzO1xuXG4gICAgICAgIC8vIFJlbW92ZSB0aGUgQ29va2llIGhlYWRlciBpbiBjYXNlIGNvb2tpZSBkYXRhIHNob3VsZCBub3QgYmUgaW5jbHVkZWQgaW4gdGhlIGV2ZW50XG4gICAgICAgIGlmICghaW5jbHVkZS5pbmNsdWRlcygnY29va2llcycpKSB7XG4gICAgICAgICAgZGVsZXRlIChyZXF1ZXN0RGF0YS5oZWFkZXJzICkuY29va2llO1xuICAgICAgICB9XG5cbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBjYXNlICdtZXRob2QnOiB7XG4gICAgICAgIHJlcXVlc3REYXRhLm1ldGhvZCA9IG1ldGhvZDtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBjYXNlICd1cmwnOiB7XG4gICAgICAgIHJlcXVlc3REYXRhLnVybCA9IGFic29sdXRlVXJsO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIGNhc2UgJ2Nvb2tpZXMnOiB7XG4gICAgICAgIC8vIGNvb2tpZXM6XG4gICAgICAgIC8vICAgbm9kZSwgZXhwcmVzcywga29hOiByZXEuaGVhZGVycy5jb29raWVcbiAgICAgICAgLy8gICB2ZXJjZWwsIHNhaWxzLmpzLCBleHByZXNzICh3LyBjb29raWUgbWlkZGxld2FyZSksIG5leHRqczogcmVxLmNvb2tpZXNcbiAgICAgICAgcmVxdWVzdERhdGEuY29va2llcyA9XG4gICAgICAgICAgLy8gVE9ETyAodjggLyAjNTI1Nyk6IFdlJ3JlIG9ubHkgc2VuZGluZyB0aGUgZW1wdHkgb2JqZWN0IGZvciBiYWNrd2FyZHMgY29tcGF0aWJpbGl0eSwgc28gdGhlIGxhc3QgYml0IGNhblxuICAgICAgICAgIC8vIGNvbWUgb2ZmIGluIHY4XG4gICAgICAgICAgcmVxLmNvb2tpZXMgfHwgKGhlYWRlcnMuY29va2llICYmIGNvb2tpZS5wYXJzZUNvb2tpZShoZWFkZXJzLmNvb2tpZSkpIHx8IHt9O1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIGNhc2UgJ3F1ZXJ5X3N0cmluZyc6IHtcbiAgICAgICAgLy8gcXVlcnkgc3RyaW5nOlxuICAgICAgICAvLyAgIG5vZGU6IHJlcS51cmwgKHJhdylcbiAgICAgICAgLy8gICBleHByZXNzLCBrb2EsIG5leHRqczogcmVxLnF1ZXJ5XG4gICAgICAgIHJlcXVlc3REYXRhLnF1ZXJ5X3N0cmluZyA9IGV4dHJhY3RRdWVyeVBhcmFtcyhyZXEpO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIGNhc2UgJ2RhdGEnOiB7XG4gICAgICAgIGlmIChtZXRob2QgPT09ICdHRVQnIHx8IG1ldGhvZCA9PT0gJ0hFQUQnKSB7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgLy8gYm9keSBkYXRhOlxuICAgICAgICAvLyAgIGV4cHJlc3MsIGtvYSwgbmV4dGpzOiByZXEuYm9keVxuICAgICAgICAvL1xuICAgICAgICAvLyAgIHdoZW4gdXNpbmcgbm9kZSBieSBpdHNlbGYsIHlvdSBoYXZlIHRvIHJlYWQgdGhlIGluY29taW5nIHN0cmVhbShzZWVcbiAgICAgICAgLy8gICBodHRwczovL25vZGVqcy5kZXYvbGVhcm4vZ2V0LWh0dHAtcmVxdWVzdC1ib2R5LWRhdGEtdXNpbmctbm9kZWpzKTsgaWYgYSB1c2VyIGlzIGRvaW5nIHRoYXQsIHdlIGNhbid0IGtub3dcbiAgICAgICAgLy8gICB3aGVyZSB0aGV5J3JlIGdvaW5nIHRvIHN0b3JlIHRoZSBmaW5hbCByZXN1bHQsIHNvIHRoZXknbGwgaGF2ZSB0byBjYXB0dXJlIHRoaXMgZGF0YSB0aGVtc2VsdmVzXG4gICAgICAgIGlmIChyZXEuYm9keSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgcmVxdWVzdERhdGEuZGF0YSA9IGlzLmlzU3RyaW5nKHJlcS5ib2R5KSA/IHJlcS5ib2R5IDogSlNPTi5zdHJpbmdpZnkobm9ybWFsaXplLm5vcm1hbGl6ZShyZXEuYm9keSkpO1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgZGVmYXVsdDoge1xuICAgICAgICBpZiAoe30uaGFzT3duUHJvcGVydHkuY2FsbChyZXEsIGtleSkpIHtcbiAgICAgICAgICByZXF1ZXN0RGF0YVtrZXldID0gKHJlcSApW2tleV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH0pO1xuXG4gIHJldHVybiByZXF1ZXN0RGF0YTtcbn1cblxuLyoqXG4gKiBBZGQgZGF0YSBmcm9tIHRoZSBnaXZlbiByZXF1ZXN0IHRvIHRoZSBnaXZlbiBldmVudFxuICpcbiAqIEBwYXJhbSBldmVudCBUaGUgZXZlbnQgdG8gd2hpY2ggdGhlIHJlcXVlc3QgZGF0YSB3aWxsIGJlIGFkZGVkXG4gKiBAcGFyYW0gcmVxIFJlcXVlc3Qgb2JqZWN0XG4gKiBAcGFyYW0gb3B0aW9ucy5pbmNsdWRlIEZsYWdzIHRvIGNvbnRyb2wgd2hhdCBkYXRhIGlzIGluY2x1ZGVkXG4gKiBAcGFyYW0gb3B0aW9ucy5kZXBzIEluamVjdGVkIHBsYXRmb3JtLXNwZWNpZmljIGRlcGVuZGVuY2llc1xuICogQHJldHVybnMgVGhlIG11dGF0ZWQgYEV2ZW50YCBvYmplY3RcbiAqL1xuZnVuY3Rpb24gYWRkUmVxdWVzdERhdGFUb0V2ZW50KFxuICBldmVudCxcbiAgcmVxLFxuICBvcHRpb25zLFxuKSB7XG4gIGNvbnN0IGluY2x1ZGUgPSB7XG4gICAgLi4uREVGQVVMVF9JTkNMVURFUyxcbiAgICAuLi4ob3B0aW9ucyAmJiBvcHRpb25zLmluY2x1ZGUpLFxuICB9O1xuXG4gIGlmIChpbmNsdWRlLnJlcXVlc3QpIHtcbiAgICBjb25zdCBleHRyYWN0ZWRSZXF1ZXN0RGF0YSA9IEFycmF5LmlzQXJyYXkoaW5jbHVkZS5yZXF1ZXN0KVxuICAgICAgPyBleHRyYWN0UmVxdWVzdERhdGEocmVxLCB7IGluY2x1ZGU6IGluY2x1ZGUucmVxdWVzdCB9KVxuICAgICAgOiBleHRyYWN0UmVxdWVzdERhdGEocmVxKTtcblxuICAgIGV2ZW50LnJlcXVlc3QgPSB7XG4gICAgICAuLi5ldmVudC5yZXF1ZXN0LFxuICAgICAgLi4uZXh0cmFjdGVkUmVxdWVzdERhdGEsXG4gICAgfTtcbiAgfVxuXG4gIGlmIChpbmNsdWRlLnVzZXIpIHtcbiAgICBjb25zdCBleHRyYWN0ZWRVc2VyID0gcmVxLnVzZXIgJiYgaXMuaXNQbGFpbk9iamVjdChyZXEudXNlcikgPyBleHRyYWN0VXNlckRhdGEocmVxLnVzZXIsIGluY2x1ZGUudXNlcikgOiB7fTtcblxuICAgIGlmIChPYmplY3Qua2V5cyhleHRyYWN0ZWRVc2VyKS5sZW5ndGgpIHtcbiAgICAgIGV2ZW50LnVzZXIgPSB7XG4gICAgICAgIC4uLmV2ZW50LnVzZXIsXG4gICAgICAgIC4uLmV4dHJhY3RlZFVzZXIsXG4gICAgICB9O1xuICAgIH1cbiAgfVxuXG4gIC8vIGNsaWVudCBpcDpcbiAgLy8gICBub2RlLCBuZXh0anM6IHJlcS5zb2NrZXQucmVtb3RlQWRkcmVzc1xuICAvLyAgIGV4cHJlc3MsIGtvYTogcmVxLmlwXG4gIGlmIChpbmNsdWRlLmlwKSB7XG4gICAgY29uc3QgaXAgPSByZXEuaXAgfHwgKHJlcS5zb2NrZXQgJiYgcmVxLnNvY2tldC5yZW1vdGVBZGRyZXNzKTtcbiAgICBpZiAoaXApIHtcbiAgICAgIGV2ZW50LnVzZXIgPSB7XG4gICAgICAgIC4uLmV2ZW50LnVzZXIsXG4gICAgICAgIGlwX2FkZHJlc3M6IGlwLFxuICAgICAgfTtcbiAgICB9XG4gIH1cblxuICBpZiAoaW5jbHVkZS50cmFuc2FjdGlvbiAmJiAhZXZlbnQudHJhbnNhY3Rpb24gJiYgZXZlbnQudHlwZSA9PT0gJ3RyYW5zYWN0aW9uJykge1xuICAgIC8vIFRPRE8gZG8gd2UgZXZlbiBuZWVkIHRoaXMgYW55bW9yZT9cbiAgICAvLyBUT0RPIG1ha2UgdGhpcyB3b3JrIGZvciBuZXh0anNcbiAgICBldmVudC50cmFuc2FjdGlvbiA9IGV4dHJhY3RUcmFuc2FjdGlvbihyZXEsIGluY2x1ZGUudHJhbnNhY3Rpb24pO1xuICB9XG5cbiAgcmV0dXJuIGV2ZW50O1xufVxuXG5mdW5jdGlvbiBleHRyYWN0UXVlcnlQYXJhbXMocmVxKSB7XG4gIC8vIHVybCAoaW5jbHVkaW5nIHBhdGggYW5kIHF1ZXJ5IHN0cmluZyk6XG4gIC8vICAgbm9kZSwgZXhwcmVzczogcmVxLm9yaWdpbmFsVXJsXG4gIC8vICAga29hLCBuZXh0anM6IHJlcS51cmxcbiAgbGV0IG9yaWdpbmFsVXJsID0gcmVxLm9yaWdpbmFsVXJsIHx8IHJlcS51cmwgfHwgJyc7XG5cbiAgaWYgKCFvcmlnaW5hbFVybCkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8vIFRoZSBgVVJMYCBjb25zdHJ1Y3RvciBjYW4ndCBoYW5kbGUgaW50ZXJuYWwgVVJMcyBvZiB0aGUgZm9ybSBgL3NvbWUvcGF0aC9oZXJlYCwgc28gc3RpY2sgYSBkdW1teSBwcm90b2NvbCBhbmRcbiAgLy8gaG9zdG5hbWUgb24gdGhlIGJlZ2lubmluZy4gU2luY2UgdGhlIHBvaW50IGhlcmUgaXMganVzdCB0byBncmFiIHRoZSBxdWVyeSBzdHJpbmcsIGl0IGRvZXNuJ3QgbWF0dGVyIHdoYXQgd2UgdXNlLlxuICBpZiAob3JpZ2luYWxVcmwuc3RhcnRzV2l0aCgnLycpKSB7XG4gICAgb3JpZ2luYWxVcmwgPSBgaHR0cDovL2RvZ3MuYXJlLmdyZWF0JHtvcmlnaW5hbFVybH1gO1xuICB9XG5cbiAgdHJ5IHtcbiAgICBjb25zdCBxdWVyeVBhcmFtcyA9IHJlcS5xdWVyeSB8fCBuZXcgVVJMKG9yaWdpbmFsVXJsKS5zZWFyY2guc2xpY2UoMSk7XG4gICAgcmV0dXJuIHF1ZXJ5UGFyYW1zLmxlbmd0aCA/IHF1ZXJ5UGFyYW1zIDogdW5kZWZpbmVkO1xuICB9IGNhdGNoIChlMikge1xuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cbn1cblxuLyoqXG4gKiBUcmFuc2Zvcm1zIGEgYEhlYWRlcnNgIG9iamVjdCB0aGF0IGltcGxlbWVudHMgdGhlIGBXZWIgRmV0Y2ggQVBJYCAoaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0hlYWRlcnMpIGludG8gYSBzaW1wbGUga2V5LXZhbHVlIGRpY3QuXG4gKiBUaGUgaGVhZGVyIGtleXMgd2lsbCBiZSBsb3dlciBjYXNlOiBlLmcuIEEgXCJDb250ZW50LVR5cGVcIiBoZWFkZXIgd2lsbCBiZSBzdG9yZWQgYXMgXCJjb250ZW50LXR5cGVcIi5cbiAqL1xuLy8gVE9ETyh2OCk6IE1ha2UgdGhpcyBmdW5jdGlvbiByZXR1cm4gdW5kZWZpbmVkIHdoZW4gdGhlIGV4dHJhY3Rpb24gZmFpbHMuXG5mdW5jdGlvbiB3aW50ZXJDR0hlYWRlcnNUb0RpY3Qod2ludGVyQ0dIZWFkZXJzKSB7XG4gIGNvbnN0IGhlYWRlcnMgPSB7fTtcbiAgdHJ5IHtcbiAgICB3aW50ZXJDR0hlYWRlcnMuZm9yRWFjaCgodmFsdWUsIGtleSkgPT4ge1xuICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgLy8gV2UgY2hlY2sgdGhhdCB2YWx1ZSBpcyBhIHN0cmluZyBldmVuIHRob3VnaCBpdCBtaWdodCBiZSByZWR1bmRhbnQgdG8gbWFrZSBzdXJlIHByb3RvdHlwZSBwb2xsdXRpb24gaXMgbm90IHBvc3NpYmxlLlxuICAgICAgICBoZWFkZXJzW2tleV0gPSB2YWx1ZTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIGRlYnVnQnVpbGQuREVCVUdfQlVJTEQgJiZcbiAgICAgIGxvZ2dlci5sb2dnZXIud2FybignU2VudHJ5IGZhaWxlZCBleHRyYWN0aW5nIGhlYWRlcnMgZnJvbSBhIHJlcXVlc3Qgb2JqZWN0LiBJZiB5b3Ugc2VlIHRoaXMsIHBsZWFzZSBmaWxlIGFuIGlzc3VlLicpO1xuICB9XG5cbiAgcmV0dXJuIGhlYWRlcnM7XG59XG5cbi8qKlxuICogQ29udmVydHMgYSBgUmVxdWVzdGAgb2JqZWN0IHRoYXQgaW1wbGVtZW50cyB0aGUgYFdlYiBGZXRjaCBBUElgIChodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9BUEkvSGVhZGVycykgaW50byB0aGUgZm9ybWF0IHRoYXQgdGhlIGBSZXF1ZXN0RGF0YWAgaW50ZWdyYXRpb24gdW5kZXJzdGFuZHMuXG4gKi9cbmZ1bmN0aW9uIHdpbnRlckNHUmVxdWVzdFRvUmVxdWVzdERhdGEocmVxKSB7XG4gIGNvbnN0IGhlYWRlcnMgPSB3aW50ZXJDR0hlYWRlcnNUb0RpY3QocmVxLmhlYWRlcnMpO1xuICByZXR1cm4ge1xuICAgIG1ldGhvZDogcmVxLm1ldGhvZCxcbiAgICB1cmw6IHJlcS51cmwsXG4gICAgaGVhZGVycyxcbiAgfTtcbn1cblxuZXhwb3J0cy5ERUZBVUxUX1VTRVJfSU5DTFVERVMgPSBERUZBVUxUX1VTRVJfSU5DTFVERVM7XG5leHBvcnRzLmFkZFJlcXVlc3REYXRhVG9FdmVudCA9IGFkZFJlcXVlc3REYXRhVG9FdmVudDtcbmV4cG9ydHMuZXh0cmFjdFBhdGhGb3JUcmFuc2FjdGlvbiA9IGV4dHJhY3RQYXRoRm9yVHJhbnNhY3Rpb247XG5leHBvcnRzLmV4dHJhY3RSZXF1ZXN0RGF0YSA9IGV4dHJhY3RSZXF1ZXN0RGF0YTtcbmV4cG9ydHMud2ludGVyQ0dIZWFkZXJzVG9EaWN0ID0gd2ludGVyQ0dIZWFkZXJzVG9EaWN0O1xuZXhwb3J0cy53aW50ZXJDR1JlcXVlc3RUb1JlcXVlc3REYXRhID0gd2ludGVyQ0dSZXF1ZXN0VG9SZXF1ZXN0RGF0YTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlcXVlc3RkYXRhLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/requestdata.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/severity.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/severity.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n// Note: Ideally the `SeverityLevel` type would be derived from `validSeverityLevels`, but that would mean either\n//\n// a) moving `validSeverityLevels` to `@sentry/types`,\n// b) moving the`SeverityLevel` type here, or\n// c) importing `validSeverityLevels` from here into `@sentry/types`.\n//\n// Option A would make `@sentry/types` a runtime dependency of `@sentry/utils` (not good), and options B and C would\n// create a circular dependency between `@sentry/types` and `@sentry/utils` (also not good). So a TODO accompanying the\n// type, reminding anyone who changes it to change this list also, will have to do.\n\nconst validSeverityLevels = ['fatal', 'error', 'warning', 'log', 'info', 'debug'];\n\n/**\n * Converts a string-based level into a `SeverityLevel`, normalizing it along the way.\n *\n * @param level String representation of desired `SeverityLevel`.\n * @returns The `SeverityLevel` corresponding to the given string, or 'log' if the string isn't a valid level.\n */\nfunction severityLevelFromString(level) {\n  return (level === 'warn' ? 'warning' : validSeverityLevels.includes(level) ? level : 'log') ;\n}\n\nexports.severityLevelFromString = severityLevelFromString;\nexports.validSeverityLevels = validSeverityLevels;\n//# sourceMappingURL=severity.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9zZXZlcml0eS5qcyIsIm1hcHBpbmdzIjoiQUFBQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7O0FBRTdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsK0JBQStCO0FBQy9CLDJCQUEyQjtBQUMzQiIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9zZXZlcml0eS5qcz8xOWRlIl0sInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG5cbi8vIE5vdGU6IElkZWFsbHkgdGhlIGBTZXZlcml0eUxldmVsYCB0eXBlIHdvdWxkIGJlIGRlcml2ZWQgZnJvbSBgdmFsaWRTZXZlcml0eUxldmVsc2AsIGJ1dCB0aGF0IHdvdWxkIG1lYW4gZWl0aGVyXG4vL1xuLy8gYSkgbW92aW5nIGB2YWxpZFNldmVyaXR5TGV2ZWxzYCB0byBgQHNlbnRyeS90eXBlc2AsXG4vLyBiKSBtb3ZpbmcgdGhlYFNldmVyaXR5TGV2ZWxgIHR5cGUgaGVyZSwgb3Jcbi8vIGMpIGltcG9ydGluZyBgdmFsaWRTZXZlcml0eUxldmVsc2AgZnJvbSBoZXJlIGludG8gYEBzZW50cnkvdHlwZXNgLlxuLy9cbi8vIE9wdGlvbiBBIHdvdWxkIG1ha2UgYEBzZW50cnkvdHlwZXNgIGEgcnVudGltZSBkZXBlbmRlbmN5IG9mIGBAc2VudHJ5L3V0aWxzYCAobm90IGdvb2QpLCBhbmQgb3B0aW9ucyBCIGFuZCBDIHdvdWxkXG4vLyBjcmVhdGUgYSBjaXJjdWxhciBkZXBlbmRlbmN5IGJldHdlZW4gYEBzZW50cnkvdHlwZXNgIGFuZCBgQHNlbnRyeS91dGlsc2AgKGFsc28gbm90IGdvb2QpLiBTbyBhIFRPRE8gYWNjb21wYW55aW5nIHRoZVxuLy8gdHlwZSwgcmVtaW5kaW5nIGFueW9uZSB3aG8gY2hhbmdlcyBpdCB0byBjaGFuZ2UgdGhpcyBsaXN0IGFsc28sIHdpbGwgaGF2ZSB0byBkby5cblxuY29uc3QgdmFsaWRTZXZlcml0eUxldmVscyA9IFsnZmF0YWwnLCAnZXJyb3InLCAnd2FybmluZycsICdsb2cnLCAnaW5mbycsICdkZWJ1ZyddO1xuXG4vKipcbiAqIENvbnZlcnRzIGEgc3RyaW5nLWJhc2VkIGxldmVsIGludG8gYSBgU2V2ZXJpdHlMZXZlbGAsIG5vcm1hbGl6aW5nIGl0IGFsb25nIHRoZSB3YXkuXG4gKlxuICogQHBhcmFtIGxldmVsIFN0cmluZyByZXByZXNlbnRhdGlvbiBvZiBkZXNpcmVkIGBTZXZlcml0eUxldmVsYC5cbiAqIEByZXR1cm5zIFRoZSBgU2V2ZXJpdHlMZXZlbGAgY29ycmVzcG9uZGluZyB0byB0aGUgZ2l2ZW4gc3RyaW5nLCBvciAnbG9nJyBpZiB0aGUgc3RyaW5nIGlzbid0IGEgdmFsaWQgbGV2ZWwuXG4gKi9cbmZ1bmN0aW9uIHNldmVyaXR5TGV2ZWxGcm9tU3RyaW5nKGxldmVsKSB7XG4gIHJldHVybiAobGV2ZWwgPT09ICd3YXJuJyA/ICd3YXJuaW5nJyA6IHZhbGlkU2V2ZXJpdHlMZXZlbHMuaW5jbHVkZXMobGV2ZWwpID8gbGV2ZWwgOiAnbG9nJykgO1xufVxuXG5leHBvcnRzLnNldmVyaXR5TGV2ZWxGcm9tU3RyaW5nID0gc2V2ZXJpdHlMZXZlbEZyb21TdHJpbmc7XG5leHBvcnRzLnZhbGlkU2V2ZXJpdHlMZXZlbHMgPSB2YWxpZFNldmVyaXR5TGV2ZWxzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2V2ZXJpdHkuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/severity.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/stacktrace.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/stacktrace.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst STACKTRACE_FRAME_LIMIT = 50;\nconst UNKNOWN_FUNCTION = '?';\n// Used to sanitize webpack (error: *) wrapped stack errors\nconst WEBPACK_ERROR_REGEXP = /\\(error: (.*)\\)/;\nconst STRIP_FRAME_REGEXP = /captureMessage|captureException/;\n\n/**\n * Creates a stack parser with the supplied line parsers\n *\n * StackFrames are returned in the correct order for Sentry Exception\n * frames and with Sentry SDK internal frames removed from the top and bottom\n *\n */\nfunction createStackParser(...parsers) {\n  const sortedParsers = parsers.sort((a, b) => a[0] - b[0]).map(p => p[1]);\n\n  return (stack, skipFirstLines = 0, framesToPop = 0) => {\n    const frames = [];\n    const lines = stack.split('\\n');\n\n    for (let i = skipFirstLines; i < lines.length; i++) {\n      const line = lines[i] ;\n      // Ignore lines over 1kb as they are unlikely to be stack frames.\n      // Many of the regular expressions use backtracking which results in run time that increases exponentially with\n      // input size. Huge strings can result in hangs/Denial of Service:\n      // https://github.com/getsentry/sentry-javascript/issues/2286\n      if (line.length > 1024) {\n        continue;\n      }\n\n      // https://github.com/getsentry/sentry-javascript/issues/5459\n      // Remove webpack (error: *) wrappers\n      const cleanedLine = WEBPACK_ERROR_REGEXP.test(line) ? line.replace(WEBPACK_ERROR_REGEXP, '$1') : line;\n\n      // https://github.com/getsentry/sentry-javascript/issues/7813\n      // Skip Error: lines\n      if (cleanedLine.match(/\\S*Error: /)) {\n        continue;\n      }\n\n      for (const parser of sortedParsers) {\n        const frame = parser(cleanedLine);\n\n        if (frame) {\n          frames.push(frame);\n          break;\n        }\n      }\n\n      if (frames.length >= STACKTRACE_FRAME_LIMIT + framesToPop) {\n        break;\n      }\n    }\n\n    return stripSentryFramesAndReverse(frames.slice(framesToPop));\n  };\n}\n\n/**\n * Gets a stack parser implementation from Options.stackParser\n * @see Options\n *\n * If options contains an array of line parsers, it is converted into a parser\n */\nfunction stackParserFromStackParserOptions(stackParser) {\n  if (Array.isArray(stackParser)) {\n    return createStackParser(...stackParser);\n  }\n  return stackParser;\n}\n\n/**\n * Removes Sentry frames from the top and bottom of the stack if present and enforces a limit of max number of frames.\n * Assumes stack input is ordered from top to bottom and returns the reverse representation so call site of the\n * function that caused the crash is the last frame in the array.\n * @hidden\n */\nfunction stripSentryFramesAndReverse(stack) {\n  if (!stack.length) {\n    return [];\n  }\n\n  const localStack = Array.from(stack);\n\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (/sentryWrapped/.test(getLastStackFrame(localStack).function || '')) {\n    localStack.pop();\n  }\n\n  // Reversing in the middle of the procedure allows us to just pop the values off the stack\n  localStack.reverse();\n\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (STRIP_FRAME_REGEXP.test(getLastStackFrame(localStack).function || '')) {\n    localStack.pop();\n\n    // When using synthetic events, we will have a 2 levels deep stack, as `new Error('Sentry syntheticException')`\n    // is produced within the hub itself, making it:\n    //\n    //   Sentry.captureException()\n    //   getCurrentHub().captureException()\n    //\n    // instead of just the top `Sentry` call itself.\n    // This forces us to possibly strip an additional frame in the exact same was as above.\n    if (STRIP_FRAME_REGEXP.test(getLastStackFrame(localStack).function || '')) {\n      localStack.pop();\n    }\n  }\n\n  return localStack.slice(0, STACKTRACE_FRAME_LIMIT).map(frame => ({\n    ...frame,\n    filename: frame.filename || getLastStackFrame(localStack).filename,\n    function: frame.function || UNKNOWN_FUNCTION,\n  }));\n}\n\nfunction getLastStackFrame(arr) {\n  return arr[arr.length - 1] || {};\n}\n\nconst defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nfunction getFunctionName(fn) {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n\n/**\n * Get's stack frames from an event without needing to check for undefined properties.\n */\nfunction getFramesFromEvent(event) {\n  const exception = event.exception;\n\n  if (exception) {\n    const frames = [];\n    try {\n      // @ts-expect-error Object could be undefined\n      exception.values.forEach(value => {\n        // @ts-expect-error Value could be undefined\n        if (value.stacktrace.frames) {\n          // @ts-expect-error Value could be undefined\n          frames.push(...value.stacktrace.frames);\n        }\n      });\n      return frames;\n    } catch (_oO) {\n      return undefined;\n    }\n  }\n  return undefined;\n}\n\nexports.UNKNOWN_FUNCTION = UNKNOWN_FUNCTION;\nexports.createStackParser = createStackParser;\nexports.getFramesFromEvent = getFramesFromEvent;\nexports.getFunctionName = getFunctionName;\nexports.stackParserFromStackParserOptions = stackParserFromStackParserOptions;\nexports.stripSentryFramesAndReverse = stripSentryFramesAndReverse;\n//# sourceMappingURL=stacktrace.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/stacktrace.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/string.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/string.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst is = __webpack_require__(/*! ./is.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/is.js\");\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string (0 = unlimited)\n * @returns string Encoded\n */\nfunction truncate(str, max = 0) {\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.slice(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nfunction snipLine(line, colno) {\n  let newLine = line;\n  const lineLength = newLine.length;\n  if (lineLength <= 150) {\n    return newLine;\n  }\n  if (colno > lineLength) {\n    // eslint-disable-next-line no-param-reassign\n    colno = lineLength;\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, lineLength);\n  if (end > lineLength - 5) {\n    end = lineLength;\n  }\n  if (end === lineLength) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < lineLength) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction safeJoin(input, delimiter) {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  const output = [];\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let i = 0; i < input.length; i++) {\n    const value = input[i];\n    try {\n      // This is a hack to fix a Vue3-specific bug that causes an infinite loop of\n      // console warnings. This happens when a Vue template is rendered with\n      // an undeclared variable, which we try to stringify, ultimately causing\n      // Vue to issue another warning which repeats indefinitely.\n      // see: https://github.com/getsentry/sentry-javascript/pull/8981\n      if (is.isVueViewModel(value)) {\n        output.push('[VueViewModel]');\n      } else {\n        output.push(String(value));\n      }\n    } catch (e) {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/**\n * Checks if the given value matches a regex or string\n *\n * @param value The string to test\n * @param pattern Either a regex or a string against which `value` will be matched\n * @param requireExactStringMatch If true, `value` must match `pattern` exactly. If false, `value` will match\n * `pattern` if it contains `pattern`. Only applies to string-type patterns.\n */\nfunction isMatchingPattern(\n  value,\n  pattern,\n  requireExactStringMatch = false,\n) {\n  if (!is.isString(value)) {\n    return false;\n  }\n\n  if (is.isRegExp(pattern)) {\n    return pattern.test(value);\n  }\n  if (is.isString(pattern)) {\n    return requireExactStringMatch ? value === pattern : value.includes(pattern);\n  }\n\n  return false;\n}\n\n/**\n * Test the given string against an array of strings and regexes. By default, string matching is done on a\n * substring-inclusion basis rather than a strict equality basis\n *\n * @param testString The string to test\n * @param patterns The patterns against which to test the string\n * @param requireExactStringMatch If true, `testString` must match one of the given string patterns exactly in order to\n * count. If false, `testString` will match a string pattern if it contains that pattern.\n * @returns\n */\nfunction stringMatchesSomePattern(\n  testString,\n  patterns = [],\n  requireExactStringMatch = false,\n) {\n  return patterns.some(pattern => isMatchingPattern(testString, pattern, requireExactStringMatch));\n}\n\nexports.isMatchingPattern = isMatchingPattern;\nexports.safeJoin = safeJoin;\nexports.snipLine = snipLine;\nexports.stringMatchesSomePattern = stringMatchesSomePattern;\nexports.truncate = truncate;\n//# sourceMappingURL=string.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9zdHJpbmcuanMiLCJtYXBwaW5ncyI6IkFBQUEsOENBQTZDLEVBQUUsYUFBYSxFQUFDOztBQUU3RCxXQUFXLG1CQUFPLENBQUMsa0hBQVM7O0FBRTVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0Msa0JBQWtCO0FBQ3hEOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsaUJBQWlCLE1BQU0sRUFBRSxRQUFRO0FBQ2pDO0FBQ0E7QUFDQSxrQkFBa0IsS0FBSztBQUN2Qjs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGtCQUFrQixrQkFBa0I7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSx5QkFBeUI7QUFDekIsZ0JBQWdCO0FBQ2hCLGdCQUFnQjtBQUNoQixnQ0FBZ0M7QUFDaEMsZ0JBQWdCO0FBQ2hCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLXByb2plY3QvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL3N0cmluZy5qcz9lZjE3Il0sInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG5cbmNvbnN0IGlzID0gcmVxdWlyZSgnLi9pcy5qcycpO1xuXG4vKipcbiAqIFRydW5jYXRlcyBnaXZlbiBzdHJpbmcgdG8gdGhlIG1heGltdW0gY2hhcmFjdGVycyBjb3VudFxuICpcbiAqIEBwYXJhbSBzdHIgQW4gb2JqZWN0IHRoYXQgY29udGFpbnMgc2VyaWFsaXphYmxlIHZhbHVlc1xuICogQHBhcmFtIG1heCBNYXhpbXVtIG51bWJlciBvZiBjaGFyYWN0ZXJzIGluIHRydW5jYXRlZCBzdHJpbmcgKDAgPSB1bmxpbWl0ZWQpXG4gKiBAcmV0dXJucyBzdHJpbmcgRW5jb2RlZFxuICovXG5mdW5jdGlvbiB0cnVuY2F0ZShzdHIsIG1heCA9IDApIHtcbiAgaWYgKHR5cGVvZiBzdHIgIT09ICdzdHJpbmcnIHx8IG1heCA9PT0gMCkge1xuICAgIHJldHVybiBzdHI7XG4gIH1cbiAgcmV0dXJuIHN0ci5sZW5ndGggPD0gbWF4ID8gc3RyIDogYCR7c3RyLnNsaWNlKDAsIG1heCl9Li4uYDtcbn1cblxuLyoqXG4gKiBUaGlzIGlzIGJhc2ljYWxseSBqdXN0IGB0cmltX2xpbmVgIGZyb21cbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9nZXRzZW50cnkvc2VudHJ5L2Jsb2IvbWFzdGVyL3NyYy9zZW50cnkvbGFuZy9qYXZhc2NyaXB0L3Byb2Nlc3Nvci5weSNMNjdcbiAqXG4gKiBAcGFyYW0gc3RyIEFuIG9iamVjdCB0aGF0IGNvbnRhaW5zIHNlcmlhbGl6YWJsZSB2YWx1ZXNcbiAqIEBwYXJhbSBtYXggTWF4aW11bSBudW1iZXIgb2YgY2hhcmFjdGVycyBpbiB0cnVuY2F0ZWQgc3RyaW5nXG4gKiBAcmV0dXJucyBzdHJpbmcgRW5jb2RlZFxuICovXG5mdW5jdGlvbiBzbmlwTGluZShsaW5lLCBjb2xubykge1xuICBsZXQgbmV3TGluZSA9IGxpbmU7XG4gIGNvbnN0IGxpbmVMZW5ndGggPSBuZXdMaW5lLmxlbmd0aDtcbiAgaWYgKGxpbmVMZW5ndGggPD0gMTUwKSB7XG4gICAgcmV0dXJuIG5ld0xpbmU7XG4gIH1cbiAgaWYgKGNvbG5vID4gbGluZUxlbmd0aCkge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgIGNvbG5vID0gbGluZUxlbmd0aDtcbiAgfVxuXG4gIGxldCBzdGFydCA9IE1hdGgubWF4KGNvbG5vIC0gNjAsIDApO1xuICBpZiAoc3RhcnQgPCA1KSB7XG4gICAgc3RhcnQgPSAwO1xuICB9XG5cbiAgbGV0IGVuZCA9IE1hdGgubWluKHN0YXJ0ICsgMTQwLCBsaW5lTGVuZ3RoKTtcbiAgaWYgKGVuZCA+IGxpbmVMZW5ndGggLSA1KSB7XG4gICAgZW5kID0gbGluZUxlbmd0aDtcbiAgfVxuICBpZiAoZW5kID09PSBsaW5lTGVuZ3RoKSB7XG4gICAgc3RhcnQgPSBNYXRoLm1heChlbmQgLSAxNDAsIDApO1xuICB9XG5cbiAgbmV3TGluZSA9IG5ld0xpbmUuc2xpY2Uoc3RhcnQsIGVuZCk7XG4gIGlmIChzdGFydCA+IDApIHtcbiAgICBuZXdMaW5lID0gYCd7c25pcH0gJHtuZXdMaW5lfWA7XG4gIH1cbiAgaWYgKGVuZCA8IGxpbmVMZW5ndGgpIHtcbiAgICBuZXdMaW5lICs9ICcge3NuaXB9JztcbiAgfVxuXG4gIHJldHVybiBuZXdMaW5lO1xufVxuXG4vKipcbiAqIEpvaW4gdmFsdWVzIGluIGFycmF5XG4gKiBAcGFyYW0gaW5wdXQgYXJyYXkgb2YgdmFsdWVzIHRvIGJlIGpvaW5lZCB0b2dldGhlclxuICogQHBhcmFtIGRlbGltaXRlciBzdHJpbmcgdG8gYmUgcGxhY2VkIGluLWJldHdlZW4gdmFsdWVzXG4gKiBAcmV0dXJucyBKb2luZWQgdmFsdWVzXG4gKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG5mdW5jdGlvbiBzYWZlSm9pbihpbnB1dCwgZGVsaW1pdGVyKSB7XG4gIGlmICghQXJyYXkuaXNBcnJheShpbnB1dCkpIHtcbiAgICByZXR1cm4gJyc7XG4gIH1cblxuICBjb25zdCBvdXRwdXQgPSBbXTtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9wcmVmZXItZm9yLW9mXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgaW5wdXQubGVuZ3RoOyBpKyspIHtcbiAgICBjb25zdCB2YWx1ZSA9IGlucHV0W2ldO1xuICAgIHRyeSB7XG4gICAgICAvLyBUaGlzIGlzIGEgaGFjayB0byBmaXggYSBWdWUzLXNwZWNpZmljIGJ1ZyB0aGF0IGNhdXNlcyBhbiBpbmZpbml0ZSBsb29wIG9mXG4gICAgICAvLyBjb25zb2xlIHdhcm5pbmdzLiBUaGlzIGhhcHBlbnMgd2hlbiBhIFZ1ZSB0ZW1wbGF0ZSBpcyByZW5kZXJlZCB3aXRoXG4gICAgICAvLyBhbiB1bmRlY2xhcmVkIHZhcmlhYmxlLCB3aGljaCB3ZSB0cnkgdG8gc3RyaW5naWZ5LCB1bHRpbWF0ZWx5IGNhdXNpbmdcbiAgICAgIC8vIFZ1ZSB0byBpc3N1ZSBhbm90aGVyIHdhcm5pbmcgd2hpY2ggcmVwZWF0cyBpbmRlZmluaXRlbHkuXG4gICAgICAvLyBzZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9nZXRzZW50cnkvc2VudHJ5LWphdmFzY3JpcHQvcHVsbC84OTgxXG4gICAgICBpZiAoaXMuaXNWdWVWaWV3TW9kZWwodmFsdWUpKSB7XG4gICAgICAgIG91dHB1dC5wdXNoKCdbVnVlVmlld01vZGVsXScpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgb3V0cHV0LnB1c2goU3RyaW5nKHZhbHVlKSk7XG4gICAgICB9XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgb3V0cHV0LnB1c2goJ1t2YWx1ZSBjYW5ub3QgYmUgc2VyaWFsaXplZF0nKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gb3V0cHV0LmpvaW4oZGVsaW1pdGVyKTtcbn1cblxuLyoqXG4gKiBDaGVja3MgaWYgdGhlIGdpdmVuIHZhbHVlIG1hdGNoZXMgYSByZWdleCBvciBzdHJpbmdcbiAqXG4gKiBAcGFyYW0gdmFsdWUgVGhlIHN0cmluZyB0byB0ZXN0XG4gKiBAcGFyYW0gcGF0dGVybiBFaXRoZXIgYSByZWdleCBvciBhIHN0cmluZyBhZ2FpbnN0IHdoaWNoIGB2YWx1ZWAgd2lsbCBiZSBtYXRjaGVkXG4gKiBAcGFyYW0gcmVxdWlyZUV4YWN0U3RyaW5nTWF0Y2ggSWYgdHJ1ZSwgYHZhbHVlYCBtdXN0IG1hdGNoIGBwYXR0ZXJuYCBleGFjdGx5LiBJZiBmYWxzZSwgYHZhbHVlYCB3aWxsIG1hdGNoXG4gKiBgcGF0dGVybmAgaWYgaXQgY29udGFpbnMgYHBhdHRlcm5gLiBPbmx5IGFwcGxpZXMgdG8gc3RyaW5nLXR5cGUgcGF0dGVybnMuXG4gKi9cbmZ1bmN0aW9uIGlzTWF0Y2hpbmdQYXR0ZXJuKFxuICB2YWx1ZSxcbiAgcGF0dGVybixcbiAgcmVxdWlyZUV4YWN0U3RyaW5nTWF0Y2ggPSBmYWxzZSxcbikge1xuICBpZiAoIWlzLmlzU3RyaW5nKHZhbHVlKSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGlmIChpcy5pc1JlZ0V4cChwYXR0ZXJuKSkge1xuICAgIHJldHVybiBwYXR0ZXJuLnRlc3QodmFsdWUpO1xuICB9XG4gIGlmIChpcy5pc1N0cmluZyhwYXR0ZXJuKSkge1xuICAgIHJldHVybiByZXF1aXJlRXhhY3RTdHJpbmdNYXRjaCA/IHZhbHVlID09PSBwYXR0ZXJuIDogdmFsdWUuaW5jbHVkZXMocGF0dGVybik7XG4gIH1cblxuICByZXR1cm4gZmFsc2U7XG59XG5cbi8qKlxuICogVGVzdCB0aGUgZ2l2ZW4gc3RyaW5nIGFnYWluc3QgYW4gYXJyYXkgb2Ygc3RyaW5ncyBhbmQgcmVnZXhlcy4gQnkgZGVmYXVsdCwgc3RyaW5nIG1hdGNoaW5nIGlzIGRvbmUgb24gYVxuICogc3Vic3RyaW5nLWluY2x1c2lvbiBiYXNpcyByYXRoZXIgdGhhbiBhIHN0cmljdCBlcXVhbGl0eSBiYXNpc1xuICpcbiAqIEBwYXJhbSB0ZXN0U3RyaW5nIFRoZSBzdHJpbmcgdG8gdGVzdFxuICogQHBhcmFtIHBhdHRlcm5zIFRoZSBwYXR0ZXJucyBhZ2FpbnN0IHdoaWNoIHRvIHRlc3QgdGhlIHN0cmluZ1xuICogQHBhcmFtIHJlcXVpcmVFeGFjdFN0cmluZ01hdGNoIElmIHRydWUsIGB0ZXN0U3RyaW5nYCBtdXN0IG1hdGNoIG9uZSBvZiB0aGUgZ2l2ZW4gc3RyaW5nIHBhdHRlcm5zIGV4YWN0bHkgaW4gb3JkZXIgdG9cbiAqIGNvdW50LiBJZiBmYWxzZSwgYHRlc3RTdHJpbmdgIHdpbGwgbWF0Y2ggYSBzdHJpbmcgcGF0dGVybiBpZiBpdCBjb250YWlucyB0aGF0IHBhdHRlcm4uXG4gKiBAcmV0dXJuc1xuICovXG5mdW5jdGlvbiBzdHJpbmdNYXRjaGVzU29tZVBhdHRlcm4oXG4gIHRlc3RTdHJpbmcsXG4gIHBhdHRlcm5zID0gW10sXG4gIHJlcXVpcmVFeGFjdFN0cmluZ01hdGNoID0gZmFsc2UsXG4pIHtcbiAgcmV0dXJuIHBhdHRlcm5zLnNvbWUocGF0dGVybiA9PiBpc01hdGNoaW5nUGF0dGVybih0ZXN0U3RyaW5nLCBwYXR0ZXJuLCByZXF1aXJlRXhhY3RTdHJpbmdNYXRjaCkpO1xufVxuXG5leHBvcnRzLmlzTWF0Y2hpbmdQYXR0ZXJuID0gaXNNYXRjaGluZ1BhdHRlcm47XG5leHBvcnRzLnNhZmVKb2luID0gc2FmZUpvaW47XG5leHBvcnRzLnNuaXBMaW5lID0gc25pcExpbmU7XG5leHBvcnRzLnN0cmluZ01hdGNoZXNTb21lUGF0dGVybiA9IHN0cmluZ01hdGNoZXNTb21lUGF0dGVybjtcbmV4cG9ydHMudHJ1bmNhdGUgPSB0cnVuY2F0ZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN0cmluZy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/string.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/supports.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/supports.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst debugBuild = __webpack_require__(/*! ./debug-build.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/debug-build.js\");\nconst logger = __webpack_require__(/*! ./logger.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/logger.js\");\nconst worldwide = __webpack_require__(/*! ./worldwide.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/worldwide.js\");\n\nconst WINDOW = worldwide.GLOBAL_OBJ ;\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsErrorEvent() {\n  try {\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMError() {\n  try {\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-expect-error It really needs 1 argument, not 0.\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMException() {\n  try {\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsFetch() {\n  if (!('fetch' in WINDOW)) {\n    return false;\n  }\n\n  try {\n    new Headers();\n    new Request('http://www.example.com');\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * isNative checks if the given function is a native implementation\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction isNativeFunction(func) {\n  return func && /^function\\s+\\w+\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nfunction supportsNativeFetch() {\n  if (typeof EdgeRuntime === 'string') {\n    return true;\n  }\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  // Fast path to avoid DOM I/O\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  if (isNativeFunction(WINDOW.fetch)) {\n    return true;\n  }\n\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  let result = false;\n  const doc = WINDOW.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (doc && typeof (doc.createElement ) === 'function') {\n    try {\n      const sandbox = doc.createElement('iframe');\n      sandbox.hidden = true;\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        result = isNativeFunction(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      debugBuild.DEBUG_BUILD &&\n        logger.logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReportingObserver() {\n  return 'ReportingObserver' in WINDOW;\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReferrerPolicy() {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default'\n  // (see https://caniuse.com/#feat=referrer-policy),\n  // it doesn't. And it throws an exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  try {\n    new Request('_', {\n      referrerPolicy: 'origin' ,\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nexports.isNativeFunction = isNativeFunction;\nexports.supportsDOMError = supportsDOMError;\nexports.supportsDOMException = supportsDOMException;\nexports.supportsErrorEvent = supportsErrorEvent;\nexports.supportsFetch = supportsFetch;\nexports.supportsNativeFetch = supportsNativeFetch;\nexports.supportsReferrerPolicy = supportsReferrerPolicy;\nexports.supportsReportingObserver = supportsReportingObserver;\n//# sourceMappingURL=supports.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/supports.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/syncpromise.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/syncpromise.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst is = __webpack_require__(/*! ./is.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/is.js\");\n\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/** SyncPromise internal states */\nvar States; (function (States) {\n  /** Pending */\n  const PENDING = 0; States[States[\"PENDING\"] = PENDING] = \"PENDING\";\n  /** Resolved / OK */\n  const RESOLVED = 1; States[States[\"RESOLVED\"] = RESOLVED] = \"RESOLVED\";\n  /** Rejected / Error */\n  const REJECTED = 2; States[States[\"REJECTED\"] = REJECTED] = \"REJECTED\";\n})(States || (States = {}));\n\n// Overloads so we can call resolvedSyncPromise without arguments and generic argument\n\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nfunction resolvedSyncPromise(value) {\n  return new SyncPromise(resolve => {\n    resolve(value);\n  });\n}\n\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nfunction rejectedSyncPromise(reason) {\n  return new SyncPromise((_, reject) => {\n    reject(reason);\n  });\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise {\n\n   constructor(\n    executor,\n  ) {SyncPromise.prototype.__init.call(this);SyncPromise.prototype.__init2.call(this);SyncPromise.prototype.__init3.call(this);SyncPromise.prototype.__init4.call(this);\n    this._state = States.PENDING;\n    this._handlers = [];\n\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n   then(\n    onfulfilled,\n    onrejected,\n  ) {\n    return new SyncPromise((resolve, reject) => {\n      this._handlers.push([\n        false,\n        result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result );\n          } else {\n            try {\n              resolve(onfulfilled(result));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n        reason => {\n          if (!onrejected) {\n            reject(reason);\n          } else {\n            try {\n              resolve(onrejected(reason));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n      ]);\n      this._executeHandlers();\n    });\n  }\n\n  /** JSDoc */\n   catch(\n    onrejected,\n  ) {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n   finally(onfinally) {\n    return new SyncPromise((resolve, reject) => {\n      let val;\n      let isRejected;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val );\n      });\n    });\n  }\n\n  /** JSDoc */\n    __init() {this._resolve = (value) => {\n    this._setResult(States.RESOLVED, value);\n  };}\n\n  /** JSDoc */\n    __init2() {this._reject = (reason) => {\n    this._setResult(States.REJECTED, reason);\n  };}\n\n  /** JSDoc */\n    __init3() {this._setResult = (state, value) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if (is.isThenable(value)) {\n      void (value ).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };}\n\n  /** JSDoc */\n    __init4() {this._executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    const cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler[0]) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n        handler[1](this._value );\n      }\n\n      if (this._state === States.REJECTED) {\n        handler[2](this._value);\n      }\n\n      handler[0] = true;\n    });\n  };}\n}\n\nexports.SyncPromise = SyncPromise;\nexports.rejectedSyncPromise = rejectedSyncPromise;\nexports.resolvedSyncPromise = resolvedSyncPromise;\n//# sourceMappingURL=syncpromise.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/syncpromise.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/time.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/time.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst worldwide = __webpack_require__(/*! ./worldwide.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/worldwide.js\");\n\nconst ONE_SECOND_IN_MS = 1000;\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high-resolution monotonic clock.\n */\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n *\n * TODO(v8): Return type should be rounded.\n */\nfunction dateTimestampInSeconds() {\n  return Date.now() / ONE_SECOND_IN_MS;\n}\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction createUnixTimestampInSecondsFunc() {\n  const { performance } = worldwide.GLOBAL_OBJ ;\n  if (!performance || !performance.now) {\n    return dateTimestampInSeconds;\n  }\n\n  // Some browser and environments don't have a timeOrigin, so we fallback to\n  // using Date.now() to compute the starting time.\n  const approxStartingTimeOrigin = Date.now() - performance.now();\n  const timeOrigin = performance.timeOrigin == undefined ? approxStartingTimeOrigin : performance.timeOrigin;\n\n  // performance.now() is a monotonic clock, which means it starts at 0 when the process begins. To get the current\n  // wall clock time (actual UNIX timestamp), we need to add the starting time origin and the current time elapsed.\n  //\n  // TODO: This does not account for the case where the monotonic clock that powers performance.now() drifts from the\n  // wall clock time, which causes the returned timestamp to be inaccurate. We should investigate how to detect and\n  // correct for this.\n  // See: https://github.com/getsentry/sentry-javascript/issues/2590\n  // See: https://github.com/mdn/content/issues/4713\n  // See: https://dev.to/noamr/when-a-millisecond-is-not-a-millisecond-3h6\n  return () => {\n    return (timeOrigin + performance.now()) / ONE_SECOND_IN_MS;\n  };\n}\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nconst timestampInSeconds = createUnixTimestampInSecondsFunc();\n\n/**\n * Internal helper to store what is the source of browserPerformanceTimeOrigin below. For debugging only.\n */\nexports._browserPerformanceTimeOriginMode = void 0;\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nconst browserPerformanceTimeOrigin = (() => {\n  // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n  // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n  // data as reliable if they are within a reasonable threshold of the current time.\n\n  const { performance } = worldwide.GLOBAL_OBJ ;\n  if (!performance || !performance.now) {\n    exports._browserPerformanceTimeOriginMode = 'none';\n    return undefined;\n  }\n\n  const threshold = 3600 * 1000;\n  const performanceNow = performance.now();\n  const dateNow = Date.now();\n\n  // if timeOrigin isn't available set delta to threshold so it isn't used\n  const timeOriginDelta = performance.timeOrigin\n    ? Math.abs(performance.timeOrigin + performanceNow - dateNow)\n    : threshold;\n  const timeOriginIsReliable = timeOriginDelta < threshold;\n\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n  // eslint-disable-next-line deprecation/deprecation\n  const navigationStart = performance.timing && performance.timing.navigationStart;\n  const hasNavigationStart = typeof navigationStart === 'number';\n  // if navigationStart isn't available set delta to threshold so it isn't used\n  const navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;\n  const navigationStartIsReliable = navigationStartDelta < threshold;\n\n  if (timeOriginIsReliable || navigationStartIsReliable) {\n    // Use the more reliable time origin\n    if (timeOriginDelta <= navigationStartDelta) {\n      exports._browserPerformanceTimeOriginMode = 'timeOrigin';\n      return performance.timeOrigin;\n    } else {\n      exports._browserPerformanceTimeOriginMode = 'navigationStart';\n      return navigationStart;\n    }\n  }\n\n  // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n  exports._browserPerformanceTimeOriginMode = 'dateNow';\n  return dateNow;\n})();\n\nexports.browserPerformanceTimeOrigin = browserPerformanceTimeOrigin;\nexports.dateTimestampInSeconds = dateTimestampInSeconds;\nexports.timestampInSeconds = timestampInSeconds;\n//# sourceMappingURL=time.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/time.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/tracing.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/tracing.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst baggage = __webpack_require__(/*! ./baggage.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/baggage.js\");\nconst misc = __webpack_require__(/*! ./misc.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/misc.js\");\n\n// eslint-disable-next-line @sentry-internal/sdk/no-regexp-constructor -- RegExp is used for readability here\nconst TRACEPARENT_REGEXP = new RegExp(\n  '^[ \\\\t]*' + // whitespace\n    '([0-9a-f]{32})?' + // trace_id\n    '-?([0-9a-f]{16})?' + // span_id\n    '-?([01])?' + // sampled\n    '[ \\\\t]*$', // whitespace\n);\n\n/**\n * Extract transaction context data from a `sentry-trace` header.\n *\n * @param traceparent Traceparent string\n *\n * @returns Object containing data from the header, or undefined if traceparent string is malformed\n */\nfunction extractTraceparentData(traceparent) {\n  if (!traceparent) {\n    return undefined;\n  }\n\n  const matches = traceparent.match(TRACEPARENT_REGEXP);\n  if (!matches) {\n    return undefined;\n  }\n\n  let parentSampled;\n  if (matches[3] === '1') {\n    parentSampled = true;\n  } else if (matches[3] === '0') {\n    parentSampled = false;\n  }\n\n  return {\n    traceId: matches[1],\n    parentSampled,\n    parentSpanId: matches[2],\n  };\n}\n\n/**\n * Create a propagation context from incoming headers or\n * creates a minimal new one if the headers are undefined.\n */\nfunction propagationContextFromHeaders(\n  sentryTrace,\n  baggage$1,\n) {\n  const traceparentData = extractTraceparentData(sentryTrace);\n  const dynamicSamplingContext = baggage.baggageHeaderToDynamicSamplingContext(baggage$1);\n\n  const { traceId, parentSpanId, parentSampled } = traceparentData || {};\n\n  if (!traceparentData) {\n    return {\n      traceId: traceId || misc.uuid4(),\n      spanId: misc.uuid4().substring(16),\n    };\n  } else {\n    return {\n      traceId: traceId || misc.uuid4(),\n      parentSpanId: parentSpanId || misc.uuid4().substring(16),\n      spanId: misc.uuid4().substring(16),\n      sampled: parentSampled,\n      dsc: dynamicSamplingContext || {}, // If we have traceparent data but no DSC it means we are not head of trace and we must freeze it\n    };\n  }\n}\n\n/**\n * Create sentry-trace header from span context values.\n */\nfunction generateSentryTraceHeader(\n  traceId = misc.uuid4(),\n  spanId = misc.uuid4().substring(16),\n  sampled,\n) {\n  let sampledString = '';\n  if (sampled !== undefined) {\n    sampledString = sampled ? '-1' : '-0';\n  }\n  return `${traceId}-${spanId}${sampledString}`;\n}\n\nexports.TRACEPARENT_REGEXP = TRACEPARENT_REGEXP;\nexports.extractTraceparentData = extractTraceparentData;\nexports.generateSentryTraceHeader = generateSentryTraceHeader;\nexports.propagationContextFromHeaders = propagationContextFromHeaders;\n//# sourceMappingURL=tracing.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy90cmFjaW5nLmpzIiwibWFwcGluZ3MiOiJBQUFBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQzs7QUFFN0QsZ0JBQWdCLG1CQUFPLENBQUMsNEhBQWM7QUFDdEMsYUFBYSxtQkFBTyxDQUFDLHNIQUFXOztBQUVoQztBQUNBO0FBQ0E7QUFDQSxlQUFlLEdBQUc7QUFDbEIsaUJBQWlCLEdBQUc7QUFDcEI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFVBQVUsdUNBQXVDOztBQUVqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUM7QUFDdkM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksUUFBUSxHQUFHLE9BQU8sRUFBRSxjQUFjO0FBQzlDOztBQUVBLDBCQUEwQjtBQUMxQiw4QkFBOEI7QUFDOUIsaUNBQWlDO0FBQ2pDLHFDQUFxQztBQUNyQyIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy90cmFjaW5nLmpzP2ZjNjQiXSwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxuY29uc3QgYmFnZ2FnZSA9IHJlcXVpcmUoJy4vYmFnZ2FnZS5qcycpO1xuY29uc3QgbWlzYyA9IHJlcXVpcmUoJy4vbWlzYy5qcycpO1xuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHNlbnRyeS1pbnRlcm5hbC9zZGsvbm8tcmVnZXhwLWNvbnN0cnVjdG9yIC0tIFJlZ0V4cCBpcyB1c2VkIGZvciByZWFkYWJpbGl0eSBoZXJlXG5jb25zdCBUUkFDRVBBUkVOVF9SRUdFWFAgPSBuZXcgUmVnRXhwKFxuICAnXlsgXFxcXHRdKicgKyAvLyB3aGl0ZXNwYWNlXG4gICAgJyhbMC05YS1mXXszMn0pPycgKyAvLyB0cmFjZV9pZFxuICAgICctPyhbMC05YS1mXXsxNn0pPycgKyAvLyBzcGFuX2lkXG4gICAgJy0/KFswMV0pPycgKyAvLyBzYW1wbGVkXG4gICAgJ1sgXFxcXHRdKiQnLCAvLyB3aGl0ZXNwYWNlXG4pO1xuXG4vKipcbiAqIEV4dHJhY3QgdHJhbnNhY3Rpb24gY29udGV4dCBkYXRhIGZyb20gYSBgc2VudHJ5LXRyYWNlYCBoZWFkZXIuXG4gKlxuICogQHBhcmFtIHRyYWNlcGFyZW50IFRyYWNlcGFyZW50IHN0cmluZ1xuICpcbiAqIEByZXR1cm5zIE9iamVjdCBjb250YWluaW5nIGRhdGEgZnJvbSB0aGUgaGVhZGVyLCBvciB1bmRlZmluZWQgaWYgdHJhY2VwYXJlbnQgc3RyaW5nIGlzIG1hbGZvcm1lZFxuICovXG5mdW5jdGlvbiBleHRyYWN0VHJhY2VwYXJlbnREYXRhKHRyYWNlcGFyZW50KSB7XG4gIGlmICghdHJhY2VwYXJlbnQpIHtcbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG5cbiAgY29uc3QgbWF0Y2hlcyA9IHRyYWNlcGFyZW50Lm1hdGNoKFRSQUNFUEFSRU5UX1JFR0VYUCk7XG4gIGlmICghbWF0Y2hlcykge1xuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cblxuICBsZXQgcGFyZW50U2FtcGxlZDtcbiAgaWYgKG1hdGNoZXNbM10gPT09ICcxJykge1xuICAgIHBhcmVudFNhbXBsZWQgPSB0cnVlO1xuICB9IGVsc2UgaWYgKG1hdGNoZXNbM10gPT09ICcwJykge1xuICAgIHBhcmVudFNhbXBsZWQgPSBmYWxzZTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgdHJhY2VJZDogbWF0Y2hlc1sxXSxcbiAgICBwYXJlbnRTYW1wbGVkLFxuICAgIHBhcmVudFNwYW5JZDogbWF0Y2hlc1syXSxcbiAgfTtcbn1cblxuLyoqXG4gKiBDcmVhdGUgYSBwcm9wYWdhdGlvbiBjb250ZXh0IGZyb20gaW5jb21pbmcgaGVhZGVycyBvclxuICogY3JlYXRlcyBhIG1pbmltYWwgbmV3IG9uZSBpZiB0aGUgaGVhZGVycyBhcmUgdW5kZWZpbmVkLlxuICovXG5mdW5jdGlvbiBwcm9wYWdhdGlvbkNvbnRleHRGcm9tSGVhZGVycyhcbiAgc2VudHJ5VHJhY2UsXG4gIGJhZ2dhZ2UkMSxcbikge1xuICBjb25zdCB0cmFjZXBhcmVudERhdGEgPSBleHRyYWN0VHJhY2VwYXJlbnREYXRhKHNlbnRyeVRyYWNlKTtcbiAgY29uc3QgZHluYW1pY1NhbXBsaW5nQ29udGV4dCA9IGJhZ2dhZ2UuYmFnZ2FnZUhlYWRlclRvRHluYW1pY1NhbXBsaW5nQ29udGV4dChiYWdnYWdlJDEpO1xuXG4gIGNvbnN0IHsgdHJhY2VJZCwgcGFyZW50U3BhbklkLCBwYXJlbnRTYW1wbGVkIH0gPSB0cmFjZXBhcmVudERhdGEgfHwge307XG5cbiAgaWYgKCF0cmFjZXBhcmVudERhdGEpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdHJhY2VJZDogdHJhY2VJZCB8fCBtaXNjLnV1aWQ0KCksXG4gICAgICBzcGFuSWQ6IG1pc2MudXVpZDQoKS5zdWJzdHJpbmcoMTYpLFxuICAgIH07XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHRyYWNlSWQ6IHRyYWNlSWQgfHwgbWlzYy51dWlkNCgpLFxuICAgICAgcGFyZW50U3BhbklkOiBwYXJlbnRTcGFuSWQgfHwgbWlzYy51dWlkNCgpLnN1YnN0cmluZygxNiksXG4gICAgICBzcGFuSWQ6IG1pc2MudXVpZDQoKS5zdWJzdHJpbmcoMTYpLFxuICAgICAgc2FtcGxlZDogcGFyZW50U2FtcGxlZCxcbiAgICAgIGRzYzogZHluYW1pY1NhbXBsaW5nQ29udGV4dCB8fCB7fSwgLy8gSWYgd2UgaGF2ZSB0cmFjZXBhcmVudCBkYXRhIGJ1dCBubyBEU0MgaXQgbWVhbnMgd2UgYXJlIG5vdCBoZWFkIG9mIHRyYWNlIGFuZCB3ZSBtdXN0IGZyZWV6ZSBpdFxuICAgIH07XG4gIH1cbn1cblxuLyoqXG4gKiBDcmVhdGUgc2VudHJ5LXRyYWNlIGhlYWRlciBmcm9tIHNwYW4gY29udGV4dCB2YWx1ZXMuXG4gKi9cbmZ1bmN0aW9uIGdlbmVyYXRlU2VudHJ5VHJhY2VIZWFkZXIoXG4gIHRyYWNlSWQgPSBtaXNjLnV1aWQ0KCksXG4gIHNwYW5JZCA9IG1pc2MudXVpZDQoKS5zdWJzdHJpbmcoMTYpLFxuICBzYW1wbGVkLFxuKSB7XG4gIGxldCBzYW1wbGVkU3RyaW5nID0gJyc7XG4gIGlmIChzYW1wbGVkICE9PSB1bmRlZmluZWQpIHtcbiAgICBzYW1wbGVkU3RyaW5nID0gc2FtcGxlZCA/ICctMScgOiAnLTAnO1xuICB9XG4gIHJldHVybiBgJHt0cmFjZUlkfS0ke3NwYW5JZH0ke3NhbXBsZWRTdHJpbmd9YDtcbn1cblxuZXhwb3J0cy5UUkFDRVBBUkVOVF9SRUdFWFAgPSBUUkFDRVBBUkVOVF9SRUdFWFA7XG5leHBvcnRzLmV4dHJhY3RUcmFjZXBhcmVudERhdGEgPSBleHRyYWN0VHJhY2VwYXJlbnREYXRhO1xuZXhwb3J0cy5nZW5lcmF0ZVNlbnRyeVRyYWNlSGVhZGVyID0gZ2VuZXJhdGVTZW50cnlUcmFjZUhlYWRlcjtcbmV4cG9ydHMucHJvcGFnYXRpb25Db250ZXh0RnJvbUhlYWRlcnMgPSBwcm9wYWdhdGlvbkNvbnRleHRGcm9tSGVhZGVycztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRyYWNpbmcuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/tracing.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/url.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/url.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nfunction parseUrl(url) {\n  if (!url) {\n    return {};\n  }\n\n  const match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  const query = match[6] || '';\n  const fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    search: query,\n    hash: fragment,\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nfunction stripUrlQueryAndFragment(urlPath) {\n  return (urlPath.split(/[?#]/, 1) )[0];\n}\n\n/**\n * Returns number of URL segments of a passed string URL.\n */\nfunction getNumberOfUrlSegments(url) {\n  // split at '/' or at '\\/' to split regex urls correctly\n  return url.split(/\\\\?\\//).filter(s => s.length > 0 && s !== ',').length;\n}\n\n/**\n * Takes a URL object and returns a sanitized string which is safe to use as span name\n * see: https://develop.sentry.dev/sdk/data-handling/#structuring-data\n */\nfunction getSanitizedUrlString(url) {\n  const { protocol, host, path } = url;\n\n  const filteredHost =\n    (host &&\n      host\n        // Always filter out authority\n        .replace(/^.*@/, '[filtered]:[filtered]@')\n        // Don't show standard :80 (http) and :443 (https) ports to reduce the noise\n        // TODO: Use new URL global if it exists\n        .replace(/(:80)$/, '')\n        .replace(/(:443)$/, '')) ||\n    '';\n\n  return `${protocol ? `${protocol}://` : ''}${filteredHost}${path}`;\n}\n\nexports.getNumberOfUrlSegments = getNumberOfUrlSegments;\nexports.getSanitizedUrlString = getSanitizedUrlString;\nexports.parseUrl = parseUrl;\nexports.stripUrlQueryAndFragment = stripUrlQueryAndFragment;\n//# sourceMappingURL=url.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy91cmwuanMiLCJtYXBwaW5ncyI6IkFBQUEsOENBQTZDLEVBQUUsYUFBYSxFQUFDOztBQUU3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLHVCQUF1Qjs7QUFFakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsWUFBWSxjQUFjLFNBQVMsVUFBVSxFQUFFLGFBQWEsRUFBRSxLQUFLO0FBQ25FOztBQUVBLDhCQUE4QjtBQUM5Qiw2QkFBNkI7QUFDN0IsZ0JBQWdCO0FBQ2hCLGdDQUFnQztBQUNoQyIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy91cmwuanM/YTllMCJdLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG4vKipcbiAqIFBhcnNlcyBzdHJpbmcgZm9ybSBvZiBVUkwgaW50byBhbiBvYmplY3RcbiAqIC8vIGJvcnJvd2VkIGZyb20gaHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzM5ODYjYXBwZW5kaXgtQlxuICogLy8gaW50ZW50aW9uYWxseSB1c2luZyByZWdleCBhbmQgbm90IDxhLz4gaHJlZiBwYXJzaW5nIHRyaWNrIGJlY2F1c2UgUmVhY3QgTmF0aXZlIGFuZCBvdGhlclxuICogLy8gZW52aXJvbm1lbnRzIHdoZXJlIERPTSBtaWdodCBub3QgYmUgYXZhaWxhYmxlXG4gKiBAcmV0dXJucyBwYXJzZWQgVVJMIG9iamVjdFxuICovXG5mdW5jdGlvbiBwYXJzZVVybCh1cmwpIHtcbiAgaWYgKCF1cmwpIHtcbiAgICByZXR1cm4ge307XG4gIH1cblxuICBjb25zdCBtYXRjaCA9IHVybC5tYXRjaCgvXigoW146Lz8jXSspOik/KFxcL1xcLyhbXi8/I10qKSk/KFtePyNdKikoXFw/KFteI10qKSk/KCMoLiopKT8kLyk7XG5cbiAgaWYgKCFtYXRjaCkge1xuICAgIHJldHVybiB7fTtcbiAgfVxuXG4gIC8vIGNvZXJjZSB0byB1bmRlZmluZWQgdmFsdWVzIHRvIGVtcHR5IHN0cmluZyBzbyB3ZSBkb24ndCBnZXQgJ3VuZGVmaW5lZCdcbiAgY29uc3QgcXVlcnkgPSBtYXRjaFs2XSB8fCAnJztcbiAgY29uc3QgZnJhZ21lbnQgPSBtYXRjaFs4XSB8fCAnJztcbiAgcmV0dXJuIHtcbiAgICBob3N0OiBtYXRjaFs0XSxcbiAgICBwYXRoOiBtYXRjaFs1XSxcbiAgICBwcm90b2NvbDogbWF0Y2hbMl0sXG4gICAgc2VhcmNoOiBxdWVyeSxcbiAgICBoYXNoOiBmcmFnbWVudCxcbiAgICByZWxhdGl2ZTogbWF0Y2hbNV0gKyBxdWVyeSArIGZyYWdtZW50LCAvLyBldmVyeXRoaW5nIG1pbnVzIG9yaWdpblxuICB9O1xufVxuXG4vKipcbiAqIFN0cmlwIHRoZSBxdWVyeSBzdHJpbmcgYW5kIGZyYWdtZW50IG9mZiBvZiBhIGdpdmVuIFVSTCBvciBwYXRoIChpZiBwcmVzZW50KVxuICpcbiAqIEBwYXJhbSB1cmxQYXRoIEZ1bGwgVVJMIG9yIHBhdGgsIGluY2x1ZGluZyBwb3NzaWJsZSBxdWVyeSBzdHJpbmcgYW5kL29yIGZyYWdtZW50XG4gKiBAcmV0dXJucyBVUkwgb3IgcGF0aCB3aXRob3V0IHF1ZXJ5IHN0cmluZyBvciBmcmFnbWVudFxuICovXG5mdW5jdGlvbiBzdHJpcFVybFF1ZXJ5QW5kRnJhZ21lbnQodXJsUGF0aCkge1xuICByZXR1cm4gKHVybFBhdGguc3BsaXQoL1s/I10vLCAxKSApWzBdO1xufVxuXG4vKipcbiAqIFJldHVybnMgbnVtYmVyIG9mIFVSTCBzZWdtZW50cyBvZiBhIHBhc3NlZCBzdHJpbmcgVVJMLlxuICovXG5mdW5jdGlvbiBnZXROdW1iZXJPZlVybFNlZ21lbnRzKHVybCkge1xuICAvLyBzcGxpdCBhdCAnLycgb3IgYXQgJ1xcLycgdG8gc3BsaXQgcmVnZXggdXJscyBjb3JyZWN0bHlcbiAgcmV0dXJuIHVybC5zcGxpdCgvXFxcXD9cXC8vKS5maWx0ZXIocyA9PiBzLmxlbmd0aCA+IDAgJiYgcyAhPT0gJywnKS5sZW5ndGg7XG59XG5cbi8qKlxuICogVGFrZXMgYSBVUkwgb2JqZWN0IGFuZCByZXR1cm5zIGEgc2FuaXRpemVkIHN0cmluZyB3aGljaCBpcyBzYWZlIHRvIHVzZSBhcyBzcGFuIG5hbWVcbiAqIHNlZTogaHR0cHM6Ly9kZXZlbG9wLnNlbnRyeS5kZXYvc2RrL2RhdGEtaGFuZGxpbmcvI3N0cnVjdHVyaW5nLWRhdGFcbiAqL1xuZnVuY3Rpb24gZ2V0U2FuaXRpemVkVXJsU3RyaW5nKHVybCkge1xuICBjb25zdCB7IHByb3RvY29sLCBob3N0LCBwYXRoIH0gPSB1cmw7XG5cbiAgY29uc3QgZmlsdGVyZWRIb3N0ID1cbiAgICAoaG9zdCAmJlxuICAgICAgaG9zdFxuICAgICAgICAvLyBBbHdheXMgZmlsdGVyIG91dCBhdXRob3JpdHlcbiAgICAgICAgLnJlcGxhY2UoL14uKkAvLCAnW2ZpbHRlcmVkXTpbZmlsdGVyZWRdQCcpXG4gICAgICAgIC8vIERvbid0IHNob3cgc3RhbmRhcmQgOjgwIChodHRwKSBhbmQgOjQ0MyAoaHR0cHMpIHBvcnRzIHRvIHJlZHVjZSB0aGUgbm9pc2VcbiAgICAgICAgLy8gVE9ETzogVXNlIG5ldyBVUkwgZ2xvYmFsIGlmIGl0IGV4aXN0c1xuICAgICAgICAucmVwbGFjZSgvKDo4MCkkLywgJycpXG4gICAgICAgIC5yZXBsYWNlKC8oOjQ0MykkLywgJycpKSB8fFxuICAgICcnO1xuXG4gIHJldHVybiBgJHtwcm90b2NvbCA/IGAke3Byb3RvY29sfTovL2AgOiAnJ30ke2ZpbHRlcmVkSG9zdH0ke3BhdGh9YDtcbn1cblxuZXhwb3J0cy5nZXROdW1iZXJPZlVybFNlZ21lbnRzID0gZ2V0TnVtYmVyT2ZVcmxTZWdtZW50cztcbmV4cG9ydHMuZ2V0U2FuaXRpemVkVXJsU3RyaW5nID0gZ2V0U2FuaXRpemVkVXJsU3RyaW5nO1xuZXhwb3J0cy5wYXJzZVVybCA9IHBhcnNlVXJsO1xuZXhwb3J0cy5zdHJpcFVybFF1ZXJ5QW5kRnJhZ21lbnQgPSBzdHJpcFVybFF1ZXJ5QW5kRnJhZ21lbnQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD11cmwuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/url.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/vendor/escapeStringForRegex.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/vendor/escapeStringForRegex.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n// Based on https://github.com/sindresorhus/escape-string-regexp but with modifications to:\n//   a) reduce the size by skipping the runtime type - checking\n//   b) ensure it gets down - compiled for old versions of Node(the published package only supports Node 14+).\n//\n// MIT License\n//\n// Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (https://sindresorhus.com)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n// documentation files(the \"Software\"), to deal in the Software without restriction, including without limitation\n// the rights to use, copy, modify, merge, publish, distribute, sublicense, and / or sell copies of the Software, and\n// to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all copies or substantial portions of\n// the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO\n// THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n// IN THE SOFTWARE.\n\n/**\n * Given a string, escape characters which have meaning in the regex grammar, such that the result is safe to feed to\n * `new RegExp()`.\n *\n * @param regexString The string to escape\n * @returns An version of the string with all special regex characters escaped\n */\nfunction escapeStringForRegex(regexString) {\n  // escape the hyphen separately so we can also replace it with a unicode literal hyphen, to avoid the problems\n  // discussed in https://github.com/sindresorhus/escape-string-regexp/issues/20.\n  return regexString.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&').replace(/-/g, '\\\\x2d');\n}\n\nexports.escapeStringForRegex = escapeStringForRegex;\n//# sourceMappingURL=escapeStringForRegex.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy92ZW5kb3IvZXNjYXBlU3RyaW5nRm9yUmVnZXguanMiLCJtYXBwaW5ncyI6IkFBQUEsOENBQTZDLEVBQUUsYUFBYSxFQUFDOztBQUU3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0M7QUFDcEM7O0FBRUEsNEJBQTRCO0FBQzVCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLXByb2plY3QvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL3ZlbmRvci9lc2NhcGVTdHJpbmdGb3JSZWdleC5qcz9jMjE4Il0sInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG5cbi8vIEJhc2VkIG9uIGh0dHBzOi8vZ2l0aHViLmNvbS9zaW5kcmVzb3JodXMvZXNjYXBlLXN0cmluZy1yZWdleHAgYnV0IHdpdGggbW9kaWZpY2F0aW9ucyB0bzpcbi8vICAgYSkgcmVkdWNlIHRoZSBzaXplIGJ5IHNraXBwaW5nIHRoZSBydW50aW1lIHR5cGUgLSBjaGVja2luZ1xuLy8gICBiKSBlbnN1cmUgaXQgZ2V0cyBkb3duIC0gY29tcGlsZWQgZm9yIG9sZCB2ZXJzaW9ucyBvZiBOb2RlKHRoZSBwdWJsaXNoZWQgcGFja2FnZSBvbmx5IHN1cHBvcnRzIE5vZGUgMTQrKS5cbi8vXG4vLyBNSVQgTGljZW5zZVxuLy9cbi8vIENvcHlyaWdodCAoYykgU2luZHJlIFNvcmh1cyA8c2luZHJlc29yaHVzQGdtYWlsLmNvbT4gKGh0dHBzOi8vc2luZHJlc29yaHVzLmNvbSlcbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5IG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWRcbi8vIGRvY3VtZW50YXRpb24gZmlsZXModGhlIFwiU29mdHdhcmVcIiksIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb25cbi8vIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQgLyBvciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZFxuLy8gdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mXG4vLyB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPXG4vLyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuSU4gTk8gRVZFTlQgU0hBTEwgVEhFXG4vLyBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsXG4vLyBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTXG4vLyBJTiBUSEUgU09GVFdBUkUuXG5cbi8qKlxuICogR2l2ZW4gYSBzdHJpbmcsIGVzY2FwZSBjaGFyYWN0ZXJzIHdoaWNoIGhhdmUgbWVhbmluZyBpbiB0aGUgcmVnZXggZ3JhbW1hciwgc3VjaCB0aGF0IHRoZSByZXN1bHQgaXMgc2FmZSB0byBmZWVkIHRvXG4gKiBgbmV3IFJlZ0V4cCgpYC5cbiAqXG4gKiBAcGFyYW0gcmVnZXhTdHJpbmcgVGhlIHN0cmluZyB0byBlc2NhcGVcbiAqIEByZXR1cm5zIEFuIHZlcnNpb24gb2YgdGhlIHN0cmluZyB3aXRoIGFsbCBzcGVjaWFsIHJlZ2V4IGNoYXJhY3RlcnMgZXNjYXBlZFxuICovXG5mdW5jdGlvbiBlc2NhcGVTdHJpbmdGb3JSZWdleChyZWdleFN0cmluZykge1xuICAvLyBlc2NhcGUgdGhlIGh5cGhlbiBzZXBhcmF0ZWx5IHNvIHdlIGNhbiBhbHNvIHJlcGxhY2UgaXQgd2l0aCBhIHVuaWNvZGUgbGl0ZXJhbCBoeXBoZW4sIHRvIGF2b2lkIHRoZSBwcm9ibGVtc1xuICAvLyBkaXNjdXNzZWQgaW4gaHR0cHM6Ly9naXRodWIuY29tL3NpbmRyZXNvcmh1cy9lc2NhcGUtc3RyaW5nLXJlZ2V4cC9pc3N1ZXMvMjAuXG4gIHJldHVybiByZWdleFN0cmluZy5yZXBsYWNlKC9bfFxcXFx7fSgpW1xcXV4kKyo/Ll0vZywgJ1xcXFwkJicpLnJlcGxhY2UoLy0vZywgJ1xcXFx4MmQnKTtcbn1cblxuZXhwb3J0cy5lc2NhcGVTdHJpbmdGb3JSZWdleCA9IGVzY2FwZVN0cmluZ0ZvclJlZ2V4O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXNjYXBlU3RyaW5nRm9yUmVnZXguanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/vendor/escapeStringForRegex.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/vendor/supportsHistory.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/vendor/supportsHistory.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst worldwide = __webpack_require__(/*! ../worldwide.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/worldwide.js\");\n\n// Based on https://github.com/angular/angular.js/pull/13945/files\n// The MIT License\n\n\nconst WINDOW = worldwide.GLOBAL_OBJ ;\n\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsHistory() {\n  // NOTE: in Chrome App environment, touching history.pushState, *even inside\n  //       a try/catch block*, will cause Chrome to output an error to console.error\n  // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n  /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const chromeVar = (WINDOW ).chrome;\n  const isChromePackagedApp = chromeVar && chromeVar.app && chromeVar.app.runtime;\n  /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n  const hasHistoryApi = 'history' in WINDOW && !!WINDOW.history.pushState && !!WINDOW.history.replaceState;\n\n  return !isChromePackagedApp && hasHistoryApi;\n}\n\nexports.supportsHistory = supportsHistory;\n//# sourceMappingURL=supportsHistory.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy92ZW5kb3Ivc3VwcG9ydHNIaXN0b3J5LmpzIiwibWFwcGluZ3MiOiJBQUFBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQzs7QUFFN0Qsa0JBQWtCLG1CQUFPLENBQUMsaUlBQWlCOztBQUUzQztBQUNBOzs7QUFHQTs7QUFFQTtBQUNBO0FBQ0EsSUFBSSxzQkFBc0I7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSx1QkFBdUI7QUFDdkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0Zm9saW8tcHJvamVjdC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2VudHJ5K3V0aWxzQDguMTcuMC9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9idWlsZC9janMvdmVuZG9yL3N1cHBvcnRzSGlzdG9yeS5qcz81ZTJhIl0sInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG5cbmNvbnN0IHdvcmxkd2lkZSA9IHJlcXVpcmUoJy4uL3dvcmxkd2lkZS5qcycpO1xuXG4vLyBCYXNlZCBvbiBodHRwczovL2dpdGh1Yi5jb20vYW5ndWxhci9hbmd1bGFyLmpzL3B1bGwvMTM5NDUvZmlsZXNcbi8vIFRoZSBNSVQgTGljZW5zZVxuXG5cbmNvbnN0IFdJTkRPVyA9IHdvcmxkd2lkZS5HTE9CQUxfT0JKIDtcblxuLyoqXG4gKiBUZWxscyB3aGV0aGVyIGN1cnJlbnQgZW52aXJvbm1lbnQgc3VwcG9ydHMgSGlzdG9yeSBBUElcbiAqIHtAbGluayBzdXBwb3J0c0hpc3Rvcnl9LlxuICpcbiAqIEByZXR1cm5zIEFuc3dlciB0byB0aGUgZ2l2ZW4gcXVlc3Rpb24uXG4gKi9cbmZ1bmN0aW9uIHN1cHBvcnRzSGlzdG9yeSgpIHtcbiAgLy8gTk9URTogaW4gQ2hyb21lIEFwcCBlbnZpcm9ubWVudCwgdG91Y2hpbmcgaGlzdG9yeS5wdXNoU3RhdGUsICpldmVuIGluc2lkZVxuICAvLyAgICAgICBhIHRyeS9jYXRjaCBibG9jayosIHdpbGwgY2F1c2UgQ2hyb21lIHRvIG91dHB1dCBhbiBlcnJvciB0byBjb25zb2xlLmVycm9yXG4gIC8vIGJvcnJvd2VkIGZyb206IGh0dHBzOi8vZ2l0aHViLmNvbS9hbmd1bGFyL2FuZ3VsYXIuanMvcHVsbC8xMzk0NS9maWxlc1xuICAvKiBlc2xpbnQtZGlzYWJsZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLW1lbWJlci1hY2Nlc3MgKi9cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbiAgY29uc3QgY2hyb21lVmFyID0gKFdJTkRPVyApLmNocm9tZTtcbiAgY29uc3QgaXNDaHJvbWVQYWNrYWdlZEFwcCA9IGNocm9tZVZhciAmJiBjaHJvbWVWYXIuYXBwICYmIGNocm9tZVZhci5hcHAucnVudGltZTtcbiAgLyogZXNsaW50LWVuYWJsZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLW1lbWJlci1hY2Nlc3MgKi9cbiAgY29uc3QgaGFzSGlzdG9yeUFwaSA9ICdoaXN0b3J5JyBpbiBXSU5ET1cgJiYgISFXSU5ET1cuaGlzdG9yeS5wdXNoU3RhdGUgJiYgISFXSU5ET1cuaGlzdG9yeS5yZXBsYWNlU3RhdGU7XG5cbiAgcmV0dXJuICFpc0Nocm9tZVBhY2thZ2VkQXBwICYmIGhhc0hpc3RvcnlBcGk7XG59XG5cbmV4cG9ydHMuc3VwcG9ydHNIaXN0b3J5ID0gc3VwcG9ydHNIaXN0b3J5O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3VwcG9ydHNIaXN0b3J5LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/vendor/supportsHistory.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/version.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/version.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst SDK_VERSION = '8.17.0';\n\nexports.SDK_VERSION = SDK_VERSION;\n//# sourceMappingURL=version.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy92ZXJzaW9uLmpzIiwibWFwcGluZ3MiOiJBQUFBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQzs7QUFFN0Q7O0FBRUEsbUJBQW1CO0FBQ25CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLXByb2plY3QvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL3ZlcnNpb24uanM/OWEzMCJdLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG5jb25zdCBTREtfVkVSU0lPTiA9ICc4LjE3LjAnO1xuXG5leHBvcnRzLlNES19WRVJTSU9OID0gU0RLX1ZFUlNJT047XG4vLyMgc291cmNlTWFwcGluZ1VSTD12ZXJzaW9uLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/version.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/worldwide.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/worldwide.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst version = __webpack_require__(/*! ./version.js */ \"(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/version.js\");\n\n/** Get's the global object for the current JavaScript runtime */\nconst GLOBAL_OBJ = globalThis ;\n\n/**\n * Returns a global singleton contained in the global `__SENTRY__[]` object.\n *\n * If the singleton doesn't already exist in `__SENTRY__`, it will be created using the given factory\n * function and added to the `__SENTRY__` object.\n *\n * @param name name of the global singleton on __SENTRY__\n * @param creator creator Factory function to create the singleton if it doesn't already exist on `__SENTRY__`\n * @param obj (Optional) The global object on which to look for `__SENTRY__`, if not `GLOBAL_OBJ`'s return value\n * @returns the singleton\n */\nfunction getGlobalSingleton(name, creator, obj) {\n  const gbl = (obj || GLOBAL_OBJ) ;\n  const __SENTRY__ = (gbl.__SENTRY__ = gbl.__SENTRY__ || {});\n  const versionedCarrier = (__SENTRY__[version.SDK_VERSION] = __SENTRY__[version.SDK_VERSION] || {});\n  return versionedCarrier[name] || (versionedCarrier[name] = creator());\n}\n\nexports.GLOBAL_OBJ = GLOBAL_OBJ;\nexports.getGlobalSingleton = getGlobalSingleton;\n//# sourceMappingURL=worldwide.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy93b3JsZHdpZGUuanMiLCJtYXBwaW5ncyI6IkFBQUEsOENBQTZDLEVBQUUsYUFBYSxFQUFDOztBQUU3RCxnQkFBZ0IsbUJBQU8sQ0FBQyw0SEFBYzs7QUFFdEM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJEQUEyRDtBQUMzRCxtR0FBbUc7QUFDbkc7QUFDQTs7QUFFQSxrQkFBa0I7QUFDbEIsMEJBQTBCO0FBQzFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLXByb2plY3QvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL3dvcmxkd2lkZS5qcz9kYjFhIl0sInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG5cbmNvbnN0IHZlcnNpb24gPSByZXF1aXJlKCcuL3ZlcnNpb24uanMnKTtcblxuLyoqIEdldCdzIHRoZSBnbG9iYWwgb2JqZWN0IGZvciB0aGUgY3VycmVudCBKYXZhU2NyaXB0IHJ1bnRpbWUgKi9cbmNvbnN0IEdMT0JBTF9PQkogPSBnbG9iYWxUaGlzIDtcblxuLyoqXG4gKiBSZXR1cm5zIGEgZ2xvYmFsIHNpbmdsZXRvbiBjb250YWluZWQgaW4gdGhlIGdsb2JhbCBgX19TRU5UUllfX1tdYCBvYmplY3QuXG4gKlxuICogSWYgdGhlIHNpbmdsZXRvbiBkb2Vzbid0IGFscmVhZHkgZXhpc3QgaW4gYF9fU0VOVFJZX19gLCBpdCB3aWxsIGJlIGNyZWF0ZWQgdXNpbmcgdGhlIGdpdmVuIGZhY3RvcnlcbiAqIGZ1bmN0aW9uIGFuZCBhZGRlZCB0byB0aGUgYF9fU0VOVFJZX19gIG9iamVjdC5cbiAqXG4gKiBAcGFyYW0gbmFtZSBuYW1lIG9mIHRoZSBnbG9iYWwgc2luZ2xldG9uIG9uIF9fU0VOVFJZX19cbiAqIEBwYXJhbSBjcmVhdG9yIGNyZWF0b3IgRmFjdG9yeSBmdW5jdGlvbiB0byBjcmVhdGUgdGhlIHNpbmdsZXRvbiBpZiBpdCBkb2Vzbid0IGFscmVhZHkgZXhpc3Qgb24gYF9fU0VOVFJZX19gXG4gKiBAcGFyYW0gb2JqIChPcHRpb25hbCkgVGhlIGdsb2JhbCBvYmplY3Qgb24gd2hpY2ggdG8gbG9vayBmb3IgYF9fU0VOVFJZX19gLCBpZiBub3QgYEdMT0JBTF9PQkpgJ3MgcmV0dXJuIHZhbHVlXG4gKiBAcmV0dXJucyB0aGUgc2luZ2xldG9uXG4gKi9cbmZ1bmN0aW9uIGdldEdsb2JhbFNpbmdsZXRvbihuYW1lLCBjcmVhdG9yLCBvYmopIHtcbiAgY29uc3QgZ2JsID0gKG9iaiB8fCBHTE9CQUxfT0JKKSA7XG4gIGNvbnN0IF9fU0VOVFJZX18gPSAoZ2JsLl9fU0VOVFJZX18gPSBnYmwuX19TRU5UUllfXyB8fCB7fSk7XG4gIGNvbnN0IHZlcnNpb25lZENhcnJpZXIgPSAoX19TRU5UUllfX1t2ZXJzaW9uLlNES19WRVJTSU9OXSA9IF9fU0VOVFJZX19bdmVyc2lvbi5TREtfVkVSU0lPTl0gfHwge30pO1xuICByZXR1cm4gdmVyc2lvbmVkQ2FycmllcltuYW1lXSB8fCAodmVyc2lvbmVkQ2FycmllcltuYW1lXSA9IGNyZWF0b3IoKSk7XG59XG5cbmV4cG9ydHMuR0xPQkFMX09CSiA9IEdMT0JBTF9PQko7XG5leHBvcnRzLmdldEdsb2JhbFNpbmdsZXRvbiA9IGdldEdsb2JhbFNpbmdsZXRvbjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXdvcmxkd2lkZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/worldwide.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/aggregate-errors.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/aggregate-errors.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst is = __webpack_require__(/*! ./is.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/is.js\");\nconst string = __webpack_require__(/*! ./string.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/string.js\");\n\n/**\n * Creates exceptions inside `event.exception.values` for errors that are nested on properties based on the `key` parameter.\n */\nfunction applyAggregateErrorsToEvent(\n  exceptionFromErrorImplementation,\n  parser,\n  maxValueLimit = 250,\n  key,\n  limit,\n  event,\n  hint,\n) {\n  if (!event.exception || !event.exception.values || !hint || !is.isInstanceOf(hint.originalException, Error)) {\n    return;\n  }\n\n  // Generally speaking the last item in `event.exception.values` is the exception originating from the original Error\n  const originalException =\n    event.exception.values.length > 0 ? event.exception.values[event.exception.values.length - 1] : undefined;\n\n  // We only create exception grouping if there is an exception in the event.\n  if (originalException) {\n    event.exception.values = truncateAggregateExceptions(\n      aggregateExceptionsFromError(\n        exceptionFromErrorImplementation,\n        parser,\n        limit,\n        hint.originalException ,\n        key,\n        event.exception.values,\n        originalException,\n        0,\n      ),\n      maxValueLimit,\n    );\n  }\n}\n\nfunction aggregateExceptionsFromError(\n  exceptionFromErrorImplementation,\n  parser,\n  limit,\n  error,\n  key,\n  prevExceptions,\n  exception,\n  exceptionId,\n) {\n  if (prevExceptions.length >= limit + 1) {\n    return prevExceptions;\n  }\n\n  let newExceptions = [...prevExceptions];\n\n  // Recursively call this function in order to walk down a chain of errors\n  if (is.isInstanceOf(error[key], Error)) {\n    applyExceptionGroupFieldsForParentException(exception, exceptionId);\n    const newException = exceptionFromErrorImplementation(parser, error[key]);\n    const newExceptionId = newExceptions.length;\n    applyExceptionGroupFieldsForChildException(newException, key, newExceptionId, exceptionId);\n    newExceptions = aggregateExceptionsFromError(\n      exceptionFromErrorImplementation,\n      parser,\n      limit,\n      error[key],\n      key,\n      [newException, ...newExceptions],\n      newException,\n      newExceptionId,\n    );\n  }\n\n  // This will create exception grouping for AggregateErrors\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/AggregateError\n  if (Array.isArray(error.errors)) {\n    error.errors.forEach((childError, i) => {\n      if (is.isInstanceOf(childError, Error)) {\n        applyExceptionGroupFieldsForParentException(exception, exceptionId);\n        const newException = exceptionFromErrorImplementation(parser, childError);\n        const newExceptionId = newExceptions.length;\n        applyExceptionGroupFieldsForChildException(newException, `errors[${i}]`, newExceptionId, exceptionId);\n        newExceptions = aggregateExceptionsFromError(\n          exceptionFromErrorImplementation,\n          parser,\n          limit,\n          childError,\n          key,\n          [newException, ...newExceptions],\n          newException,\n          newExceptionId,\n        );\n      }\n    });\n  }\n\n  return newExceptions;\n}\n\nfunction applyExceptionGroupFieldsForParentException(exception, exceptionId) {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    ...(exception.type === 'AggregateError' && { is_exception_group: true }),\n    exception_id: exceptionId,\n  };\n}\n\nfunction applyExceptionGroupFieldsForChildException(\n  exception,\n  source,\n  exceptionId,\n  parentId,\n) {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    type: 'chained',\n    source,\n    exception_id: exceptionId,\n    parent_id: parentId,\n  };\n}\n\n/**\n * Truncate the message (exception.value) of all exceptions in the event.\n * Because this event processor is ran after `applyClientOptions`,\n * we need to truncate the message of the added exceptions here.\n */\nfunction truncateAggregateExceptions(exceptions, maxValueLength) {\n  return exceptions.map(exception => {\n    if (exception.value) {\n      exception.value = string.truncate(exception.value, maxValueLength);\n    }\n    return exception;\n  });\n}\n\nexports.applyAggregateErrorsToEvent = applyAggregateErrorsToEvent;\n//# sourceMappingURL=aggregate-errors.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2FnZ3JlZ2F0ZS1lcnJvcnMuanMiLCJtYXBwaW5ncyI6IkFBQUEsOENBQTZDLEVBQUUsYUFBYSxFQUFDOztBQUU3RCxXQUFXLG1CQUFPLENBQUMsMkdBQVM7QUFDNUIsZUFBZSxtQkFBTyxDQUFDLG1IQUFhOztBQUVwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkVBQTJFLEVBQUU7QUFDN0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxpREFBaUQ7O0FBRWpEO0FBQ0E7QUFDQSxpREFBaUQsMEJBQTBCO0FBQzNFO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRDs7QUFFakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBLG1DQUFtQztBQUNuQyIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9hZ2dyZWdhdGUtZXJyb3JzLmpzP2I5ODciXSwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxuY29uc3QgaXMgPSByZXF1aXJlKCcuL2lzLmpzJyk7XG5jb25zdCBzdHJpbmcgPSByZXF1aXJlKCcuL3N0cmluZy5qcycpO1xuXG4vKipcbiAqIENyZWF0ZXMgZXhjZXB0aW9ucyBpbnNpZGUgYGV2ZW50LmV4Y2VwdGlvbi52YWx1ZXNgIGZvciBlcnJvcnMgdGhhdCBhcmUgbmVzdGVkIG9uIHByb3BlcnRpZXMgYmFzZWQgb24gdGhlIGBrZXlgIHBhcmFtZXRlci5cbiAqL1xuZnVuY3Rpb24gYXBwbHlBZ2dyZWdhdGVFcnJvcnNUb0V2ZW50KFxuICBleGNlcHRpb25Gcm9tRXJyb3JJbXBsZW1lbnRhdGlvbixcbiAgcGFyc2VyLFxuICBtYXhWYWx1ZUxpbWl0ID0gMjUwLFxuICBrZXksXG4gIGxpbWl0LFxuICBldmVudCxcbiAgaGludCxcbikge1xuICBpZiAoIWV2ZW50LmV4Y2VwdGlvbiB8fCAhZXZlbnQuZXhjZXB0aW9uLnZhbHVlcyB8fCAhaGludCB8fCAhaXMuaXNJbnN0YW5jZU9mKGhpbnQub3JpZ2luYWxFeGNlcHRpb24sIEVycm9yKSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8vIEdlbmVyYWxseSBzcGVha2luZyB0aGUgbGFzdCBpdGVtIGluIGBldmVudC5leGNlcHRpb24udmFsdWVzYCBpcyB0aGUgZXhjZXB0aW9uIG9yaWdpbmF0aW5nIGZyb20gdGhlIG9yaWdpbmFsIEVycm9yXG4gIGNvbnN0IG9yaWdpbmFsRXhjZXB0aW9uID1cbiAgICBldmVudC5leGNlcHRpb24udmFsdWVzLmxlbmd0aCA+IDAgPyBldmVudC5leGNlcHRpb24udmFsdWVzW2V2ZW50LmV4Y2VwdGlvbi52YWx1ZXMubGVuZ3RoIC0gMV0gOiB1bmRlZmluZWQ7XG5cbiAgLy8gV2Ugb25seSBjcmVhdGUgZXhjZXB0aW9uIGdyb3VwaW5nIGlmIHRoZXJlIGlzIGFuIGV4Y2VwdGlvbiBpbiB0aGUgZXZlbnQuXG4gIGlmIChvcmlnaW5hbEV4Y2VwdGlvbikge1xuICAgIGV2ZW50LmV4Y2VwdGlvbi52YWx1ZXMgPSB0cnVuY2F0ZUFnZ3JlZ2F0ZUV4Y2VwdGlvbnMoXG4gICAgICBhZ2dyZWdhdGVFeGNlcHRpb25zRnJvbUVycm9yKFxuICAgICAgICBleGNlcHRpb25Gcm9tRXJyb3JJbXBsZW1lbnRhdGlvbixcbiAgICAgICAgcGFyc2VyLFxuICAgICAgICBsaW1pdCxcbiAgICAgICAgaGludC5vcmlnaW5hbEV4Y2VwdGlvbiAsXG4gICAgICAgIGtleSxcbiAgICAgICAgZXZlbnQuZXhjZXB0aW9uLnZhbHVlcyxcbiAgICAgICAgb3JpZ2luYWxFeGNlcHRpb24sXG4gICAgICAgIDAsXG4gICAgICApLFxuICAgICAgbWF4VmFsdWVMaW1pdCxcbiAgICApO1xuICB9XG59XG5cbmZ1bmN0aW9uIGFnZ3JlZ2F0ZUV4Y2VwdGlvbnNGcm9tRXJyb3IoXG4gIGV4Y2VwdGlvbkZyb21FcnJvckltcGxlbWVudGF0aW9uLFxuICBwYXJzZXIsXG4gIGxpbWl0LFxuICBlcnJvcixcbiAga2V5LFxuICBwcmV2RXhjZXB0aW9ucyxcbiAgZXhjZXB0aW9uLFxuICBleGNlcHRpb25JZCxcbikge1xuICBpZiAocHJldkV4Y2VwdGlvbnMubGVuZ3RoID49IGxpbWl0ICsgMSkge1xuICAgIHJldHVybiBwcmV2RXhjZXB0aW9ucztcbiAgfVxuXG4gIGxldCBuZXdFeGNlcHRpb25zID0gWy4uLnByZXZFeGNlcHRpb25zXTtcblxuICAvLyBSZWN1cnNpdmVseSBjYWxsIHRoaXMgZnVuY3Rpb24gaW4gb3JkZXIgdG8gd2FsayBkb3duIGEgY2hhaW4gb2YgZXJyb3JzXG4gIGlmIChpcy5pc0luc3RhbmNlT2YoZXJyb3Jba2V5XSwgRXJyb3IpKSB7XG4gICAgYXBwbHlFeGNlcHRpb25Hcm91cEZpZWxkc0ZvclBhcmVudEV4Y2VwdGlvbihleGNlcHRpb24sIGV4Y2VwdGlvbklkKTtcbiAgICBjb25zdCBuZXdFeGNlcHRpb24gPSBleGNlcHRpb25Gcm9tRXJyb3JJbXBsZW1lbnRhdGlvbihwYXJzZXIsIGVycm9yW2tleV0pO1xuICAgIGNvbnN0IG5ld0V4Y2VwdGlvbklkID0gbmV3RXhjZXB0aW9ucy5sZW5ndGg7XG4gICAgYXBwbHlFeGNlcHRpb25Hcm91cEZpZWxkc0ZvckNoaWxkRXhjZXB0aW9uKG5ld0V4Y2VwdGlvbiwga2V5LCBuZXdFeGNlcHRpb25JZCwgZXhjZXB0aW9uSWQpO1xuICAgIG5ld0V4Y2VwdGlvbnMgPSBhZ2dyZWdhdGVFeGNlcHRpb25zRnJvbUVycm9yKFxuICAgICAgZXhjZXB0aW9uRnJvbUVycm9ySW1wbGVtZW50YXRpb24sXG4gICAgICBwYXJzZXIsXG4gICAgICBsaW1pdCxcbiAgICAgIGVycm9yW2tleV0sXG4gICAgICBrZXksXG4gICAgICBbbmV3RXhjZXB0aW9uLCAuLi5uZXdFeGNlcHRpb25zXSxcbiAgICAgIG5ld0V4Y2VwdGlvbixcbiAgICAgIG5ld0V4Y2VwdGlvbklkLFxuICAgICk7XG4gIH1cblxuICAvLyBUaGlzIHdpbGwgY3JlYXRlIGV4Y2VwdGlvbiBncm91cGluZyBmb3IgQWdncmVnYXRlRXJyb3JzXG4gIC8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0phdmFTY3JpcHQvUmVmZXJlbmNlL0dsb2JhbF9PYmplY3RzL0FnZ3JlZ2F0ZUVycm9yXG4gIGlmIChBcnJheS5pc0FycmF5KGVycm9yLmVycm9ycykpIHtcbiAgICBlcnJvci5lcnJvcnMuZm9yRWFjaCgoY2hpbGRFcnJvciwgaSkgPT4ge1xuICAgICAgaWYgKGlzLmlzSW5zdGFuY2VPZihjaGlsZEVycm9yLCBFcnJvcikpIHtcbiAgICAgICAgYXBwbHlFeGNlcHRpb25Hcm91cEZpZWxkc0ZvclBhcmVudEV4Y2VwdGlvbihleGNlcHRpb24sIGV4Y2VwdGlvbklkKTtcbiAgICAgICAgY29uc3QgbmV3RXhjZXB0aW9uID0gZXhjZXB0aW9uRnJvbUVycm9ySW1wbGVtZW50YXRpb24ocGFyc2VyLCBjaGlsZEVycm9yKTtcbiAgICAgICAgY29uc3QgbmV3RXhjZXB0aW9uSWQgPSBuZXdFeGNlcHRpb25zLmxlbmd0aDtcbiAgICAgICAgYXBwbHlFeGNlcHRpb25Hcm91cEZpZWxkc0ZvckNoaWxkRXhjZXB0aW9uKG5ld0V4Y2VwdGlvbiwgYGVycm9yc1ske2l9XWAsIG5ld0V4Y2VwdGlvbklkLCBleGNlcHRpb25JZCk7XG4gICAgICAgIG5ld0V4Y2VwdGlvbnMgPSBhZ2dyZWdhdGVFeGNlcHRpb25zRnJvbUVycm9yKFxuICAgICAgICAgIGV4Y2VwdGlvbkZyb21FcnJvckltcGxlbWVudGF0aW9uLFxuICAgICAgICAgIHBhcnNlcixcbiAgICAgICAgICBsaW1pdCxcbiAgICAgICAgICBjaGlsZEVycm9yLFxuICAgICAgICAgIGtleSxcbiAgICAgICAgICBbbmV3RXhjZXB0aW9uLCAuLi5uZXdFeGNlcHRpb25zXSxcbiAgICAgICAgICBuZXdFeGNlcHRpb24sXG4gICAgICAgICAgbmV3RXhjZXB0aW9uSWQsXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4gbmV3RXhjZXB0aW9ucztcbn1cblxuZnVuY3Rpb24gYXBwbHlFeGNlcHRpb25Hcm91cEZpZWxkc0ZvclBhcmVudEV4Y2VwdGlvbihleGNlcHRpb24sIGV4Y2VwdGlvbklkKSB7XG4gIC8vIERvbid0IGtub3cgaWYgdGhpcyBkZWZhdWx0IG1ha2VzIHNlbnNlLiBUaGUgcHJvdG9jb2wgcmVxdWlyZXMgdXMgdG8gc2V0IHRoZXNlIHZhbHVlcyBzbyB3ZSBwaWNrICpzb21lKiBkZWZhdWx0LlxuICBleGNlcHRpb24ubWVjaGFuaXNtID0gZXhjZXB0aW9uLm1lY2hhbmlzbSB8fCB7IHR5cGU6ICdnZW5lcmljJywgaGFuZGxlZDogdHJ1ZSB9O1xuXG4gIGV4Y2VwdGlvbi5tZWNoYW5pc20gPSB7XG4gICAgLi4uZXhjZXB0aW9uLm1lY2hhbmlzbSxcbiAgICAuLi4oZXhjZXB0aW9uLnR5cGUgPT09ICdBZ2dyZWdhdGVFcnJvcicgJiYgeyBpc19leGNlcHRpb25fZ3JvdXA6IHRydWUgfSksXG4gICAgZXhjZXB0aW9uX2lkOiBleGNlcHRpb25JZCxcbiAgfTtcbn1cblxuZnVuY3Rpb24gYXBwbHlFeGNlcHRpb25Hcm91cEZpZWxkc0ZvckNoaWxkRXhjZXB0aW9uKFxuICBleGNlcHRpb24sXG4gIHNvdXJjZSxcbiAgZXhjZXB0aW9uSWQsXG4gIHBhcmVudElkLFxuKSB7XG4gIC8vIERvbid0IGtub3cgaWYgdGhpcyBkZWZhdWx0IG1ha2VzIHNlbnNlLiBUaGUgcHJvdG9jb2wgcmVxdWlyZXMgdXMgdG8gc2V0IHRoZXNlIHZhbHVlcyBzbyB3ZSBwaWNrICpzb21lKiBkZWZhdWx0LlxuICBleGNlcHRpb24ubWVjaGFuaXNtID0gZXhjZXB0aW9uLm1lY2hhbmlzbSB8fCB7IHR5cGU6ICdnZW5lcmljJywgaGFuZGxlZDogdHJ1ZSB9O1xuXG4gIGV4Y2VwdGlvbi5tZWNoYW5pc20gPSB7XG4gICAgLi4uZXhjZXB0aW9uLm1lY2hhbmlzbSxcbiAgICB0eXBlOiAnY2hhaW5lZCcsXG4gICAgc291cmNlLFxuICAgIGV4Y2VwdGlvbl9pZDogZXhjZXB0aW9uSWQsXG4gICAgcGFyZW50X2lkOiBwYXJlbnRJZCxcbiAgfTtcbn1cblxuLyoqXG4gKiBUcnVuY2F0ZSB0aGUgbWVzc2FnZSAoZXhjZXB0aW9uLnZhbHVlKSBvZiBhbGwgZXhjZXB0aW9ucyBpbiB0aGUgZXZlbnQuXG4gKiBCZWNhdXNlIHRoaXMgZXZlbnQgcHJvY2Vzc29yIGlzIHJhbiBhZnRlciBgYXBwbHlDbGllbnRPcHRpb25zYCxcbiAqIHdlIG5lZWQgdG8gdHJ1bmNhdGUgdGhlIG1lc3NhZ2Ugb2YgdGhlIGFkZGVkIGV4Y2VwdGlvbnMgaGVyZS5cbiAqL1xuZnVuY3Rpb24gdHJ1bmNhdGVBZ2dyZWdhdGVFeGNlcHRpb25zKGV4Y2VwdGlvbnMsIG1heFZhbHVlTGVuZ3RoKSB7XG4gIHJldHVybiBleGNlcHRpb25zLm1hcChleGNlcHRpb24gPT4ge1xuICAgIGlmIChleGNlcHRpb24udmFsdWUpIHtcbiAgICAgIGV4Y2VwdGlvbi52YWx1ZSA9IHN0cmluZy50cnVuY2F0ZShleGNlcHRpb24udmFsdWUsIG1heFZhbHVlTGVuZ3RoKTtcbiAgICB9XG4gICAgcmV0dXJuIGV4Y2VwdGlvbjtcbiAgfSk7XG59XG5cbmV4cG9ydHMuYXBwbHlBZ2dyZWdhdGVFcnJvcnNUb0V2ZW50ID0gYXBwbHlBZ2dyZWdhdGVFcnJvcnNUb0V2ZW50O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YWdncmVnYXRlLWVycm9ycy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/aggregate-errors.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/anr.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/anr.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst nodeStackTrace = __webpack_require__(/*! ./node-stack-trace.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/node-stack-trace.js\");\nconst object = __webpack_require__(/*! ./object.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/object.js\");\nconst stacktrace = __webpack_require__(/*! ./stacktrace.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/stacktrace.js\");\n\n/**\n * A node.js watchdog timer\n * @param pollInterval The interval that we expect to get polled at\n * @param anrThreshold The threshold for when we consider ANR\n * @param callback The callback to call for ANR\n * @returns An object with `poll` and `enabled` functions {@link WatchdogReturn}\n */\nfunction watchdogTimer(\n  createTimer,\n  pollInterval,\n  anrThreshold,\n  callback,\n) {\n  const timer = createTimer();\n  let triggered = false;\n  let enabled = true;\n\n  setInterval(() => {\n    const diffMs = timer.getTimeMs();\n\n    if (triggered === false && diffMs > pollInterval + anrThreshold) {\n      triggered = true;\n      if (enabled) {\n        callback();\n      }\n    }\n\n    if (diffMs < pollInterval + anrThreshold) {\n      triggered = false;\n    }\n  }, 20);\n\n  return {\n    poll: () => {\n      timer.reset();\n    },\n    enabled: (state) => {\n      enabled = state;\n    },\n  };\n}\n\n// types copied from inspector.d.ts\n\n/**\n * Converts Debugger.CallFrame to Sentry StackFrame\n */\nfunction callFrameToStackFrame(\n  frame,\n  url,\n  getModuleFromFilename,\n) {\n  const filename = url ? url.replace(/^file:\\/\\//, '') : undefined;\n\n  // CallFrame row/col are 0 based, whereas StackFrame are 1 based\n  const colno = frame.location.columnNumber ? frame.location.columnNumber + 1 : undefined;\n  const lineno = frame.location.lineNumber ? frame.location.lineNumber + 1 : undefined;\n\n  return object.dropUndefinedKeys({\n    filename,\n    module: getModuleFromFilename(filename),\n    function: frame.functionName || stacktrace.UNKNOWN_FUNCTION,\n    colno,\n    lineno,\n    in_app: filename ? nodeStackTrace.filenameIsInApp(filename) : undefined,\n  });\n}\n\nexports.callFrameToStackFrame = callFrameToStackFrame;\nexports.watchdogTimer = watchdogTimer;\n//# sourceMappingURL=anr.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2Fuci5qcyIsIm1hcHBpbmdzIjoiQUFBQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7O0FBRTdELHVCQUF1QixtQkFBTyxDQUFDLHVJQUF1QjtBQUN0RCxlQUFlLG1CQUFPLENBQUMsbUhBQWE7QUFDcEMsbUJBQW1CLG1CQUFPLENBQUMsMkhBQWlCOztBQUU1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkRBQTJEO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBLDZCQUE2QjtBQUM3QixxQkFBcUI7QUFDckIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0Zm9saW8tcHJvamVjdC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2VudHJ5K3V0aWxzQDguMTcuMC9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9idWlsZC9janMvYW5yLmpzP2FkYmMiXSwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxuY29uc3Qgbm9kZVN0YWNrVHJhY2UgPSByZXF1aXJlKCcuL25vZGUtc3RhY2stdHJhY2UuanMnKTtcbmNvbnN0IG9iamVjdCA9IHJlcXVpcmUoJy4vb2JqZWN0LmpzJyk7XG5jb25zdCBzdGFja3RyYWNlID0gcmVxdWlyZSgnLi9zdGFja3RyYWNlLmpzJyk7XG5cbi8qKlxuICogQSBub2RlLmpzIHdhdGNoZG9nIHRpbWVyXG4gKiBAcGFyYW0gcG9sbEludGVydmFsIFRoZSBpbnRlcnZhbCB0aGF0IHdlIGV4cGVjdCB0byBnZXQgcG9sbGVkIGF0XG4gKiBAcGFyYW0gYW5yVGhyZXNob2xkIFRoZSB0aHJlc2hvbGQgZm9yIHdoZW4gd2UgY29uc2lkZXIgQU5SXG4gKiBAcGFyYW0gY2FsbGJhY2sgVGhlIGNhbGxiYWNrIHRvIGNhbGwgZm9yIEFOUlxuICogQHJldHVybnMgQW4gb2JqZWN0IHdpdGggYHBvbGxgIGFuZCBgZW5hYmxlZGAgZnVuY3Rpb25zIHtAbGluayBXYXRjaGRvZ1JldHVybn1cbiAqL1xuZnVuY3Rpb24gd2F0Y2hkb2dUaW1lcihcbiAgY3JlYXRlVGltZXIsXG4gIHBvbGxJbnRlcnZhbCxcbiAgYW5yVGhyZXNob2xkLFxuICBjYWxsYmFjayxcbikge1xuICBjb25zdCB0aW1lciA9IGNyZWF0ZVRpbWVyKCk7XG4gIGxldCB0cmlnZ2VyZWQgPSBmYWxzZTtcbiAgbGV0IGVuYWJsZWQgPSB0cnVlO1xuXG4gIHNldEludGVydmFsKCgpID0+IHtcbiAgICBjb25zdCBkaWZmTXMgPSB0aW1lci5nZXRUaW1lTXMoKTtcblxuICAgIGlmICh0cmlnZ2VyZWQgPT09IGZhbHNlICYmIGRpZmZNcyA+IHBvbGxJbnRlcnZhbCArIGFuclRocmVzaG9sZCkge1xuICAgICAgdHJpZ2dlcmVkID0gdHJ1ZTtcbiAgICAgIGlmIChlbmFibGVkKSB7XG4gICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGRpZmZNcyA8IHBvbGxJbnRlcnZhbCArIGFuclRocmVzaG9sZCkge1xuICAgICAgdHJpZ2dlcmVkID0gZmFsc2U7XG4gICAgfVxuICB9LCAyMCk7XG5cbiAgcmV0dXJuIHtcbiAgICBwb2xsOiAoKSA9PiB7XG4gICAgICB0aW1lci5yZXNldCgpO1xuICAgIH0sXG4gICAgZW5hYmxlZDogKHN0YXRlKSA9PiB7XG4gICAgICBlbmFibGVkID0gc3RhdGU7XG4gICAgfSxcbiAgfTtcbn1cblxuLy8gdHlwZXMgY29waWVkIGZyb20gaW5zcGVjdG9yLmQudHNcblxuLyoqXG4gKiBDb252ZXJ0cyBEZWJ1Z2dlci5DYWxsRnJhbWUgdG8gU2VudHJ5IFN0YWNrRnJhbWVcbiAqL1xuZnVuY3Rpb24gY2FsbEZyYW1lVG9TdGFja0ZyYW1lKFxuICBmcmFtZSxcbiAgdXJsLFxuICBnZXRNb2R1bGVGcm9tRmlsZW5hbWUsXG4pIHtcbiAgY29uc3QgZmlsZW5hbWUgPSB1cmwgPyB1cmwucmVwbGFjZSgvXmZpbGU6XFwvXFwvLywgJycpIDogdW5kZWZpbmVkO1xuXG4gIC8vIENhbGxGcmFtZSByb3cvY29sIGFyZSAwIGJhc2VkLCB3aGVyZWFzIFN0YWNrRnJhbWUgYXJlIDEgYmFzZWRcbiAgY29uc3QgY29sbm8gPSBmcmFtZS5sb2NhdGlvbi5jb2x1bW5OdW1iZXIgPyBmcmFtZS5sb2NhdGlvbi5jb2x1bW5OdW1iZXIgKyAxIDogdW5kZWZpbmVkO1xuICBjb25zdCBsaW5lbm8gPSBmcmFtZS5sb2NhdGlvbi5saW5lTnVtYmVyID8gZnJhbWUubG9jYXRpb24ubGluZU51bWJlciArIDEgOiB1bmRlZmluZWQ7XG5cbiAgcmV0dXJuIG9iamVjdC5kcm9wVW5kZWZpbmVkS2V5cyh7XG4gICAgZmlsZW5hbWUsXG4gICAgbW9kdWxlOiBnZXRNb2R1bGVGcm9tRmlsZW5hbWUoZmlsZW5hbWUpLFxuICAgIGZ1bmN0aW9uOiBmcmFtZS5mdW5jdGlvbk5hbWUgfHwgc3RhY2t0cmFjZS5VTktOT1dOX0ZVTkNUSU9OLFxuICAgIGNvbG5vLFxuICAgIGxpbmVubyxcbiAgICBpbl9hcHA6IGZpbGVuYW1lID8gbm9kZVN0YWNrVHJhY2UuZmlsZW5hbWVJc0luQXBwKGZpbGVuYW1lKSA6IHVuZGVmaW5lZCxcbiAgfSk7XG59XG5cbmV4cG9ydHMuY2FsbEZyYW1lVG9TdGFja0ZyYW1lID0gY2FsbEZyYW1lVG9TdGFja0ZyYW1lO1xuZXhwb3J0cy53YXRjaGRvZ1RpbWVyID0gd2F0Y2hkb2dUaW1lcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFuci5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/anr.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/array.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/array.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n/** Flattens a multi-dimensional array */\nfunction flatten(input) {\n  const result = [];\n\n  const flattenHelper = (input) => {\n    input.forEach((el) => {\n      if (Array.isArray(el)) {\n        flattenHelper(el );\n      } else {\n        result.push(el );\n      }\n    });\n  };\n\n  flattenHelper(input);\n  return result;\n}\n\nexports.flatten = flatten;\n//# sourceMappingURL=array.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2FycmF5LmpzIiwibWFwcGluZ3MiOiJBQUFBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQzs7QUFFN0Q7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBOztBQUVBLGVBQWU7QUFDZiIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9hcnJheS5qcz8xMTc4Il0sInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG5cbi8qKiBGbGF0dGVucyBhIG11bHRpLWRpbWVuc2lvbmFsIGFycmF5ICovXG5mdW5jdGlvbiBmbGF0dGVuKGlucHV0KSB7XG4gIGNvbnN0IHJlc3VsdCA9IFtdO1xuXG4gIGNvbnN0IGZsYXR0ZW5IZWxwZXIgPSAoaW5wdXQpID0+IHtcbiAgICBpbnB1dC5mb3JFYWNoKChlbCkgPT4ge1xuICAgICAgaWYgKEFycmF5LmlzQXJyYXkoZWwpKSB7XG4gICAgICAgIGZsYXR0ZW5IZWxwZXIoZWwgKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJlc3VsdC5wdXNoKGVsICk7XG4gICAgICB9XG4gICAgfSk7XG4gIH07XG5cbiAgZmxhdHRlbkhlbHBlcihpbnB1dCk7XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmV4cG9ydHMuZmxhdHRlbiA9IGZsYXR0ZW47XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcnJheS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/array.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/baggage.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/baggage.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst debugBuild = __webpack_require__(/*! ./debug-build.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/debug-build.js\");\nconst is = __webpack_require__(/*! ./is.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/is.js\");\nconst logger = __webpack_require__(/*! ./logger.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/logger.js\");\n\nconst BAGGAGE_HEADER_NAME = 'baggage';\n\nconst SENTRY_BAGGAGE_KEY_PREFIX = 'sentry-';\n\nconst SENTRY_BAGGAGE_KEY_PREFIX_REGEX = /^sentry-/;\n\n/**\n * Max length of a serialized baggage string\n *\n * https://www.w3.org/TR/baggage/#limits\n */\nconst MAX_BAGGAGE_STRING_LENGTH = 8192;\n\n/**\n * Takes a baggage header and turns it into Dynamic Sampling Context, by extracting all the \"sentry-\" prefixed values\n * from it.\n *\n * @param baggageHeader A very bread definition of a baggage header as it might appear in various frameworks.\n * @returns The Dynamic Sampling Context that was found on `baggageHeader`, if there was any, `undefined` otherwise.\n */\nfunction baggageHeaderToDynamicSamplingContext(\n  // Very liberal definition of what any incoming header might look like\n  baggageHeader,\n) {\n  const baggageObject = parseBaggageHeader(baggageHeader);\n\n  if (!baggageObject) {\n    return undefined;\n  }\n\n  // Read all \"sentry-\" prefixed values out of the baggage object and put it onto a dynamic sampling context object.\n  const dynamicSamplingContext = Object.entries(baggageObject).reduce((acc, [key, value]) => {\n    if (key.match(SENTRY_BAGGAGE_KEY_PREFIX_REGEX)) {\n      const nonPrefixedKey = key.slice(SENTRY_BAGGAGE_KEY_PREFIX.length);\n      acc[nonPrefixedKey] = value;\n    }\n    return acc;\n  }, {});\n\n  // Only return a dynamic sampling context object if there are keys in it.\n  // A keyless object means there were no sentry values on the header, which means that there is no DSC.\n  if (Object.keys(dynamicSamplingContext).length > 0) {\n    return dynamicSamplingContext ;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Turns a Dynamic Sampling Object into a baggage header by prefixing all the keys on the object with \"sentry-\".\n *\n * @param dynamicSamplingContext The Dynamic Sampling Context to turn into a header. For convenience and compatibility\n * with the `getDynamicSamplingContext` method on the Transaction class ,this argument can also be `undefined`. If it is\n * `undefined` the function will return `undefined`.\n * @returns a baggage header, created from `dynamicSamplingContext`, or `undefined` either if `dynamicSamplingContext`\n * was `undefined`, or if `dynamicSamplingContext` didn't contain any values.\n */\nfunction dynamicSamplingContextToSentryBaggageHeader(\n  // this also takes undefined for convenience and bundle size in other places\n  dynamicSamplingContext,\n) {\n  if (!dynamicSamplingContext) {\n    return undefined;\n  }\n\n  // Prefix all DSC keys with \"sentry-\" and put them into a new object\n  const sentryPrefixedDSC = Object.entries(dynamicSamplingContext).reduce(\n    (acc, [dscKey, dscValue]) => {\n      if (dscValue) {\n        acc[`${SENTRY_BAGGAGE_KEY_PREFIX}${dscKey}`] = dscValue;\n      }\n      return acc;\n    },\n    {},\n  );\n\n  return objectToBaggageHeader(sentryPrefixedDSC);\n}\n\n/**\n * Take a baggage header and parse it into an object.\n */\nfunction parseBaggageHeader(\n  baggageHeader,\n) {\n  if (!baggageHeader || (!is.isString(baggageHeader) && !Array.isArray(baggageHeader))) {\n    return undefined;\n  }\n\n  if (Array.isArray(baggageHeader)) {\n    // Combine all baggage headers into one object containing the baggage values so we can later read the Sentry-DSC-values from it\n    return baggageHeader.reduce((acc, curr) => {\n      const currBaggageObject = baggageHeaderToObject(curr);\n      Object.entries(currBaggageObject).forEach(([key, value]) => {\n        acc[key] = value;\n      });\n      return acc;\n    }, {});\n  }\n\n  return baggageHeaderToObject(baggageHeader);\n}\n\n/**\n * Will parse a baggage header, which is a simple key-value map, into a flat object.\n *\n * @param baggageHeader The baggage header to parse.\n * @returns a flat object containing all the key-value pairs from `baggageHeader`.\n */\nfunction baggageHeaderToObject(baggageHeader) {\n  return baggageHeader\n    .split(',')\n    .map(baggageEntry => baggageEntry.split('=').map(keyOrValue => decodeURIComponent(keyOrValue.trim())))\n    .reduce((acc, [key, value]) => {\n      if (key && value) {\n        acc[key] = value;\n      }\n      return acc;\n    }, {});\n}\n\n/**\n * Turns a flat object (key-value pairs) into a baggage header, which is also just key-value pairs.\n *\n * @param object The object to turn into a baggage header.\n * @returns a baggage header string, or `undefined` if the object didn't have any values, since an empty baggage header\n * is not spec compliant.\n */\nfunction objectToBaggageHeader(object) {\n  if (Object.keys(object).length === 0) {\n    // An empty baggage header is not spec compliant: We return undefined.\n    return undefined;\n  }\n\n  return Object.entries(object).reduce((baggageHeader, [objectKey, objectValue], currentIndex) => {\n    const baggageEntry = `${encodeURIComponent(objectKey)}=${encodeURIComponent(objectValue)}`;\n    const newBaggageHeader = currentIndex === 0 ? baggageEntry : `${baggageHeader},${baggageEntry}`;\n    if (newBaggageHeader.length > MAX_BAGGAGE_STRING_LENGTH) {\n      debugBuild.DEBUG_BUILD &&\n        logger.logger.warn(\n          `Not adding key: ${objectKey} with val: ${objectValue} to baggage header due to exceeding baggage size limits.`,\n        );\n      return baggageHeader;\n    } else {\n      return newBaggageHeader;\n    }\n  }, '');\n}\n\nexports.BAGGAGE_HEADER_NAME = BAGGAGE_HEADER_NAME;\nexports.MAX_BAGGAGE_STRING_LENGTH = MAX_BAGGAGE_STRING_LENGTH;\nexports.SENTRY_BAGGAGE_KEY_PREFIX = SENTRY_BAGGAGE_KEY_PREFIX;\nexports.SENTRY_BAGGAGE_KEY_PREFIX_REGEX = SENTRY_BAGGAGE_KEY_PREFIX_REGEX;\nexports.baggageHeaderToDynamicSamplingContext = baggageHeaderToDynamicSamplingContext;\nexports.dynamicSamplingContextToSentryBaggageHeader = dynamicSamplingContextToSentryBaggageHeader;\nexports.parseBaggageHeader = parseBaggageHeader;\n//# sourceMappingURL=baggage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2JhZ2dhZ2UuanMiLCJtYXBwaW5ncyI6IkFBQUEsOENBQTZDLEVBQUUsYUFBYSxFQUFDOztBQUU3RCxtQkFBbUIsbUJBQU8sQ0FBQyw2SEFBa0I7QUFDN0MsV0FBVyxtQkFBTyxDQUFDLDJHQUFTO0FBQzVCLGVBQWUsbUJBQU8sQ0FBQyxtSEFBYTs7QUFFcEM7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHLElBQUk7O0FBRVA7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSwwQkFBMEIsRUFBRSxPQUFPO0FBQ2xEO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsTUFBTTtBQUNOOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLEtBQUssSUFBSTtBQUNUOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSyxJQUFJO0FBQ1Q7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsNEJBQTRCLDhCQUE4QixHQUFHLGdDQUFnQztBQUM3RixvRUFBb0UsY0FBYyxHQUFHLGFBQWE7QUFDbEc7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLFdBQVcsWUFBWSxhQUFhO0FBQ2pFO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQSwyQkFBMkI7QUFDM0IsaUNBQWlDO0FBQ2pDLGlDQUFpQztBQUNqQyx1Q0FBdUM7QUFDdkMsNkNBQTZDO0FBQzdDLG1EQUFtRDtBQUNuRCwwQkFBMEI7QUFDMUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0Zm9saW8tcHJvamVjdC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2VudHJ5K3V0aWxzQDguMTcuMC9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9idWlsZC9janMvYmFnZ2FnZS5qcz82Y2IxIl0sInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG5cbmNvbnN0IGRlYnVnQnVpbGQgPSByZXF1aXJlKCcuL2RlYnVnLWJ1aWxkLmpzJyk7XG5jb25zdCBpcyA9IHJlcXVpcmUoJy4vaXMuanMnKTtcbmNvbnN0IGxvZ2dlciA9IHJlcXVpcmUoJy4vbG9nZ2VyLmpzJyk7XG5cbmNvbnN0IEJBR0dBR0VfSEVBREVSX05BTUUgPSAnYmFnZ2FnZSc7XG5cbmNvbnN0IFNFTlRSWV9CQUdHQUdFX0tFWV9QUkVGSVggPSAnc2VudHJ5LSc7XG5cbmNvbnN0IFNFTlRSWV9CQUdHQUdFX0tFWV9QUkVGSVhfUkVHRVggPSAvXnNlbnRyeS0vO1xuXG4vKipcbiAqIE1heCBsZW5ndGggb2YgYSBzZXJpYWxpemVkIGJhZ2dhZ2Ugc3RyaW5nXG4gKlxuICogaHR0cHM6Ly93d3cudzMub3JnL1RSL2JhZ2dhZ2UvI2xpbWl0c1xuICovXG5jb25zdCBNQVhfQkFHR0FHRV9TVFJJTkdfTEVOR1RIID0gODE5MjtcblxuLyoqXG4gKiBUYWtlcyBhIGJhZ2dhZ2UgaGVhZGVyIGFuZCB0dXJucyBpdCBpbnRvIER5bmFtaWMgU2FtcGxpbmcgQ29udGV4dCwgYnkgZXh0cmFjdGluZyBhbGwgdGhlIFwic2VudHJ5LVwiIHByZWZpeGVkIHZhbHVlc1xuICogZnJvbSBpdC5cbiAqXG4gKiBAcGFyYW0gYmFnZ2FnZUhlYWRlciBBIHZlcnkgYnJlYWQgZGVmaW5pdGlvbiBvZiBhIGJhZ2dhZ2UgaGVhZGVyIGFzIGl0IG1pZ2h0IGFwcGVhciBpbiB2YXJpb3VzIGZyYW1ld29ya3MuXG4gKiBAcmV0dXJucyBUaGUgRHluYW1pYyBTYW1wbGluZyBDb250ZXh0IHRoYXQgd2FzIGZvdW5kIG9uIGBiYWdnYWdlSGVhZGVyYCwgaWYgdGhlcmUgd2FzIGFueSwgYHVuZGVmaW5lZGAgb3RoZXJ3aXNlLlxuICovXG5mdW5jdGlvbiBiYWdnYWdlSGVhZGVyVG9EeW5hbWljU2FtcGxpbmdDb250ZXh0KFxuICAvLyBWZXJ5IGxpYmVyYWwgZGVmaW5pdGlvbiBvZiB3aGF0IGFueSBpbmNvbWluZyBoZWFkZXIgbWlnaHQgbG9vayBsaWtlXG4gIGJhZ2dhZ2VIZWFkZXIsXG4pIHtcbiAgY29uc3QgYmFnZ2FnZU9iamVjdCA9IHBhcnNlQmFnZ2FnZUhlYWRlcihiYWdnYWdlSGVhZGVyKTtcblxuICBpZiAoIWJhZ2dhZ2VPYmplY3QpIHtcbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG5cbiAgLy8gUmVhZCBhbGwgXCJzZW50cnktXCIgcHJlZml4ZWQgdmFsdWVzIG91dCBvZiB0aGUgYmFnZ2FnZSBvYmplY3QgYW5kIHB1dCBpdCBvbnRvIGEgZHluYW1pYyBzYW1wbGluZyBjb250ZXh0IG9iamVjdC5cbiAgY29uc3QgZHluYW1pY1NhbXBsaW5nQ29udGV4dCA9IE9iamVjdC5lbnRyaWVzKGJhZ2dhZ2VPYmplY3QpLnJlZHVjZSgoYWNjLCBba2V5LCB2YWx1ZV0pID0+IHtcbiAgICBpZiAoa2V5Lm1hdGNoKFNFTlRSWV9CQUdHQUdFX0tFWV9QUkVGSVhfUkVHRVgpKSB7XG4gICAgICBjb25zdCBub25QcmVmaXhlZEtleSA9IGtleS5zbGljZShTRU5UUllfQkFHR0FHRV9LRVlfUFJFRklYLmxlbmd0aCk7XG4gICAgICBhY2Nbbm9uUHJlZml4ZWRLZXldID0gdmFsdWU7XG4gICAgfVxuICAgIHJldHVybiBhY2M7XG4gIH0sIHt9KTtcblxuICAvLyBPbmx5IHJldHVybiBhIGR5bmFtaWMgc2FtcGxpbmcgY29udGV4dCBvYmplY3QgaWYgdGhlcmUgYXJlIGtleXMgaW4gaXQuXG4gIC8vIEEga2V5bGVzcyBvYmplY3QgbWVhbnMgdGhlcmUgd2VyZSBubyBzZW50cnkgdmFsdWVzIG9uIHRoZSBoZWFkZXIsIHdoaWNoIG1lYW5zIHRoYXQgdGhlcmUgaXMgbm8gRFNDLlxuICBpZiAoT2JqZWN0LmtleXMoZHluYW1pY1NhbXBsaW5nQ29udGV4dCkubGVuZ3RoID4gMCkge1xuICAgIHJldHVybiBkeW5hbWljU2FtcGxpbmdDb250ZXh0IDtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG59XG5cbi8qKlxuICogVHVybnMgYSBEeW5hbWljIFNhbXBsaW5nIE9iamVjdCBpbnRvIGEgYmFnZ2FnZSBoZWFkZXIgYnkgcHJlZml4aW5nIGFsbCB0aGUga2V5cyBvbiB0aGUgb2JqZWN0IHdpdGggXCJzZW50cnktXCIuXG4gKlxuICogQHBhcmFtIGR5bmFtaWNTYW1wbGluZ0NvbnRleHQgVGhlIER5bmFtaWMgU2FtcGxpbmcgQ29udGV4dCB0byB0dXJuIGludG8gYSBoZWFkZXIuIEZvciBjb252ZW5pZW5jZSBhbmQgY29tcGF0aWJpbGl0eVxuICogd2l0aCB0aGUgYGdldER5bmFtaWNTYW1wbGluZ0NvbnRleHRgIG1ldGhvZCBvbiB0aGUgVHJhbnNhY3Rpb24gY2xhc3MgLHRoaXMgYXJndW1lbnQgY2FuIGFsc28gYmUgYHVuZGVmaW5lZGAuIElmIGl0IGlzXG4gKiBgdW5kZWZpbmVkYCB0aGUgZnVuY3Rpb24gd2lsbCByZXR1cm4gYHVuZGVmaW5lZGAuXG4gKiBAcmV0dXJucyBhIGJhZ2dhZ2UgaGVhZGVyLCBjcmVhdGVkIGZyb20gYGR5bmFtaWNTYW1wbGluZ0NvbnRleHRgLCBvciBgdW5kZWZpbmVkYCBlaXRoZXIgaWYgYGR5bmFtaWNTYW1wbGluZ0NvbnRleHRgXG4gKiB3YXMgYHVuZGVmaW5lZGAsIG9yIGlmIGBkeW5hbWljU2FtcGxpbmdDb250ZXh0YCBkaWRuJ3QgY29udGFpbiBhbnkgdmFsdWVzLlxuICovXG5mdW5jdGlvbiBkeW5hbWljU2FtcGxpbmdDb250ZXh0VG9TZW50cnlCYWdnYWdlSGVhZGVyKFxuICAvLyB0aGlzIGFsc28gdGFrZXMgdW5kZWZpbmVkIGZvciBjb252ZW5pZW5jZSBhbmQgYnVuZGxlIHNpemUgaW4gb3RoZXIgcGxhY2VzXG4gIGR5bmFtaWNTYW1wbGluZ0NvbnRleHQsXG4pIHtcbiAgaWYgKCFkeW5hbWljU2FtcGxpbmdDb250ZXh0KSB7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxuXG4gIC8vIFByZWZpeCBhbGwgRFNDIGtleXMgd2l0aCBcInNlbnRyeS1cIiBhbmQgcHV0IHRoZW0gaW50byBhIG5ldyBvYmplY3RcbiAgY29uc3Qgc2VudHJ5UHJlZml4ZWREU0MgPSBPYmplY3QuZW50cmllcyhkeW5hbWljU2FtcGxpbmdDb250ZXh0KS5yZWR1Y2UoXG4gICAgKGFjYywgW2RzY0tleSwgZHNjVmFsdWVdKSA9PiB7XG4gICAgICBpZiAoZHNjVmFsdWUpIHtcbiAgICAgICAgYWNjW2Ake1NFTlRSWV9CQUdHQUdFX0tFWV9QUkVGSVh9JHtkc2NLZXl9YF0gPSBkc2NWYWx1ZTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBhY2M7XG4gICAgfSxcbiAgICB7fSxcbiAgKTtcblxuICByZXR1cm4gb2JqZWN0VG9CYWdnYWdlSGVhZGVyKHNlbnRyeVByZWZpeGVkRFNDKTtcbn1cblxuLyoqXG4gKiBUYWtlIGEgYmFnZ2FnZSBoZWFkZXIgYW5kIHBhcnNlIGl0IGludG8gYW4gb2JqZWN0LlxuICovXG5mdW5jdGlvbiBwYXJzZUJhZ2dhZ2VIZWFkZXIoXG4gIGJhZ2dhZ2VIZWFkZXIsXG4pIHtcbiAgaWYgKCFiYWdnYWdlSGVhZGVyIHx8ICghaXMuaXNTdHJpbmcoYmFnZ2FnZUhlYWRlcikgJiYgIUFycmF5LmlzQXJyYXkoYmFnZ2FnZUhlYWRlcikpKSB7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxuXG4gIGlmIChBcnJheS5pc0FycmF5KGJhZ2dhZ2VIZWFkZXIpKSB7XG4gICAgLy8gQ29tYmluZSBhbGwgYmFnZ2FnZSBoZWFkZXJzIGludG8gb25lIG9iamVjdCBjb250YWluaW5nIHRoZSBiYWdnYWdlIHZhbHVlcyBzbyB3ZSBjYW4gbGF0ZXIgcmVhZCB0aGUgU2VudHJ5LURTQy12YWx1ZXMgZnJvbSBpdFxuICAgIHJldHVybiBiYWdnYWdlSGVhZGVyLnJlZHVjZSgoYWNjLCBjdXJyKSA9PiB7XG4gICAgICBjb25zdCBjdXJyQmFnZ2FnZU9iamVjdCA9IGJhZ2dhZ2VIZWFkZXJUb09iamVjdChjdXJyKTtcbiAgICAgIE9iamVjdC5lbnRyaWVzKGN1cnJCYWdnYWdlT2JqZWN0KS5mb3JFYWNoKChba2V5LCB2YWx1ZV0pID0+IHtcbiAgICAgICAgYWNjW2tleV0gPSB2YWx1ZTtcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIGFjYztcbiAgICB9LCB7fSk7XG4gIH1cblxuICByZXR1cm4gYmFnZ2FnZUhlYWRlclRvT2JqZWN0KGJhZ2dhZ2VIZWFkZXIpO1xufVxuXG4vKipcbiAqIFdpbGwgcGFyc2UgYSBiYWdnYWdlIGhlYWRlciwgd2hpY2ggaXMgYSBzaW1wbGUga2V5LXZhbHVlIG1hcCwgaW50byBhIGZsYXQgb2JqZWN0LlxuICpcbiAqIEBwYXJhbSBiYWdnYWdlSGVhZGVyIFRoZSBiYWdnYWdlIGhlYWRlciB0byBwYXJzZS5cbiAqIEByZXR1cm5zIGEgZmxhdCBvYmplY3QgY29udGFpbmluZyBhbGwgdGhlIGtleS12YWx1ZSBwYWlycyBmcm9tIGBiYWdnYWdlSGVhZGVyYC5cbiAqL1xuZnVuY3Rpb24gYmFnZ2FnZUhlYWRlclRvT2JqZWN0KGJhZ2dhZ2VIZWFkZXIpIHtcbiAgcmV0dXJuIGJhZ2dhZ2VIZWFkZXJcbiAgICAuc3BsaXQoJywnKVxuICAgIC5tYXAoYmFnZ2FnZUVudHJ5ID0+IGJhZ2dhZ2VFbnRyeS5zcGxpdCgnPScpLm1hcChrZXlPclZhbHVlID0+IGRlY29kZVVSSUNvbXBvbmVudChrZXlPclZhbHVlLnRyaW0oKSkpKVxuICAgIC5yZWR1Y2UoKGFjYywgW2tleSwgdmFsdWVdKSA9PiB7XG4gICAgICBpZiAoa2V5ICYmIHZhbHVlKSB7XG4gICAgICAgIGFjY1trZXldID0gdmFsdWU7XG4gICAgICB9XG4gICAgICByZXR1cm4gYWNjO1xuICAgIH0sIHt9KTtcbn1cblxuLyoqXG4gKiBUdXJucyBhIGZsYXQgb2JqZWN0IChrZXktdmFsdWUgcGFpcnMpIGludG8gYSBiYWdnYWdlIGhlYWRlciwgd2hpY2ggaXMgYWxzbyBqdXN0IGtleS12YWx1ZSBwYWlycy5cbiAqXG4gKiBAcGFyYW0gb2JqZWN0IFRoZSBvYmplY3QgdG8gdHVybiBpbnRvIGEgYmFnZ2FnZSBoZWFkZXIuXG4gKiBAcmV0dXJucyBhIGJhZ2dhZ2UgaGVhZGVyIHN0cmluZywgb3IgYHVuZGVmaW5lZGAgaWYgdGhlIG9iamVjdCBkaWRuJ3QgaGF2ZSBhbnkgdmFsdWVzLCBzaW5jZSBhbiBlbXB0eSBiYWdnYWdlIGhlYWRlclxuICogaXMgbm90IHNwZWMgY29tcGxpYW50LlxuICovXG5mdW5jdGlvbiBvYmplY3RUb0JhZ2dhZ2VIZWFkZXIob2JqZWN0KSB7XG4gIGlmIChPYmplY3Qua2V5cyhvYmplY3QpLmxlbmd0aCA9PT0gMCkge1xuICAgIC8vIEFuIGVtcHR5IGJhZ2dhZ2UgaGVhZGVyIGlzIG5vdCBzcGVjIGNvbXBsaWFudDogV2UgcmV0dXJuIHVuZGVmaW5lZC5cbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG5cbiAgcmV0dXJuIE9iamVjdC5lbnRyaWVzKG9iamVjdCkucmVkdWNlKChiYWdnYWdlSGVhZGVyLCBbb2JqZWN0S2V5LCBvYmplY3RWYWx1ZV0sIGN1cnJlbnRJbmRleCkgPT4ge1xuICAgIGNvbnN0IGJhZ2dhZ2VFbnRyeSA9IGAke2VuY29kZVVSSUNvbXBvbmVudChvYmplY3RLZXkpfT0ke2VuY29kZVVSSUNvbXBvbmVudChvYmplY3RWYWx1ZSl9YDtcbiAgICBjb25zdCBuZXdCYWdnYWdlSGVhZGVyID0gY3VycmVudEluZGV4ID09PSAwID8gYmFnZ2FnZUVudHJ5IDogYCR7YmFnZ2FnZUhlYWRlcn0sJHtiYWdnYWdlRW50cnl9YDtcbiAgICBpZiAobmV3QmFnZ2FnZUhlYWRlci5sZW5ndGggPiBNQVhfQkFHR0FHRV9TVFJJTkdfTEVOR1RIKSB7XG4gICAgICBkZWJ1Z0J1aWxkLkRFQlVHX0JVSUxEICYmXG4gICAgICAgIGxvZ2dlci5sb2dnZXIud2FybihcbiAgICAgICAgICBgTm90IGFkZGluZyBrZXk6ICR7b2JqZWN0S2V5fSB3aXRoIHZhbDogJHtvYmplY3RWYWx1ZX0gdG8gYmFnZ2FnZSBoZWFkZXIgZHVlIHRvIGV4Y2VlZGluZyBiYWdnYWdlIHNpemUgbGltaXRzLmAsXG4gICAgICAgICk7XG4gICAgICByZXR1cm4gYmFnZ2FnZUhlYWRlcjtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIG5ld0JhZ2dhZ2VIZWFkZXI7XG4gICAgfVxuICB9LCAnJyk7XG59XG5cbmV4cG9ydHMuQkFHR0FHRV9IRUFERVJfTkFNRSA9IEJBR0dBR0VfSEVBREVSX05BTUU7XG5leHBvcnRzLk1BWF9CQUdHQUdFX1NUUklOR19MRU5HVEggPSBNQVhfQkFHR0FHRV9TVFJJTkdfTEVOR1RIO1xuZXhwb3J0cy5TRU5UUllfQkFHR0FHRV9LRVlfUFJFRklYID0gU0VOVFJZX0JBR0dBR0VfS0VZX1BSRUZJWDtcbmV4cG9ydHMuU0VOVFJZX0JBR0dBR0VfS0VZX1BSRUZJWF9SRUdFWCA9IFNFTlRSWV9CQUdHQUdFX0tFWV9QUkVGSVhfUkVHRVg7XG5leHBvcnRzLmJhZ2dhZ2VIZWFkZXJUb0R5bmFtaWNTYW1wbGluZ0NvbnRleHQgPSBiYWdnYWdlSGVhZGVyVG9EeW5hbWljU2FtcGxpbmdDb250ZXh0O1xuZXhwb3J0cy5keW5hbWljU2FtcGxpbmdDb250ZXh0VG9TZW50cnlCYWdnYWdlSGVhZGVyID0gZHluYW1pY1NhbXBsaW5nQ29udGV4dFRvU2VudHJ5QmFnZ2FnZUhlYWRlcjtcbmV4cG9ydHMucGFyc2VCYWdnYWdlSGVhZGVyID0gcGFyc2VCYWdnYWdlSGVhZGVyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YmFnZ2FnZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/baggage.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/browser.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/browser.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst is = __webpack_require__(/*! ./is.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/is.js\");\nconst worldwide = __webpack_require__(/*! ./worldwide.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/worldwide.js\");\n\nconst WINDOW = worldwide.GLOBAL_OBJ ;\n\nconst DEFAULT_MAX_STRING_LENGTH = 80;\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction htmlTreeAsString(\n  elem,\n  options = {},\n) {\n  if (!elem) {\n    return '<unknown>';\n  }\n\n  // try/catch both:\n  // - accessing event.target (see getsentry/raven-js#838, #768)\n  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n  // - can throw an exception in some circumstances.\n  try {\n    let currentElem = elem ;\n    const MAX_TRAVERSE_HEIGHT = 5;\n    const out = [];\n    let height = 0;\n    let len = 0;\n    const separator = ' > ';\n    const sepLength = separator.length;\n    let nextStr;\n    const keyAttrs = Array.isArray(options) ? options : options.keyAttrs;\n    const maxStringLength = (!Array.isArray(options) && options.maxStringLength) || DEFAULT_MAX_STRING_LENGTH;\n\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n      nextStr = _htmlElementAsString(currentElem, keyAttrs);\n      // bail out if\n      // - nextStr is the 'html' element\n      // - the length of the string that would be created exceeds maxStringLength\n      //   (ignore this limit if we are on the first iteration)\n      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= maxStringLength)) {\n        break;\n      }\n\n      out.push(nextStr);\n\n      len += nextStr.length;\n      currentElem = currentElem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el, keyAttrs) {\n  const elem = el\n\n;\n\n  const out = [];\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  // @ts-expect-error WINDOW has HTMLElement\n  if (WINDOW.HTMLElement) {\n    // If using the component name annotation plugin, this value may be available on the DOM node\n    if (elem instanceof HTMLElement && elem.dataset) {\n      if (elem.dataset['sentryComponent']) {\n        return elem.dataset['sentryComponent'];\n      }\n      if (elem.dataset['sentryElement']) {\n        return elem.dataset['sentryElement'];\n      }\n    }\n  }\n\n  out.push(elem.tagName.toLowerCase());\n\n  // Pairs of attribute keys defined in `serializeAttribute` and their values on element.\n  const keyAttrPairs =\n    keyAttrs && keyAttrs.length\n      ? keyAttrs.filter(keyAttr => elem.getAttribute(keyAttr)).map(keyAttr => [keyAttr, elem.getAttribute(keyAttr)])\n      : null;\n\n  if (keyAttrPairs && keyAttrPairs.length) {\n    keyAttrPairs.forEach(keyAttrPair => {\n      out.push(`[${keyAttrPair[0]}=\"${keyAttrPair[1]}\"]`);\n    });\n  } else {\n    if (elem.id) {\n      out.push(`#${elem.id}`);\n    }\n\n    const className = elem.className;\n    if (className && is.isString(className)) {\n      const classes = className.split(/\\s+/);\n      for (const c of classes) {\n        out.push(`.${c}`);\n      }\n    }\n  }\n  const allowedAttrs = ['aria-label', 'type', 'name', 'title', 'alt'];\n  for (const k of allowedAttrs) {\n    const attr = elem.getAttribute(k);\n    if (attr) {\n      out.push(`[${k}=\"${attr}\"]`);\n    }\n  }\n\n  return out.join('');\n}\n\n/**\n * A safe form of location.href\n */\nfunction getLocationHref() {\n  try {\n    return WINDOW.document.location.href;\n  } catch (oO) {\n    return '';\n  }\n}\n\n/**\n * Gets a DOM element by using document.querySelector.\n *\n * This wrapper will first check for the existance of the function before\n * actually calling it so that we don't have to take care of this check,\n * every time we want to access the DOM.\n *\n * Reason: DOM/querySelector is not available in all environments.\n *\n * We have to cast to any because utils can be consumed by a variety of environments,\n * and we don't want to break TS users. If you know what element will be selected by\n * `document.querySelector`, specify it as part of the generic call. For example,\n * `const element = getDomElement<Element>('selector');`\n *\n * @param selector the selector string passed on to document.querySelector\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction getDomElement(selector) {\n  if (WINDOW.document && WINDOW.document.querySelector) {\n    return WINDOW.document.querySelector(selector) ;\n  }\n  return null;\n}\n\n/**\n * Given a DOM element, traverses up the tree until it finds the first ancestor node\n * that has the `data-sentry-component` or `data-sentry-element` attribute with `data-sentry-component` taking\n * precendence. This attribute is added at build-time by projects that have the component name annotation plugin installed.\n *\n * @returns a string representation of the component for the provided DOM element, or `null` if not found\n */\nfunction getComponentName(elem) {\n  // @ts-expect-error WINDOW has HTMLElement\n  if (!WINDOW.HTMLElement) {\n    return null;\n  }\n\n  let currentElem = elem ;\n  const MAX_TRAVERSE_HEIGHT = 5;\n  for (let i = 0; i < MAX_TRAVERSE_HEIGHT; i++) {\n    if (!currentElem) {\n      return null;\n    }\n\n    if (currentElem instanceof HTMLElement) {\n      if (currentElem.dataset['sentryComponent']) {\n        return currentElem.dataset['sentryComponent'];\n      }\n      if (currentElem.dataset['sentryElement']) {\n        return currentElem.dataset['sentryElement'];\n      }\n    }\n\n    currentElem = currentElem.parentNode;\n  }\n\n  return null;\n}\n\nexports.getComponentName = getComponentName;\nexports.getDomElement = getDomElement;\nexports.getLocationHref = getLocationHref;\nexports.htmlTreeAsString = htmlTreeAsString;\n//# sourceMappingURL=browser.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/browser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_asyncNullishCoalesce.js":
/*!******************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_asyncNullishCoalesce.js ***!
  \******************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst _nullishCoalesce = __webpack_require__(/*! ./_nullishCoalesce.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_nullishCoalesce.js\");\n\n// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n\n/**\n * Polyfill for the nullish coalescing operator (`??`), when used in situations where at least one of the values is the\n * result of an async operation.\n *\n * Note that the RHS is wrapped in a function so that if it's a computed value, that evaluation won't happen unless the\n * LHS evaluates to a nullish value, to mimic the operator's short-circuiting behavior.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param lhs The value of the expression to the left of the `??`\n * @param rhsFn A function returning the value of the expression to the right of the `??`\n * @returns The LHS value, unless it's `null` or `undefined`, in which case, the RHS value\n */\nasync function _asyncNullishCoalesce(lhs, rhsFn) {\n  return _nullishCoalesce._nullishCoalesce(lhs, rhsFn);\n}\n\n// Sucrase version:\n// async function _asyncNullishCoalesce(lhs, rhsFn) {\n//   if (lhs != null) {\n//     return lhs;\n//   } else {\n//     return await rhsFn();\n//   }\n// }\n\nexports._asyncNullishCoalesce = _asyncNullishCoalesce;\n//# sourceMappingURL=_asyncNullishCoalesce.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2J1aWxkUG9seWZpbGxzL19hc3luY051bGxpc2hDb2FsZXNjZS5qcyIsIm1hcHBpbmdzIjoiQUFBQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7O0FBRTdELHlCQUF5QixtQkFBTyxDQUFDLHNKQUF1Qjs7QUFFeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBOztBQUVBLDZCQUE2QjtBQUM3QiIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9idWlsZFBvbHlmaWxscy9fYXN5bmNOdWxsaXNoQ29hbGVzY2UuanM/NmNjYiJdLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG5jb25zdCBfbnVsbGlzaENvYWxlc2NlID0gcmVxdWlyZSgnLi9fbnVsbGlzaENvYWxlc2NlLmpzJyk7XG5cbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9hbGFuZ3BpZXJjZS9zdWNyYXNlL3RyZWUvMjY1ODg3ODY4OTY2OTE3ZjNiOTI0Y2UzOGRmYWQwMWZiYWIxMzI5ZlxuLy9cbi8vIFRoZSBNSVQgTGljZW5zZSAoTUlUKVxuLy9cbi8vIENvcHlyaWdodCAoYykgMjAxMi0yMDE4IHZhcmlvdXMgY29udHJpYnV0b3JzIChzZWUgQVVUSE9SUylcbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5XG4vLyBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsXG4vLyBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzXG4vLyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsXG4vLyBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXNcbi8vIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW4gYWxsXG4vLyBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1Jcbi8vIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxuLy8gRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFXG4vLyBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXG4vLyBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLFxuLy8gT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEVcbi8vIFNPRlRXQVJFLlxuXG5cbi8qKlxuICogUG9seWZpbGwgZm9yIHRoZSBudWxsaXNoIGNvYWxlc2Npbmcgb3BlcmF0b3IgKGA/P2ApLCB3aGVuIHVzZWQgaW4gc2l0dWF0aW9ucyB3aGVyZSBhdCBsZWFzdCBvbmUgb2YgdGhlIHZhbHVlcyBpcyB0aGVcbiAqIHJlc3VsdCBvZiBhbiBhc3luYyBvcGVyYXRpb24uXG4gKlxuICogTm90ZSB0aGF0IHRoZSBSSFMgaXMgd3JhcHBlZCBpbiBhIGZ1bmN0aW9uIHNvIHRoYXQgaWYgaXQncyBhIGNvbXB1dGVkIHZhbHVlLCB0aGF0IGV2YWx1YXRpb24gd29uJ3QgaGFwcGVuIHVubGVzcyB0aGVcbiAqIExIUyBldmFsdWF0ZXMgdG8gYSBudWxsaXNoIHZhbHVlLCB0byBtaW1pYyB0aGUgb3BlcmF0b3IncyBzaG9ydC1jaXJjdWl0aW5nIGJlaGF2aW9yLlxuICpcbiAqIEFkYXB0ZWQgZnJvbSBTdWNyYXNlIChodHRwczovL2dpdGh1Yi5jb20vYWxhbmdwaWVyY2Uvc3VjcmFzZSlcbiAqXG4gKiBAcGFyYW0gbGhzIFRoZSB2YWx1ZSBvZiB0aGUgZXhwcmVzc2lvbiB0byB0aGUgbGVmdCBvZiB0aGUgYD8/YFxuICogQHBhcmFtIHJoc0ZuIEEgZnVuY3Rpb24gcmV0dXJuaW5nIHRoZSB2YWx1ZSBvZiB0aGUgZXhwcmVzc2lvbiB0byB0aGUgcmlnaHQgb2YgdGhlIGA/P2BcbiAqIEByZXR1cm5zIFRoZSBMSFMgdmFsdWUsIHVubGVzcyBpdCdzIGBudWxsYCBvciBgdW5kZWZpbmVkYCwgaW4gd2hpY2ggY2FzZSwgdGhlIFJIUyB2YWx1ZVxuICovXG5hc3luYyBmdW5jdGlvbiBfYXN5bmNOdWxsaXNoQ29hbGVzY2UobGhzLCByaHNGbikge1xuICByZXR1cm4gX251bGxpc2hDb2FsZXNjZS5fbnVsbGlzaENvYWxlc2NlKGxocywgcmhzRm4pO1xufVxuXG4vLyBTdWNyYXNlIHZlcnNpb246XG4vLyBhc3luYyBmdW5jdGlvbiBfYXN5bmNOdWxsaXNoQ29hbGVzY2UobGhzLCByaHNGbikge1xuLy8gICBpZiAobGhzICE9IG51bGwpIHtcbi8vICAgICByZXR1cm4gbGhzO1xuLy8gICB9IGVsc2Uge1xuLy8gICAgIHJldHVybiBhd2FpdCByaHNGbigpO1xuLy8gICB9XG4vLyB9XG5cbmV4cG9ydHMuX2FzeW5jTnVsbGlzaENvYWxlc2NlID0gX2FzeW5jTnVsbGlzaENvYWxlc2NlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9X2FzeW5jTnVsbGlzaENvYWxlc2NlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_asyncNullishCoalesce.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_asyncOptionalChain.js":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_asyncOptionalChain.js ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n/**\n * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,\n * descriptors, and functions, for situations in which at least one part of the expression is async.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase) See\n * https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15\n *\n * @param ops Array result of expression conversion\n * @returns The value of the expression\n */\nasync function _asyncOptionalChain(ops) {\n  let lastAccessLHS = undefined;\n  let value = ops[0];\n  let i = 1;\n  while (i < ops.length) {\n    const op = ops[i] ;\n    const fn = ops[i + 1] ;\n    i += 2;\n    // by checking for loose equality to `null`, we catch both `null` and `undefined`\n    if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n      // really we're meaning to return `undefined` as an actual value here, but it saves bytes not to write it\n      return;\n    }\n    if (op === 'access' || op === 'optionalAccess') {\n      lastAccessLHS = value;\n      value = await fn(value);\n    } else if (op === 'call' || op === 'optionalCall') {\n      value = await fn((...args) => (value ).call(lastAccessLHS, ...args));\n      lastAccessLHS = undefined;\n    }\n  }\n  return value;\n}\n\n// Sucrase version:\n// async function _asyncOptionalChain(ops) {\n//   let lastAccessLHS = undefined;\n//   let value = ops[0];\n//   let i = 1;\n//   while (i < ops.length) {\n//     const op = ops[i];\n//     const fn = ops[i + 1];\n//     i += 2;\n//     if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n//       return undefined;\n//     }\n//     if (op === 'access' || op === 'optionalAccess') {\n//       lastAccessLHS = value;\n//       value = await fn(value);\n//     } else if (op === 'call' || op === 'optionalCall') {\n//       value = await fn((...args) => value.call(lastAccessLHS, ...args));\n//       lastAccessLHS = undefined;\n//     }\n//   }\n//   return value;\n// }\n\nexports._asyncOptionalChain = _asyncOptionalChain;\n//# sourceMappingURL=_asyncOptionalChain.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2J1aWxkUG9seWZpbGxzL19hc3luY09wdGlvbmFsQ2hhaW4uanMiLCJtYXBwaW5ncyI6IkFBQUEsOENBQTZDLEVBQUUsYUFBYSxFQUFDOztBQUU3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLDJCQUEyQjtBQUMzQiIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9idWlsZFBvbHlmaWxscy9fYXN5bmNPcHRpb25hbENoYWluLmpzPzgyN2MiXSwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxuLyoqXG4gKiBQb2x5ZmlsbCBmb3IgdGhlIG9wdGlvbmFsIGNoYWluIG9wZXJhdG9yLCBgPy5gLCBnaXZlbiBwcmV2aW91cyBjb252ZXJzaW9uIG9mIHRoZSBleHByZXNzaW9uIGludG8gYW4gYXJyYXkgb2YgdmFsdWVzLFxuICogZGVzY3JpcHRvcnMsIGFuZCBmdW5jdGlvbnMsIGZvciBzaXR1YXRpb25zIGluIHdoaWNoIGF0IGxlYXN0IG9uZSBwYXJ0IG9mIHRoZSBleHByZXNzaW9uIGlzIGFzeW5jLlxuICpcbiAqIEFkYXB0ZWQgZnJvbSBTdWNyYXNlIChodHRwczovL2dpdGh1Yi5jb20vYWxhbmdwaWVyY2Uvc3VjcmFzZSkgU2VlXG4gKiBodHRwczovL2dpdGh1Yi5jb20vYWxhbmdwaWVyY2Uvc3VjcmFzZS9ibG9iLzI2NTg4Nzg2ODk2NjkxN2YzYjkyNGNlMzhkZmFkMDFmYmFiMTMyOWYvc3JjL3RyYW5zZm9ybWVycy9PcHRpb25hbENoYWluaW5nTnVsbGlzaFRyYW5zZm9ybWVyLnRzI0wxNVxuICpcbiAqIEBwYXJhbSBvcHMgQXJyYXkgcmVzdWx0IG9mIGV4cHJlc3Npb24gY29udmVyc2lvblxuICogQHJldHVybnMgVGhlIHZhbHVlIG9mIHRoZSBleHByZXNzaW9uXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIF9hc3luY09wdGlvbmFsQ2hhaW4ob3BzKSB7XG4gIGxldCBsYXN0QWNjZXNzTEhTID0gdW5kZWZpbmVkO1xuICBsZXQgdmFsdWUgPSBvcHNbMF07XG4gIGxldCBpID0gMTtcbiAgd2hpbGUgKGkgPCBvcHMubGVuZ3RoKSB7XG4gICAgY29uc3Qgb3AgPSBvcHNbaV0gO1xuICAgIGNvbnN0IGZuID0gb3BzW2kgKyAxXSA7XG4gICAgaSArPSAyO1xuICAgIC8vIGJ5IGNoZWNraW5nIGZvciBsb29zZSBlcXVhbGl0eSB0byBgbnVsbGAsIHdlIGNhdGNoIGJvdGggYG51bGxgIGFuZCBgdW5kZWZpbmVkYFxuICAgIGlmICgob3AgPT09ICdvcHRpb25hbEFjY2VzcycgfHwgb3AgPT09ICdvcHRpb25hbENhbGwnKSAmJiB2YWx1ZSA9PSBudWxsKSB7XG4gICAgICAvLyByZWFsbHkgd2UncmUgbWVhbmluZyB0byByZXR1cm4gYHVuZGVmaW5lZGAgYXMgYW4gYWN0dWFsIHZhbHVlIGhlcmUsIGJ1dCBpdCBzYXZlcyBieXRlcyBub3QgdG8gd3JpdGUgaXRcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKG9wID09PSAnYWNjZXNzJyB8fCBvcCA9PT0gJ29wdGlvbmFsQWNjZXNzJykge1xuICAgICAgbGFzdEFjY2Vzc0xIUyA9IHZhbHVlO1xuICAgICAgdmFsdWUgPSBhd2FpdCBmbih2YWx1ZSk7XG4gICAgfSBlbHNlIGlmIChvcCA9PT0gJ2NhbGwnIHx8IG9wID09PSAnb3B0aW9uYWxDYWxsJykge1xuICAgICAgdmFsdWUgPSBhd2FpdCBmbigoLi4uYXJncykgPT4gKHZhbHVlICkuY2FsbChsYXN0QWNjZXNzTEhTLCAuLi5hcmdzKSk7XG4gICAgICBsYXN0QWNjZXNzTEhTID0gdW5kZWZpbmVkO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdmFsdWU7XG59XG5cbi8vIFN1Y3Jhc2UgdmVyc2lvbjpcbi8vIGFzeW5jIGZ1bmN0aW9uIF9hc3luY09wdGlvbmFsQ2hhaW4ob3BzKSB7XG4vLyAgIGxldCBsYXN0QWNjZXNzTEhTID0gdW5kZWZpbmVkO1xuLy8gICBsZXQgdmFsdWUgPSBvcHNbMF07XG4vLyAgIGxldCBpID0gMTtcbi8vICAgd2hpbGUgKGkgPCBvcHMubGVuZ3RoKSB7XG4vLyAgICAgY29uc3Qgb3AgPSBvcHNbaV07XG4vLyAgICAgY29uc3QgZm4gPSBvcHNbaSArIDFdO1xuLy8gICAgIGkgKz0gMjtcbi8vICAgICBpZiAoKG9wID09PSAnb3B0aW9uYWxBY2Nlc3MnIHx8IG9wID09PSAnb3B0aW9uYWxDYWxsJykgJiYgdmFsdWUgPT0gbnVsbCkge1xuLy8gICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbi8vICAgICB9XG4vLyAgICAgaWYgKG9wID09PSAnYWNjZXNzJyB8fCBvcCA9PT0gJ29wdGlvbmFsQWNjZXNzJykge1xuLy8gICAgICAgbGFzdEFjY2Vzc0xIUyA9IHZhbHVlO1xuLy8gICAgICAgdmFsdWUgPSBhd2FpdCBmbih2YWx1ZSk7XG4vLyAgICAgfSBlbHNlIGlmIChvcCA9PT0gJ2NhbGwnIHx8IG9wID09PSAnb3B0aW9uYWxDYWxsJykge1xuLy8gICAgICAgdmFsdWUgPSBhd2FpdCBmbigoLi4uYXJncykgPT4gdmFsdWUuY2FsbChsYXN0QWNjZXNzTEhTLCAuLi5hcmdzKSk7XG4vLyAgICAgICBsYXN0QWNjZXNzTEhTID0gdW5kZWZpbmVkO1xuLy8gICAgIH1cbi8vICAgfVxuLy8gICByZXR1cm4gdmFsdWU7XG4vLyB9XG5cbmV4cG9ydHMuX2FzeW5jT3B0aW9uYWxDaGFpbiA9IF9hc3luY09wdGlvbmFsQ2hhaW47XG4vLyMgc291cmNlTWFwcGluZ1VSTD1fYXN5bmNPcHRpb25hbENoYWluLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_asyncOptionalChain.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_asyncOptionalChainDelete.js":
/*!**********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_asyncOptionalChainDelete.js ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst _asyncOptionalChain = __webpack_require__(/*! ./_asyncOptionalChain.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_asyncOptionalChain.js\");\n\n// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n\n/**\n * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,\n * descriptors, and functions, in cases where the value of the expression is to be deleted.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase) See\n * https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15\n *\n * @param ops Array result of expression conversion\n * @returns The return value of the `delete` operator: `true`, unless the deletion target is an own, non-configurable\n * property (one which can't be deleted or turned into an accessor, and whose enumerability can't be changed), in which\n * case `false`.\n */\nasync function _asyncOptionalChainDelete(ops) {\n  const result = (await _asyncOptionalChain._asyncOptionalChain(ops)) ;\n  // If `result` is `null`, it means we didn't get to the end of the chain and so nothing was deleted (in which case,\n  // return `true` since that's what `delete` does when it no-ops). If it's non-null, we know the delete happened, in\n  // which case we return whatever the `delete` returned, which will be a boolean.\n  return result == null ? true : (result );\n}\n\n// Sucrase version:\n// async function asyncOptionalChainDelete(ops) {\n//   const result = await ASYNC_OPTIONAL_CHAIN_NAME(ops);\n//   return result == null ? true : result;\n// }\n\nexports._asyncOptionalChainDelete = _asyncOptionalChainDelete;\n//# sourceMappingURL=_asyncOptionalChainDelete.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2J1aWxkUG9seWZpbGxzL19hc3luY09wdGlvbmFsQ2hhaW5EZWxldGUuanMiLCJtYXBwaW5ncyI6IkFBQUEsOENBQTZDLEVBQUUsYUFBYSxFQUFDOztBQUU3RCw0QkFBNEIsbUJBQU8sQ0FBQyw0SkFBMEI7O0FBRTlEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsaUNBQWlDO0FBQ2pDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLXByb2plY3QvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2J1aWxkUG9seWZpbGxzL19hc3luY09wdGlvbmFsQ2hhaW5EZWxldGUuanM/YTI2ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG5jb25zdCBfYXN5bmNPcHRpb25hbENoYWluID0gcmVxdWlyZSgnLi9fYXN5bmNPcHRpb25hbENoYWluLmpzJyk7XG5cbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9hbGFuZ3BpZXJjZS9zdWNyYXNlL3RyZWUvMjY1ODg3ODY4OTY2OTE3ZjNiOTI0Y2UzOGRmYWQwMWZiYWIxMzI5ZlxuLy9cbi8vIFRoZSBNSVQgTGljZW5zZSAoTUlUKVxuLy9cbi8vIENvcHlyaWdodCAoYykgMjAxMi0yMDE4IHZhcmlvdXMgY29udHJpYnV0b3JzIChzZWUgQVVUSE9SUylcbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5XG4vLyBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsXG4vLyBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzXG4vLyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsXG4vLyBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXNcbi8vIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW4gYWxsXG4vLyBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1Jcbi8vIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxuLy8gRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFXG4vLyBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXG4vLyBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLFxuLy8gT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEVcbi8vIFNPRlRXQVJFLlxuXG5cbi8qKlxuICogUG9seWZpbGwgZm9yIHRoZSBvcHRpb25hbCBjaGFpbiBvcGVyYXRvciwgYD8uYCwgZ2l2ZW4gcHJldmlvdXMgY29udmVyc2lvbiBvZiB0aGUgZXhwcmVzc2lvbiBpbnRvIGFuIGFycmF5IG9mIHZhbHVlcyxcbiAqIGRlc2NyaXB0b3JzLCBhbmQgZnVuY3Rpb25zLCBpbiBjYXNlcyB3aGVyZSB0aGUgdmFsdWUgb2YgdGhlIGV4cHJlc3Npb24gaXMgdG8gYmUgZGVsZXRlZC5cbiAqXG4gKiBBZGFwdGVkIGZyb20gU3VjcmFzZSAoaHR0cHM6Ly9naXRodWIuY29tL2FsYW5ncGllcmNlL3N1Y3Jhc2UpIFNlZVxuICogaHR0cHM6Ly9naXRodWIuY29tL2FsYW5ncGllcmNlL3N1Y3Jhc2UvYmxvYi8yNjU4ODc4Njg5NjY5MTdmM2I5MjRjZTM4ZGZhZDAxZmJhYjEzMjlmL3NyYy90cmFuc2Zvcm1lcnMvT3B0aW9uYWxDaGFpbmluZ051bGxpc2hUcmFuc2Zvcm1lci50cyNMMTVcbiAqXG4gKiBAcGFyYW0gb3BzIEFycmF5IHJlc3VsdCBvZiBleHByZXNzaW9uIGNvbnZlcnNpb25cbiAqIEByZXR1cm5zIFRoZSByZXR1cm4gdmFsdWUgb2YgdGhlIGBkZWxldGVgIG9wZXJhdG9yOiBgdHJ1ZWAsIHVubGVzcyB0aGUgZGVsZXRpb24gdGFyZ2V0IGlzIGFuIG93biwgbm9uLWNvbmZpZ3VyYWJsZVxuICogcHJvcGVydHkgKG9uZSB3aGljaCBjYW4ndCBiZSBkZWxldGVkIG9yIHR1cm5lZCBpbnRvIGFuIGFjY2Vzc29yLCBhbmQgd2hvc2UgZW51bWVyYWJpbGl0eSBjYW4ndCBiZSBjaGFuZ2VkKSwgaW4gd2hpY2hcbiAqIGNhc2UgYGZhbHNlYC5cbiAqL1xuYXN5bmMgZnVuY3Rpb24gX2FzeW5jT3B0aW9uYWxDaGFpbkRlbGV0ZShvcHMpIHtcbiAgY29uc3QgcmVzdWx0ID0gKGF3YWl0IF9hc3luY09wdGlvbmFsQ2hhaW4uX2FzeW5jT3B0aW9uYWxDaGFpbihvcHMpKSA7XG4gIC8vIElmIGByZXN1bHRgIGlzIGBudWxsYCwgaXQgbWVhbnMgd2UgZGlkbid0IGdldCB0byB0aGUgZW5kIG9mIHRoZSBjaGFpbiBhbmQgc28gbm90aGluZyB3YXMgZGVsZXRlZCAoaW4gd2hpY2ggY2FzZSxcbiAgLy8gcmV0dXJuIGB0cnVlYCBzaW5jZSB0aGF0J3Mgd2hhdCBgZGVsZXRlYCBkb2VzIHdoZW4gaXQgbm8tb3BzKS4gSWYgaXQncyBub24tbnVsbCwgd2Uga25vdyB0aGUgZGVsZXRlIGhhcHBlbmVkLCBpblxuICAvLyB3aGljaCBjYXNlIHdlIHJldHVybiB3aGF0ZXZlciB0aGUgYGRlbGV0ZWAgcmV0dXJuZWQsIHdoaWNoIHdpbGwgYmUgYSBib29sZWFuLlxuICByZXR1cm4gcmVzdWx0ID09IG51bGwgPyB0cnVlIDogKHJlc3VsdCApO1xufVxuXG4vLyBTdWNyYXNlIHZlcnNpb246XG4vLyBhc3luYyBmdW5jdGlvbiBhc3luY09wdGlvbmFsQ2hhaW5EZWxldGUob3BzKSB7XG4vLyAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IEFTWU5DX09QVElPTkFMX0NIQUlOX05BTUUob3BzKTtcbi8vICAgcmV0dXJuIHJlc3VsdCA9PSBudWxsID8gdHJ1ZSA6IHJlc3VsdDtcbi8vIH1cblxuZXhwb3J0cy5fYXN5bmNPcHRpb25hbENoYWluRGVsZXRlID0gX2FzeW5jT3B0aW9uYWxDaGFpbkRlbGV0ZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPV9hc3luY09wdGlvbmFsQ2hhaW5EZWxldGUuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_asyncOptionalChainDelete.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_nullishCoalesce.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_nullishCoalesce.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n/**\n * Polyfill for the nullish coalescing operator (`??`).\n *\n * Note that the RHS is wrapped in a function so that if it's a computed value, that evaluation won't happen unless the\n * LHS evaluates to a nullish value, to mimic the operator's short-circuiting behavior.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param lhs The value of the expression to the left of the `??`\n * @param rhsFn A function returning the value of the expression to the right of the `??`\n * @returns The LHS value, unless it's `null` or `undefined`, in which case, the RHS value\n */\nfunction _nullishCoalesce(lhs, rhsFn) {\n  // by checking for loose equality to `null`, we catch both `null` and `undefined`\n  return lhs != null ? lhs : rhsFn();\n}\n\n// Sucrase version:\n// function _nullishCoalesce(lhs, rhsFn) {\n//   if (lhs != null) {\n//     return lhs;\n//   } else {\n//     return rhsFn();\n//   }\n// }\n\nexports._nullishCoalesce = _nullishCoalesce;\n//# sourceMappingURL=_nullishCoalesce.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2J1aWxkUG9seWZpbGxzL19udWxsaXNoQ29hbGVzY2UuanMiLCJtYXBwaW5ncyI6IkFBQUEsOENBQTZDLEVBQUUsYUFBYSxFQUFDOztBQUU3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTs7QUFFQSx3QkFBd0I7QUFDeEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0Zm9saW8tcHJvamVjdC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2VudHJ5K3V0aWxzQDguMTcuMC9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9idWlsZC9janMvYnVpbGRQb2x5ZmlsbHMvX251bGxpc2hDb2FsZXNjZS5qcz9lNDE5Il0sInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG5cbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9hbGFuZ3BpZXJjZS9zdWNyYXNlL3RyZWUvMjY1ODg3ODY4OTY2OTE3ZjNiOTI0Y2UzOGRmYWQwMWZiYWIxMzI5ZlxuLy9cbi8vIFRoZSBNSVQgTGljZW5zZSAoTUlUKVxuLy9cbi8vIENvcHlyaWdodCAoYykgMjAxMi0yMDE4IHZhcmlvdXMgY29udHJpYnV0b3JzIChzZWUgQVVUSE9SUylcbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5XG4vLyBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsXG4vLyBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzXG4vLyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsXG4vLyBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXNcbi8vIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW4gYWxsXG4vLyBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1Jcbi8vIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxuLy8gRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFXG4vLyBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXG4vLyBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLFxuLy8gT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEVcbi8vIFNPRlRXQVJFLlxuXG4vKipcbiAqIFBvbHlmaWxsIGZvciB0aGUgbnVsbGlzaCBjb2FsZXNjaW5nIG9wZXJhdG9yIChgPz9gKS5cbiAqXG4gKiBOb3RlIHRoYXQgdGhlIFJIUyBpcyB3cmFwcGVkIGluIGEgZnVuY3Rpb24gc28gdGhhdCBpZiBpdCdzIGEgY29tcHV0ZWQgdmFsdWUsIHRoYXQgZXZhbHVhdGlvbiB3b24ndCBoYXBwZW4gdW5sZXNzIHRoZVxuICogTEhTIGV2YWx1YXRlcyB0byBhIG51bGxpc2ggdmFsdWUsIHRvIG1pbWljIHRoZSBvcGVyYXRvcidzIHNob3J0LWNpcmN1aXRpbmcgYmVoYXZpb3IuXG4gKlxuICogQWRhcHRlZCBmcm9tIFN1Y3Jhc2UgKGh0dHBzOi8vZ2l0aHViLmNvbS9hbGFuZ3BpZXJjZS9zdWNyYXNlKVxuICpcbiAqIEBwYXJhbSBsaHMgVGhlIHZhbHVlIG9mIHRoZSBleHByZXNzaW9uIHRvIHRoZSBsZWZ0IG9mIHRoZSBgPz9gXG4gKiBAcGFyYW0gcmhzRm4gQSBmdW5jdGlvbiByZXR1cm5pbmcgdGhlIHZhbHVlIG9mIHRoZSBleHByZXNzaW9uIHRvIHRoZSByaWdodCBvZiB0aGUgYD8/YFxuICogQHJldHVybnMgVGhlIExIUyB2YWx1ZSwgdW5sZXNzIGl0J3MgYG51bGxgIG9yIGB1bmRlZmluZWRgLCBpbiB3aGljaCBjYXNlLCB0aGUgUkhTIHZhbHVlXG4gKi9cbmZ1bmN0aW9uIF9udWxsaXNoQ29hbGVzY2UobGhzLCByaHNGbikge1xuICAvLyBieSBjaGVja2luZyBmb3IgbG9vc2UgZXF1YWxpdHkgdG8gYG51bGxgLCB3ZSBjYXRjaCBib3RoIGBudWxsYCBhbmQgYHVuZGVmaW5lZGBcbiAgcmV0dXJuIGxocyAhPSBudWxsID8gbGhzIDogcmhzRm4oKTtcbn1cblxuLy8gU3VjcmFzZSB2ZXJzaW9uOlxuLy8gZnVuY3Rpb24gX251bGxpc2hDb2FsZXNjZShsaHMsIHJoc0ZuKSB7XG4vLyAgIGlmIChsaHMgIT0gbnVsbCkge1xuLy8gICAgIHJldHVybiBsaHM7XG4vLyAgIH0gZWxzZSB7XG4vLyAgICAgcmV0dXJuIHJoc0ZuKCk7XG4vLyAgIH1cbi8vIH1cblxuZXhwb3J0cy5fbnVsbGlzaENvYWxlc2NlID0gX251bGxpc2hDb2FsZXNjZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPV9udWxsaXNoQ29hbGVzY2UuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_nullishCoalesce.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_optionalChain.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_optionalChain.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n/**\n * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,\n * descriptors, and functions.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n * See https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15\n *\n * @param ops Array result of expression conversion\n * @returns The value of the expression\n */\nfunction _optionalChain(ops) {\n  let lastAccessLHS = undefined;\n  let value = ops[0];\n  let i = 1;\n  while (i < ops.length) {\n    const op = ops[i] ;\n    const fn = ops[i + 1] ;\n    i += 2;\n    // by checking for loose equality to `null`, we catch both `null` and `undefined`\n    if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n      // really we're meaning to return `undefined` as an actual value here, but it saves bytes not to write it\n      return;\n    }\n    if (op === 'access' || op === 'optionalAccess') {\n      lastAccessLHS = value;\n      value = fn(value);\n    } else if (op === 'call' || op === 'optionalCall') {\n      value = fn((...args) => (value ).call(lastAccessLHS, ...args));\n      lastAccessLHS = undefined;\n    }\n  }\n  return value;\n}\n\n// Sucrase version\n// function _optionalChain(ops) {\n//   let lastAccessLHS = undefined;\n//   let value = ops[0];\n//   let i = 1;\n//   while (i < ops.length) {\n//     const op = ops[i];\n//     const fn = ops[i + 1];\n//     i += 2;\n//     if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n//       return undefined;\n//     }\n//     if (op === 'access' || op === 'optionalAccess') {\n//       lastAccessLHS = value;\n//       value = fn(value);\n//     } else if (op === 'call' || op === 'optionalCall') {\n//       value = fn((...args) => value.call(lastAccessLHS, ...args));\n//       lastAccessLHS = undefined;\n//     }\n//   }\n//   return value;\n// }\n\nexports._optionalChain = _optionalChain;\n//# sourceMappingURL=_optionalChain.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2J1aWxkUG9seWZpbGxzL19vcHRpb25hbENoYWluLmpzIiwibWFwcGluZ3MiOiJBQUFBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQzs7QUFFN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxzQkFBc0I7QUFDdEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0Zm9saW8tcHJvamVjdC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2VudHJ5K3V0aWxzQDguMTcuMC9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9idWlsZC9janMvYnVpbGRQb2x5ZmlsbHMvX29wdGlvbmFsQ2hhaW4uanM/YzVkMiJdLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG4vKipcbiAqIFBvbHlmaWxsIGZvciB0aGUgb3B0aW9uYWwgY2hhaW4gb3BlcmF0b3IsIGA/LmAsIGdpdmVuIHByZXZpb3VzIGNvbnZlcnNpb24gb2YgdGhlIGV4cHJlc3Npb24gaW50byBhbiBhcnJheSBvZiB2YWx1ZXMsXG4gKiBkZXNjcmlwdG9ycywgYW5kIGZ1bmN0aW9ucy5cbiAqXG4gKiBBZGFwdGVkIGZyb20gU3VjcmFzZSAoaHR0cHM6Ly9naXRodWIuY29tL2FsYW5ncGllcmNlL3N1Y3Jhc2UpXG4gKiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL2FsYW5ncGllcmNlL3N1Y3Jhc2UvYmxvYi8yNjU4ODc4Njg5NjY5MTdmM2I5MjRjZTM4ZGZhZDAxZmJhYjEzMjlmL3NyYy90cmFuc2Zvcm1lcnMvT3B0aW9uYWxDaGFpbmluZ051bGxpc2hUcmFuc2Zvcm1lci50cyNMMTVcbiAqXG4gKiBAcGFyYW0gb3BzIEFycmF5IHJlc3VsdCBvZiBleHByZXNzaW9uIGNvbnZlcnNpb25cbiAqIEByZXR1cm5zIFRoZSB2YWx1ZSBvZiB0aGUgZXhwcmVzc2lvblxuICovXG5mdW5jdGlvbiBfb3B0aW9uYWxDaGFpbihvcHMpIHtcbiAgbGV0IGxhc3RBY2Nlc3NMSFMgPSB1bmRlZmluZWQ7XG4gIGxldCB2YWx1ZSA9IG9wc1swXTtcbiAgbGV0IGkgPSAxO1xuICB3aGlsZSAoaSA8IG9wcy5sZW5ndGgpIHtcbiAgICBjb25zdCBvcCA9IG9wc1tpXSA7XG4gICAgY29uc3QgZm4gPSBvcHNbaSArIDFdIDtcbiAgICBpICs9IDI7XG4gICAgLy8gYnkgY2hlY2tpbmcgZm9yIGxvb3NlIGVxdWFsaXR5IHRvIGBudWxsYCwgd2UgY2F0Y2ggYm90aCBgbnVsbGAgYW5kIGB1bmRlZmluZWRgXG4gICAgaWYgKChvcCA9PT0gJ29wdGlvbmFsQWNjZXNzJyB8fCBvcCA9PT0gJ29wdGlvbmFsQ2FsbCcpICYmIHZhbHVlID09IG51bGwpIHtcbiAgICAgIC8vIHJlYWxseSB3ZSdyZSBtZWFuaW5nIHRvIHJldHVybiBgdW5kZWZpbmVkYCBhcyBhbiBhY3R1YWwgdmFsdWUgaGVyZSwgYnV0IGl0IHNhdmVzIGJ5dGVzIG5vdCB0byB3cml0ZSBpdFxuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAob3AgPT09ICdhY2Nlc3MnIHx8IG9wID09PSAnb3B0aW9uYWxBY2Nlc3MnKSB7XG4gICAgICBsYXN0QWNjZXNzTEhTID0gdmFsdWU7XG4gICAgICB2YWx1ZSA9IGZuKHZhbHVlKTtcbiAgICB9IGVsc2UgaWYgKG9wID09PSAnY2FsbCcgfHwgb3AgPT09ICdvcHRpb25hbENhbGwnKSB7XG4gICAgICB2YWx1ZSA9IGZuKCguLi5hcmdzKSA9PiAodmFsdWUgKS5jYWxsKGxhc3RBY2Nlc3NMSFMsIC4uLmFyZ3MpKTtcbiAgICAgIGxhc3RBY2Nlc3NMSFMgPSB1bmRlZmluZWQ7XG4gICAgfVxuICB9XG4gIHJldHVybiB2YWx1ZTtcbn1cblxuLy8gU3VjcmFzZSB2ZXJzaW9uXG4vLyBmdW5jdGlvbiBfb3B0aW9uYWxDaGFpbihvcHMpIHtcbi8vICAgbGV0IGxhc3RBY2Nlc3NMSFMgPSB1bmRlZmluZWQ7XG4vLyAgIGxldCB2YWx1ZSA9IG9wc1swXTtcbi8vICAgbGV0IGkgPSAxO1xuLy8gICB3aGlsZSAoaSA8IG9wcy5sZW5ndGgpIHtcbi8vICAgICBjb25zdCBvcCA9IG9wc1tpXTtcbi8vICAgICBjb25zdCBmbiA9IG9wc1tpICsgMV07XG4vLyAgICAgaSArPSAyO1xuLy8gICAgIGlmICgob3AgPT09ICdvcHRpb25hbEFjY2VzcycgfHwgb3AgPT09ICdvcHRpb25hbENhbGwnKSAmJiB2YWx1ZSA9PSBudWxsKSB7XG4vLyAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuLy8gICAgIH1cbi8vICAgICBpZiAob3AgPT09ICdhY2Nlc3MnIHx8IG9wID09PSAnb3B0aW9uYWxBY2Nlc3MnKSB7XG4vLyAgICAgICBsYXN0QWNjZXNzTEhTID0gdmFsdWU7XG4vLyAgICAgICB2YWx1ZSA9IGZuKHZhbHVlKTtcbi8vICAgICB9IGVsc2UgaWYgKG9wID09PSAnY2FsbCcgfHwgb3AgPT09ICdvcHRpb25hbENhbGwnKSB7XG4vLyAgICAgICB2YWx1ZSA9IGZuKCguLi5hcmdzKSA9PiB2YWx1ZS5jYWxsKGxhc3RBY2Nlc3NMSFMsIC4uLmFyZ3MpKTtcbi8vICAgICAgIGxhc3RBY2Nlc3NMSFMgPSB1bmRlZmluZWQ7XG4vLyAgICAgfVxuLy8gICB9XG4vLyAgIHJldHVybiB2YWx1ZTtcbi8vIH1cblxuZXhwb3J0cy5fb3B0aW9uYWxDaGFpbiA9IF9vcHRpb25hbENoYWluO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9X29wdGlvbmFsQ2hhaW4uanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_optionalChain.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_optionalChainDelete.js":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_optionalChainDelete.js ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst _optionalChain = __webpack_require__(/*! ./_optionalChain.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_optionalChain.js\");\n\n// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n\n/**\n * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,\n * descriptors, and functions, in cases where the value of the expression is to be deleted.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase) See\n * https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15\n *\n * @param ops Array result of expression conversion\n * @returns The return value of the `delete` operator: `true`, unless the deletion target is an own, non-configurable\n * property (one which can't be deleted or turned into an accessor, and whose enumerability can't be changed), in which\n * case `false`.\n */\nfunction _optionalChainDelete(ops) {\n  const result = _optionalChain._optionalChain(ops) ;\n  // If `result` is `null`, it means we didn't get to the end of the chain and so nothing was deleted (in which case,\n  // return `true` since that's what `delete` does when it no-ops). If it's non-null, we know the delete happened, in\n  // which case we return whatever the `delete` returned, which will be a boolean.\n  return result == null ? true : result;\n}\n\n// Sucrase version:\n// function _optionalChainDelete(ops) {\n//   const result = _optionalChain(ops);\n//   // by checking for loose equality to `null`, we catch both `null` and `undefined`\n//   return result == null ? true : result;\n// }\n\nexports._optionalChainDelete = _optionalChainDelete;\n//# sourceMappingURL=_optionalChainDelete.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2J1aWxkUG9seWZpbGxzL19vcHRpb25hbENoYWluRGVsZXRlLmpzIiwibWFwcGluZ3MiOiJBQUFBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQzs7QUFFN0QsdUJBQXVCLG1CQUFPLENBQUMsa0pBQXFCOztBQUVwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsNEJBQTRCO0FBQzVCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLXByb2plY3QvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2J1aWxkUG9seWZpbGxzL19vcHRpb25hbENoYWluRGVsZXRlLmpzPzJiODUiXSwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxuY29uc3QgX29wdGlvbmFsQ2hhaW4gPSByZXF1aXJlKCcuL19vcHRpb25hbENoYWluLmpzJyk7XG5cbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9hbGFuZ3BpZXJjZS9zdWNyYXNlL3RyZWUvMjY1ODg3ODY4OTY2OTE3ZjNiOTI0Y2UzOGRmYWQwMWZiYWIxMzI5ZlxuLy9cbi8vIFRoZSBNSVQgTGljZW5zZSAoTUlUKVxuLy9cbi8vIENvcHlyaWdodCAoYykgMjAxMi0yMDE4IHZhcmlvdXMgY29udHJpYnV0b3JzIChzZWUgQVVUSE9SUylcbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5XG4vLyBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsXG4vLyBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzXG4vLyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsXG4vLyBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXNcbi8vIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW4gYWxsXG4vLyBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1Jcbi8vIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxuLy8gRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFXG4vLyBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXG4vLyBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLFxuLy8gT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEVcbi8vIFNPRlRXQVJFLlxuXG5cbi8qKlxuICogUG9seWZpbGwgZm9yIHRoZSBvcHRpb25hbCBjaGFpbiBvcGVyYXRvciwgYD8uYCwgZ2l2ZW4gcHJldmlvdXMgY29udmVyc2lvbiBvZiB0aGUgZXhwcmVzc2lvbiBpbnRvIGFuIGFycmF5IG9mIHZhbHVlcyxcbiAqIGRlc2NyaXB0b3JzLCBhbmQgZnVuY3Rpb25zLCBpbiBjYXNlcyB3aGVyZSB0aGUgdmFsdWUgb2YgdGhlIGV4cHJlc3Npb24gaXMgdG8gYmUgZGVsZXRlZC5cbiAqXG4gKiBBZGFwdGVkIGZyb20gU3VjcmFzZSAoaHR0cHM6Ly9naXRodWIuY29tL2FsYW5ncGllcmNlL3N1Y3Jhc2UpIFNlZVxuICogaHR0cHM6Ly9naXRodWIuY29tL2FsYW5ncGllcmNlL3N1Y3Jhc2UvYmxvYi8yNjU4ODc4Njg5NjY5MTdmM2I5MjRjZTM4ZGZhZDAxZmJhYjEzMjlmL3NyYy90cmFuc2Zvcm1lcnMvT3B0aW9uYWxDaGFpbmluZ051bGxpc2hUcmFuc2Zvcm1lci50cyNMMTVcbiAqXG4gKiBAcGFyYW0gb3BzIEFycmF5IHJlc3VsdCBvZiBleHByZXNzaW9uIGNvbnZlcnNpb25cbiAqIEByZXR1cm5zIFRoZSByZXR1cm4gdmFsdWUgb2YgdGhlIGBkZWxldGVgIG9wZXJhdG9yOiBgdHJ1ZWAsIHVubGVzcyB0aGUgZGVsZXRpb24gdGFyZ2V0IGlzIGFuIG93biwgbm9uLWNvbmZpZ3VyYWJsZVxuICogcHJvcGVydHkgKG9uZSB3aGljaCBjYW4ndCBiZSBkZWxldGVkIG9yIHR1cm5lZCBpbnRvIGFuIGFjY2Vzc29yLCBhbmQgd2hvc2UgZW51bWVyYWJpbGl0eSBjYW4ndCBiZSBjaGFuZ2VkKSwgaW4gd2hpY2hcbiAqIGNhc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gX29wdGlvbmFsQ2hhaW5EZWxldGUob3BzKSB7XG4gIGNvbnN0IHJlc3VsdCA9IF9vcHRpb25hbENoYWluLl9vcHRpb25hbENoYWluKG9wcykgO1xuICAvLyBJZiBgcmVzdWx0YCBpcyBgbnVsbGAsIGl0IG1lYW5zIHdlIGRpZG4ndCBnZXQgdG8gdGhlIGVuZCBvZiB0aGUgY2hhaW4gYW5kIHNvIG5vdGhpbmcgd2FzIGRlbGV0ZWQgKGluIHdoaWNoIGNhc2UsXG4gIC8vIHJldHVybiBgdHJ1ZWAgc2luY2UgdGhhdCdzIHdoYXQgYGRlbGV0ZWAgZG9lcyB3aGVuIGl0IG5vLW9wcykuIElmIGl0J3Mgbm9uLW51bGwsIHdlIGtub3cgdGhlIGRlbGV0ZSBoYXBwZW5lZCwgaW5cbiAgLy8gd2hpY2ggY2FzZSB3ZSByZXR1cm4gd2hhdGV2ZXIgdGhlIGBkZWxldGVgIHJldHVybmVkLCB3aGljaCB3aWxsIGJlIGEgYm9vbGVhbi5cbiAgcmV0dXJuIHJlc3VsdCA9PSBudWxsID8gdHJ1ZSA6IHJlc3VsdDtcbn1cblxuLy8gU3VjcmFzZSB2ZXJzaW9uOlxuLy8gZnVuY3Rpb24gX29wdGlvbmFsQ2hhaW5EZWxldGUob3BzKSB7XG4vLyAgIGNvbnN0IHJlc3VsdCA9IF9vcHRpb25hbENoYWluKG9wcyk7XG4vLyAgIC8vIGJ5IGNoZWNraW5nIGZvciBsb29zZSBlcXVhbGl0eSB0byBgbnVsbGAsIHdlIGNhdGNoIGJvdGggYG51bGxgIGFuZCBgdW5kZWZpbmVkYFxuLy8gICByZXR1cm4gcmVzdWx0ID09IG51bGwgPyB0cnVlIDogcmVzdWx0O1xuLy8gfVxuXG5leHBvcnRzLl9vcHRpb25hbENoYWluRGVsZXRlID0gX29wdGlvbmFsQ2hhaW5EZWxldGU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1fb3B0aW9uYWxDaGFpbkRlbGV0ZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_optionalChainDelete.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/cache.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/cache.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n/**\n * Creates a cache that evicts keys in fifo order\n * @param size {Number}\n */\nfunction makeFifoCache(\n  size,\n)\n\n {\n  // Maintain a fifo queue of keys, we cannot rely on Object.keys as the browser may not support it.\n  let evictionOrder = [];\n  let cache = {};\n\n  return {\n    add(key, value) {\n      while (evictionOrder.length >= size) {\n        // shift is O(n) but this is small size and only happens if we are\n        // exceeding the cache size so it should be fine.\n        const evictCandidate = evictionOrder.shift();\n\n        if (evictCandidate !== undefined) {\n          // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n          delete cache[evictCandidate];\n        }\n      }\n\n      // in case we have a collision, delete the old key.\n      if (cache[key]) {\n        this.delete(key);\n      }\n\n      evictionOrder.push(key);\n      cache[key] = value;\n    },\n    clear() {\n      cache = {};\n      evictionOrder = [];\n    },\n    get(key) {\n      return cache[key];\n    },\n    size() {\n      return evictionOrder.length;\n    },\n    // Delete cache key and return true if it existed, false otherwise.\n    delete(key) {\n      if (!cache[key]) {\n        return false;\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete cache[key];\n\n      for (let i = 0; i < evictionOrder.length; i++) {\n        if (evictionOrder[i] === key) {\n          evictionOrder.splice(i, 1);\n          break;\n        }\n      }\n\n      return true;\n    },\n  };\n}\n\nexports.makeFifoCache = makeFifoCache;\n//# sourceMappingURL=cache.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2NhY2hlLmpzIiwibWFwcGluZ3MiOiJBQUFBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQzs7QUFFN0Q7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLHNCQUFzQiwwQkFBMEI7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBLHFCQUFxQjtBQUNyQiIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9jYWNoZS5qcz80ZDIzIl0sInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG5cbi8qKlxuICogQ3JlYXRlcyBhIGNhY2hlIHRoYXQgZXZpY3RzIGtleXMgaW4gZmlmbyBvcmRlclxuICogQHBhcmFtIHNpemUge051bWJlcn1cbiAqL1xuZnVuY3Rpb24gbWFrZUZpZm9DYWNoZShcbiAgc2l6ZSxcbilcblxuIHtcbiAgLy8gTWFpbnRhaW4gYSBmaWZvIHF1ZXVlIG9mIGtleXMsIHdlIGNhbm5vdCByZWx5IG9uIE9iamVjdC5rZXlzIGFzIHRoZSBicm93c2VyIG1heSBub3Qgc3VwcG9ydCBpdC5cbiAgbGV0IGV2aWN0aW9uT3JkZXIgPSBbXTtcbiAgbGV0IGNhY2hlID0ge307XG5cbiAgcmV0dXJuIHtcbiAgICBhZGQoa2V5LCB2YWx1ZSkge1xuICAgICAgd2hpbGUgKGV2aWN0aW9uT3JkZXIubGVuZ3RoID49IHNpemUpIHtcbiAgICAgICAgLy8gc2hpZnQgaXMgTyhuKSBidXQgdGhpcyBpcyBzbWFsbCBzaXplIGFuZCBvbmx5IGhhcHBlbnMgaWYgd2UgYXJlXG4gICAgICAgIC8vIGV4Y2VlZGluZyB0aGUgY2FjaGUgc2l6ZSBzbyBpdCBzaG91bGQgYmUgZmluZS5cbiAgICAgICAgY29uc3QgZXZpY3RDYW5kaWRhdGUgPSBldmljdGlvbk9yZGVyLnNoaWZ0KCk7XG5cbiAgICAgICAgaWYgKGV2aWN0Q2FuZGlkYXRlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWR5bmFtaWMtZGVsZXRlXG4gICAgICAgICAgZGVsZXRlIGNhY2hlW2V2aWN0Q2FuZGlkYXRlXTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvLyBpbiBjYXNlIHdlIGhhdmUgYSBjb2xsaXNpb24sIGRlbGV0ZSB0aGUgb2xkIGtleS5cbiAgICAgIGlmIChjYWNoZVtrZXldKSB7XG4gICAgICAgIHRoaXMuZGVsZXRlKGtleSk7XG4gICAgICB9XG5cbiAgICAgIGV2aWN0aW9uT3JkZXIucHVzaChrZXkpO1xuICAgICAgY2FjaGVba2V5XSA9IHZhbHVlO1xuICAgIH0sXG4gICAgY2xlYXIoKSB7XG4gICAgICBjYWNoZSA9IHt9O1xuICAgICAgZXZpY3Rpb25PcmRlciA9IFtdO1xuICAgIH0sXG4gICAgZ2V0KGtleSkge1xuICAgICAgcmV0dXJuIGNhY2hlW2tleV07XG4gICAgfSxcbiAgICBzaXplKCkge1xuICAgICAgcmV0dXJuIGV2aWN0aW9uT3JkZXIubGVuZ3RoO1xuICAgIH0sXG4gICAgLy8gRGVsZXRlIGNhY2hlIGtleSBhbmQgcmV0dXJuIHRydWUgaWYgaXQgZXhpc3RlZCwgZmFsc2Ugb3RoZXJ3aXNlLlxuICAgIGRlbGV0ZShrZXkpIHtcbiAgICAgIGlmICghY2FjaGVba2V5XSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG5cbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZHluYW1pYy1kZWxldGVcbiAgICAgIGRlbGV0ZSBjYWNoZVtrZXldO1xuXG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGV2aWN0aW9uT3JkZXIubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKGV2aWN0aW9uT3JkZXJbaV0gPT09IGtleSkge1xuICAgICAgICAgIGV2aWN0aW9uT3JkZXIuc3BsaWNlKGksIDEpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH0sXG4gIH07XG59XG5cbmV4cG9ydHMubWFrZUZpZm9DYWNoZSA9IG1ha2VGaWZvQ2FjaGU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jYWNoZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/cache.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/clientreport.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/clientreport.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst envelope = __webpack_require__(/*! ./envelope.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/envelope.js\");\nconst time = __webpack_require__(/*! ./time.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/time.js\");\n\n/**\n * Creates client report envelope\n * @param discarded_events An array of discard events\n * @param dsn A DSN that can be set on the header. Optional.\n */\nfunction createClientReportEnvelope(\n  discarded_events,\n  dsn,\n  timestamp,\n) {\n  const clientReportItem = [\n    { type: 'client_report' },\n    {\n      timestamp: timestamp || time.dateTimestampInSeconds(),\n      discarded_events,\n    },\n  ];\n  return envelope.createEnvelope(dsn ? { dsn } : {}, [clientReportItem]);\n}\n\nexports.createClientReportEnvelope = createClientReportEnvelope;\n//# sourceMappingURL=clientreport.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2NsaWVudHJlcG9ydC5qcyIsIm1hcHBpbmdzIjoiQUFBQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7O0FBRTdELGlCQUFpQixtQkFBTyxDQUFDLHVIQUFlO0FBQ3hDLGFBQWEsbUJBQU8sQ0FBQywrR0FBVzs7QUFFaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sdUJBQXVCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLHlDQUF5QyxNQUFNLElBQUk7QUFDbkQ7O0FBRUEsa0NBQWtDO0FBQ2xDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLXByb2plY3QvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2NsaWVudHJlcG9ydC5qcz8wNjEzIl0sInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG5cbmNvbnN0IGVudmVsb3BlID0gcmVxdWlyZSgnLi9lbnZlbG9wZS5qcycpO1xuY29uc3QgdGltZSA9IHJlcXVpcmUoJy4vdGltZS5qcycpO1xuXG4vKipcbiAqIENyZWF0ZXMgY2xpZW50IHJlcG9ydCBlbnZlbG9wZVxuICogQHBhcmFtIGRpc2NhcmRlZF9ldmVudHMgQW4gYXJyYXkgb2YgZGlzY2FyZCBldmVudHNcbiAqIEBwYXJhbSBkc24gQSBEU04gdGhhdCBjYW4gYmUgc2V0IG9uIHRoZSBoZWFkZXIuIE9wdGlvbmFsLlxuICovXG5mdW5jdGlvbiBjcmVhdGVDbGllbnRSZXBvcnRFbnZlbG9wZShcbiAgZGlzY2FyZGVkX2V2ZW50cyxcbiAgZHNuLFxuICB0aW1lc3RhbXAsXG4pIHtcbiAgY29uc3QgY2xpZW50UmVwb3J0SXRlbSA9IFtcbiAgICB7IHR5cGU6ICdjbGllbnRfcmVwb3J0JyB9LFxuICAgIHtcbiAgICAgIHRpbWVzdGFtcDogdGltZXN0YW1wIHx8IHRpbWUuZGF0ZVRpbWVzdGFtcEluU2Vjb25kcygpLFxuICAgICAgZGlzY2FyZGVkX2V2ZW50cyxcbiAgICB9LFxuICBdO1xuICByZXR1cm4gZW52ZWxvcGUuY3JlYXRlRW52ZWxvcGUoZHNuID8geyBkc24gfSA6IHt9LCBbY2xpZW50UmVwb3J0SXRlbV0pO1xufVxuXG5leHBvcnRzLmNyZWF0ZUNsaWVudFJlcG9ydEVudmVsb3BlID0gY3JlYXRlQ2xpZW50UmVwb3J0RW52ZWxvcGU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jbGllbnRyZXBvcnQuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/clientreport.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/cookie.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/cookie.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n/**\n * This code was originally copied from the 'cookie` module at v0.5.0 and was simplified for our use case.\n * https://github.com/jshttp/cookie/blob/a0c84147aab6266bdb3996cf4062e93907c0b0fc/index.js\n * It had the following license:\n *\n * (The MIT License)\n *\n * Copyright (c) 2012-2014 Roman Shtylman <shtylman@gmail.com>\n * Copyright (c) 2015 Douglas Christopher Wilson <doug@somethingdoug.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * 'Software'), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Parses a cookie string\n */\nfunction parseCookie(str) {\n  const obj = {};\n  let index = 0;\n\n  while (index < str.length) {\n    const eqIdx = str.indexOf('=', index);\n\n    // no more cookie pairs\n    if (eqIdx === -1) {\n      break;\n    }\n\n    let endIdx = str.indexOf(';', index);\n\n    if (endIdx === -1) {\n      endIdx = str.length;\n    } else if (endIdx < eqIdx) {\n      // backtrack on prior semicolon\n      index = str.lastIndexOf(';', eqIdx - 1) + 1;\n      continue;\n    }\n\n    const key = str.slice(index, eqIdx).trim();\n\n    // only assign once\n    if (undefined === obj[key]) {\n      let val = str.slice(eqIdx + 1, endIdx).trim();\n\n      // quoted values\n      if (val.charCodeAt(0) === 0x22) {\n        val = val.slice(1, -1);\n      }\n\n      try {\n        obj[key] = val.indexOf('%') !== -1 ? decodeURIComponent(val) : val;\n      } catch (e) {\n        obj[key] = val;\n      }\n    }\n\n    index = endIdx + 1;\n  }\n\n  return obj;\n}\n\nexports.parseCookie = parseCookie;\n//# sourceMappingURL=cookie.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2Nvb2tpZS5qcyIsIm1hcHBpbmdzIjoiQUFBQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7O0FBRTdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsK0JBQStCOztBQUUvQjtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0EsZ0NBQWdDO0FBQ2hDO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxtQkFBbUI7QUFDbkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0Zm9saW8tcHJvamVjdC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2VudHJ5K3V0aWxzQDguMTcuMC9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9idWlsZC9janMvY29va2llLmpzPzcxNjAiXSwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxuLyoqXG4gKiBUaGlzIGNvZGUgd2FzIG9yaWdpbmFsbHkgY29waWVkIGZyb20gdGhlICdjb29raWVgIG1vZHVsZSBhdCB2MC41LjAgYW5kIHdhcyBzaW1wbGlmaWVkIGZvciBvdXIgdXNlIGNhc2UuXG4gKiBodHRwczovL2dpdGh1Yi5jb20vanNodHRwL2Nvb2tpZS9ibG9iL2EwYzg0MTQ3YWFiNjI2NmJkYjM5OTZjZjQwNjJlOTM5MDdjMGIwZmMvaW5kZXguanNcbiAqIEl0IGhhZCB0aGUgZm9sbG93aW5nIGxpY2Vuc2U6XG4gKlxuICogKFRoZSBNSVQgTGljZW5zZSlcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTItMjAxNCBSb21hbiBTaHR5bG1hbiA8c2h0eWxtYW5AZ21haWwuY29tPlxuICogQ29weXJpZ2h0IChjKSAyMDE1IERvdWdsYXMgQ2hyaXN0b3BoZXIgV2lsc29uIDxkb3VnQHNvbWV0aGluZ2RvdWcuY29tPlxuICpcbiAqIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZ1xuICogYSBjb3B5IG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlXG4gKiAnU29mdHdhcmUnKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nXG4gKiB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsXG4gKiBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG9cbiAqIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0b1xuICogdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuICpcbiAqIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlXG4gKiBpbmNsdWRlZCBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbiAqXG4gKiBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgJ0FTIElTJywgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCxcbiAqIEVYUFJFU1MgT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRlxuICogTUVSQ0hBTlRBQklMSVRZLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULlxuICogSU4gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTllcbiAqIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsXG4gKiBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRVxuICogU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuXG4gKi9cblxuLyoqXG4gKiBQYXJzZXMgYSBjb29raWUgc3RyaW5nXG4gKi9cbmZ1bmN0aW9uIHBhcnNlQ29va2llKHN0cikge1xuICBjb25zdCBvYmogPSB7fTtcbiAgbGV0IGluZGV4ID0gMDtcblxuICB3aGlsZSAoaW5kZXggPCBzdHIubGVuZ3RoKSB7XG4gICAgY29uc3QgZXFJZHggPSBzdHIuaW5kZXhPZignPScsIGluZGV4KTtcblxuICAgIC8vIG5vIG1vcmUgY29va2llIHBhaXJzXG4gICAgaWYgKGVxSWR4ID09PSAtMSkge1xuICAgICAgYnJlYWs7XG4gICAgfVxuXG4gICAgbGV0IGVuZElkeCA9IHN0ci5pbmRleE9mKCc7JywgaW5kZXgpO1xuXG4gICAgaWYgKGVuZElkeCA9PT0gLTEpIHtcbiAgICAgIGVuZElkeCA9IHN0ci5sZW5ndGg7XG4gICAgfSBlbHNlIGlmIChlbmRJZHggPCBlcUlkeCkge1xuICAgICAgLy8gYmFja3RyYWNrIG9uIHByaW9yIHNlbWljb2xvblxuICAgICAgaW5kZXggPSBzdHIubGFzdEluZGV4T2YoJzsnLCBlcUlkeCAtIDEpICsgMTtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIGNvbnN0IGtleSA9IHN0ci5zbGljZShpbmRleCwgZXFJZHgpLnRyaW0oKTtcblxuICAgIC8vIG9ubHkgYXNzaWduIG9uY2VcbiAgICBpZiAodW5kZWZpbmVkID09PSBvYmpba2V5XSkge1xuICAgICAgbGV0IHZhbCA9IHN0ci5zbGljZShlcUlkeCArIDEsIGVuZElkeCkudHJpbSgpO1xuXG4gICAgICAvLyBxdW90ZWQgdmFsdWVzXG4gICAgICBpZiAodmFsLmNoYXJDb2RlQXQoMCkgPT09IDB4MjIpIHtcbiAgICAgICAgdmFsID0gdmFsLnNsaWNlKDEsIC0xKTtcbiAgICAgIH1cblxuICAgICAgdHJ5IHtcbiAgICAgICAgb2JqW2tleV0gPSB2YWwuaW5kZXhPZignJScpICE9PSAtMSA/IGRlY29kZVVSSUNvbXBvbmVudCh2YWwpIDogdmFsO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBvYmpba2V5XSA9IHZhbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpbmRleCA9IGVuZElkeCArIDE7XG4gIH1cblxuICByZXR1cm4gb2JqO1xufVxuXG5leHBvcnRzLnBhcnNlQ29va2llID0gcGFyc2VDb29raWU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb29raWUuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/cookie.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/debug-build.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/debug-build.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = ( false || false);\n\nexports.DEBUG_BUILD = DEBUG_BUILD;\n//# sourceMappingURL=debug-build.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2RlYnVnLWJ1aWxkLmpzIiwibWFwcGluZ3MiOiJBQUFBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQzs7QUFFN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixNQUF1QyxJQUFJLEtBQWdCOztBQUVoRixtQkFBbUI7QUFDbkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0Zm9saW8tcHJvamVjdC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2VudHJ5K3V0aWxzQDguMTcuMC9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9idWlsZC9janMvZGVidWctYnVpbGQuanM/NjcyYiJdLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG4vKipcbiAqIFRoaXMgc2VydmVzIGFzIGEgYnVpbGQgdGltZSBmbGFnIHRoYXQgd2lsbCBiZSB0cnVlIGJ5IGRlZmF1bHQsIGJ1dCBmYWxzZSBpbiBub24tZGVidWcgYnVpbGRzIG9yIGlmIHVzZXJzIHJlcGxhY2UgYF9fU0VOVFJZX0RFQlVHX19gIGluIHRoZWlyIGdlbmVyYXRlZCBjb2RlLlxuICpcbiAqIEFUVEVOVElPTjogVGhpcyBjb25zdGFudCBtdXN0IG5ldmVyIGNyb3NzIHBhY2thZ2UgYm91bmRhcmllcyAoaS5lLiBiZSBleHBvcnRlZCkgdG8gZ3VhcmFudGVlIHRoYXQgaXQgY2FuIGJlIHVzZWQgZm9yIHRyZWUgc2hha2luZy5cbiAqL1xuY29uc3QgREVCVUdfQlVJTEQgPSAodHlwZW9mIF9fU0VOVFJZX0RFQlVHX18gPT09ICd1bmRlZmluZWQnIHx8IF9fU0VOVFJZX0RFQlVHX18pO1xuXG5leHBvcnRzLkRFQlVHX0JVSUxEID0gREVCVUdfQlVJTEQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWJ1Zy1idWlsZC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/debug-build.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/dsn.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/dsn.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst debugBuild = __webpack_require__(/*! ./debug-build.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/debug-build.js\");\nconst logger = __webpack_require__(/*! ./logger.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/logger.js\");\n\n/** Regular expression used to parse a Dsn. */\nconst DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+)?)?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n\nfunction isValidProtocol(protocol) {\n  return protocol === 'http' || protocol === 'https';\n}\n\n/**\n * Renders the string representation of this Dsn.\n *\n * By default, this will render the public representation without the password\n * component. To get the deprecated private representation, set `withPassword`\n * to true.\n *\n * @param withPassword When set to true, the password will be included.\n */\nfunction dsnToString(dsn, withPassword = false) {\n  const { host, path, pass, port, projectId, protocol, publicKey } = dsn;\n  return (\n    `${protocol}://${publicKey}${withPassword && pass ? `:${pass}` : ''}` +\n    `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n  );\n}\n\n/**\n * Parses a Dsn from a given string.\n *\n * @param str A Dsn as string\n * @returns Dsn as DsnComponents or undefined if @param str is not a valid DSN string\n */\nfunction dsnFromString(str) {\n  const match = DSN_REGEX.exec(str);\n\n  if (!match) {\n    // This should be logged to the console\n    logger.consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.error(`Invalid Sentry Dsn: ${str}`);\n    });\n    return undefined;\n  }\n\n  const [protocol, publicKey, pass = '', host = '', port = '', lastPath = ''] = match.slice(1);\n  let path = '';\n  let projectId = lastPath;\n\n  const split = projectId.split('/');\n  if (split.length > 1) {\n    path = split.slice(0, -1).join('/');\n    projectId = split.pop() ;\n  }\n\n  if (projectId) {\n    const projectMatch = projectId.match(/^\\d+/);\n    if (projectMatch) {\n      projectId = projectMatch[0];\n    }\n  }\n\n  return dsnFromComponents({ host, pass, path, projectId, port, protocol: protocol , publicKey });\n}\n\nfunction dsnFromComponents(components) {\n  return {\n    protocol: components.protocol,\n    publicKey: components.publicKey || '',\n    pass: components.pass || '',\n    host: components.host,\n    port: components.port || '',\n    path: components.path || '',\n    projectId: components.projectId,\n  };\n}\n\nfunction validateDsn(dsn) {\n  if (!debugBuild.DEBUG_BUILD) {\n    return true;\n  }\n\n  const { port, projectId, protocol } = dsn;\n\n  const requiredComponents = ['protocol', 'publicKey', 'host', 'projectId'];\n  const hasMissingRequiredComponent = requiredComponents.find(component => {\n    if (!dsn[component]) {\n      logger.logger.error(`Invalid Sentry Dsn: ${component} missing`);\n      return true;\n    }\n    return false;\n  });\n\n  if (hasMissingRequiredComponent) {\n    return false;\n  }\n\n  if (!projectId.match(/^\\d+$/)) {\n    logger.logger.error(`Invalid Sentry Dsn: Invalid projectId ${projectId}`);\n    return false;\n  }\n\n  if (!isValidProtocol(protocol)) {\n    logger.logger.error(`Invalid Sentry Dsn: Invalid protocol ${protocol}`);\n    return false;\n  }\n\n  if (port && isNaN(parseInt(port, 10))) {\n    logger.logger.error(`Invalid Sentry Dsn: Invalid port ${port}`);\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Creates a valid Sentry Dsn object, identifying a Sentry instance and project.\n * @returns a valid DsnComponents object or `undefined` if @param from is an invalid DSN source\n */\nfunction makeDsn(from) {\n  const components = typeof from === 'string' ? dsnFromString(from) : dsnFromComponents(from);\n  if (!components || !validateDsn(components)) {\n    return undefined;\n  }\n  return components;\n}\n\nexports.dsnFromString = dsnFromString;\nexports.dsnToString = dsnToString;\nexports.makeDsn = makeDsn;\n//# sourceMappingURL=dsn.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2Rzbi5qcyIsIm1hcHBpbmdzIjoiQUFBQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7O0FBRTdELG1CQUFtQixtQkFBTyxDQUFDLDZIQUFrQjtBQUM3QyxlQUFlLG1CQUFPLENBQUMsbUhBQWE7O0FBRXBDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSx5REFBeUQ7QUFDbkU7QUFDQSxPQUFPLFNBQVMsS0FBSyxVQUFVLEVBQUUsMkJBQTJCLEtBQUssT0FBTztBQUN4RSxRQUFRLEtBQUssRUFBRSxXQUFXLEtBQUssT0FBTyxHQUFHLFVBQVUsS0FBSyxVQUFVLEVBQUUsVUFBVTtBQUM5RTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsSUFBSTtBQUMvQyxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsNkJBQTZCLG1FQUFtRTtBQUNoRzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFVBQVUsNEJBQTRCOztBQUV0QztBQUNBO0FBQ0E7QUFDQSxpREFBaUQsV0FBVztBQUM1RDtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGlFQUFpRSxVQUFVO0FBQzNFO0FBQ0E7O0FBRUE7QUFDQSxnRUFBZ0UsU0FBUztBQUN6RTtBQUNBOztBQUVBO0FBQ0EsNERBQTRELEtBQUs7QUFDakU7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEscUJBQXFCO0FBQ3JCLG1CQUFtQjtBQUNuQixlQUFlO0FBQ2YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0Zm9saW8tcHJvamVjdC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2VudHJ5K3V0aWxzQDguMTcuMC9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9idWlsZC9janMvZHNuLmpzP2QyZjYiXSwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxuY29uc3QgZGVidWdCdWlsZCA9IHJlcXVpcmUoJy4vZGVidWctYnVpbGQuanMnKTtcbmNvbnN0IGxvZ2dlciA9IHJlcXVpcmUoJy4vbG9nZ2VyLmpzJyk7XG5cbi8qKiBSZWd1bGFyIGV4cHJlc3Npb24gdXNlZCB0byBwYXJzZSBhIERzbi4gKi9cbmNvbnN0IERTTl9SRUdFWCA9IC9eKD86KFxcdyspOilcXC9cXC8oPzooXFx3KykoPzo6KFxcdyspPyk/QCkoW1xcdy4tXSspKD86OihcXGQrKSk/XFwvKC4rKS87XG5cbmZ1bmN0aW9uIGlzVmFsaWRQcm90b2NvbChwcm90b2NvbCkge1xuICByZXR1cm4gcHJvdG9jb2wgPT09ICdodHRwJyB8fCBwcm90b2NvbCA9PT0gJ2h0dHBzJztcbn1cblxuLyoqXG4gKiBSZW5kZXJzIHRoZSBzdHJpbmcgcmVwcmVzZW50YXRpb24gb2YgdGhpcyBEc24uXG4gKlxuICogQnkgZGVmYXVsdCwgdGhpcyB3aWxsIHJlbmRlciB0aGUgcHVibGljIHJlcHJlc2VudGF0aW9uIHdpdGhvdXQgdGhlIHBhc3N3b3JkXG4gKiBjb21wb25lbnQuIFRvIGdldCB0aGUgZGVwcmVjYXRlZCBwcml2YXRlIHJlcHJlc2VudGF0aW9uLCBzZXQgYHdpdGhQYXNzd29yZGBcbiAqIHRvIHRydWUuXG4gKlxuICogQHBhcmFtIHdpdGhQYXNzd29yZCBXaGVuIHNldCB0byB0cnVlLCB0aGUgcGFzc3dvcmQgd2lsbCBiZSBpbmNsdWRlZC5cbiAqL1xuZnVuY3Rpb24gZHNuVG9TdHJpbmcoZHNuLCB3aXRoUGFzc3dvcmQgPSBmYWxzZSkge1xuICBjb25zdCB7IGhvc3QsIHBhdGgsIHBhc3MsIHBvcnQsIHByb2plY3RJZCwgcHJvdG9jb2wsIHB1YmxpY0tleSB9ID0gZHNuO1xuICByZXR1cm4gKFxuICAgIGAke3Byb3RvY29sfTovLyR7cHVibGljS2V5fSR7d2l0aFBhc3N3b3JkICYmIHBhc3MgPyBgOiR7cGFzc31gIDogJyd9YCArXG4gICAgYEAke2hvc3R9JHtwb3J0ID8gYDoke3BvcnR9YCA6ICcnfS8ke3BhdGggPyBgJHtwYXRofS9gIDogcGF0aH0ke3Byb2plY3RJZH1gXG4gICk7XG59XG5cbi8qKlxuICogUGFyc2VzIGEgRHNuIGZyb20gYSBnaXZlbiBzdHJpbmcuXG4gKlxuICogQHBhcmFtIHN0ciBBIERzbiBhcyBzdHJpbmdcbiAqIEByZXR1cm5zIERzbiBhcyBEc25Db21wb25lbnRzIG9yIHVuZGVmaW5lZCBpZiBAcGFyYW0gc3RyIGlzIG5vdCBhIHZhbGlkIERTTiBzdHJpbmdcbiAqL1xuZnVuY3Rpb24gZHNuRnJvbVN0cmluZyhzdHIpIHtcbiAgY29uc3QgbWF0Y2ggPSBEU05fUkVHRVguZXhlYyhzdHIpO1xuXG4gIGlmICghbWF0Y2gpIHtcbiAgICAvLyBUaGlzIHNob3VsZCBiZSBsb2dnZWQgdG8gdGhlIGNvbnNvbGVcbiAgICBsb2dnZXIuY29uc29sZVNhbmRib3goKCkgPT4ge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICAgIGNvbnNvbGUuZXJyb3IoYEludmFsaWQgU2VudHJ5IERzbjogJHtzdHJ9YCk7XG4gICAgfSk7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxuXG4gIGNvbnN0IFtwcm90b2NvbCwgcHVibGljS2V5LCBwYXNzID0gJycsIGhvc3QgPSAnJywgcG9ydCA9ICcnLCBsYXN0UGF0aCA9ICcnXSA9IG1hdGNoLnNsaWNlKDEpO1xuICBsZXQgcGF0aCA9ICcnO1xuICBsZXQgcHJvamVjdElkID0gbGFzdFBhdGg7XG5cbiAgY29uc3Qgc3BsaXQgPSBwcm9qZWN0SWQuc3BsaXQoJy8nKTtcbiAgaWYgKHNwbGl0Lmxlbmd0aCA+IDEpIHtcbiAgICBwYXRoID0gc3BsaXQuc2xpY2UoMCwgLTEpLmpvaW4oJy8nKTtcbiAgICBwcm9qZWN0SWQgPSBzcGxpdC5wb3AoKSA7XG4gIH1cblxuICBpZiAocHJvamVjdElkKSB7XG4gICAgY29uc3QgcHJvamVjdE1hdGNoID0gcHJvamVjdElkLm1hdGNoKC9eXFxkKy8pO1xuICAgIGlmIChwcm9qZWN0TWF0Y2gpIHtcbiAgICAgIHByb2plY3RJZCA9IHByb2plY3RNYXRjaFswXTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gZHNuRnJvbUNvbXBvbmVudHMoeyBob3N0LCBwYXNzLCBwYXRoLCBwcm9qZWN0SWQsIHBvcnQsIHByb3RvY29sOiBwcm90b2NvbCAsIHB1YmxpY0tleSB9KTtcbn1cblxuZnVuY3Rpb24gZHNuRnJvbUNvbXBvbmVudHMoY29tcG9uZW50cykge1xuICByZXR1cm4ge1xuICAgIHByb3RvY29sOiBjb21wb25lbnRzLnByb3RvY29sLFxuICAgIHB1YmxpY0tleTogY29tcG9uZW50cy5wdWJsaWNLZXkgfHwgJycsXG4gICAgcGFzczogY29tcG9uZW50cy5wYXNzIHx8ICcnLFxuICAgIGhvc3Q6IGNvbXBvbmVudHMuaG9zdCxcbiAgICBwb3J0OiBjb21wb25lbnRzLnBvcnQgfHwgJycsXG4gICAgcGF0aDogY29tcG9uZW50cy5wYXRoIHx8ICcnLFxuICAgIHByb2plY3RJZDogY29tcG9uZW50cy5wcm9qZWN0SWQsXG4gIH07XG59XG5cbmZ1bmN0aW9uIHZhbGlkYXRlRHNuKGRzbikge1xuICBpZiAoIWRlYnVnQnVpbGQuREVCVUdfQlVJTEQpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIGNvbnN0IHsgcG9ydCwgcHJvamVjdElkLCBwcm90b2NvbCB9ID0gZHNuO1xuXG4gIGNvbnN0IHJlcXVpcmVkQ29tcG9uZW50cyA9IFsncHJvdG9jb2wnLCAncHVibGljS2V5JywgJ2hvc3QnLCAncHJvamVjdElkJ107XG4gIGNvbnN0IGhhc01pc3NpbmdSZXF1aXJlZENvbXBvbmVudCA9IHJlcXVpcmVkQ29tcG9uZW50cy5maW5kKGNvbXBvbmVudCA9PiB7XG4gICAgaWYgKCFkc25bY29tcG9uZW50XSkge1xuICAgICAgbG9nZ2VyLmxvZ2dlci5lcnJvcihgSW52YWxpZCBTZW50cnkgRHNuOiAke2NvbXBvbmVudH0gbWlzc2luZ2ApO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbiAgfSk7XG5cbiAgaWYgKGhhc01pc3NpbmdSZXF1aXJlZENvbXBvbmVudCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGlmICghcHJvamVjdElkLm1hdGNoKC9eXFxkKyQvKSkge1xuICAgIGxvZ2dlci5sb2dnZXIuZXJyb3IoYEludmFsaWQgU2VudHJ5IERzbjogSW52YWxpZCBwcm9qZWN0SWQgJHtwcm9qZWN0SWR9YCk7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgaWYgKCFpc1ZhbGlkUHJvdG9jb2wocHJvdG9jb2wpKSB7XG4gICAgbG9nZ2VyLmxvZ2dlci5lcnJvcihgSW52YWxpZCBTZW50cnkgRHNuOiBJbnZhbGlkIHByb3RvY29sICR7cHJvdG9jb2x9YCk7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgaWYgKHBvcnQgJiYgaXNOYU4ocGFyc2VJbnQocG9ydCwgMTApKSkge1xuICAgIGxvZ2dlci5sb2dnZXIuZXJyb3IoYEludmFsaWQgU2VudHJ5IERzbjogSW52YWxpZCBwb3J0ICR7cG9ydH1gKTtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICByZXR1cm4gdHJ1ZTtcbn1cblxuLyoqXG4gKiBDcmVhdGVzIGEgdmFsaWQgU2VudHJ5IERzbiBvYmplY3QsIGlkZW50aWZ5aW5nIGEgU2VudHJ5IGluc3RhbmNlIGFuZCBwcm9qZWN0LlxuICogQHJldHVybnMgYSB2YWxpZCBEc25Db21wb25lbnRzIG9iamVjdCBvciBgdW5kZWZpbmVkYCBpZiBAcGFyYW0gZnJvbSBpcyBhbiBpbnZhbGlkIERTTiBzb3VyY2VcbiAqL1xuZnVuY3Rpb24gbWFrZURzbihmcm9tKSB7XG4gIGNvbnN0IGNvbXBvbmVudHMgPSB0eXBlb2YgZnJvbSA9PT0gJ3N0cmluZycgPyBkc25Gcm9tU3RyaW5nKGZyb20pIDogZHNuRnJvbUNvbXBvbmVudHMoZnJvbSk7XG4gIGlmICghY29tcG9uZW50cyB8fCAhdmFsaWRhdGVEc24oY29tcG9uZW50cykpIHtcbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG4gIHJldHVybiBjb21wb25lbnRzO1xufVxuXG5leHBvcnRzLmRzbkZyb21TdHJpbmcgPSBkc25Gcm9tU3RyaW5nO1xuZXhwb3J0cy5kc25Ub1N0cmluZyA9IGRzblRvU3RyaW5nO1xuZXhwb3J0cy5tYWtlRHNuID0gbWFrZURzbjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRzbi5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/dsn.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/env.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/env.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n/*\n * This module exists for optimizations in the build process through rollup and terser.  We define some global\n * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these\n * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will\n * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to\n * `logger` and preventing node-related code from appearing in browser bundles.\n *\n * Attention:\n * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by\n * users. These flags should live in their respective packages, as we identified user tooling (specifically webpack)\n * having issues tree-shaking these constants across package boundaries.\n * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want\n * users to be able to shake away expressions that it guards.\n */\n\n/**\n * Figures out if we're building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nfunction isBrowserBundle() {\n  return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n\n/**\n * Get source of SDK.\n */\nfunction getSDKSource() {\n  // @ts-expect-error \"npm\" is injected by rollup during build process\n  return \"npm\";\n}\n\nexports.getSDKSource = getSDKSource;\nexports.isBrowserBundle = isBrowserBundle;\n//# sourceMappingURL=env.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2Vudi5qcyIsIm1hcHBpbmdzIjoiQUFBQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7O0FBRTdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxvQkFBb0I7QUFDcEIsdUJBQXVCO0FBQ3ZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLXByb2plY3QvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2Vudi5qcz8wMjYyIl0sInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG5cbi8qXG4gKiBUaGlzIG1vZHVsZSBleGlzdHMgZm9yIG9wdGltaXphdGlvbnMgaW4gdGhlIGJ1aWxkIHByb2Nlc3MgdGhyb3VnaCByb2xsdXAgYW5kIHRlcnNlci4gIFdlIGRlZmluZSBzb21lIGdsb2JhbFxuICogY29uc3RhbnRzLCB3aGljaCBjYW4gYmUgb3ZlcnJpZGRlbiBkdXJpbmcgYnVpbGQuIEJ5IGd1YXJkaW5nIGNlcnRhaW4gcGllY2VzIG9mIGNvZGUgd2l0aCBmdW5jdGlvbnMgdGhhdCByZXR1cm4gdGhlc2VcbiAqIGNvbnN0YW50cywgd2UgY2FuIGNvbnRyb2wgd2hldGhlciBvciBub3QgdGhleSBhcHBlYXIgaW4gdGhlIGZpbmFsIGJ1bmRsZS4gKEFueSBjb2RlIGd1YXJkZWQgYnkgYSBmYWxzZSBjb25kaXRpb24gd2lsbFxuICogbmV2ZXIgcnVuLCBhbmQgd2lsbCBoZW5jZSBiZSBkcm9wcGVkIGR1cmluZyB0cmVlc2hha2luZy4pIFRoZSB0d28gcHJpbWFyeSB1c2VzIGZvciB0aGlzIGFyZSBzdHJpcHBpbmcgb3V0IGNhbGxzIHRvXG4gKiBgbG9nZ2VyYCBhbmQgcHJldmVudGluZyBub2RlLXJlbGF0ZWQgY29kZSBmcm9tIGFwcGVhcmluZyBpbiBicm93c2VyIGJ1bmRsZXMuXG4gKlxuICogQXR0ZW50aW9uOlxuICogVGhpcyBmaWxlIHNob3VsZCBub3QgYmUgdXNlZCB0byBkZWZpbmUgY29uc3RhbnRzL2ZsYWdzIHRoYXQgYXJlIGludGVuZGVkIHRvIGJlIHVzZWQgZm9yIHRyZWUtc2hha2luZyBjb25kdWN0ZWQgYnlcbiAqIHVzZXJzLiBUaGVzZSBmbGFncyBzaG91bGQgbGl2ZSBpbiB0aGVpciByZXNwZWN0aXZlIHBhY2thZ2VzLCBhcyB3ZSBpZGVudGlmaWVkIHVzZXIgdG9vbGluZyAoc3BlY2lmaWNhbGx5IHdlYnBhY2spXG4gKiBoYXZpbmcgaXNzdWVzIHRyZWUtc2hha2luZyB0aGVzZSBjb25zdGFudHMgYWNyb3NzIHBhY2thZ2UgYm91bmRhcmllcy5cbiAqIEFuIGV4YW1wbGUgZm9yIHRoaXMgaXMgdGhlIF9fU0VOVFJZX0RFQlVHX18gY29uc3RhbnQuIEl0IGlzIGRlY2xhcmVkIGluIGVhY2ggcGFja2FnZSBpbmRpdmlkdWFsbHkgYmVjYXVzZSB3ZSB3YW50XG4gKiB1c2VycyB0byBiZSBhYmxlIHRvIHNoYWtlIGF3YXkgZXhwcmVzc2lvbnMgdGhhdCBpdCBndWFyZHMuXG4gKi9cblxuLyoqXG4gKiBGaWd1cmVzIG91dCBpZiB3ZSdyZSBidWlsZGluZyBhIGJyb3dzZXIgYnVuZGxlLlxuICpcbiAqIEByZXR1cm5zIHRydWUgaWYgdGhpcyBpcyBhIGJyb3dzZXIgYnVuZGxlIGJ1aWxkLlxuICovXG5mdW5jdGlvbiBpc0Jyb3dzZXJCdW5kbGUoKSB7XG4gIHJldHVybiB0eXBlb2YgX19TRU5UUllfQlJPV1NFUl9CVU5ETEVfXyAhPT0gJ3VuZGVmaW5lZCcgJiYgISFfX1NFTlRSWV9CUk9XU0VSX0JVTkRMRV9fO1xufVxuXG4vKipcbiAqIEdldCBzb3VyY2Ugb2YgU0RLLlxuICovXG5mdW5jdGlvbiBnZXRTREtTb3VyY2UoKSB7XG4gIC8vIEB0cy1leHBlY3QtZXJyb3IgXCJucG1cIiBpcyBpbmplY3RlZCBieSByb2xsdXAgZHVyaW5nIGJ1aWxkIHByb2Nlc3NcbiAgcmV0dXJuIFwibnBtXCI7XG59XG5cbmV4cG9ydHMuZ2V0U0RLU291cmNlID0gZ2V0U0RLU291cmNlO1xuZXhwb3J0cy5pc0Jyb3dzZXJCdW5kbGUgPSBpc0Jyb3dzZXJCdW5kbGU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lbnYuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/env.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/envelope.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/envelope.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst dsn = __webpack_require__(/*! ./dsn.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/dsn.js\");\nconst normalize = __webpack_require__(/*! ./normalize.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/normalize.js\");\nconst object = __webpack_require__(/*! ./object.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/object.js\");\nconst worldwide = __webpack_require__(/*! ./worldwide.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/worldwide.js\");\n\n/**\n * Creates an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction createEnvelope(headers, items = []) {\n  return [headers, items] ;\n}\n\n/**\n * Add an item to an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction addItemToEnvelope(envelope, newItem) {\n  const [headers, items] = envelope;\n  return [headers, [...items, newItem]] ;\n}\n\n/**\n * Convenience function to loop through the items and item types of an envelope.\n * (This function was mostly created because working with envelope types is painful at the moment)\n *\n * If the callback returns true, the rest of the items will be skipped.\n */\nfunction forEachEnvelopeItem(\n  envelope,\n  callback,\n) {\n  const envelopeItems = envelope[1];\n\n  for (const envelopeItem of envelopeItems) {\n    const envelopeItemType = envelopeItem[0].type;\n    const result = callback(envelopeItem, envelopeItemType);\n\n    if (result) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Returns true if the envelope contains any of the given envelope item types\n */\nfunction envelopeContainsItemType(envelope, types) {\n  return forEachEnvelopeItem(envelope, (_, type) => types.includes(type));\n}\n\n/**\n * Encode a string to UTF8 array.\n */\nfunction encodeUTF8(input) {\n  return worldwide.GLOBAL_OBJ.__SENTRY__ && worldwide.GLOBAL_OBJ.__SENTRY__.encodePolyfill\n    ? worldwide.GLOBAL_OBJ.__SENTRY__.encodePolyfill(input)\n    : new TextEncoder().encode(input);\n}\n\n/**\n * Decode a UTF8 array to string.\n */\nfunction decodeUTF8(input) {\n  return worldwide.GLOBAL_OBJ.__SENTRY__ && worldwide.GLOBAL_OBJ.__SENTRY__.decodePolyfill\n    ? worldwide.GLOBAL_OBJ.__SENTRY__.decodePolyfill(input)\n    : new TextDecoder().decode(input);\n}\n\n/**\n * Serializes an envelope.\n */\nfunction serializeEnvelope(envelope) {\n  const [envHeaders, items] = envelope;\n\n  // Initially we construct our envelope as a string and only convert to binary chunks if we encounter binary data\n  let parts = JSON.stringify(envHeaders);\n\n  function append(next) {\n    if (typeof parts === 'string') {\n      parts = typeof next === 'string' ? parts + next : [encodeUTF8(parts), next];\n    } else {\n      parts.push(typeof next === 'string' ? encodeUTF8(next) : next);\n    }\n  }\n\n  for (const item of items) {\n    const [itemHeaders, payload] = item;\n\n    append(`\\n${JSON.stringify(itemHeaders)}\\n`);\n\n    if (typeof payload === 'string' || payload instanceof Uint8Array) {\n      append(payload);\n    } else {\n      let stringifiedPayload;\n      try {\n        stringifiedPayload = JSON.stringify(payload);\n      } catch (e) {\n        // In case, despite all our efforts to keep `payload` circular-dependency-free, `JSON.strinify()` still\n        // fails, we try again after normalizing it again with infinite normalization depth. This of course has a\n        // performance impact but in this case a performance hit is better than throwing.\n        stringifiedPayload = JSON.stringify(normalize.normalize(payload));\n      }\n      append(stringifiedPayload);\n    }\n  }\n\n  return typeof parts === 'string' ? parts : concatBuffers(parts);\n}\n\nfunction concatBuffers(buffers) {\n  const totalLength = buffers.reduce((acc, buf) => acc + buf.length, 0);\n\n  const merged = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const buffer of buffers) {\n    merged.set(buffer, offset);\n    offset += buffer.length;\n  }\n\n  return merged;\n}\n\n/**\n * Parses an envelope\n */\nfunction parseEnvelope(env) {\n  let buffer = typeof env === 'string' ? encodeUTF8(env) : env;\n\n  function readBinary(length) {\n    const bin = buffer.subarray(0, length);\n    // Replace the buffer with the remaining data excluding trailing newline\n    buffer = buffer.subarray(length + 1);\n    return bin;\n  }\n\n  function readJson() {\n    let i = buffer.indexOf(0xa);\n    // If we couldn't find a newline, we must have found the end of the buffer\n    if (i < 0) {\n      i = buffer.length;\n    }\n\n    return JSON.parse(decodeUTF8(readBinary(i))) ;\n  }\n\n  const envelopeHeader = readJson();\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const items = [];\n\n  while (buffer.length) {\n    const itemHeader = readJson();\n    const binaryLength = typeof itemHeader.length === 'number' ? itemHeader.length : undefined;\n\n    items.push([itemHeader, binaryLength ? readBinary(binaryLength) : readJson()]);\n  }\n\n  return [envelopeHeader, items];\n}\n\n/**\n * Creates envelope item for a single span\n */\nfunction createSpanEnvelopeItem(spanJson) {\n  const spanHeaders = {\n    type: 'span',\n  };\n\n  return [spanHeaders, spanJson];\n}\n\n/**\n * Creates attachment envelope items\n */\nfunction createAttachmentEnvelopeItem(attachment) {\n  const buffer = typeof attachment.data === 'string' ? encodeUTF8(attachment.data) : attachment.data;\n\n  return [\n    object.dropUndefinedKeys({\n      type: 'attachment',\n      length: buffer.length,\n      filename: attachment.filename,\n      content_type: attachment.contentType,\n      attachment_type: attachment.attachmentType,\n    }),\n    buffer,\n  ];\n}\n\nconst ITEM_TYPE_TO_DATA_CATEGORY_MAP = {\n  session: 'session',\n  sessions: 'session',\n  attachment: 'attachment',\n  transaction: 'transaction',\n  event: 'error',\n  client_report: 'internal',\n  user_report: 'default',\n  profile: 'profile',\n  profile_chunk: 'profile',\n  replay_event: 'replay',\n  replay_recording: 'replay',\n  check_in: 'monitor',\n  feedback: 'feedback',\n  span: 'span',\n  statsd: 'metric_bucket',\n};\n\n/**\n * Maps the type of an envelope item to a data category.\n */\nfunction envelopeItemTypeToDataCategory(type) {\n  return ITEM_TYPE_TO_DATA_CATEGORY_MAP[type];\n}\n\n/** Extracts the minimal SDK info from the metadata or an events */\nfunction getSdkMetadataForEnvelopeHeader(metadataOrEvent) {\n  if (!metadataOrEvent || !metadataOrEvent.sdk) {\n    return;\n  }\n  const { name, version } = metadataOrEvent.sdk;\n  return { name, version };\n}\n\n/**\n * Creates event envelope headers, based on event, sdk info and tunnel\n * Note: This function was extracted from the core package to make it available in Replay\n */\nfunction createEventEnvelopeHeaders(\n  event,\n  sdkInfo,\n  tunnel,\n  dsn$1,\n) {\n  const dynamicSamplingContext = event.sdkProcessingMetadata && event.sdkProcessingMetadata.dynamicSamplingContext;\n  return {\n    event_id: event.event_id ,\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && dsn$1 && { dsn: dsn.dsnToString(dsn$1) }),\n    ...(dynamicSamplingContext && {\n      trace: object.dropUndefinedKeys({ ...dynamicSamplingContext }),\n    }),\n  };\n}\n\nexports.addItemToEnvelope = addItemToEnvelope;\nexports.createAttachmentEnvelopeItem = createAttachmentEnvelopeItem;\nexports.createEnvelope = createEnvelope;\nexports.createEventEnvelopeHeaders = createEventEnvelopeHeaders;\nexports.createSpanEnvelopeItem = createSpanEnvelopeItem;\nexports.envelopeContainsItemType = envelopeContainsItemType;\nexports.envelopeItemTypeToDataCategory = envelopeItemTypeToDataCategory;\nexports.forEachEnvelopeItem = forEachEnvelopeItem;\nexports.getSdkMetadataForEnvelopeHeader = getSdkMetadataForEnvelopeHeader;\nexports.parseEnvelope = parseEnvelope;\nexports.serializeEnvelope = serializeEnvelope;\n//# sourceMappingURL=envelope.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/envelope.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/error.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/error.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n/** An error emitted by Sentry SDKs and related utilities. */\nclass SentryError extends Error {\n  /** Display name of this error instance. */\n\n   constructor( message, logLevel = 'warn') {\n    super(message);this.message = message;\n    this.name = new.target.prototype.constructor.name;\n    // This sets the prototype to be `Error`, not `SentryError`. It's unclear why we do this, but commenting this line\n    // out causes various (seemingly totally unrelated) playwright tests consistently time out. FYI, this makes\n    // instances of `SentryError` fail `obj instanceof SentryError` checks.\n    Object.setPrototypeOf(this, new.target.prototype);\n    this.logLevel = logLevel;\n  }\n}\n\nexports.SentryError = SentryError;\n//# sourceMappingURL=error.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2Vycm9yLmpzIiwibWFwcGluZ3MiOiJBQUFBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQzs7QUFFN0Q7QUFDQTtBQUNBOztBQUVBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsbUJBQW1CO0FBQ25CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLXByb2plY3QvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2Vycm9yLmpzPzhlOTkiXSwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxuLyoqIEFuIGVycm9yIGVtaXR0ZWQgYnkgU2VudHJ5IFNES3MgYW5kIHJlbGF0ZWQgdXRpbGl0aWVzLiAqL1xuY2xhc3MgU2VudHJ5RXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gIC8qKiBEaXNwbGF5IG5hbWUgb2YgdGhpcyBlcnJvciBpbnN0YW5jZS4gKi9cblxuICAgY29uc3RydWN0b3IoIG1lc3NhZ2UsIGxvZ0xldmVsID0gJ3dhcm4nKSB7XG4gICAgc3VwZXIobWVzc2FnZSk7dGhpcy5tZXNzYWdlID0gbWVzc2FnZTtcbiAgICB0aGlzLm5hbWUgPSBuZXcudGFyZ2V0LnByb3RvdHlwZS5jb25zdHJ1Y3Rvci5uYW1lO1xuICAgIC8vIFRoaXMgc2V0cyB0aGUgcHJvdG90eXBlIHRvIGJlIGBFcnJvcmAsIG5vdCBgU2VudHJ5RXJyb3JgLiBJdCdzIHVuY2xlYXIgd2h5IHdlIGRvIHRoaXMsIGJ1dCBjb21tZW50aW5nIHRoaXMgbGluZVxuICAgIC8vIG91dCBjYXVzZXMgdmFyaW91cyAoc2VlbWluZ2x5IHRvdGFsbHkgdW5yZWxhdGVkKSBwbGF5d3JpZ2h0IHRlc3RzIGNvbnNpc3RlbnRseSB0aW1lIG91dC4gRllJLCB0aGlzIG1ha2VzXG4gICAgLy8gaW5zdGFuY2VzIG9mIGBTZW50cnlFcnJvcmAgZmFpbCBgb2JqIGluc3RhbmNlb2YgU2VudHJ5RXJyb3JgIGNoZWNrcy5cbiAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YodGhpcywgbmV3LnRhcmdldC5wcm90b3R5cGUpO1xuICAgIHRoaXMubG9nTGV2ZWwgPSBsb2dMZXZlbDtcbiAgfVxufVxuXG5leHBvcnRzLlNlbnRyeUVycm9yID0gU2VudHJ5RXJyb3I7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lcnJvci5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/error.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/eventbuilder.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/eventbuilder.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst is = __webpack_require__(/*! ./is.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/is.js\");\nconst misc = __webpack_require__(/*! ./misc.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/misc.js\");\nconst normalize = __webpack_require__(/*! ./normalize.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/normalize.js\");\nconst object = __webpack_require__(/*! ./object.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/object.js\");\n\n/**\n * Extracts stack frames from the error.stack string\n */\nfunction parseStackFrames(stackParser, error) {\n  return stackParser(error.stack || '', 1);\n}\n\n/**\n * Extracts stack frames from the error and builds a Sentry Exception\n */\nfunction exceptionFromError(stackParser, error) {\n  const exception = {\n    type: error.name || error.constructor.name,\n    value: error.message,\n  };\n\n  const frames = parseStackFrames(stackParser, error);\n  if (frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  return exception;\n}\n\n/** If a plain object has a property that is an `Error`, return this error. */\nfunction getErrorPropertyFromObject(obj) {\n  for (const prop in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n      const value = obj[prop];\n      if (value instanceof Error) {\n        return value;\n      }\n    }\n  }\n\n  return undefined;\n}\n\nfunction getMessageForObject(exception) {\n  if ('name' in exception && typeof exception.name === 'string') {\n    let message = `'${exception.name}' captured as exception`;\n\n    if ('message' in exception && typeof exception.message === 'string') {\n      message += ` with message '${exception.message}'`;\n    }\n\n    return message;\n  } else if ('message' in exception && typeof exception.message === 'string') {\n    return exception.message;\n  }\n\n  const keys = object.extractExceptionKeysForMessage(exception);\n\n  // Some ErrorEvent instances do not have an `error` property, which is why they are not handled before\n  // We still want to try to get a decent message for these cases\n  if (is.isErrorEvent(exception)) {\n    return `Event \\`ErrorEvent\\` captured as exception with message \\`${exception.message}\\``;\n  }\n\n  const className = getObjectClassName(exception);\n\n  return `${\n    className && className !== 'Object' ? `'${className}'` : 'Object'\n  } captured as exception with keys: ${keys}`;\n}\n\nfunction getObjectClassName(obj) {\n  try {\n    const prototype = Object.getPrototypeOf(obj);\n    return prototype ? prototype.constructor.name : undefined;\n  } catch (e) {\n    // ignore errors here\n  }\n}\n\nfunction getException(\n  client,\n  mechanism,\n  exception,\n  hint,\n) {\n  if (is.isError(exception)) {\n    return [exception, undefined];\n  }\n\n  // Mutate this!\n  mechanism.synthetic = true;\n\n  if (is.isPlainObject(exception)) {\n    const normalizeDepth = client && client.getOptions().normalizeDepth;\n    const extras = { ['__serialized__']: normalize.normalizeToSize(exception , normalizeDepth) };\n\n    const errorFromProp = getErrorPropertyFromObject(exception);\n    if (errorFromProp) {\n      return [errorFromProp, extras];\n    }\n\n    const message = getMessageForObject(exception);\n    const ex = (hint && hint.syntheticException) || new Error(message);\n    ex.message = message;\n\n    return [ex, extras];\n  }\n\n  // This handles when someone does: `throw \"something awesome\";`\n  // We use synthesized Error here so we can extract a (rough) stack trace.\n  const ex = (hint && hint.syntheticException) || new Error(exception );\n  ex.message = `${exception}`;\n\n  return [ex, undefined];\n}\n\n/**\n * Builds and Event from a Exception\n * @hidden\n */\nfunction eventFromUnknownInput(\n  client,\n  stackParser,\n  exception,\n  hint,\n) {\n  const providedMechanism =\n    hint && hint.data && (hint.data ).mechanism;\n  const mechanism = providedMechanism || {\n    handled: true,\n    type: 'generic',\n  };\n\n  const [ex, extras] = getException(client, mechanism, exception, hint);\n\n  const event = {\n    exception: {\n      values: [exceptionFromError(stackParser, ex)],\n    },\n  };\n\n  if (extras) {\n    event.extra = extras;\n  }\n\n  misc.addExceptionTypeValue(event, undefined, undefined);\n  misc.addExceptionMechanism(event, mechanism);\n\n  return {\n    ...event,\n    event_id: hint && hint.event_id,\n  };\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nfunction eventFromMessage(\n  stackParser,\n  message,\n  level = 'info',\n  hint,\n  attachStacktrace,\n) {\n  const event = {\n    event_id: hint && hint.event_id,\n    level,\n  };\n\n  if (attachStacktrace && hint && hint.syntheticException) {\n    const frames = parseStackFrames(stackParser, hint.syntheticException);\n    if (frames.length) {\n      event.exception = {\n        values: [\n          {\n            value: message,\n            stacktrace: { frames },\n          },\n        ],\n      };\n    }\n  }\n\n  if (is.isParameterizedString(message)) {\n    const { __sentry_template_string__, __sentry_template_values__ } = message;\n\n    event.logentry = {\n      message: __sentry_template_string__,\n      params: __sentry_template_values__,\n    };\n    return event;\n  }\n\n  event.message = message;\n  return event;\n}\n\nexports.eventFromMessage = eventFromMessage;\nexports.eventFromUnknownInput = eventFromUnknownInput;\nexports.exceptionFromError = exceptionFromError;\nexports.parseStackFrames = parseStackFrames;\n//# sourceMappingURL=eventbuilder.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/eventbuilder.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/index.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/index.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst aggregateErrors = __webpack_require__(/*! ./aggregate-errors.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/aggregate-errors.js\");\nconst array = __webpack_require__(/*! ./array.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/array.js\");\nconst browser = __webpack_require__(/*! ./browser.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/browser.js\");\nconst dsn = __webpack_require__(/*! ./dsn.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/dsn.js\");\nconst error = __webpack_require__(/*! ./error.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/error.js\");\nconst worldwide = __webpack_require__(/*! ./worldwide.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/worldwide.js\");\nconst console = __webpack_require__(/*! ./instrument/console.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/console.js\");\nconst fetch = __webpack_require__(/*! ./instrument/fetch.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/fetch.js\");\nconst globalError = __webpack_require__(/*! ./instrument/globalError.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/globalError.js\");\nconst globalUnhandledRejection = __webpack_require__(/*! ./instrument/globalUnhandledRejection.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/globalUnhandledRejection.js\");\nconst handlers = __webpack_require__(/*! ./instrument/handlers.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/handlers.js\");\nconst is = __webpack_require__(/*! ./is.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/is.js\");\nconst isBrowser = __webpack_require__(/*! ./isBrowser.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/isBrowser.js\");\nconst logger = __webpack_require__(/*! ./logger.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/logger.js\");\nconst memo = __webpack_require__(/*! ./memo.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/memo.js\");\nconst misc = __webpack_require__(/*! ./misc.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/misc.js\");\nconst node = __webpack_require__(/*! ./node.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/node.js\");\nconst normalize = __webpack_require__(/*! ./normalize.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/normalize.js\");\nconst object = __webpack_require__(/*! ./object.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/object.js\");\nconst path = __webpack_require__(/*! ./path.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/path.js\");\nconst promisebuffer = __webpack_require__(/*! ./promisebuffer.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/promisebuffer.js\");\nconst requestdata = __webpack_require__(/*! ./requestdata.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/requestdata.js\");\nconst severity = __webpack_require__(/*! ./severity.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/severity.js\");\nconst stacktrace = __webpack_require__(/*! ./stacktrace.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/stacktrace.js\");\nconst nodeStackTrace = __webpack_require__(/*! ./node-stack-trace.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/node-stack-trace.js\");\nconst string = __webpack_require__(/*! ./string.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/string.js\");\nconst supports = __webpack_require__(/*! ./supports.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/supports.js\");\nconst syncpromise = __webpack_require__(/*! ./syncpromise.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/syncpromise.js\");\nconst time = __webpack_require__(/*! ./time.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/time.js\");\nconst tracing = __webpack_require__(/*! ./tracing.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/tracing.js\");\nconst env = __webpack_require__(/*! ./env.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/env.js\");\nconst envelope = __webpack_require__(/*! ./envelope.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/envelope.js\");\nconst clientreport = __webpack_require__(/*! ./clientreport.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/clientreport.js\");\nconst ratelimit = __webpack_require__(/*! ./ratelimit.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/ratelimit.js\");\nconst baggage = __webpack_require__(/*! ./baggage.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/baggage.js\");\nconst url = __webpack_require__(/*! ./url.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/url.js\");\nconst cache = __webpack_require__(/*! ./cache.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/cache.js\");\nconst eventbuilder = __webpack_require__(/*! ./eventbuilder.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/eventbuilder.js\");\nconst anr = __webpack_require__(/*! ./anr.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/anr.js\");\nconst lru = __webpack_require__(/*! ./lru.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/lru.js\");\nconst _asyncNullishCoalesce = __webpack_require__(/*! ./buildPolyfills/_asyncNullishCoalesce.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_asyncNullishCoalesce.js\");\nconst _asyncOptionalChain = __webpack_require__(/*! ./buildPolyfills/_asyncOptionalChain.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_asyncOptionalChain.js\");\nconst _asyncOptionalChainDelete = __webpack_require__(/*! ./buildPolyfills/_asyncOptionalChainDelete.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_asyncOptionalChainDelete.js\");\nconst _nullishCoalesce = __webpack_require__(/*! ./buildPolyfills/_nullishCoalesce.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_nullishCoalesce.js\");\nconst _optionalChain = __webpack_require__(/*! ./buildPolyfills/_optionalChain.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_optionalChain.js\");\nconst _optionalChainDelete = __webpack_require__(/*! ./buildPolyfills/_optionalChainDelete.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/buildPolyfills/_optionalChainDelete.js\");\nconst propagationContext = __webpack_require__(/*! ./propagationContext.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/propagationContext.js\");\nconst version = __webpack_require__(/*! ./version.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/version.js\");\nconst escapeStringForRegex = __webpack_require__(/*! ./vendor/escapeStringForRegex.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/vendor/escapeStringForRegex.js\");\nconst supportsHistory = __webpack_require__(/*! ./vendor/supportsHistory.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/vendor/supportsHistory.js\");\n\n\n\nexports.applyAggregateErrorsToEvent = aggregateErrors.applyAggregateErrorsToEvent;\nexports.flatten = array.flatten;\nexports.getComponentName = browser.getComponentName;\nexports.getDomElement = browser.getDomElement;\nexports.getLocationHref = browser.getLocationHref;\nexports.htmlTreeAsString = browser.htmlTreeAsString;\nexports.dsnFromString = dsn.dsnFromString;\nexports.dsnToString = dsn.dsnToString;\nexports.makeDsn = dsn.makeDsn;\nexports.SentryError = error.SentryError;\nexports.GLOBAL_OBJ = worldwide.GLOBAL_OBJ;\nexports.getGlobalSingleton = worldwide.getGlobalSingleton;\nexports.addConsoleInstrumentationHandler = console.addConsoleInstrumentationHandler;\nexports.addFetchInstrumentationHandler = fetch.addFetchInstrumentationHandler;\nexports.addGlobalErrorInstrumentationHandler = globalError.addGlobalErrorInstrumentationHandler;\nexports.addGlobalUnhandledRejectionInstrumentationHandler = globalUnhandledRejection.addGlobalUnhandledRejectionInstrumentationHandler;\nexports.addHandler = handlers.addHandler;\nexports.maybeInstrument = handlers.maybeInstrument;\nexports.resetInstrumentationHandlers = handlers.resetInstrumentationHandlers;\nexports.triggerHandlers = handlers.triggerHandlers;\nexports.isDOMError = is.isDOMError;\nexports.isDOMException = is.isDOMException;\nexports.isElement = is.isElement;\nexports.isError = is.isError;\nexports.isErrorEvent = is.isErrorEvent;\nexports.isEvent = is.isEvent;\nexports.isInstanceOf = is.isInstanceOf;\nexports.isParameterizedString = is.isParameterizedString;\nexports.isPlainObject = is.isPlainObject;\nexports.isPrimitive = is.isPrimitive;\nexports.isRegExp = is.isRegExp;\nexports.isString = is.isString;\nexports.isSyntheticEvent = is.isSyntheticEvent;\nexports.isThenable = is.isThenable;\nexports.isVueViewModel = is.isVueViewModel;\nexports.isBrowser = isBrowser.isBrowser;\nexports.CONSOLE_LEVELS = logger.CONSOLE_LEVELS;\nexports.consoleSandbox = logger.consoleSandbox;\nexports.logger = logger.logger;\nexports.originalConsoleMethods = logger.originalConsoleMethods;\nexports.memoBuilder = memo.memoBuilder;\nexports.addContextToFrame = misc.addContextToFrame;\nexports.addExceptionMechanism = misc.addExceptionMechanism;\nexports.addExceptionTypeValue = misc.addExceptionTypeValue;\nexports.arrayify = misc.arrayify;\nexports.checkOrSetAlreadyCaught = misc.checkOrSetAlreadyCaught;\nexports.getEventDescription = misc.getEventDescription;\nexports.parseSemver = misc.parseSemver;\nexports.uuid4 = misc.uuid4;\nexports.dynamicRequire = node.dynamicRequire;\nexports.isNodeEnv = node.isNodeEnv;\nexports.loadModule = node.loadModule;\nexports.normalize = normalize.normalize;\nexports.normalizeToSize = normalize.normalizeToSize;\nexports.normalizeUrlToBase = normalize.normalizeUrlToBase;\nexports.addNonEnumerableProperty = object.addNonEnumerableProperty;\nexports.convertToPlainObject = object.convertToPlainObject;\nexports.dropUndefinedKeys = object.dropUndefinedKeys;\nexports.extractExceptionKeysForMessage = object.extractExceptionKeysForMessage;\nexports.fill = object.fill;\nexports.getOriginalFunction = object.getOriginalFunction;\nexports.markFunctionWrapped = object.markFunctionWrapped;\nexports.objectify = object.objectify;\nexports.urlEncode = object.urlEncode;\nexports.basename = path.basename;\nexports.dirname = path.dirname;\nexports.isAbsolute = path.isAbsolute;\nexports.join = path.join;\nexports.normalizePath = path.normalizePath;\nexports.relative = path.relative;\nexports.resolve = path.resolve;\nexports.makePromiseBuffer = promisebuffer.makePromiseBuffer;\nexports.DEFAULT_USER_INCLUDES = requestdata.DEFAULT_USER_INCLUDES;\nexports.addRequestDataToEvent = requestdata.addRequestDataToEvent;\nexports.extractPathForTransaction = requestdata.extractPathForTransaction;\nexports.extractRequestData = requestdata.extractRequestData;\nexports.winterCGHeadersToDict = requestdata.winterCGHeadersToDict;\nexports.winterCGRequestToRequestData = requestdata.winterCGRequestToRequestData;\nexports.severityLevelFromString = severity.severityLevelFromString;\nexports.validSeverityLevels = severity.validSeverityLevels;\nexports.UNKNOWN_FUNCTION = stacktrace.UNKNOWN_FUNCTION;\nexports.createStackParser = stacktrace.createStackParser;\nexports.getFramesFromEvent = stacktrace.getFramesFromEvent;\nexports.getFunctionName = stacktrace.getFunctionName;\nexports.stackParserFromStackParserOptions = stacktrace.stackParserFromStackParserOptions;\nexports.stripSentryFramesAndReverse = stacktrace.stripSentryFramesAndReverse;\nexports.filenameIsInApp = nodeStackTrace.filenameIsInApp;\nexports.node = nodeStackTrace.node;\nexports.nodeStackLineParser = nodeStackTrace.nodeStackLineParser;\nexports.isMatchingPattern = string.isMatchingPattern;\nexports.safeJoin = string.safeJoin;\nexports.snipLine = string.snipLine;\nexports.stringMatchesSomePattern = string.stringMatchesSomePattern;\nexports.truncate = string.truncate;\nexports.isNativeFunction = supports.isNativeFunction;\nexports.supportsDOMError = supports.supportsDOMError;\nexports.supportsDOMException = supports.supportsDOMException;\nexports.supportsErrorEvent = supports.supportsErrorEvent;\nexports.supportsFetch = supports.supportsFetch;\nexports.supportsNativeFetch = supports.supportsNativeFetch;\nexports.supportsReferrerPolicy = supports.supportsReferrerPolicy;\nexports.supportsReportingObserver = supports.supportsReportingObserver;\nexports.SyncPromise = syncpromise.SyncPromise;\nexports.rejectedSyncPromise = syncpromise.rejectedSyncPromise;\nexports.resolvedSyncPromise = syncpromise.resolvedSyncPromise;\nObject.defineProperty(exports, \"_browserPerformanceTimeOriginMode\", ({\n\tenumerable: true,\n\tget: () => time._browserPerformanceTimeOriginMode\n}));\nexports.browserPerformanceTimeOrigin = time.browserPerformanceTimeOrigin;\nexports.dateTimestampInSeconds = time.dateTimestampInSeconds;\nexports.timestampInSeconds = time.timestampInSeconds;\nexports.TRACEPARENT_REGEXP = tracing.TRACEPARENT_REGEXP;\nexports.extractTraceparentData = tracing.extractTraceparentData;\nexports.generateSentryTraceHeader = tracing.generateSentryTraceHeader;\nexports.propagationContextFromHeaders = tracing.propagationContextFromHeaders;\nexports.getSDKSource = env.getSDKSource;\nexports.isBrowserBundle = env.isBrowserBundle;\nexports.addItemToEnvelope = envelope.addItemToEnvelope;\nexports.createAttachmentEnvelopeItem = envelope.createAttachmentEnvelopeItem;\nexports.createEnvelope = envelope.createEnvelope;\nexports.createEventEnvelopeHeaders = envelope.createEventEnvelopeHeaders;\nexports.createSpanEnvelopeItem = envelope.createSpanEnvelopeItem;\nexports.envelopeContainsItemType = envelope.envelopeContainsItemType;\nexports.envelopeItemTypeToDataCategory = envelope.envelopeItemTypeToDataCategory;\nexports.forEachEnvelopeItem = envelope.forEachEnvelopeItem;\nexports.getSdkMetadataForEnvelopeHeader = envelope.getSdkMetadataForEnvelopeHeader;\nexports.parseEnvelope = envelope.parseEnvelope;\nexports.serializeEnvelope = envelope.serializeEnvelope;\nexports.createClientReportEnvelope = clientreport.createClientReportEnvelope;\nexports.DEFAULT_RETRY_AFTER = ratelimit.DEFAULT_RETRY_AFTER;\nexports.disabledUntil = ratelimit.disabledUntil;\nexports.isRateLimited = ratelimit.isRateLimited;\nexports.parseRetryAfterHeader = ratelimit.parseRetryAfterHeader;\nexports.updateRateLimits = ratelimit.updateRateLimits;\nexports.BAGGAGE_HEADER_NAME = baggage.BAGGAGE_HEADER_NAME;\nexports.MAX_BAGGAGE_STRING_LENGTH = baggage.MAX_BAGGAGE_STRING_LENGTH;\nexports.SENTRY_BAGGAGE_KEY_PREFIX = baggage.SENTRY_BAGGAGE_KEY_PREFIX;\nexports.SENTRY_BAGGAGE_KEY_PREFIX_REGEX = baggage.SENTRY_BAGGAGE_KEY_PREFIX_REGEX;\nexports.baggageHeaderToDynamicSamplingContext = baggage.baggageHeaderToDynamicSamplingContext;\nexports.dynamicSamplingContextToSentryBaggageHeader = baggage.dynamicSamplingContextToSentryBaggageHeader;\nexports.parseBaggageHeader = baggage.parseBaggageHeader;\nexports.getNumberOfUrlSegments = url.getNumberOfUrlSegments;\nexports.getSanitizedUrlString = url.getSanitizedUrlString;\nexports.parseUrl = url.parseUrl;\nexports.stripUrlQueryAndFragment = url.stripUrlQueryAndFragment;\nexports.makeFifoCache = cache.makeFifoCache;\nexports.eventFromMessage = eventbuilder.eventFromMessage;\nexports.eventFromUnknownInput = eventbuilder.eventFromUnknownInput;\nexports.exceptionFromError = eventbuilder.exceptionFromError;\nexports.parseStackFrames = eventbuilder.parseStackFrames;\nexports.callFrameToStackFrame = anr.callFrameToStackFrame;\nexports.watchdogTimer = anr.watchdogTimer;\nexports.LRUMap = lru.LRUMap;\nexports._asyncNullishCoalesce = _asyncNullishCoalesce._asyncNullishCoalesce;\nexports._asyncOptionalChain = _asyncOptionalChain._asyncOptionalChain;\nexports._asyncOptionalChainDelete = _asyncOptionalChainDelete._asyncOptionalChainDelete;\nexports._nullishCoalesce = _nullishCoalesce._nullishCoalesce;\nexports._optionalChain = _optionalChain._optionalChain;\nexports._optionalChainDelete = _optionalChainDelete._optionalChainDelete;\nexports.generatePropagationContext = propagationContext.generatePropagationContext;\nexports.SDK_VERSION = version.SDK_VERSION;\nexports.escapeStringForRegex = escapeStringForRegex.escapeStringForRegex;\nexports.supportsHistory = supportsHistory.supportsHistory;\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/console.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/console.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst logger = __webpack_require__(/*! ../logger.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/logger.js\");\nconst object = __webpack_require__(/*! ../object.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/object.js\");\nconst worldwide = __webpack_require__(/*! ../worldwide.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/worldwide.js\");\nconst handlers = __webpack_require__(/*! ./handlers.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/handlers.js\");\n\n/**\n * Add an instrumentation handler for when a console.xxx method is called.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addConsoleInstrumentationHandler(handler) {\n  const type = 'console';\n  handlers.addHandler(type, handler);\n  handlers.maybeInstrument(type, instrumentConsole);\n}\n\nfunction instrumentConsole() {\n  if (!('console' in worldwide.GLOBAL_OBJ)) {\n    return;\n  }\n\n  logger.CONSOLE_LEVELS.forEach(function (level) {\n    if (!(level in worldwide.GLOBAL_OBJ.console)) {\n      return;\n    }\n\n    object.fill(worldwide.GLOBAL_OBJ.console, level, function (originalConsoleMethod) {\n      logger.originalConsoleMethods[level] = originalConsoleMethod;\n\n      return function (...args) {\n        const handlerData = { args, level };\n        handlers.triggerHandlers('console', handlerData);\n\n        const log = logger.originalConsoleMethods[level];\n        log && log.apply(worldwide.GLOBAL_OBJ.console, args);\n      };\n    });\n  });\n}\n\nexports.addConsoleInstrumentationHandler = addConsoleInstrumentationHandler;\n//# sourceMappingURL=console.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2luc3RydW1lbnQvY29uc29sZS5qcyIsIm1hcHBpbmdzIjoiQUFBQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7O0FBRTdELGVBQWUsbUJBQU8sQ0FBQyxvSEFBYztBQUNyQyxlQUFlLG1CQUFPLENBQUMsb0hBQWM7QUFDckMsa0JBQWtCLG1CQUFPLENBQUMsMEhBQWlCO0FBQzNDLGlCQUFpQixtQkFBTyxDQUFDLGtJQUFlOztBQUV4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSw4QkFBOEI7QUFDOUI7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDs7QUFFQSx3Q0FBd0M7QUFDeEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0Zm9saW8tcHJvamVjdC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2VudHJ5K3V0aWxzQDguMTcuMC9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9idWlsZC9janMvaW5zdHJ1bWVudC9jb25zb2xlLmpzPzEwNjgiXSwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxuY29uc3QgbG9nZ2VyID0gcmVxdWlyZSgnLi4vbG9nZ2VyLmpzJyk7XG5jb25zdCBvYmplY3QgPSByZXF1aXJlKCcuLi9vYmplY3QuanMnKTtcbmNvbnN0IHdvcmxkd2lkZSA9IHJlcXVpcmUoJy4uL3dvcmxkd2lkZS5qcycpO1xuY29uc3QgaGFuZGxlcnMgPSByZXF1aXJlKCcuL2hhbmRsZXJzLmpzJyk7XG5cbi8qKlxuICogQWRkIGFuIGluc3RydW1lbnRhdGlvbiBoYW5kbGVyIGZvciB3aGVuIGEgY29uc29sZS54eHggbWV0aG9kIGlzIGNhbGxlZC5cbiAqXG4gKiBVc2UgYXQgeW91ciBvd24gcmlzaywgdGhpcyBtaWdodCBicmVhayB3aXRob3V0IGNoYW5nZWxvZyBub3RpY2UsIG9ubHkgdXNlZCBpbnRlcm5hbGx5LlxuICogQGhpZGRlblxuICovXG5mdW5jdGlvbiBhZGRDb25zb2xlSW5zdHJ1bWVudGF0aW9uSGFuZGxlcihoYW5kbGVyKSB7XG4gIGNvbnN0IHR5cGUgPSAnY29uc29sZSc7XG4gIGhhbmRsZXJzLmFkZEhhbmRsZXIodHlwZSwgaGFuZGxlcik7XG4gIGhhbmRsZXJzLm1heWJlSW5zdHJ1bWVudCh0eXBlLCBpbnN0cnVtZW50Q29uc29sZSk7XG59XG5cbmZ1bmN0aW9uIGluc3RydW1lbnRDb25zb2xlKCkge1xuICBpZiAoISgnY29uc29sZScgaW4gd29ybGR3aWRlLkdMT0JBTF9PQkopKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgbG9nZ2VyLkNPTlNPTEVfTEVWRUxTLmZvckVhY2goZnVuY3Rpb24gKGxldmVsKSB7XG4gICAgaWYgKCEobGV2ZWwgaW4gd29ybGR3aWRlLkdMT0JBTF9PQkouY29uc29sZSkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBvYmplY3QuZmlsbCh3b3JsZHdpZGUuR0xPQkFMX09CSi5jb25zb2xlLCBsZXZlbCwgZnVuY3Rpb24gKG9yaWdpbmFsQ29uc29sZU1ldGhvZCkge1xuICAgICAgbG9nZ2VyLm9yaWdpbmFsQ29uc29sZU1ldGhvZHNbbGV2ZWxdID0gb3JpZ2luYWxDb25zb2xlTWV0aG9kO1xuXG4gICAgICByZXR1cm4gZnVuY3Rpb24gKC4uLmFyZ3MpIHtcbiAgICAgICAgY29uc3QgaGFuZGxlckRhdGEgPSB7IGFyZ3MsIGxldmVsIH07XG4gICAgICAgIGhhbmRsZXJzLnRyaWdnZXJIYW5kbGVycygnY29uc29sZScsIGhhbmRsZXJEYXRhKTtcblxuICAgICAgICBjb25zdCBsb2cgPSBsb2dnZXIub3JpZ2luYWxDb25zb2xlTWV0aG9kc1tsZXZlbF07XG4gICAgICAgIGxvZyAmJiBsb2cuYXBwbHkod29ybGR3aWRlLkdMT0JBTF9PQkouY29uc29sZSwgYXJncyk7XG4gICAgICB9O1xuICAgIH0pO1xuICB9KTtcbn1cblxuZXhwb3J0cy5hZGRDb25zb2xlSW5zdHJ1bWVudGF0aW9uSGFuZGxlciA9IGFkZENvbnNvbGVJbnN0cnVtZW50YXRpb25IYW5kbGVyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uc29sZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/console.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/fetch.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/fetch.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst is = __webpack_require__(/*! ../is.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/is.js\");\nconst object = __webpack_require__(/*! ../object.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/object.js\");\nconst supports = __webpack_require__(/*! ../supports.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/supports.js\");\nconst time = __webpack_require__(/*! ../time.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/time.js\");\nconst worldwide = __webpack_require__(/*! ../worldwide.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/worldwide.js\");\nconst handlers = __webpack_require__(/*! ./handlers.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/handlers.js\");\n\n/**\n * Add an instrumentation handler for when a fetch request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addFetchInstrumentationHandler(handler) {\n  const type = 'fetch';\n  handlers.addHandler(type, handler);\n  handlers.maybeInstrument(type, instrumentFetch);\n}\n\nfunction instrumentFetch() {\n  if (!supports.supportsNativeFetch()) {\n    return;\n  }\n\n  object.fill(worldwide.GLOBAL_OBJ, 'fetch', function (originalFetch) {\n    return function (...args) {\n      const { method, url } = parseFetchArgs(args);\n\n      const handlerData = {\n        args,\n        fetchData: {\n          method,\n          url,\n        },\n        startTimestamp: time.timestampInSeconds() * 1000,\n      };\n\n      handlers.triggerHandlers('fetch', {\n        ...handlerData,\n      });\n\n      // We capture the stack right here and not in the Promise error callback because Safari (and probably other\n      // browsers too) will wipe the stack trace up to this point, only leaving us with this file which is useless.\n\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n      //       it means the error, that was caused by your fetch call did not\n      //       have a stack trace, so the SDK backfilled the stack trace so\n      //       you can see which fetch call failed.\n      const virtualStackTrace = new Error().stack;\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return originalFetch.apply(worldwide.GLOBAL_OBJ, args).then(\n        (response) => {\n          const finishedHandlerData = {\n            ...handlerData,\n            endTimestamp: time.timestampInSeconds() * 1000,\n            response,\n          };\n\n          handlers.triggerHandlers('fetch', finishedHandlerData);\n          return response;\n        },\n        (error) => {\n          const erroredHandlerData = {\n            ...handlerData,\n            endTimestamp: time.timestampInSeconds() * 1000,\n            error,\n          };\n\n          handlers.triggerHandlers('fetch', erroredHandlerData);\n\n          if (is.isError(error) && error.stack === undefined) {\n            // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n            //       it means the error, that was caused by your fetch call did not\n            //       have a stack trace, so the SDK backfilled the stack trace so\n            //       you can see which fetch call failed.\n            error.stack = virtualStackTrace;\n            object.addNonEnumerableProperty(error, 'framesToPop', 1);\n          }\n\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n          //       it means the sentry.javascript SDK caught an error invoking your application code.\n          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n          throw error;\n        },\n      );\n    };\n  });\n}\n\nfunction hasProp(obj, prop) {\n  return !!obj && typeof obj === 'object' && !!(obj )[prop];\n}\n\nfunction getUrlFromResource(resource) {\n  if (typeof resource === 'string') {\n    return resource;\n  }\n\n  if (!resource) {\n    return '';\n  }\n\n  if (hasProp(resource, 'url')) {\n    return resource.url;\n  }\n\n  if (resource.toString) {\n    return resource.toString();\n  }\n\n  return '';\n}\n\n/**\n * Parses the fetch arguments to find the used Http method and the url of the request.\n * Exported for tests only.\n */\nfunction parseFetchArgs(fetchArgs) {\n  if (fetchArgs.length === 0) {\n    return { method: 'GET', url: '' };\n  }\n\n  if (fetchArgs.length === 2) {\n    const [url, options] = fetchArgs ;\n\n    return {\n      url: getUrlFromResource(url),\n      method: hasProp(options, 'method') ? String(options.method).toUpperCase() : 'GET',\n    };\n  }\n\n  const arg = fetchArgs[0];\n  return {\n    url: getUrlFromResource(arg ),\n    method: hasProp(arg, 'method') ? String(arg.method).toUpperCase() : 'GET',\n  };\n}\n\nexports.addFetchInstrumentationHandler = addFetchInstrumentationHandler;\nexports.parseFetchArgs = parseFetchArgs;\n//# sourceMappingURL=fetch.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2luc3RydW1lbnQvZmV0Y2guanMiLCJtYXBwaW5ncyI6IkFBQUEsOENBQTZDLEVBQUUsYUFBYSxFQUFDOztBQUU3RCxXQUFXLG1CQUFPLENBQUMsNEdBQVU7QUFDN0IsZUFBZSxtQkFBTyxDQUFDLG9IQUFjO0FBQ3JDLGlCQUFpQixtQkFBTyxDQUFDLHdIQUFnQjtBQUN6QyxhQUFhLG1CQUFPLENBQUMsZ0hBQVk7QUFDakMsa0JBQWtCLG1CQUFPLENBQUMsMEhBQWlCO0FBQzNDLGlCQUFpQixtQkFBTyxDQUFDLGtJQUFlOztBQUV4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsY0FBYyxjQUFjOztBQUU1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE9BQU87O0FBRVA7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHNDQUFzQztBQUN0QyxzQkFBc0I7QUFDdEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0Zm9saW8tcHJvamVjdC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2VudHJ5K3V0aWxzQDguMTcuMC9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9idWlsZC9janMvaW5zdHJ1bWVudC9mZXRjaC5qcz8zNzNkIl0sInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG5cbmNvbnN0IGlzID0gcmVxdWlyZSgnLi4vaXMuanMnKTtcbmNvbnN0IG9iamVjdCA9IHJlcXVpcmUoJy4uL29iamVjdC5qcycpO1xuY29uc3Qgc3VwcG9ydHMgPSByZXF1aXJlKCcuLi9zdXBwb3J0cy5qcycpO1xuY29uc3QgdGltZSA9IHJlcXVpcmUoJy4uL3RpbWUuanMnKTtcbmNvbnN0IHdvcmxkd2lkZSA9IHJlcXVpcmUoJy4uL3dvcmxkd2lkZS5qcycpO1xuY29uc3QgaGFuZGxlcnMgPSByZXF1aXJlKCcuL2hhbmRsZXJzLmpzJyk7XG5cbi8qKlxuICogQWRkIGFuIGluc3RydW1lbnRhdGlvbiBoYW5kbGVyIGZvciB3aGVuIGEgZmV0Y2ggcmVxdWVzdCBoYXBwZW5zLlxuICogVGhlIGhhbmRsZXIgZnVuY3Rpb24gaXMgY2FsbGVkIG9uY2Ugd2hlbiB0aGUgcmVxdWVzdCBzdGFydHMgYW5kIG9uY2Ugd2hlbiBpdCBlbmRzLFxuICogd2hpY2ggY2FuIGJlIGlkZW50aWZpZWQgYnkgY2hlY2tpbmcgaWYgaXQgaGFzIGFuIGBlbmRUaW1lc3RhbXBgLlxuICpcbiAqIFVzZSBhdCB5b3VyIG93biByaXNrLCB0aGlzIG1pZ2h0IGJyZWFrIHdpdGhvdXQgY2hhbmdlbG9nIG5vdGljZSwgb25seSB1c2VkIGludGVybmFsbHkuXG4gKiBAaGlkZGVuXG4gKi9cbmZ1bmN0aW9uIGFkZEZldGNoSW5zdHJ1bWVudGF0aW9uSGFuZGxlcihoYW5kbGVyKSB7XG4gIGNvbnN0IHR5cGUgPSAnZmV0Y2gnO1xuICBoYW5kbGVycy5hZGRIYW5kbGVyKHR5cGUsIGhhbmRsZXIpO1xuICBoYW5kbGVycy5tYXliZUluc3RydW1lbnQodHlwZSwgaW5zdHJ1bWVudEZldGNoKTtcbn1cblxuZnVuY3Rpb24gaW5zdHJ1bWVudEZldGNoKCkge1xuICBpZiAoIXN1cHBvcnRzLnN1cHBvcnRzTmF0aXZlRmV0Y2goKSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIG9iamVjdC5maWxsKHdvcmxkd2lkZS5HTE9CQUxfT0JKLCAnZmV0Y2gnLCBmdW5jdGlvbiAob3JpZ2luYWxGZXRjaCkge1xuICAgIHJldHVybiBmdW5jdGlvbiAoLi4uYXJncykge1xuICAgICAgY29uc3QgeyBtZXRob2QsIHVybCB9ID0gcGFyc2VGZXRjaEFyZ3MoYXJncyk7XG5cbiAgICAgIGNvbnN0IGhhbmRsZXJEYXRhID0ge1xuICAgICAgICBhcmdzLFxuICAgICAgICBmZXRjaERhdGE6IHtcbiAgICAgICAgICBtZXRob2QsXG4gICAgICAgICAgdXJsLFxuICAgICAgICB9LFxuICAgICAgICBzdGFydFRpbWVzdGFtcDogdGltZS50aW1lc3RhbXBJblNlY29uZHMoKSAqIDEwMDAsXG4gICAgICB9O1xuXG4gICAgICBoYW5kbGVycy50cmlnZ2VySGFuZGxlcnMoJ2ZldGNoJywge1xuICAgICAgICAuLi5oYW5kbGVyRGF0YSxcbiAgICAgIH0pO1xuXG4gICAgICAvLyBXZSBjYXB0dXJlIHRoZSBzdGFjayByaWdodCBoZXJlIGFuZCBub3QgaW4gdGhlIFByb21pc2UgZXJyb3IgY2FsbGJhY2sgYmVjYXVzZSBTYWZhcmkgKGFuZCBwcm9iYWJseSBvdGhlclxuICAgICAgLy8gYnJvd3NlcnMgdG9vKSB3aWxsIHdpcGUgdGhlIHN0YWNrIHRyYWNlIHVwIHRvIHRoaXMgcG9pbnQsIG9ubHkgbGVhdmluZyB1cyB3aXRoIHRoaXMgZmlsZSB3aGljaCBpcyB1c2VsZXNzLlxuXG4gICAgICAvLyBOT1RFOiBJZiB5b3UgYXJlIGEgU2VudHJ5IHVzZXIsIGFuZCB5b3UgYXJlIHNlZWluZyB0aGlzIHN0YWNrIGZyYW1lLFxuICAgICAgLy8gICAgICAgaXQgbWVhbnMgdGhlIGVycm9yLCB0aGF0IHdhcyBjYXVzZWQgYnkgeW91ciBmZXRjaCBjYWxsIGRpZCBub3RcbiAgICAgIC8vICAgICAgIGhhdmUgYSBzdGFjayB0cmFjZSwgc28gdGhlIFNESyBiYWNrZmlsbGVkIHRoZSBzdGFjayB0cmFjZSBzb1xuICAgICAgLy8gICAgICAgeW91IGNhbiBzZWUgd2hpY2ggZmV0Y2ggY2FsbCBmYWlsZWQuXG4gICAgICBjb25zdCB2aXJ0dWFsU3RhY2tUcmFjZSA9IG5ldyBFcnJvcigpLnN0YWNrO1xuXG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVuc2FmZS1tZW1iZXItYWNjZXNzXG4gICAgICByZXR1cm4gb3JpZ2luYWxGZXRjaC5hcHBseSh3b3JsZHdpZGUuR0xPQkFMX09CSiwgYXJncykudGhlbihcbiAgICAgICAgKHJlc3BvbnNlKSA9PiB7XG4gICAgICAgICAgY29uc3QgZmluaXNoZWRIYW5kbGVyRGF0YSA9IHtcbiAgICAgICAgICAgIC4uLmhhbmRsZXJEYXRhLFxuICAgICAgICAgICAgZW5kVGltZXN0YW1wOiB0aW1lLnRpbWVzdGFtcEluU2Vjb25kcygpICogMTAwMCxcbiAgICAgICAgICAgIHJlc3BvbnNlLFxuICAgICAgICAgIH07XG5cbiAgICAgICAgICBoYW5kbGVycy50cmlnZ2VySGFuZGxlcnMoJ2ZldGNoJywgZmluaXNoZWRIYW5kbGVyRGF0YSk7XG4gICAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xuICAgICAgICB9LFxuICAgICAgICAoZXJyb3IpID0+IHtcbiAgICAgICAgICBjb25zdCBlcnJvcmVkSGFuZGxlckRhdGEgPSB7XG4gICAgICAgICAgICAuLi5oYW5kbGVyRGF0YSxcbiAgICAgICAgICAgIGVuZFRpbWVzdGFtcDogdGltZS50aW1lc3RhbXBJblNlY29uZHMoKSAqIDEwMDAsXG4gICAgICAgICAgICBlcnJvcixcbiAgICAgICAgICB9O1xuXG4gICAgICAgICAgaGFuZGxlcnMudHJpZ2dlckhhbmRsZXJzKCdmZXRjaCcsIGVycm9yZWRIYW5kbGVyRGF0YSk7XG5cbiAgICAgICAgICBpZiAoaXMuaXNFcnJvcihlcnJvcikgJiYgZXJyb3Iuc3RhY2sgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgLy8gTk9URTogSWYgeW91IGFyZSBhIFNlbnRyeSB1c2VyLCBhbmQgeW91IGFyZSBzZWVpbmcgdGhpcyBzdGFjayBmcmFtZSxcbiAgICAgICAgICAgIC8vICAgICAgIGl0IG1lYW5zIHRoZSBlcnJvciwgdGhhdCB3YXMgY2F1c2VkIGJ5IHlvdXIgZmV0Y2ggY2FsbCBkaWQgbm90XG4gICAgICAgICAgICAvLyAgICAgICBoYXZlIGEgc3RhY2sgdHJhY2UsIHNvIHRoZSBTREsgYmFja2ZpbGxlZCB0aGUgc3RhY2sgdHJhY2Ugc29cbiAgICAgICAgICAgIC8vICAgICAgIHlvdSBjYW4gc2VlIHdoaWNoIGZldGNoIGNhbGwgZmFpbGVkLlxuICAgICAgICAgICAgZXJyb3Iuc3RhY2sgPSB2aXJ0dWFsU3RhY2tUcmFjZTtcbiAgICAgICAgICAgIG9iamVjdC5hZGROb25FbnVtZXJhYmxlUHJvcGVydHkoZXJyb3IsICdmcmFtZXNUb1BvcCcsIDEpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIC8vIE5PVEU6IElmIHlvdSBhcmUgYSBTZW50cnkgdXNlciwgYW5kIHlvdSBhcmUgc2VlaW5nIHRoaXMgc3RhY2sgZnJhbWUsXG4gICAgICAgICAgLy8gICAgICAgaXQgbWVhbnMgdGhlIHNlbnRyeS5qYXZhc2NyaXB0IFNESyBjYXVnaHQgYW4gZXJyb3IgaW52b2tpbmcgeW91ciBhcHBsaWNhdGlvbiBjb2RlLlxuICAgICAgICAgIC8vICAgICAgIFRoaXMgaXMgZXhwZWN0ZWQgYmVoYXZpb3IgYW5kIE5PVCBpbmRpY2F0aXZlIG9mIGEgYnVnIHdpdGggc2VudHJ5LmphdmFzY3JpcHQuXG4gICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgIH0sXG4gICAgICApO1xuICAgIH07XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBoYXNQcm9wKG9iaiwgcHJvcCkge1xuICByZXR1cm4gISFvYmogJiYgdHlwZW9mIG9iaiA9PT0gJ29iamVjdCcgJiYgISEob2JqIClbcHJvcF07XG59XG5cbmZ1bmN0aW9uIGdldFVybEZyb21SZXNvdXJjZShyZXNvdXJjZSkge1xuICBpZiAodHlwZW9mIHJlc291cmNlID09PSAnc3RyaW5nJykge1xuICAgIHJldHVybiByZXNvdXJjZTtcbiAgfVxuXG4gIGlmICghcmVzb3VyY2UpIHtcbiAgICByZXR1cm4gJyc7XG4gIH1cblxuICBpZiAoaGFzUHJvcChyZXNvdXJjZSwgJ3VybCcpKSB7XG4gICAgcmV0dXJuIHJlc291cmNlLnVybDtcbiAgfVxuXG4gIGlmIChyZXNvdXJjZS50b1N0cmluZykge1xuICAgIHJldHVybiByZXNvdXJjZS50b1N0cmluZygpO1xuICB9XG5cbiAgcmV0dXJuICcnO1xufVxuXG4vKipcbiAqIFBhcnNlcyB0aGUgZmV0Y2ggYXJndW1lbnRzIHRvIGZpbmQgdGhlIHVzZWQgSHR0cCBtZXRob2QgYW5kIHRoZSB1cmwgb2YgdGhlIHJlcXVlc3QuXG4gKiBFeHBvcnRlZCBmb3IgdGVzdHMgb25seS5cbiAqL1xuZnVuY3Rpb24gcGFyc2VGZXRjaEFyZ3MoZmV0Y2hBcmdzKSB7XG4gIGlmIChmZXRjaEFyZ3MubGVuZ3RoID09PSAwKSB7XG4gICAgcmV0dXJuIHsgbWV0aG9kOiAnR0VUJywgdXJsOiAnJyB9O1xuICB9XG5cbiAgaWYgKGZldGNoQXJncy5sZW5ndGggPT09IDIpIHtcbiAgICBjb25zdCBbdXJsLCBvcHRpb25zXSA9IGZldGNoQXJncyA7XG5cbiAgICByZXR1cm4ge1xuICAgICAgdXJsOiBnZXRVcmxGcm9tUmVzb3VyY2UodXJsKSxcbiAgICAgIG1ldGhvZDogaGFzUHJvcChvcHRpb25zLCAnbWV0aG9kJykgPyBTdHJpbmcob3B0aW9ucy5tZXRob2QpLnRvVXBwZXJDYXNlKCkgOiAnR0VUJyxcbiAgICB9O1xuICB9XG5cbiAgY29uc3QgYXJnID0gZmV0Y2hBcmdzWzBdO1xuICByZXR1cm4ge1xuICAgIHVybDogZ2V0VXJsRnJvbVJlc291cmNlKGFyZyApLFxuICAgIG1ldGhvZDogaGFzUHJvcChhcmcsICdtZXRob2QnKSA/IFN0cmluZyhhcmcubWV0aG9kKS50b1VwcGVyQ2FzZSgpIDogJ0dFVCcsXG4gIH07XG59XG5cbmV4cG9ydHMuYWRkRmV0Y2hJbnN0cnVtZW50YXRpb25IYW5kbGVyID0gYWRkRmV0Y2hJbnN0cnVtZW50YXRpb25IYW5kbGVyO1xuZXhwb3J0cy5wYXJzZUZldGNoQXJncyA9IHBhcnNlRmV0Y2hBcmdzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZmV0Y2guanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/fetch.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/globalError.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/globalError.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst worldwide = __webpack_require__(/*! ../worldwide.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/worldwide.js\");\nconst handlers = __webpack_require__(/*! ./handlers.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/handlers.js\");\n\nlet _oldOnErrorHandler = null;\n\n/**\n * Add an instrumentation handler for when an error is captured by the global error handler.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addGlobalErrorInstrumentationHandler(handler) {\n  const type = 'error';\n  handlers.addHandler(type, handler);\n  handlers.maybeInstrument(type, instrumentError);\n}\n\nfunction instrumentError() {\n  _oldOnErrorHandler = worldwide.GLOBAL_OBJ.onerror;\n\n  worldwide.GLOBAL_OBJ.onerror = function (\n    msg,\n    url,\n    line,\n    column,\n    error,\n  ) {\n    const handlerData = {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    };\n    handlers.triggerHandlers('error', handlerData);\n\n    if (_oldOnErrorHandler && !_oldOnErrorHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n\n  worldwide.GLOBAL_OBJ.onerror.__SENTRY_INSTRUMENTED__ = true;\n}\n\nexports.addGlobalErrorInstrumentationHandler = addGlobalErrorInstrumentationHandler;\n//# sourceMappingURL=globalError.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2luc3RydW1lbnQvZ2xvYmFsRXJyb3IuanMiLCJtYXBwaW5ncyI6IkFBQUEsOENBQTZDLEVBQUUsYUFBYSxFQUFDOztBQUU3RCxrQkFBa0IsbUJBQU8sQ0FBQywwSEFBaUI7QUFDM0MsaUJBQWlCLG1CQUFPLENBQUMsa0lBQWU7O0FBRXhDOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBLDRDQUE0QztBQUM1QyIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9pbnN0cnVtZW50L2dsb2JhbEVycm9yLmpzPzYwMWMiXSwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxuY29uc3Qgd29ybGR3aWRlID0gcmVxdWlyZSgnLi4vd29ybGR3aWRlLmpzJyk7XG5jb25zdCBoYW5kbGVycyA9IHJlcXVpcmUoJy4vaGFuZGxlcnMuanMnKTtcblxubGV0IF9vbGRPbkVycm9ySGFuZGxlciA9IG51bGw7XG5cbi8qKlxuICogQWRkIGFuIGluc3RydW1lbnRhdGlvbiBoYW5kbGVyIGZvciB3aGVuIGFuIGVycm9yIGlzIGNhcHR1cmVkIGJ5IHRoZSBnbG9iYWwgZXJyb3IgaGFuZGxlci5cbiAqXG4gKiBVc2UgYXQgeW91ciBvd24gcmlzaywgdGhpcyBtaWdodCBicmVhayB3aXRob3V0IGNoYW5nZWxvZyBub3RpY2UsIG9ubHkgdXNlZCBpbnRlcm5hbGx5LlxuICogQGhpZGRlblxuICovXG5mdW5jdGlvbiBhZGRHbG9iYWxFcnJvckluc3RydW1lbnRhdGlvbkhhbmRsZXIoaGFuZGxlcikge1xuICBjb25zdCB0eXBlID0gJ2Vycm9yJztcbiAgaGFuZGxlcnMuYWRkSGFuZGxlcih0eXBlLCBoYW5kbGVyKTtcbiAgaGFuZGxlcnMubWF5YmVJbnN0cnVtZW50KHR5cGUsIGluc3RydW1lbnRFcnJvcik7XG59XG5cbmZ1bmN0aW9uIGluc3RydW1lbnRFcnJvcigpIHtcbiAgX29sZE9uRXJyb3JIYW5kbGVyID0gd29ybGR3aWRlLkdMT0JBTF9PQkoub25lcnJvcjtcblxuICB3b3JsZHdpZGUuR0xPQkFMX09CSi5vbmVycm9yID0gZnVuY3Rpb24gKFxuICAgIG1zZyxcbiAgICB1cmwsXG4gICAgbGluZSxcbiAgICBjb2x1bW4sXG4gICAgZXJyb3IsXG4gICkge1xuICAgIGNvbnN0IGhhbmRsZXJEYXRhID0ge1xuICAgICAgY29sdW1uLFxuICAgICAgZXJyb3IsXG4gICAgICBsaW5lLFxuICAgICAgbXNnLFxuICAgICAgdXJsLFxuICAgIH07XG4gICAgaGFuZGxlcnMudHJpZ2dlckhhbmRsZXJzKCdlcnJvcicsIGhhbmRsZXJEYXRhKTtcblxuICAgIGlmIChfb2xkT25FcnJvckhhbmRsZXIgJiYgIV9vbGRPbkVycm9ySGFuZGxlci5fX1NFTlRSWV9MT0FERVJfXykge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1yZXN0LXBhcmFtc1xuICAgICAgcmV0dXJuIF9vbGRPbkVycm9ySGFuZGxlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIH1cblxuICAgIHJldHVybiBmYWxzZTtcbiAgfTtcblxuICB3b3JsZHdpZGUuR0xPQkFMX09CSi5vbmVycm9yLl9fU0VOVFJZX0lOU1RSVU1FTlRFRF9fID0gdHJ1ZTtcbn1cblxuZXhwb3J0cy5hZGRHbG9iYWxFcnJvckluc3RydW1lbnRhdGlvbkhhbmRsZXIgPSBhZGRHbG9iYWxFcnJvckluc3RydW1lbnRhdGlvbkhhbmRsZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nbG9iYWxFcnJvci5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/globalError.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/globalUnhandledRejection.js":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/globalUnhandledRejection.js ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst worldwide = __webpack_require__(/*! ../worldwide.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/worldwide.js\");\nconst handlers = __webpack_require__(/*! ./handlers.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/handlers.js\");\n\nlet _oldOnUnhandledRejectionHandler = null;\n\n/**\n * Add an instrumentation handler for when an unhandled promise rejection is captured.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addGlobalUnhandledRejectionInstrumentationHandler(\n  handler,\n) {\n  const type = 'unhandledrejection';\n  handlers.addHandler(type, handler);\n  handlers.maybeInstrument(type, instrumentUnhandledRejection);\n}\n\nfunction instrumentUnhandledRejection() {\n  _oldOnUnhandledRejectionHandler = worldwide.GLOBAL_OBJ.onunhandledrejection;\n\n  worldwide.GLOBAL_OBJ.onunhandledrejection = function (e) {\n    const handlerData = e;\n    handlers.triggerHandlers('unhandledrejection', handlerData);\n\n    if (_oldOnUnhandledRejectionHandler && !_oldOnUnhandledRejectionHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n\n  worldwide.GLOBAL_OBJ.onunhandledrejection.__SENTRY_INSTRUMENTED__ = true;\n}\n\nexports.addGlobalUnhandledRejectionInstrumentationHandler = addGlobalUnhandledRejectionInstrumentationHandler;\n//# sourceMappingURL=globalUnhandledRejection.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2luc3RydW1lbnQvZ2xvYmFsVW5oYW5kbGVkUmVqZWN0aW9uLmpzIiwibWFwcGluZ3MiOiJBQUFBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQzs7QUFFN0Qsa0JBQWtCLG1CQUFPLENBQUMsMEhBQWlCO0FBQzNDLGlCQUFpQixtQkFBTyxDQUFDLGtJQUFlOztBQUV4Qzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEseURBQXlEO0FBQ3pEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLXByb2plY3QvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2luc3RydW1lbnQvZ2xvYmFsVW5oYW5kbGVkUmVqZWN0aW9uLmpzP2VkOTciXSwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxuY29uc3Qgd29ybGR3aWRlID0gcmVxdWlyZSgnLi4vd29ybGR3aWRlLmpzJyk7XG5jb25zdCBoYW5kbGVycyA9IHJlcXVpcmUoJy4vaGFuZGxlcnMuanMnKTtcblxubGV0IF9vbGRPblVuaGFuZGxlZFJlamVjdGlvbkhhbmRsZXIgPSBudWxsO1xuXG4vKipcbiAqIEFkZCBhbiBpbnN0cnVtZW50YXRpb24gaGFuZGxlciBmb3Igd2hlbiBhbiB1bmhhbmRsZWQgcHJvbWlzZSByZWplY3Rpb24gaXMgY2FwdHVyZWQuXG4gKlxuICogVXNlIGF0IHlvdXIgb3duIHJpc2ssIHRoaXMgbWlnaHQgYnJlYWsgd2l0aG91dCBjaGFuZ2Vsb2cgbm90aWNlLCBvbmx5IHVzZWQgaW50ZXJuYWxseS5cbiAqIEBoaWRkZW5cbiAqL1xuZnVuY3Rpb24gYWRkR2xvYmFsVW5oYW5kbGVkUmVqZWN0aW9uSW5zdHJ1bWVudGF0aW9uSGFuZGxlcihcbiAgaGFuZGxlcixcbikge1xuICBjb25zdCB0eXBlID0gJ3VuaGFuZGxlZHJlamVjdGlvbic7XG4gIGhhbmRsZXJzLmFkZEhhbmRsZXIodHlwZSwgaGFuZGxlcik7XG4gIGhhbmRsZXJzLm1heWJlSW5zdHJ1bWVudCh0eXBlLCBpbnN0cnVtZW50VW5oYW5kbGVkUmVqZWN0aW9uKTtcbn1cblxuZnVuY3Rpb24gaW5zdHJ1bWVudFVuaGFuZGxlZFJlamVjdGlvbigpIHtcbiAgX29sZE9uVW5oYW5kbGVkUmVqZWN0aW9uSGFuZGxlciA9IHdvcmxkd2lkZS5HTE9CQUxfT0JKLm9udW5oYW5kbGVkcmVqZWN0aW9uO1xuXG4gIHdvcmxkd2lkZS5HTE9CQUxfT0JKLm9udW5oYW5kbGVkcmVqZWN0aW9uID0gZnVuY3Rpb24gKGUpIHtcbiAgICBjb25zdCBoYW5kbGVyRGF0YSA9IGU7XG4gICAgaGFuZGxlcnMudHJpZ2dlckhhbmRsZXJzKCd1bmhhbmRsZWRyZWplY3Rpb24nLCBoYW5kbGVyRGF0YSk7XG5cbiAgICBpZiAoX29sZE9uVW5oYW5kbGVkUmVqZWN0aW9uSGFuZGxlciAmJiAhX29sZE9uVW5oYW5kbGVkUmVqZWN0aW9uSGFuZGxlci5fX1NFTlRSWV9MT0FERVJfXykge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1yZXN0LXBhcmFtc1xuICAgICAgcmV0dXJuIF9vbGRPblVuaGFuZGxlZFJlamVjdGlvbkhhbmRsZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfTtcblxuICB3b3JsZHdpZGUuR0xPQkFMX09CSi5vbnVuaGFuZGxlZHJlamVjdGlvbi5fX1NFTlRSWV9JTlNUUlVNRU5URURfXyA9IHRydWU7XG59XG5cbmV4cG9ydHMuYWRkR2xvYmFsVW5oYW5kbGVkUmVqZWN0aW9uSW5zdHJ1bWVudGF0aW9uSGFuZGxlciA9IGFkZEdsb2JhbFVuaGFuZGxlZFJlamVjdGlvbkluc3RydW1lbnRhdGlvbkhhbmRsZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nbG9iYWxVbmhhbmRsZWRSZWplY3Rpb24uanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/globalUnhandledRejection.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/handlers.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/handlers.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst debugBuild = __webpack_require__(/*! ../debug-build.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/debug-build.js\");\nconst logger = __webpack_require__(/*! ../logger.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/logger.js\");\nconst stacktrace = __webpack_require__(/*! ../stacktrace.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/stacktrace.js\");\n\n// We keep the handlers globally\nconst handlers = {};\nconst instrumented = {};\n\n/** Add a handler function. */\nfunction addHandler(type, handler) {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] ).push(handler);\n}\n\n/**\n * Reset all instrumentation handlers.\n * This can be used by tests to ensure we have a clean slate of instrumentation handlers.\n */\nfunction resetInstrumentationHandlers() {\n  Object.keys(handlers).forEach(key => {\n    handlers[key ] = undefined;\n  });\n}\n\n/** Maybe run an instrumentation function, unless it was already called. */\nfunction maybeInstrument(type, instrumentFn) {\n  if (!instrumented[type]) {\n    instrumentFn();\n    instrumented[type] = true;\n  }\n}\n\n/** Trigger handlers for a given instrumentation type. */\nfunction triggerHandlers(type, data) {\n  const typeHandlers = type && handlers[type];\n  if (!typeHandlers) {\n    return;\n  }\n\n  for (const handler of typeHandlers) {\n    try {\n      handler(data);\n    } catch (e) {\n      debugBuild.DEBUG_BUILD &&\n        logger.logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${stacktrace.getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\nexports.addHandler = addHandler;\nexports.maybeInstrument = maybeInstrument;\nexports.resetInstrumentationHandlers = resetInstrumentationHandlers;\nexports.triggerHandlers = triggerHandlers;\n//# sourceMappingURL=handlers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2luc3RydW1lbnQvaGFuZGxlcnMuanMiLCJtYXBwaW5ncyI6IkFBQUEsOENBQTZDLEVBQUUsYUFBYSxFQUFDOztBQUU3RCxtQkFBbUIsbUJBQU8sQ0FBQyw4SEFBbUI7QUFDOUMsZUFBZSxtQkFBTyxDQUFDLG9IQUFjO0FBQ3JDLG1CQUFtQixtQkFBTyxDQUFDLDRIQUFrQjs7QUFFN0M7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0Esb0VBQW9FLEtBQUssVUFBVSxvQ0FBb0M7QUFDdkg7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxrQkFBa0I7QUFDbEIsdUJBQXVCO0FBQ3ZCLG9DQUFvQztBQUNwQyx1QkFBdUI7QUFDdkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0Zm9saW8tcHJvamVjdC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2VudHJ5K3V0aWxzQDguMTcuMC9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9idWlsZC9janMvaW5zdHJ1bWVudC9oYW5kbGVycy5qcz9hYjYyIl0sInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG5cbmNvbnN0IGRlYnVnQnVpbGQgPSByZXF1aXJlKCcuLi9kZWJ1Zy1idWlsZC5qcycpO1xuY29uc3QgbG9nZ2VyID0gcmVxdWlyZSgnLi4vbG9nZ2VyLmpzJyk7XG5jb25zdCBzdGFja3RyYWNlID0gcmVxdWlyZSgnLi4vc3RhY2t0cmFjZS5qcycpO1xuXG4vLyBXZSBrZWVwIHRoZSBoYW5kbGVycyBnbG9iYWxseVxuY29uc3QgaGFuZGxlcnMgPSB7fTtcbmNvbnN0IGluc3RydW1lbnRlZCA9IHt9O1xuXG4vKiogQWRkIGEgaGFuZGxlciBmdW5jdGlvbi4gKi9cbmZ1bmN0aW9uIGFkZEhhbmRsZXIodHlwZSwgaGFuZGxlcikge1xuICBoYW5kbGVyc1t0eXBlXSA9IGhhbmRsZXJzW3R5cGVdIHx8IFtdO1xuICAoaGFuZGxlcnNbdHlwZV0gKS5wdXNoKGhhbmRsZXIpO1xufVxuXG4vKipcbiAqIFJlc2V0IGFsbCBpbnN0cnVtZW50YXRpb24gaGFuZGxlcnMuXG4gKiBUaGlzIGNhbiBiZSB1c2VkIGJ5IHRlc3RzIHRvIGVuc3VyZSB3ZSBoYXZlIGEgY2xlYW4gc2xhdGUgb2YgaW5zdHJ1bWVudGF0aW9uIGhhbmRsZXJzLlxuICovXG5mdW5jdGlvbiByZXNldEluc3RydW1lbnRhdGlvbkhhbmRsZXJzKCkge1xuICBPYmplY3Qua2V5cyhoYW5kbGVycykuZm9yRWFjaChrZXkgPT4ge1xuICAgIGhhbmRsZXJzW2tleSBdID0gdW5kZWZpbmVkO1xuICB9KTtcbn1cblxuLyoqIE1heWJlIHJ1biBhbiBpbnN0cnVtZW50YXRpb24gZnVuY3Rpb24sIHVubGVzcyBpdCB3YXMgYWxyZWFkeSBjYWxsZWQuICovXG5mdW5jdGlvbiBtYXliZUluc3RydW1lbnQodHlwZSwgaW5zdHJ1bWVudEZuKSB7XG4gIGlmICghaW5zdHJ1bWVudGVkW3R5cGVdKSB7XG4gICAgaW5zdHJ1bWVudEZuKCk7XG4gICAgaW5zdHJ1bWVudGVkW3R5cGVdID0gdHJ1ZTtcbiAgfVxufVxuXG4vKiogVHJpZ2dlciBoYW5kbGVycyBmb3IgYSBnaXZlbiBpbnN0cnVtZW50YXRpb24gdHlwZS4gKi9cbmZ1bmN0aW9uIHRyaWdnZXJIYW5kbGVycyh0eXBlLCBkYXRhKSB7XG4gIGNvbnN0IHR5cGVIYW5kbGVycyA9IHR5cGUgJiYgaGFuZGxlcnNbdHlwZV07XG4gIGlmICghdHlwZUhhbmRsZXJzKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgZm9yIChjb25zdCBoYW5kbGVyIG9mIHR5cGVIYW5kbGVycykge1xuICAgIHRyeSB7XG4gICAgICBoYW5kbGVyKGRhdGEpO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGRlYnVnQnVpbGQuREVCVUdfQlVJTEQgJiZcbiAgICAgICAgbG9nZ2VyLmxvZ2dlci5lcnJvcihcbiAgICAgICAgICBgRXJyb3Igd2hpbGUgdHJpZ2dlcmluZyBpbnN0cnVtZW50YXRpb24gaGFuZGxlci5cXG5UeXBlOiAke3R5cGV9XFxuTmFtZTogJHtzdGFja3RyYWNlLmdldEZ1bmN0aW9uTmFtZShoYW5kbGVyKX1cXG5FcnJvcjpgLFxuICAgICAgICAgIGUsXG4gICAgICAgICk7XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydHMuYWRkSGFuZGxlciA9IGFkZEhhbmRsZXI7XG5leHBvcnRzLm1heWJlSW5zdHJ1bWVudCA9IG1heWJlSW5zdHJ1bWVudDtcbmV4cG9ydHMucmVzZXRJbnN0cnVtZW50YXRpb25IYW5kbGVycyA9IHJlc2V0SW5zdHJ1bWVudGF0aW9uSGFuZGxlcnM7XG5leHBvcnRzLnRyaWdnZXJIYW5kbGVycyA9IHRyaWdnZXJIYW5kbGVycztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhhbmRsZXJzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/instrument/handlers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/is.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/is.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nconst objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isError(wat) {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n/**\n * Checks whether given value is an instance of the given built-in class.\n *\n * @param wat The value to be checked\n * @param className\n * @returns A boolean representing the result.\n */\nfunction isBuiltin(wat, className) {\n  return objectToString.call(wat) === `[object ${className}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isErrorEvent(wat) {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMError(wat) {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMException(wat) {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isString(wat) {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given string is parameterized\n * {@link isParameterizedString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isParameterizedString(wat) {\n  return (\n    typeof wat === 'object' &&\n    wat !== null &&\n    '__sentry_template_string__' in wat &&\n    '__sentry_template_values__' in wat\n  );\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPrimitive(wat) {\n  return wat === null || isParameterizedString(wat) || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal, or a class instance.\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPlainObject(wat) {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isEvent(wat) {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isElement(wat) {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isRegExp(wat) {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nfunction isThenable(wat) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isSyntheticEvent(wat) {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nfunction isInstanceOf(wat, base) {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n\n/**\n * Checks whether given value's type is a Vue ViewModel.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isVueViewModel(wat) {\n  // Not using Object.prototype.toString because in Vue 3 it would read the instance's Symbol(Symbol.toStringTag) property.\n  return !!(typeof wat === 'object' && wat !== null && ((wat ).__isVue || (wat )._isVue));\n}\n\nexports.isDOMError = isDOMError;\nexports.isDOMException = isDOMException;\nexports.isElement = isElement;\nexports.isError = isError;\nexports.isErrorEvent = isErrorEvent;\nexports.isEvent = isEvent;\nexports.isInstanceOf = isInstanceOf;\nexports.isParameterizedString = isParameterizedString;\nexports.isPlainObject = isPlainObject;\nexports.isPrimitive = isPrimitive;\nexports.isRegExp = isRegExp;\nexports.isString = isString;\nexports.isSyntheticEvent = isSyntheticEvent;\nexports.isThenable = isThenable;\nexports.isVueViewModel = isVueViewModel;\n//# sourceMappingURL=is.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/is.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/isBrowser.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/isBrowser.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst node = __webpack_require__(/*! ./node.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/node.js\");\nconst worldwide = __webpack_require__(/*! ./worldwide.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/worldwide.js\");\n\n/**\n * Returns true if we are in the browser.\n */\nfunction isBrowser() {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof window !== 'undefined' && (!node.isNodeEnv() || isElectronNodeRenderer());\n}\n\n// Electron renderers with nodeIntegration enabled are detected as Node.js so we specifically test for them\nfunction isElectronNodeRenderer() {\n  return (\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n    (worldwide.GLOBAL_OBJ ).process !== undefined && ((worldwide.GLOBAL_OBJ ).process ).type === 'renderer'\n  );\n}\n\nexports.isBrowser = isBrowser;\n//# sourceMappingURL=isBrowser.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2lzQnJvd3Nlci5qcyIsIm1hcHBpbmdzIjoiQUFBQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7O0FBRTdELGFBQWEsbUJBQU8sQ0FBQywrR0FBVztBQUNoQyxrQkFBa0IsbUJBQU8sQ0FBQyx5SEFBZ0I7O0FBRTFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGlCQUFpQjtBQUNqQiIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9pc0Jyb3dzZXIuanM/NDc5NSJdLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG5jb25zdCBub2RlID0gcmVxdWlyZSgnLi9ub2RlLmpzJyk7XG5jb25zdCB3b3JsZHdpZGUgPSByZXF1aXJlKCcuL3dvcmxkd2lkZS5qcycpO1xuXG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiB3ZSBhcmUgaW4gdGhlIGJyb3dzZXIuXG4gKi9cbmZ1bmN0aW9uIGlzQnJvd3NlcigpIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXJlc3RyaWN0ZWQtZ2xvYmFsc1xuICByZXR1cm4gdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgKCFub2RlLmlzTm9kZUVudigpIHx8IGlzRWxlY3Ryb25Ob2RlUmVuZGVyZXIoKSk7XG59XG5cbi8vIEVsZWN0cm9uIHJlbmRlcmVycyB3aXRoIG5vZGVJbnRlZ3JhdGlvbiBlbmFibGVkIGFyZSBkZXRlY3RlZCBhcyBOb2RlLmpzIHNvIHdlIHNwZWNpZmljYWxseSB0ZXN0IGZvciB0aGVtXG5mdW5jdGlvbiBpc0VsZWN0cm9uTm9kZVJlbmRlcmVyKCkge1xuICByZXR1cm4gKFxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLW1lbWJlci1hY2Nlc3MsIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbiAgICAod29ybGR3aWRlLkdMT0JBTF9PQkogKS5wcm9jZXNzICE9PSB1bmRlZmluZWQgJiYgKCh3b3JsZHdpZGUuR0xPQkFMX09CSiApLnByb2Nlc3MgKS50eXBlID09PSAncmVuZGVyZXInXG4gICk7XG59XG5cbmV4cG9ydHMuaXNCcm93c2VyID0gaXNCcm93c2VyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aXNCcm93c2VyLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/isBrowser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/logger.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/logger.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst debugBuild = __webpack_require__(/*! ./debug-build.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/debug-build.js\");\nconst worldwide = __webpack_require__(/*! ./worldwide.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/worldwide.js\");\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\nconst CONSOLE_LEVELS = [\n  'debug',\n  'info',\n  'warn',\n  'error',\n  'log',\n  'assert',\n  'trace',\n] ;\n\n/** This may be mutated by the console instrumentation. */\nconst originalConsoleMethods\n\n = {};\n\n/** JSDoc */\n\n/**\n * Temporarily disable sentry console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nfunction consoleSandbox(callback) {\n  if (!('console' in worldwide.GLOBAL_OBJ)) {\n    return callback();\n  }\n\n  const console = worldwide.GLOBAL_OBJ.console ;\n  const wrappedFuncs = {};\n\n  const wrappedLevels = Object.keys(originalConsoleMethods) ;\n\n  // Restore all wrapped console methods\n  wrappedLevels.forEach(level => {\n    const originalConsoleMethod = originalConsoleMethods[level] ;\n    wrappedFuncs[level] = console[level] ;\n    console[level] = originalConsoleMethod;\n  });\n\n  try {\n    return callback();\n  } finally {\n    // Revert restoration to wrapped state\n    wrappedLevels.forEach(level => {\n      console[level] = wrappedFuncs[level] ;\n    });\n  }\n}\n\nfunction makeLogger() {\n  let enabled = false;\n  const logger = {\n    enable: () => {\n      enabled = true;\n    },\n    disable: () => {\n      enabled = false;\n    },\n    isEnabled: () => enabled,\n  };\n\n  if (debugBuild.DEBUG_BUILD) {\n    CONSOLE_LEVELS.forEach(name => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      logger[name] = (...args) => {\n        if (enabled) {\n          consoleSandbox(() => {\n            worldwide.GLOBAL_OBJ.console[name](`${PREFIX}[${name}]:`, ...args);\n          });\n        }\n      };\n    });\n  } else {\n    CONSOLE_LEVELS.forEach(name => {\n      logger[name] = () => undefined;\n    });\n  }\n\n  return logger ;\n}\n\nconst logger = makeLogger();\n\nexports.CONSOLE_LEVELS = CONSOLE_LEVELS;\nexports.consoleSandbox = consoleSandbox;\nexports.logger = logger;\nexports.originalConsoleMethods = originalConsoleMethods;\n//# sourceMappingURL=logger.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2xvZ2dlci5qcyIsIm1hcHBpbmdzIjoiQUFBQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7O0FBRTdELG1CQUFtQixtQkFBTyxDQUFDLDZIQUFrQjtBQUM3QyxrQkFBa0IsbUJBQU8sQ0FBQyx5SEFBZ0I7O0FBRTFDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRCxPQUFPLEdBQUcsS0FBSztBQUNqRSxXQUFXO0FBQ1g7QUFDQTtBQUNBLEtBQUs7QUFDTCxJQUFJO0FBQ0o7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBOztBQUVBOztBQUVBLHNCQUFzQjtBQUN0QixzQkFBc0I7QUFDdEIsY0FBYztBQUNkLDhCQUE4QjtBQUM5QiIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9sb2dnZXIuanM/OTUxOSJdLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG5jb25zdCBkZWJ1Z0J1aWxkID0gcmVxdWlyZSgnLi9kZWJ1Zy1idWlsZC5qcycpO1xuY29uc3Qgd29ybGR3aWRlID0gcmVxdWlyZSgnLi93b3JsZHdpZGUuanMnKTtcblxuLyoqIFByZWZpeCBmb3IgbG9nZ2luZyBzdHJpbmdzICovXG5jb25zdCBQUkVGSVggPSAnU2VudHJ5IExvZ2dlciAnO1xuXG5jb25zdCBDT05TT0xFX0xFVkVMUyA9IFtcbiAgJ2RlYnVnJyxcbiAgJ2luZm8nLFxuICAnd2FybicsXG4gICdlcnJvcicsXG4gICdsb2cnLFxuICAnYXNzZXJ0JyxcbiAgJ3RyYWNlJyxcbl0gO1xuXG4vKiogVGhpcyBtYXkgYmUgbXV0YXRlZCBieSB0aGUgY29uc29sZSBpbnN0cnVtZW50YXRpb24uICovXG5jb25zdCBvcmlnaW5hbENvbnNvbGVNZXRob2RzXG5cbiA9IHt9O1xuXG4vKiogSlNEb2MgKi9cblxuLyoqXG4gKiBUZW1wb3JhcmlseSBkaXNhYmxlIHNlbnRyeSBjb25zb2xlIGluc3RydW1lbnRhdGlvbnMuXG4gKlxuICogQHBhcmFtIGNhbGxiYWNrIFRoZSBmdW5jdGlvbiB0byBydW4gYWdhaW5zdCB0aGUgb3JpZ2luYWwgYGNvbnNvbGVgIG1lc3NhZ2VzXG4gKiBAcmV0dXJucyBUaGUgcmVzdWx0cyBvZiB0aGUgY2FsbGJhY2tcbiAqL1xuZnVuY3Rpb24gY29uc29sZVNhbmRib3goY2FsbGJhY2spIHtcbiAgaWYgKCEoJ2NvbnNvbGUnIGluIHdvcmxkd2lkZS5HTE9CQUxfT0JKKSkge1xuICAgIHJldHVybiBjYWxsYmFjaygpO1xuICB9XG5cbiAgY29uc3QgY29uc29sZSA9IHdvcmxkd2lkZS5HTE9CQUxfT0JKLmNvbnNvbGUgO1xuICBjb25zdCB3cmFwcGVkRnVuY3MgPSB7fTtcblxuICBjb25zdCB3cmFwcGVkTGV2ZWxzID0gT2JqZWN0LmtleXMob3JpZ2luYWxDb25zb2xlTWV0aG9kcykgO1xuXG4gIC8vIFJlc3RvcmUgYWxsIHdyYXBwZWQgY29uc29sZSBtZXRob2RzXG4gIHdyYXBwZWRMZXZlbHMuZm9yRWFjaChsZXZlbCA9PiB7XG4gICAgY29uc3Qgb3JpZ2luYWxDb25zb2xlTWV0aG9kID0gb3JpZ2luYWxDb25zb2xlTWV0aG9kc1tsZXZlbF0gO1xuICAgIHdyYXBwZWRGdW5jc1tsZXZlbF0gPSBjb25zb2xlW2xldmVsXSA7XG4gICAgY29uc29sZVtsZXZlbF0gPSBvcmlnaW5hbENvbnNvbGVNZXRob2Q7XG4gIH0pO1xuXG4gIHRyeSB7XG4gICAgcmV0dXJuIGNhbGxiYWNrKCk7XG4gIH0gZmluYWxseSB7XG4gICAgLy8gUmV2ZXJ0IHJlc3RvcmF0aW9uIHRvIHdyYXBwZWQgc3RhdGVcbiAgICB3cmFwcGVkTGV2ZWxzLmZvckVhY2gobGV2ZWwgPT4ge1xuICAgICAgY29uc29sZVtsZXZlbF0gPSB3cmFwcGVkRnVuY3NbbGV2ZWxdIDtcbiAgICB9KTtcbiAgfVxufVxuXG5mdW5jdGlvbiBtYWtlTG9nZ2VyKCkge1xuICBsZXQgZW5hYmxlZCA9IGZhbHNlO1xuICBjb25zdCBsb2dnZXIgPSB7XG4gICAgZW5hYmxlOiAoKSA9PiB7XG4gICAgICBlbmFibGVkID0gdHJ1ZTtcbiAgICB9LFxuICAgIGRpc2FibGU6ICgpID0+IHtcbiAgICAgIGVuYWJsZWQgPSBmYWxzZTtcbiAgICB9LFxuICAgIGlzRW5hYmxlZDogKCkgPT4gZW5hYmxlZCxcbiAgfTtcblxuICBpZiAoZGVidWdCdWlsZC5ERUJVR19CVUlMRCkge1xuICAgIENPTlNPTEVfTEVWRUxTLmZvckVhY2gobmFtZSA9PiB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuICAgICAgbG9nZ2VyW25hbWVdID0gKC4uLmFyZ3MpID0+IHtcbiAgICAgICAgaWYgKGVuYWJsZWQpIHtcbiAgICAgICAgICBjb25zb2xlU2FuZGJveCgoKSA9PiB7XG4gICAgICAgICAgICB3b3JsZHdpZGUuR0xPQkFMX09CSi5jb25zb2xlW25hbWVdKGAke1BSRUZJWH1bJHtuYW1lfV06YCwgLi4uYXJncyk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgQ09OU09MRV9MRVZFTFMuZm9yRWFjaChuYW1lID0+IHtcbiAgICAgIGxvZ2dlcltuYW1lXSA9ICgpID0+IHVuZGVmaW5lZDtcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiBsb2dnZXIgO1xufVxuXG5jb25zdCBsb2dnZXIgPSBtYWtlTG9nZ2VyKCk7XG5cbmV4cG9ydHMuQ09OU09MRV9MRVZFTFMgPSBDT05TT0xFX0xFVkVMUztcbmV4cG9ydHMuY29uc29sZVNhbmRib3ggPSBjb25zb2xlU2FuZGJveDtcbmV4cG9ydHMubG9nZ2VyID0gbG9nZ2VyO1xuZXhwb3J0cy5vcmlnaW5hbENvbnNvbGVNZXRob2RzID0gb3JpZ2luYWxDb25zb2xlTWV0aG9kcztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxvZ2dlci5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/logger.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/lru.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/lru.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n/** A simple Least Recently Used map */\nclass LRUMap {\n\n   constructor(  _maxSize) {this._maxSize = _maxSize;\n    this._cache = new Map();\n  }\n\n  /** Get the current size of the cache */\n   get size() {\n    return this._cache.size;\n  }\n\n  /** Get an entry or undefined if it was not in the cache. Re-inserts to update the recently used order */\n   get(key) {\n    const value = this._cache.get(key);\n    if (value === undefined) {\n      return undefined;\n    }\n    // Remove and re-insert to update the order\n    this._cache.delete(key);\n    this._cache.set(key, value);\n    return value;\n  }\n\n  /** Insert an entry and evict an older entry if we've reached maxSize */\n   set(key, value) {\n    if (this._cache.size >= this._maxSize) {\n      // keys() returns an iterator in insertion order so keys().next() gives us the oldest key\n      this._cache.delete(this._cache.keys().next().value);\n    }\n    this._cache.set(key, value);\n  }\n\n  /** Remove an entry and return the entry if it was in the cache */\n   remove(key) {\n    const value = this._cache.get(key);\n    if (value) {\n      this._cache.delete(key);\n    }\n    return value;\n  }\n\n  /** Clear all entries */\n   clear() {\n    this._cache.clear();\n  }\n\n  /** Get all the keys */\n   keys() {\n    return Array.from(this._cache.keys());\n  }\n\n  /** Get all the values */\n   values() {\n    const values = [];\n    this._cache.forEach(value => values.push(value));\n    return values;\n  }\n}\n\nexports.LRUMap = LRUMap;\n//# sourceMappingURL=lru.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2xydS5qcyIsIm1hcHBpbmdzIjoiQUFBQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7O0FBRTdEO0FBQ0E7O0FBRUEsNEJBQTRCO0FBQzVCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsY0FBYztBQUNkIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLXByb2plY3QvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL2xydS5qcz8xN2EwIl0sInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG5cbi8qKiBBIHNpbXBsZSBMZWFzdCBSZWNlbnRseSBVc2VkIG1hcCAqL1xuY2xhc3MgTFJVTWFwIHtcblxuICAgY29uc3RydWN0b3IoICBfbWF4U2l6ZSkge3RoaXMuX21heFNpemUgPSBfbWF4U2l6ZTtcbiAgICB0aGlzLl9jYWNoZSA9IG5ldyBNYXAoKTtcbiAgfVxuXG4gIC8qKiBHZXQgdGhlIGN1cnJlbnQgc2l6ZSBvZiB0aGUgY2FjaGUgKi9cbiAgIGdldCBzaXplKCkge1xuICAgIHJldHVybiB0aGlzLl9jYWNoZS5zaXplO1xuICB9XG5cbiAgLyoqIEdldCBhbiBlbnRyeSBvciB1bmRlZmluZWQgaWYgaXQgd2FzIG5vdCBpbiB0aGUgY2FjaGUuIFJlLWluc2VydHMgdG8gdXBkYXRlIHRoZSByZWNlbnRseSB1c2VkIG9yZGVyICovXG4gICBnZXQoa2V5KSB7XG4gICAgY29uc3QgdmFsdWUgPSB0aGlzLl9jYWNoZS5nZXQoa2V5KTtcbiAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgLy8gUmVtb3ZlIGFuZCByZS1pbnNlcnQgdG8gdXBkYXRlIHRoZSBvcmRlclxuICAgIHRoaXMuX2NhY2hlLmRlbGV0ZShrZXkpO1xuICAgIHRoaXMuX2NhY2hlLnNldChrZXksIHZhbHVlKTtcbiAgICByZXR1cm4gdmFsdWU7XG4gIH1cblxuICAvKiogSW5zZXJ0IGFuIGVudHJ5IGFuZCBldmljdCBhbiBvbGRlciBlbnRyeSBpZiB3ZSd2ZSByZWFjaGVkIG1heFNpemUgKi9cbiAgIHNldChrZXksIHZhbHVlKSB7XG4gICAgaWYgKHRoaXMuX2NhY2hlLnNpemUgPj0gdGhpcy5fbWF4U2l6ZSkge1xuICAgICAgLy8ga2V5cygpIHJldHVybnMgYW4gaXRlcmF0b3IgaW4gaW5zZXJ0aW9uIG9yZGVyIHNvIGtleXMoKS5uZXh0KCkgZ2l2ZXMgdXMgdGhlIG9sZGVzdCBrZXlcbiAgICAgIHRoaXMuX2NhY2hlLmRlbGV0ZSh0aGlzLl9jYWNoZS5rZXlzKCkubmV4dCgpLnZhbHVlKTtcbiAgICB9XG4gICAgdGhpcy5fY2FjaGUuc2V0KGtleSwgdmFsdWUpO1xuICB9XG5cbiAgLyoqIFJlbW92ZSBhbiBlbnRyeSBhbmQgcmV0dXJuIHRoZSBlbnRyeSBpZiBpdCB3YXMgaW4gdGhlIGNhY2hlICovXG4gICByZW1vdmUoa2V5KSB7XG4gICAgY29uc3QgdmFsdWUgPSB0aGlzLl9jYWNoZS5nZXQoa2V5KTtcbiAgICBpZiAodmFsdWUpIHtcbiAgICAgIHRoaXMuX2NhY2hlLmRlbGV0ZShrZXkpO1xuICAgIH1cbiAgICByZXR1cm4gdmFsdWU7XG4gIH1cblxuICAvKiogQ2xlYXIgYWxsIGVudHJpZXMgKi9cbiAgIGNsZWFyKCkge1xuICAgIHRoaXMuX2NhY2hlLmNsZWFyKCk7XG4gIH1cblxuICAvKiogR2V0IGFsbCB0aGUga2V5cyAqL1xuICAga2V5cygpIHtcbiAgICByZXR1cm4gQXJyYXkuZnJvbSh0aGlzLl9jYWNoZS5rZXlzKCkpO1xuICB9XG5cbiAgLyoqIEdldCBhbGwgdGhlIHZhbHVlcyAqL1xuICAgdmFsdWVzKCkge1xuICAgIGNvbnN0IHZhbHVlcyA9IFtdO1xuICAgIHRoaXMuX2NhY2hlLmZvckVhY2godmFsdWUgPT4gdmFsdWVzLnB1c2godmFsdWUpKTtcbiAgICByZXR1cm4gdmFsdWVzO1xuICB9XG59XG5cbmV4cG9ydHMuTFJVTWFwID0gTFJVTWFwO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bHJ1LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/lru.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/memo.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/memo.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * Helper to decycle json objects\n */\nfunction memoBuilder() {\n  const hasWeakSet = typeof WeakSet === 'function';\n  const inner = hasWeakSet ? new WeakSet() : [];\n  function memoize(obj) {\n    if (hasWeakSet) {\n      if (inner.has(obj)) {\n        return true;\n      }\n      inner.add(obj);\n      return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let i = 0; i < inner.length; i++) {\n      const value = inner[i];\n      if (value === obj) {\n        return true;\n      }\n    }\n    inner.push(obj);\n    return false;\n  }\n\n  function unmemoize(obj) {\n    if (hasWeakSet) {\n      inner.delete(obj);\n    } else {\n      for (let i = 0; i < inner.length; i++) {\n        if (inner[i] === obj) {\n          inner.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n  return [memoize, unmemoize];\n}\n\nexports.memoBuilder = memoBuilder;\n//# sourceMappingURL=memo.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL21lbW8uanMiLCJtYXBwaW5ncyI6IkFBQUEsOENBQTZDLEVBQUUsYUFBYSxFQUFDOztBQUU3RDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixrQkFBa0I7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ04sc0JBQXNCLGtCQUFrQjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsbUJBQW1CO0FBQ25CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLXByb2plY3QvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL21lbW8uanM/NTc4MSJdLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG4vKiBlc2xpbnQtZGlzYWJsZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLW1lbWJlci1hY2Nlc3MgKi9cbi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnkgKi9cblxuLyoqXG4gKiBIZWxwZXIgdG8gZGVjeWNsZSBqc29uIG9iamVjdHNcbiAqL1xuZnVuY3Rpb24gbWVtb0J1aWxkZXIoKSB7XG4gIGNvbnN0IGhhc1dlYWtTZXQgPSB0eXBlb2YgV2Vha1NldCA9PT0gJ2Z1bmN0aW9uJztcbiAgY29uc3QgaW5uZXIgPSBoYXNXZWFrU2V0ID8gbmV3IFdlYWtTZXQoKSA6IFtdO1xuICBmdW5jdGlvbiBtZW1vaXplKG9iaikge1xuICAgIGlmIChoYXNXZWFrU2V0KSB7XG4gICAgICBpZiAoaW5uZXIuaGFzKG9iaikpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgICBpbm5lci5hZGQob2JqKTtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9wcmVmZXItZm9yLW9mXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBpbm5lci5sZW5ndGg7IGkrKykge1xuICAgICAgY29uc3QgdmFsdWUgPSBpbm5lcltpXTtcbiAgICAgIGlmICh2YWx1ZSA9PT0gb2JqKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuICAgIH1cbiAgICBpbm5lci5wdXNoKG9iaik7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgZnVuY3Rpb24gdW5tZW1vaXplKG9iaikge1xuICAgIGlmIChoYXNXZWFrU2V0KSB7XG4gICAgICBpbm5lci5kZWxldGUob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBpbm5lci5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAoaW5uZXJbaV0gPT09IG9iaikge1xuICAgICAgICAgIGlubmVyLnNwbGljZShpLCAxKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuICByZXR1cm4gW21lbW9pemUsIHVubWVtb2l6ZV07XG59XG5cbmV4cG9ydHMubWVtb0J1aWxkZXIgPSBtZW1vQnVpbGRlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1lbW8uanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/memo.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/misc.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/misc.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst object = __webpack_require__(/*! ./object.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/object.js\");\nconst string = __webpack_require__(/*! ./string.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/string.js\");\nconst worldwide = __webpack_require__(/*! ./worldwide.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/worldwide.js\");\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nfunction uuid4() {\n  const gbl = worldwide.GLOBAL_OBJ ;\n  const crypto = gbl.crypto || gbl.msCrypto;\n\n  let getRandomByte = () => Math.random() * 16;\n  try {\n    if (crypto && crypto.randomUUID) {\n      return crypto.randomUUID().replace(/-/g, '');\n    }\n    if (crypto && crypto.getRandomValues) {\n      getRandomByte = () => {\n        // crypto.getRandomValues might return undefined instead of the typed array\n        // in old Chromium versions (e.g. 23.0.1235.0 (151422))\n        // However, `typedArray` is still filled in-place.\n        // @see https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues#typedarray\n        const typedArray = new Uint8Array(1);\n        crypto.getRandomValues(typedArray);\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return typedArray[0];\n      };\n    }\n  } catch (_) {\n    // some runtimes can crash invoking crypto\n    // https://github.com/getsentry/sentry-javascript/issues/8935\n  }\n\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  // Concatenating the following numbers as strings results in '10000000100040008000100000000000'\n  return (([1e7] ) + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, c =>\n    // eslint-disable-next-line no-bitwise\n    ((c ) ^ ((getRandomByte() & 15) >> ((c ) / 4))).toString(16),\n  );\n}\n\nfunction getFirstException(event) {\n  return event.exception && event.exception.values ? event.exception.values[0] : undefined;\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nfunction getEventDescription(event) {\n  const { message, event_id: eventId } = event;\n  if (message) {\n    return message;\n  }\n\n  const firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return `${firstException.type}: ${firstException.value}`;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nfunction addExceptionTypeValue(event, value, type) {\n  const exception = (event.exception = event.exception || {});\n  const values = (exception.values = exception.values || []);\n  const firstException = (values[0] = values[0] || {});\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nfunction addExceptionMechanism(event, newMechanism) {\n  const firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n\n  const defaultMechanism = { type: 'generic', handled: true };\n  const currentMechanism = firstException.mechanism;\n  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\n\n  if (newMechanism && 'data' in newMechanism) {\n    const mergedData = { ...(currentMechanism && currentMechanism.data), ...newMechanism.data };\n    firstException.mechanism.data = mergedData;\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\n\nfunction _parseInt(input) {\n  return parseInt(input || '', 10);\n}\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nfunction parseSemver(input) {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = _parseInt(match[1]);\n  const minor = _parseInt(match[2]);\n  const patch = _parseInt(match[3]);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nfunction addContextToFrame(lines, frame, linesOfContext = 5) {\n  // When there is no line number in the frame, attaching context is nonsensical and will even break grouping\n  if (frame.lineno === undefined) {\n    return;\n  }\n\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines - 1, frame.lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line) => string.snipLine(line, 0));\n\n  // We guard here to ensure this is not larger than the existing number of lines\n  const lineIndex = Math.min(maxLines - 1, sourceLine);\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  frame.context_line = string.snipLine(lines[lineIndex], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line) => string.snipLine(line, 0));\n}\n\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nfunction checkOrSetAlreadyCaught(exception) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (exception && (exception ).__sentry_captured__) {\n    return true;\n  }\n\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    object.addNonEnumerableProperty(exception , '__sentry_captured__', true);\n  } catch (err) {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n\n  return false;\n}\n\n/**\n * Checks whether the given input is already an array, and if it isn't, wraps it in one.\n *\n * @param maybeArray Input to turn into an array, if necessary\n * @returns The input, if already an array, or an array with the input as the only element, if not\n */\nfunction arrayify(maybeArray) {\n  return Array.isArray(maybeArray) ? maybeArray : [maybeArray];\n}\n\nexports.addContextToFrame = addContextToFrame;\nexports.addExceptionMechanism = addExceptionMechanism;\nexports.addExceptionTypeValue = addExceptionTypeValue;\nexports.arrayify = arrayify;\nexports.checkOrSetAlreadyCaught = checkOrSetAlreadyCaught;\nexports.getEventDescription = getEventDescription;\nexports.parseSemver = parseSemver;\nexports.uuid4 = uuid4;\n//# sourceMappingURL=misc.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/misc.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/node-stack-trace.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/node-stack-trace.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst stacktrace = __webpack_require__(/*! ./stacktrace.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/stacktrace.js\");\n\n/**\n * Does this filename look like it's part of the app code?\n */\nfunction filenameIsInApp(filename, isNative = false) {\n  const isInternal =\n    isNative ||\n    (filename &&\n      // It's not internal if it's an absolute linux path\n      !filename.startsWith('/') &&\n      // It's not internal if it's an absolute windows path\n      !filename.match(/^[A-Z]:/) &&\n      // It's not internal if the path is starting with a dot\n      !filename.startsWith('.') &&\n      // It's not internal if the frame has a protocol. In node, this is usually the case if the file got pre-processed with a bundler like webpack\n      !filename.match(/^[a-zA-Z]([a-zA-Z0-9.\\-+])*:\\/\\//)); // Schema from: https://stackoverflow.com/a/3641782\n\n  // in_app is all that's not an internal Node function or a module within node_modules\n  // note that isNative appears to return true even for node core libraries\n  // see https://github.com/getsentry/raven-node/issues/176\n\n  return !isInternal && filename !== undefined && !filename.includes('node_modules/');\n}\n\n/** Node Stack line parser */\nfunction node(getModule) {\n  const FILENAME_MATCH = /^\\s*[-]{4,}$/;\n  const FULL_MATCH = /at (?:async )?(?:(.+?)\\s+\\()?(?:(.+):(\\d+):(\\d+)?|([^)]+))\\)?/;\n\n  // eslint-disable-next-line complexity\n  return (line) => {\n    const lineMatch = line.match(FULL_MATCH);\n\n    if (lineMatch) {\n      let object;\n      let method;\n      let functionName;\n      let typeName;\n      let methodName;\n\n      if (lineMatch[1]) {\n        functionName = lineMatch[1];\n\n        let methodStart = functionName.lastIndexOf('.');\n        if (functionName[methodStart - 1] === '.') {\n          methodStart--;\n        }\n\n        if (methodStart > 0) {\n          object = functionName.slice(0, methodStart);\n          method = functionName.slice(methodStart + 1);\n          const objectEnd = object.indexOf('.Module');\n          if (objectEnd > 0) {\n            functionName = functionName.slice(objectEnd + 1);\n            object = object.slice(0, objectEnd);\n          }\n        }\n        typeName = undefined;\n      }\n\n      if (method) {\n        typeName = object;\n        methodName = method;\n      }\n\n      if (method === '<anonymous>') {\n        methodName = undefined;\n        functionName = undefined;\n      }\n\n      if (functionName === undefined) {\n        methodName = methodName || stacktrace.UNKNOWN_FUNCTION;\n        functionName = typeName ? `${typeName}.${methodName}` : methodName;\n      }\n\n      let filename = lineMatch[2] && lineMatch[2].startsWith('file://') ? lineMatch[2].slice(7) : lineMatch[2];\n      const isNative = lineMatch[5] === 'native';\n\n      // If it's a Windows path, trim the leading slash so that `/C:/foo` becomes `C:/foo`\n      if (filename && filename.match(/\\/[A-Z]:/)) {\n        filename = filename.slice(1);\n      }\n\n      if (!filename && lineMatch[5] && !isNative) {\n        filename = lineMatch[5];\n      }\n\n      return {\n        filename,\n        module: getModule ? getModule(filename) : undefined,\n        function: functionName,\n        lineno: _parseIntOrUndefined(lineMatch[3]),\n        colno: _parseIntOrUndefined(lineMatch[4]),\n        in_app: filenameIsInApp(filename || '', isNative),\n      };\n    }\n\n    if (line.match(FILENAME_MATCH)) {\n      return {\n        filename: line,\n      };\n    }\n\n    return undefined;\n  };\n}\n\n/**\n * Node.js stack line parser\n *\n * This is in @sentry/utils so it can be used from the Electron SDK in the browser for when `nodeIntegration == true`.\n * This allows it to be used without referencing or importing any node specific code which causes bundlers to complain\n */\nfunction nodeStackLineParser(getModule) {\n  return [90, node(getModule)];\n}\n\nfunction _parseIntOrUndefined(input) {\n  return parseInt(input || '', 10) || undefined;\n}\n\nexports.filenameIsInApp = filenameIsInApp;\nexports.node = node;\nexports.nodeStackLineParser = nodeStackLineParser;\n//# sourceMappingURL=node-stack-trace.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL25vZGUtc3RhY2stdHJhY2UuanMiLCJtYXBwaW5ncyI6IkFBQUEsOENBQTZDLEVBQUUsYUFBYSxFQUFDOztBQUU3RCxtQkFBbUIsbUJBQU8sQ0FBQywySEFBaUI7O0FBRTVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0REFBNEQ7O0FBRTVEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxrQ0FBa0MsR0FBRztBQUNyQzs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EscUNBQXFDLFNBQVMsR0FBRyxXQUFXO0FBQzVEOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLHVCQUF1QjtBQUN2QixZQUFZO0FBQ1osMkJBQTJCO0FBQzNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLXByb2plY3QvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL25vZGUtc3RhY2stdHJhY2UuanM/N2RkNCJdLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG5jb25zdCBzdGFja3RyYWNlID0gcmVxdWlyZSgnLi9zdGFja3RyYWNlLmpzJyk7XG5cbi8qKlxuICogRG9lcyB0aGlzIGZpbGVuYW1lIGxvb2sgbGlrZSBpdCdzIHBhcnQgb2YgdGhlIGFwcCBjb2RlP1xuICovXG5mdW5jdGlvbiBmaWxlbmFtZUlzSW5BcHAoZmlsZW5hbWUsIGlzTmF0aXZlID0gZmFsc2UpIHtcbiAgY29uc3QgaXNJbnRlcm5hbCA9XG4gICAgaXNOYXRpdmUgfHxcbiAgICAoZmlsZW5hbWUgJiZcbiAgICAgIC8vIEl0J3Mgbm90IGludGVybmFsIGlmIGl0J3MgYW4gYWJzb2x1dGUgbGludXggcGF0aFxuICAgICAgIWZpbGVuYW1lLnN0YXJ0c1dpdGgoJy8nKSAmJlxuICAgICAgLy8gSXQncyBub3QgaW50ZXJuYWwgaWYgaXQncyBhbiBhYnNvbHV0ZSB3aW5kb3dzIHBhdGhcbiAgICAgICFmaWxlbmFtZS5tYXRjaCgvXltBLVpdOi8pICYmXG4gICAgICAvLyBJdCdzIG5vdCBpbnRlcm5hbCBpZiB0aGUgcGF0aCBpcyBzdGFydGluZyB3aXRoIGEgZG90XG4gICAgICAhZmlsZW5hbWUuc3RhcnRzV2l0aCgnLicpICYmXG4gICAgICAvLyBJdCdzIG5vdCBpbnRlcm5hbCBpZiB0aGUgZnJhbWUgaGFzIGEgcHJvdG9jb2wuIEluIG5vZGUsIHRoaXMgaXMgdXN1YWxseSB0aGUgY2FzZSBpZiB0aGUgZmlsZSBnb3QgcHJlLXByb2Nlc3NlZCB3aXRoIGEgYnVuZGxlciBsaWtlIHdlYnBhY2tcbiAgICAgICFmaWxlbmFtZS5tYXRjaCgvXlthLXpBLVpdKFthLXpBLVowLTkuXFwtK10pKjpcXC9cXC8vKSk7IC8vIFNjaGVtYSBmcm9tOiBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMzY0MTc4MlxuXG4gIC8vIGluX2FwcCBpcyBhbGwgdGhhdCdzIG5vdCBhbiBpbnRlcm5hbCBOb2RlIGZ1bmN0aW9uIG9yIGEgbW9kdWxlIHdpdGhpbiBub2RlX21vZHVsZXNcbiAgLy8gbm90ZSB0aGF0IGlzTmF0aXZlIGFwcGVhcnMgdG8gcmV0dXJuIHRydWUgZXZlbiBmb3Igbm9kZSBjb3JlIGxpYnJhcmllc1xuICAvLyBzZWUgaHR0cHM6Ly9naXRodWIuY29tL2dldHNlbnRyeS9yYXZlbi1ub2RlL2lzc3Vlcy8xNzZcblxuICByZXR1cm4gIWlzSW50ZXJuYWwgJiYgZmlsZW5hbWUgIT09IHVuZGVmaW5lZCAmJiAhZmlsZW5hbWUuaW5jbHVkZXMoJ25vZGVfbW9kdWxlcy8nKTtcbn1cblxuLyoqIE5vZGUgU3RhY2sgbGluZSBwYXJzZXIgKi9cbmZ1bmN0aW9uIG5vZGUoZ2V0TW9kdWxlKSB7XG4gIGNvbnN0IEZJTEVOQU1FX01BVENIID0gL15cXHMqWy1dezQsfSQvO1xuICBjb25zdCBGVUxMX01BVENIID0gL2F0ICg/OmFzeW5jICk/KD86KC4rPylcXHMrXFwoKT8oPzooLispOihcXGQrKTooXFxkKyk/fChbXildKykpXFwpPy87XG5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNvbXBsZXhpdHlcbiAgcmV0dXJuIChsaW5lKSA9PiB7XG4gICAgY29uc3QgbGluZU1hdGNoID0gbGluZS5tYXRjaChGVUxMX01BVENIKTtcblxuICAgIGlmIChsaW5lTWF0Y2gpIHtcbiAgICAgIGxldCBvYmplY3Q7XG4gICAgICBsZXQgbWV0aG9kO1xuICAgICAgbGV0IGZ1bmN0aW9uTmFtZTtcbiAgICAgIGxldCB0eXBlTmFtZTtcbiAgICAgIGxldCBtZXRob2ROYW1lO1xuXG4gICAgICBpZiAobGluZU1hdGNoWzFdKSB7XG4gICAgICAgIGZ1bmN0aW9uTmFtZSA9IGxpbmVNYXRjaFsxXTtcblxuICAgICAgICBsZXQgbWV0aG9kU3RhcnQgPSBmdW5jdGlvbk5hbWUubGFzdEluZGV4T2YoJy4nKTtcbiAgICAgICAgaWYgKGZ1bmN0aW9uTmFtZVttZXRob2RTdGFydCAtIDFdID09PSAnLicpIHtcbiAgICAgICAgICBtZXRob2RTdGFydC0tO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKG1ldGhvZFN0YXJ0ID4gMCkge1xuICAgICAgICAgIG9iamVjdCA9IGZ1bmN0aW9uTmFtZS5zbGljZSgwLCBtZXRob2RTdGFydCk7XG4gICAgICAgICAgbWV0aG9kID0gZnVuY3Rpb25OYW1lLnNsaWNlKG1ldGhvZFN0YXJ0ICsgMSk7XG4gICAgICAgICAgY29uc3Qgb2JqZWN0RW5kID0gb2JqZWN0LmluZGV4T2YoJy5Nb2R1bGUnKTtcbiAgICAgICAgICBpZiAob2JqZWN0RW5kID4gMCkge1xuICAgICAgICAgICAgZnVuY3Rpb25OYW1lID0gZnVuY3Rpb25OYW1lLnNsaWNlKG9iamVjdEVuZCArIDEpO1xuICAgICAgICAgICAgb2JqZWN0ID0gb2JqZWN0LnNsaWNlKDAsIG9iamVjdEVuZCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHR5cGVOYW1lID0gdW5kZWZpbmVkO1xuICAgICAgfVxuXG4gICAgICBpZiAobWV0aG9kKSB7XG4gICAgICAgIHR5cGVOYW1lID0gb2JqZWN0O1xuICAgICAgICBtZXRob2ROYW1lID0gbWV0aG9kO1xuICAgICAgfVxuXG4gICAgICBpZiAobWV0aG9kID09PSAnPGFub255bW91cz4nKSB7XG4gICAgICAgIG1ldGhvZE5hbWUgPSB1bmRlZmluZWQ7XG4gICAgICAgIGZ1bmN0aW9uTmFtZSA9IHVuZGVmaW5lZDtcbiAgICAgIH1cblxuICAgICAgaWYgKGZ1bmN0aW9uTmFtZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIG1ldGhvZE5hbWUgPSBtZXRob2ROYW1lIHx8IHN0YWNrdHJhY2UuVU5LTk9XTl9GVU5DVElPTjtcbiAgICAgICAgZnVuY3Rpb25OYW1lID0gdHlwZU5hbWUgPyBgJHt0eXBlTmFtZX0uJHttZXRob2ROYW1lfWAgOiBtZXRob2ROYW1lO1xuICAgICAgfVxuXG4gICAgICBsZXQgZmlsZW5hbWUgPSBsaW5lTWF0Y2hbMl0gJiYgbGluZU1hdGNoWzJdLnN0YXJ0c1dpdGgoJ2ZpbGU6Ly8nKSA/IGxpbmVNYXRjaFsyXS5zbGljZSg3KSA6IGxpbmVNYXRjaFsyXTtcbiAgICAgIGNvbnN0IGlzTmF0aXZlID0gbGluZU1hdGNoWzVdID09PSAnbmF0aXZlJztcblxuICAgICAgLy8gSWYgaXQncyBhIFdpbmRvd3MgcGF0aCwgdHJpbSB0aGUgbGVhZGluZyBzbGFzaCBzbyB0aGF0IGAvQzovZm9vYCBiZWNvbWVzIGBDOi9mb29gXG4gICAgICBpZiAoZmlsZW5hbWUgJiYgZmlsZW5hbWUubWF0Y2goL1xcL1tBLVpdOi8pKSB7XG4gICAgICAgIGZpbGVuYW1lID0gZmlsZW5hbWUuc2xpY2UoMSk7XG4gICAgICB9XG5cbiAgICAgIGlmICghZmlsZW5hbWUgJiYgbGluZU1hdGNoWzVdICYmICFpc05hdGl2ZSkge1xuICAgICAgICBmaWxlbmFtZSA9IGxpbmVNYXRjaFs1XTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgZmlsZW5hbWUsXG4gICAgICAgIG1vZHVsZTogZ2V0TW9kdWxlID8gZ2V0TW9kdWxlKGZpbGVuYW1lKSA6IHVuZGVmaW5lZCxcbiAgICAgICAgZnVuY3Rpb246IGZ1bmN0aW9uTmFtZSxcbiAgICAgICAgbGluZW5vOiBfcGFyc2VJbnRPclVuZGVmaW5lZChsaW5lTWF0Y2hbM10pLFxuICAgICAgICBjb2xubzogX3BhcnNlSW50T3JVbmRlZmluZWQobGluZU1hdGNoWzRdKSxcbiAgICAgICAgaW5fYXBwOiBmaWxlbmFtZUlzSW5BcHAoZmlsZW5hbWUgfHwgJycsIGlzTmF0aXZlKSxcbiAgICAgIH07XG4gICAgfVxuXG4gICAgaWYgKGxpbmUubWF0Y2goRklMRU5BTUVfTUFUQ0gpKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBmaWxlbmFtZTogbGluZSxcbiAgICAgIH07XG4gICAgfVxuXG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfTtcbn1cblxuLyoqXG4gKiBOb2RlLmpzIHN0YWNrIGxpbmUgcGFyc2VyXG4gKlxuICogVGhpcyBpcyBpbiBAc2VudHJ5L3V0aWxzIHNvIGl0IGNhbiBiZSB1c2VkIGZyb20gdGhlIEVsZWN0cm9uIFNESyBpbiB0aGUgYnJvd3NlciBmb3Igd2hlbiBgbm9kZUludGVncmF0aW9uID09IHRydWVgLlxuICogVGhpcyBhbGxvd3MgaXQgdG8gYmUgdXNlZCB3aXRob3V0IHJlZmVyZW5jaW5nIG9yIGltcG9ydGluZyBhbnkgbm9kZSBzcGVjaWZpYyBjb2RlIHdoaWNoIGNhdXNlcyBidW5kbGVycyB0byBjb21wbGFpblxuICovXG5mdW5jdGlvbiBub2RlU3RhY2tMaW5lUGFyc2VyKGdldE1vZHVsZSkge1xuICByZXR1cm4gWzkwLCBub2RlKGdldE1vZHVsZSldO1xufVxuXG5mdW5jdGlvbiBfcGFyc2VJbnRPclVuZGVmaW5lZChpbnB1dCkge1xuICByZXR1cm4gcGFyc2VJbnQoaW5wdXQgfHwgJycsIDEwKSB8fCB1bmRlZmluZWQ7XG59XG5cbmV4cG9ydHMuZmlsZW5hbWVJc0luQXBwID0gZmlsZW5hbWVJc0luQXBwO1xuZXhwb3J0cy5ub2RlID0gbm9kZTtcbmV4cG9ydHMubm9kZVN0YWNrTGluZVBhcnNlciA9IG5vZGVTdGFja0xpbmVQYXJzZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ub2RlLXN0YWNrLXRyYWNlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/node-stack-trace.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/node.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/node.js ***!
  \**********************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst env = __webpack_require__(/*! ./env.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/env.js\");\n\n/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\n\n\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nfunction isNodeEnv() {\n  // explicitly check for browser bundles as those can be optimized statically\n  // by terser/rollup.\n  return (\n    !env.isBrowserBundle() &&\n    Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'\n  );\n}\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction dynamicRequire(mod, request) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return mod.require(request);\n}\n\n/**\n * Helper for dynamically loading module that should work with linked dependencies.\n * The problem is that we _should_ be using `require(require.resolve(moduleName, { paths: [cwd()] }))`\n * However it's _not possible_ to do that with Webpack, as it has to know all the dependencies during\n * build time. `require.resolve` is also not available in any other way, so we cannot create,\n * a fake helper like we do with `dynamicRequire`.\n *\n * We always prefer to use local package, thus the value is not returned early from each `try/catch` block.\n * That is to mimic the behavior of `require.resolve` exactly.\n *\n * @param moduleName module name to require\n * @returns possibly required module\n */\nfunction loadModule(moduleName) {\n  let mod;\n\n  try {\n    mod = dynamicRequire(module, moduleName);\n  } catch (e) {\n    // no-empty\n  }\n\n  try {\n    const { cwd } = dynamicRequire(module, 'process');\n    mod = dynamicRequire(module, `${cwd()}/node_modules/${moduleName}`) ;\n  } catch (e) {\n    // no-empty\n  }\n\n  return mod;\n}\n\nexports.dynamicRequire = dynamicRequire;\nexports.isNodeEnv = isNodeEnv;\nexports.loadModule = loadModule;\n//# sourceMappingURL=node.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL25vZGUuanMiLCJtYXBwaW5ncyI6IjtBQUFBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQzs7QUFFN0QsWUFBWSxtQkFBTyxDQUFDLDZHQUFVOztBQUU5QjtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLG1GQUFtRixnQkFBZ0I7QUFDbkc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTs7QUFFQTtBQUNBLFlBQVksTUFBTTtBQUNsQixvQ0FBb0MsTUFBTSxnQkFBZ0IsV0FBVztBQUNyRSxJQUFJO0FBQ0o7QUFDQTs7QUFFQTtBQUNBOztBQUVBLHNCQUFzQjtBQUN0QixpQkFBaUI7QUFDakIsa0JBQWtCO0FBQ2xCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLXByb2plY3QvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL25vZGUuanM/MmQ1MiJdLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG5jb25zdCBlbnYgPSByZXF1aXJlKCcuL2Vudi5qcycpO1xuXG4vKipcbiAqIE5PVEU6IEluIG9yZGVyIHRvIGF2b2lkIGNpcmN1bGFyIGRlcGVuZGVuY2llcywgaWYgeW91IGFkZCBhIGZ1bmN0aW9uIHRvIHRoaXMgbW9kdWxlIGFuZCBpdCBuZWVkcyB0byBwcmludCBzb21ldGhpbmcsXG4gKiB5b3UgbXVzdCBlaXRoZXIgYSkgdXNlIGBjb25zb2xlLmxvZ2AgcmF0aGVyIHRoYW4gdGhlIGxvZ2dlciwgb3IgYikgcHV0IHlvdXIgZnVuY3Rpb24gZWxzZXdoZXJlLlxuICovXG5cblxuLyoqXG4gKiBDaGVja3Mgd2hldGhlciB3ZSdyZSBpbiB0aGUgTm9kZS5qcyBvciBCcm93c2VyIGVudmlyb25tZW50XG4gKlxuICogQHJldHVybnMgQW5zd2VyIHRvIGdpdmVuIHF1ZXN0aW9uXG4gKi9cbmZ1bmN0aW9uIGlzTm9kZUVudigpIHtcbiAgLy8gZXhwbGljaXRseSBjaGVjayBmb3IgYnJvd3NlciBidW5kbGVzIGFzIHRob3NlIGNhbiBiZSBvcHRpbWl6ZWQgc3RhdGljYWxseVxuICAvLyBieSB0ZXJzZXIvcm9sbHVwLlxuICByZXR1cm4gKFxuICAgICFlbnYuaXNCcm93c2VyQnVuZGxlKCkgJiZcbiAgICBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodHlwZW9mIHByb2Nlc3MgIT09ICd1bmRlZmluZWQnID8gcHJvY2VzcyA6IDApID09PSAnW29iamVjdCBwcm9jZXNzXSdcbiAgKTtcbn1cblxuLyoqXG4gKiBSZXF1aXJlcyBhIG1vZHVsZSB3aGljaCBpcyBwcm90ZWN0ZWQgYWdhaW5zdCBidW5kbGVyIG1pbmlmaWNhdGlvbi5cbiAqXG4gKiBAcGFyYW0gcmVxdWVzdCBUaGUgbW9kdWxlIHBhdGggdG8gcmVzb2x2ZVxuICovXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuZnVuY3Rpb24gZHluYW1pY1JlcXVpcmUobW9kLCByZXF1ZXN0KSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLW1lbWJlci1hY2Nlc3NcbiAgcmV0dXJuIG1vZC5yZXF1aXJlKHJlcXVlc3QpO1xufVxuXG4vKipcbiAqIEhlbHBlciBmb3IgZHluYW1pY2FsbHkgbG9hZGluZyBtb2R1bGUgdGhhdCBzaG91bGQgd29yayB3aXRoIGxpbmtlZCBkZXBlbmRlbmNpZXMuXG4gKiBUaGUgcHJvYmxlbSBpcyB0aGF0IHdlIF9zaG91bGRfIGJlIHVzaW5nIGByZXF1aXJlKHJlcXVpcmUucmVzb2x2ZShtb2R1bGVOYW1lLCB7IHBhdGhzOiBbY3dkKCldIH0pKWBcbiAqIEhvd2V2ZXIgaXQncyBfbm90IHBvc3NpYmxlXyB0byBkbyB0aGF0IHdpdGggV2VicGFjaywgYXMgaXQgaGFzIHRvIGtub3cgYWxsIHRoZSBkZXBlbmRlbmNpZXMgZHVyaW5nXG4gKiBidWlsZCB0aW1lLiBgcmVxdWlyZS5yZXNvbHZlYCBpcyBhbHNvIG5vdCBhdmFpbGFibGUgaW4gYW55IG90aGVyIHdheSwgc28gd2UgY2Fubm90IGNyZWF0ZSxcbiAqIGEgZmFrZSBoZWxwZXIgbGlrZSB3ZSBkbyB3aXRoIGBkeW5hbWljUmVxdWlyZWAuXG4gKlxuICogV2UgYWx3YXlzIHByZWZlciB0byB1c2UgbG9jYWwgcGFja2FnZSwgdGh1cyB0aGUgdmFsdWUgaXMgbm90IHJldHVybmVkIGVhcmx5IGZyb20gZWFjaCBgdHJ5L2NhdGNoYCBibG9jay5cbiAqIFRoYXQgaXMgdG8gbWltaWMgdGhlIGJlaGF2aW9yIG9mIGByZXF1aXJlLnJlc29sdmVgIGV4YWN0bHkuXG4gKlxuICogQHBhcmFtIG1vZHVsZU5hbWUgbW9kdWxlIG5hbWUgdG8gcmVxdWlyZVxuICogQHJldHVybnMgcG9zc2libHkgcmVxdWlyZWQgbW9kdWxlXG4gKi9cbmZ1bmN0aW9uIGxvYWRNb2R1bGUobW9kdWxlTmFtZSkge1xuICBsZXQgbW9kO1xuXG4gIHRyeSB7XG4gICAgbW9kID0gZHluYW1pY1JlcXVpcmUobW9kdWxlLCBtb2R1bGVOYW1lKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIC8vIG5vLWVtcHR5XG4gIH1cblxuICB0cnkge1xuICAgIGNvbnN0IHsgY3dkIH0gPSBkeW5hbWljUmVxdWlyZShtb2R1bGUsICdwcm9jZXNzJyk7XG4gICAgbW9kID0gZHluYW1pY1JlcXVpcmUobW9kdWxlLCBgJHtjd2QoKX0vbm9kZV9tb2R1bGVzLyR7bW9kdWxlTmFtZX1gKSA7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICAvLyBuby1lbXB0eVxuICB9XG5cbiAgcmV0dXJuIG1vZDtcbn1cblxuZXhwb3J0cy5keW5hbWljUmVxdWlyZSA9IGR5bmFtaWNSZXF1aXJlO1xuZXhwb3J0cy5pc05vZGVFbnYgPSBpc05vZGVFbnY7XG5leHBvcnRzLmxvYWRNb2R1bGUgPSBsb2FkTW9kdWxlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bm9kZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/node.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/normalize.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/normalize.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst is = __webpack_require__(/*! ./is.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/is.js\");\nconst memo = __webpack_require__(/*! ./memo.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/memo.js\");\nconst object = __webpack_require__(/*! ./object.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/object.js\");\nconst stacktrace = __webpack_require__(/*! ./stacktrace.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/stacktrace.js\");\n\n/**\n * Recursively normalizes the given object.\n *\n * - Creates a copy to prevent original input mutation\n * - Skips non-enumerable properties\n * - When stringifying, calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializable values (`undefined`/`NaN`/functions) to serializable format\n * - Translates known global objects/classes to a string representations\n * - Takes care of `Error` object serialization\n * - Optionally limits depth of final output\n * - Optionally limits number of properties/elements included in any single object/array\n *\n * @param input The object to be normalized.\n * @param depth The max depth to which to normalize the object. (Anything deeper stringified whole.)\n * @param maxProperties The max number of elements or properties to be included in any single array or\n * object in the normallized output.\n * @returns A normalized version of the object, or `\"**non-serializable**\"` if any errors are thrown during normalization.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction normalize(input, depth = 100, maxProperties = +Infinity) {\n  try {\n    // since we're at the outermost level, we don't provide a key\n    return visit('', input, depth, maxProperties);\n  } catch (err) {\n    return { ERROR: `**non-serializable** (${err})` };\n  }\n}\n\n/** JSDoc */\nfunction normalizeToSize(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  object,\n  // Default Node.js REPL depth\n  depth = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize = 100 * 1024,\n) {\n  const normalized = normalize(object, depth);\n\n  if (jsonSize(normalized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return normalized ;\n}\n\n/**\n * Visits a node to perform normalization on it\n *\n * @param key The key corresponding to the given node\n * @param value The node to be visited\n * @param depth Optional number indicating the maximum recursion depth\n * @param maxProperties Optional maximum number of properties/elements included in any single object/array\n * @param memo Optional Memo class handling decycling\n */\nfunction visit(\n  key,\n  value,\n  depth = +Infinity,\n  maxProperties = +Infinity,\n  memo$1 = memo.memoBuilder(),\n) {\n  const [memoize, unmemoize] = memo$1;\n\n  // Get the simple cases out of the way first\n  if (\n    value == null || // this matches null and undefined -> eqeq not eqeqeq\n    (['number', 'boolean', 'string'].includes(typeof value) && !Number.isNaN(value))\n  ) {\n    return value ;\n  }\n\n  const stringified = stringifyValue(key, value);\n\n  // Anything we could potentially dig into more (objects or arrays) will have come back as `\"[object XXXX]\"`.\n  // Everything else will have already been serialized, so if we don't see that pattern, we're done.\n  if (!stringified.startsWith('[object ')) {\n    return stringified;\n  }\n\n  // From here on, we can assert that `value` is either an object or an array.\n\n  // Do not normalize objects that we know have already been normalized. As a general rule, the\n  // \"__sentry_skip_normalization__\" property should only be used sparingly and only should only be set on objects that\n  // have already been normalized.\n  if ((value )['__sentry_skip_normalization__']) {\n    return value ;\n  }\n\n  // We can set `__sentry_override_normalization_depth__` on an object to ensure that from there\n  // We keep a certain amount of depth.\n  // This should be used sparingly, e.g. we use it for the redux integration to ensure we get a certain amount of state.\n  const remainingDepth =\n    typeof (value )['__sentry_override_normalization_depth__'] === 'number'\n      ? ((value )['__sentry_override_normalization_depth__'] )\n      : depth;\n\n  // We're also done if we've reached the max depth\n  if (remainingDepth === 0) {\n    // At this point we know `serialized` is a string of the form `\"[object XXXX]\"`. Clean it up so it's just `\"[XXXX]\"`.\n    return stringified.replace('object ', '');\n  }\n\n  // If we've already visited this branch, bail out, as it's circular reference. If not, note that we're seeing it now.\n  if (memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // If the value has a `toJSON` method, we call it to extract more information\n  const valueWithToJSON = value ;\n  if (valueWithToJSON && typeof valueWithToJSON.toJSON === 'function') {\n    try {\n      const jsonValue = valueWithToJSON.toJSON();\n      // We need to normalize the return value of `.toJSON()` in case it has circular references\n      return visit('', jsonValue, remainingDepth - 1, maxProperties, memo$1);\n    } catch (err) {\n      // pass (The built-in `toJSON` failed, but we can still try to do it ourselves)\n    }\n  }\n\n  // At this point we know we either have an object or an array, we haven't seen it before, and we're going to recurse\n  // because we haven't yet reached the max depth. Create an accumulator to hold the results of visiting each\n  // property/entry, and keep track of the number of items we add to it.\n  const normalized = (Array.isArray(value) ? [] : {}) ;\n  let numAdded = 0;\n\n  // Before we begin, convert`Error` and`Event` instances into plain objects, since some of each of their relevant\n  // properties are non-enumerable and otherwise would get missed.\n  const visitable = object.convertToPlainObject(value );\n\n  for (const visitKey in visitable) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(visitable, visitKey)) {\n      continue;\n    }\n\n    if (numAdded >= maxProperties) {\n      normalized[visitKey] = '[MaxProperties ~]';\n      break;\n    }\n\n    // Recursively visit all the child nodes\n    const visitValue = visitable[visitKey];\n    normalized[visitKey] = visit(visitKey, visitValue, remainingDepth - 1, maxProperties, memo$1);\n\n    numAdded++;\n  }\n\n  // Once we've visited all the branches, remove the parent from memo storage\n  unmemoize(value);\n\n  // Return accumulated values\n  return normalized;\n}\n\n/* eslint-disable complexity */\n/**\n * Stringify the given value. Handles various known special values and types.\n *\n * Not meant to be used on simple primitives which already have a string representation, as it will, for example, turn\n * the number 1231 into \"[Object Number]\", nor on `null`, as it will throw.\n *\n * @param value The value to stringify\n * @returns A stringified representation of the given value\n */\nfunction stringifyValue(\n  key,\n  // this type is a tiny bit of a cheat, since this function does handle NaN (which is technically a number), but for\n  // our internal use, it'll do\n  value,\n) {\n  try {\n    if (key === 'domain' && value && typeof value === 'object' && (value )._events) {\n      return '[Domain]';\n    }\n\n    if (key === 'domainEmitter') {\n      return '[DomainEmitter]';\n    }\n\n    // It's safe to use `global`, `window`, and `document` here in this manner, as we are asserting using `typeof` first\n    // which won't throw if they are not present.\n\n    if (typeof global !== 'undefined' && value === global) {\n      return '[Global]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof window !== 'undefined' && value === window) {\n      return '[Window]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof document !== 'undefined' && value === document) {\n      return '[Document]';\n    }\n\n    if (is.isVueViewModel(value)) {\n      return '[VueViewModel]';\n    }\n\n    // React's SyntheticEvent thingy\n    if (is.isSyntheticEvent(value)) {\n      return '[SyntheticEvent]';\n    }\n\n    if (typeof value === 'number' && value !== value) {\n      return '[NaN]';\n    }\n\n    if (typeof value === 'function') {\n      return `[Function: ${stacktrace.getFunctionName(value)}]`;\n    }\n\n    if (typeof value === 'symbol') {\n      return `[${String(value)}]`;\n    }\n\n    // stringified BigInts are indistinguishable from regular numbers, so we need to label them to avoid confusion\n    if (typeof value === 'bigint') {\n      return `[BigInt: ${String(value)}]`;\n    }\n\n    // Now that we've knocked out all the special cases and the primitives, all we have left are objects. Simply casting\n    // them to strings means that instances of classes which haven't defined their `toStringTag` will just come out as\n    // `\"[object Object]\"`. If we instead look at the constructor's name (which is the same as the name of the class),\n    // we can make sure that only plain objects come out that way.\n    const objName = getConstructorName(value);\n\n    // Handle HTML Elements\n    if (/^HTML(\\w*)Element$/.test(objName)) {\n      return `[HTMLElement: ${objName}]`;\n    }\n\n    return `[object ${objName}]`;\n  } catch (err) {\n    return `**non-serializable** (${err})`;\n  }\n}\n/* eslint-enable complexity */\n\nfunction getConstructorName(value) {\n  const prototype = Object.getPrototypeOf(value);\n\n  return prototype ? prototype.constructor.name : 'null prototype';\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value) {\n  // eslint-disable-next-line no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction jsonSize(value) {\n  return utf8Length(JSON.stringify(value));\n}\n\n/**\n * Normalizes URLs in exceptions and stacktraces to a base path so Sentry can fingerprint\n * across platforms and working directory.\n *\n * @param url The URL to be normalized.\n * @param basePath The application base path.\n * @returns The normalized URL.\n */\nfunction normalizeUrlToBase(url, basePath) {\n  const escapedBase = basePath\n    // Backslash to forward\n    .replace(/\\\\/g, '/')\n    // Escape RegExp special characters\n    .replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&');\n\n  let newUrl = url;\n  try {\n    newUrl = decodeURI(url);\n  } catch (_Oo) {\n    // Sometime this breaks\n  }\n  return (\n    newUrl\n      .replace(/\\\\/g, '/')\n      .replace(/webpack:\\/?/g, '') // Remove intermediate base path\n      // eslint-disable-next-line @sentry-internal/sdk/no-regexp-constructor\n      .replace(new RegExp(`(file://)?/*${escapedBase}/*`, 'ig'), 'app:///')\n  );\n}\n\nexports.normalize = normalize;\nexports.normalizeToSize = normalizeToSize;\nexports.normalizeUrlToBase = normalizeUrlToBase;\n//# sourceMappingURL=normalize.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/normalize.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/object.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/object.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst browser = __webpack_require__(/*! ./browser.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/browser.js\");\nconst debugBuild = __webpack_require__(/*! ./debug-build.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/debug-build.js\");\nconst is = __webpack_require__(/*! ./is.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/is.js\");\nconst logger = __webpack_require__(/*! ./logger.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/logger.js\");\nconst string = __webpack_require__(/*! ./string.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/string.js\");\n\n/**\n * Replace a method in an object with a wrapped version of itself.\n *\n * @param source An object that contains a method to be wrapped.\n * @param name The name of the method to be wrapped.\n * @param replacementFactory A higher-order function that takes the original version of the given method and returns a\n * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to\n * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other\n * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.\n * @returns void\n */\nfunction fill(source, name, replacementFactory) {\n  if (!(name in source)) {\n    return;\n  }\n\n  const original = source[name] ;\n  const wrapped = replacementFactory(original) ;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    markFunctionWrapped(wrapped, original);\n  }\n\n  source[name] = wrapped;\n}\n\n/**\n * Defines a non-enumerable property on the given object.\n *\n * @param obj The object on which to set the property\n * @param name The name of the property to be set\n * @param value The value to which to set the property\n */\nfunction addNonEnumerableProperty(obj, name, value) {\n  try {\n    Object.defineProperty(obj, name, {\n      // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it\n      value: value,\n      writable: true,\n      configurable: true,\n    });\n  } catch (o_O) {\n    debugBuild.DEBUG_BUILD && logger.logger.log(`Failed to add non-enumerable property \"${name}\" to object`, obj);\n  }\n}\n\n/**\n * Remembers the original function on the wrapped function and\n * patches up the prototype.\n *\n * @param wrapped the wrapper function\n * @param original the original function that gets wrapped\n */\nfunction markFunctionWrapped(wrapped, original) {\n  try {\n    const proto = original.prototype || {};\n    wrapped.prototype = original.prototype = proto;\n    addNonEnumerableProperty(wrapped, '__sentry_original__', original);\n  } catch (o_O) {} // eslint-disable-line no-empty\n}\n\n/**\n * This extracts the original function if available.  See\n * `markFunctionWrapped` for more information.\n *\n * @param func the function to unwrap\n * @returns the unwrapped version of the function if available.\n */\nfunction getOriginalFunction(func) {\n  return func.__sentry_original__;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nfunction urlEncode(object) {\n  return Object.keys(object)\n    .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`)\n    .join('&');\n}\n\n/**\n * Transforms any `Error` or `Event` into a plain object with all of their enumerable properties, and some of their\n * non-enumerable properties attached.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n * @returns An Event or Error turned into an object - or the value argurment itself, when value is neither an Event nor\n *  an Error.\n */\nfunction convertToPlainObject(\n  value,\n)\n\n {\n  if (is.isError(value)) {\n    return {\n      message: value.message,\n      name: value.name,\n      stack: value.stack,\n      ...getOwnProperties(value),\n    };\n  } else if (is.isEvent(value)) {\n    const newObj\n\n = {\n      type: value.type,\n      target: serializeEventTarget(value.target),\n      currentTarget: serializeEventTarget(value.currentTarget),\n      ...getOwnProperties(value),\n    };\n\n    if (typeof CustomEvent !== 'undefined' && is.isInstanceOf(value, CustomEvent)) {\n      newObj.detail = value.detail;\n    }\n\n    return newObj;\n  } else {\n    return value;\n  }\n}\n\n/** Creates a string representation of the target of an `Event` object */\nfunction serializeEventTarget(target) {\n  try {\n    return is.isElement(target) ? browser.htmlTreeAsString(target) : Object.prototype.toString.call(target);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/** Filters out all but an object's own properties */\nfunction getOwnProperties(obj) {\n  if (typeof obj === 'object' && obj !== null) {\n    const extractedProps = {};\n    for (const property in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, property)) {\n        extractedProps[property] = (obj )[property];\n      }\n    }\n    return extractedProps;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\nfunction extractExceptionKeysForMessage(exception, maxLength = 40) {\n  const keys = Object.keys(convertToPlainObject(exception));\n  keys.sort();\n\n  const firstKey = keys[0];\n\n  if (!firstKey) {\n    return '[object has no keys]';\n  }\n\n  if (firstKey.length >= maxLength) {\n    return string.truncate(firstKey, maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return string.truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return a new object having removed all fields whose value was `undefined`.\n * Works recursively on objects and arrays.\n *\n * Attention: This function keeps circular references in the returned object.\n */\nfunction dropUndefinedKeys(inputValue) {\n  // This map keeps track of what already visited nodes map to.\n  // Our Set - based memoBuilder doesn't work here because we want to the output object to have the same circular\n  // references as the input object.\n  const memoizationMap = new Map();\n\n  // This function just proxies `_dropUndefinedKeys` to keep the `memoBuilder` out of this function's API\n  return _dropUndefinedKeys(inputValue, memoizationMap);\n}\n\nfunction _dropUndefinedKeys(inputValue, memoizationMap) {\n  if (isPojo(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the object it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    const returnValue = {};\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    for (const key of Object.keys(inputValue)) {\n      if (typeof inputValue[key] !== 'undefined') {\n        returnValue[key] = _dropUndefinedKeys(inputValue[key], memoizationMap);\n      }\n    }\n\n    return returnValue ;\n  }\n\n  if (Array.isArray(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the array it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    const returnValue = [];\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    inputValue.forEach((item) => {\n      returnValue.push(_dropUndefinedKeys(item, memoizationMap));\n    });\n\n    return returnValue ;\n  }\n\n  return inputValue;\n}\n\nfunction isPojo(input) {\n  if (!is.isPlainObject(input)) {\n    return false;\n  }\n\n  try {\n    const name = (Object.getPrototypeOf(input) ).constructor.name;\n    return !name || name === 'Object';\n  } catch (e) {\n    return true;\n  }\n}\n\n/**\n * Ensure that something is an object.\n *\n * Turns `undefined` and `null` into `String`s and all other primitives into instances of their respective wrapper\n * classes (String, Boolean, Number, etc.). Acts as the identity function on non-primitives.\n *\n * @param wat The subject of the objectification\n * @returns A version of `wat` which can safely be used with `Object` class methods\n */\nfunction objectify(wat) {\n  let objectified;\n  switch (true) {\n    case wat === undefined || wat === null:\n      objectified = new String(wat);\n      break;\n\n    // Though symbols and bigints do have wrapper classes (`Symbol` and `BigInt`, respectively), for whatever reason\n    // those classes don't have constructors which can be used with the `new` keyword. We therefore need to cast each as\n    // an object in order to wrap it.\n    case typeof wat === 'symbol' || typeof wat === 'bigint':\n      objectified = Object(wat);\n      break;\n\n    // this will catch the remaining primitives: `String`, `Number`, and `Boolean`\n    case is.isPrimitive(wat):\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      objectified = new (wat ).constructor(wat);\n      break;\n\n    // by process of elimination, at this point we know that `wat` must already be an object\n    default:\n      objectified = wat;\n      break;\n  }\n  return objectified;\n}\n\nexports.addNonEnumerableProperty = addNonEnumerableProperty;\nexports.convertToPlainObject = convertToPlainObject;\nexports.dropUndefinedKeys = dropUndefinedKeys;\nexports.extractExceptionKeysForMessage = extractExceptionKeysForMessage;\nexports.fill = fill;\nexports.getOriginalFunction = getOriginalFunction;\nexports.markFunctionWrapped = markFunctionWrapped;\nexports.objectify = objectify;\nexports.urlEncode = urlEncode;\n//# sourceMappingURL=object.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/object.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/path.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/path.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n// Slightly modified (no IE8 support, ES6) and transcribed to TypeScript\n// https://github.com/calvinmetcalf/rollup-plugin-node-builtins/blob/63ab8aacd013767445ca299e468d9a60a95328d7/src/es6/path.js\n//\n// Copyright Joyent, Inc.and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n/** JSDoc */\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  let up = 0;\n  for (let i = parts.length - 1; i >= 0; i--) {\n    const last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nconst splitPathRe = /^(\\S+:\\\\|\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^/\\\\]+?|)(\\.[^./\\\\]*|))(?:[/\\\\]*)$/;\n/** JSDoc */\nfunction splitPath(filename) {\n  // Truncate files names greater than 1024 characters to avoid regex dos\n  // https://github.com/getsentry/sentry-javascript/pull/8737#discussion_r1285719172\n  const truncated = filename.length > 1024 ? `<truncated>${filename.slice(-1024)}` : filename;\n  const parts = splitPathRe.exec(truncated);\n  return parts ? parts.slice(1) : [];\n}\n\n// path.resolve([from ...], to)\n// posix version\n/** JSDoc */\nfunction resolve(...args) {\n  let resolvedPath = '';\n  let resolvedAbsolute = false;\n\n  for (let i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    const path = i >= 0 ? args[i] : '/';\n\n    // Skip empty entries\n    if (!path) {\n      continue;\n    }\n\n    resolvedPath = `${path}/${resolvedPath}`;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(\n    resolvedPath.split('/').filter(p => !!p),\n    !resolvedAbsolute,\n  ).join('/');\n\n  return (resolvedAbsolute ? '/' : '') + resolvedPath || '.';\n}\n\n/** JSDoc */\nfunction trim(arr) {\n  let start = 0;\n  for (; start < arr.length; start++) {\n    if (arr[start] !== '') {\n      break;\n    }\n  }\n\n  let end = arr.length - 1;\n  for (; end >= 0; end--) {\n    if (arr[end] !== '') {\n      break;\n    }\n  }\n\n  if (start > end) {\n    return [];\n  }\n  return arr.slice(start, end - start + 1);\n}\n\n// path.relative(from, to)\n// posix version\n/** JSDoc */\nfunction relative(from, to) {\n  /* eslint-disable no-param-reassign */\n  from = resolve(from).slice(1);\n  to = resolve(to).slice(1);\n  /* eslint-enable no-param-reassign */\n\n  const fromParts = trim(from.split('/'));\n  const toParts = trim(to.split('/'));\n\n  const length = Math.min(fromParts.length, toParts.length);\n  let samePartsLength = length;\n  for (let i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  let outputParts = [];\n  for (let i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n}\n\n// path.normalize(path)\n// posix version\n/** JSDoc */\nfunction normalizePath(path) {\n  const isPathAbsolute = isAbsolute(path);\n  const trailingSlash = path.slice(-1) === '/';\n\n  // Normalize the path\n  let normalizedPath = normalizeArray(\n    path.split('/').filter(p => !!p),\n    !isPathAbsolute,\n  ).join('/');\n\n  if (!normalizedPath && !isPathAbsolute) {\n    normalizedPath = '.';\n  }\n  if (normalizedPath && trailingSlash) {\n    normalizedPath += '/';\n  }\n\n  return (isPathAbsolute ? '/' : '') + normalizedPath;\n}\n\n// posix version\n/** JSDoc */\nfunction isAbsolute(path) {\n  return path.charAt(0) === '/';\n}\n\n// posix version\n/** JSDoc */\nfunction join(...args) {\n  return normalizePath(args.join('/'));\n}\n\n/** JSDoc */\nfunction dirname(path) {\n  const result = splitPath(path);\n  const root = result[0] || '';\n  let dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.slice(0, dir.length - 1);\n  }\n\n  return root + dir;\n}\n\n/** JSDoc */\nfunction basename(path, ext) {\n  let f = splitPath(path)[2] || '';\n  if (ext && f.slice(ext.length * -1) === ext) {\n    f = f.slice(0, f.length - ext.length);\n  }\n  return f;\n}\n\nexports.basename = basename;\nexports.dirname = dirname;\nexports.isAbsolute = isAbsolute;\nexports.join = join;\nexports.normalizePath = normalizePath;\nexports.relative = relative;\nexports.resolve = resolve;\n//# sourceMappingURL=path.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/path.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/promisebuffer.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/promisebuffer.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst error = __webpack_require__(/*! ./error.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/error.js\");\nconst syncpromise = __webpack_require__(/*! ./syncpromise.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/syncpromise.js\");\n\n/**\n * Creates an new PromiseBuffer object with the specified limit\n * @param limit max number of promises that can be stored in the buffer\n */\nfunction makePromiseBuffer(limit) {\n  const buffer = [];\n\n  function isReady() {\n    return limit === undefined || buffer.length < limit;\n  }\n\n  /**\n   * Remove a promise from the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns Removed promise.\n   */\n  function remove(task) {\n    return buffer.splice(buffer.indexOf(task), 1)[0] || Promise.resolve(undefined);\n  }\n\n  /**\n   * Add a promise (representing an in-flight action) to the queue, and set it to remove itself on fulfillment.\n   *\n   * @param taskProducer A function producing any PromiseLike<T>; In previous versions this used to be `task:\n   *        PromiseLike<T>`, but under that model, Promises were instantly created on the call-site and their executor\n   *        functions therefore ran immediately. Thus, even if the buffer was full, the action still happened. By\n   *        requiring the promise to be wrapped in a function, we can defer promise creation until after the buffer\n   *        limit check.\n   * @returns The original promise.\n   */\n  function add(taskProducer) {\n    if (!isReady()) {\n      return syncpromise.rejectedSyncPromise(new error.SentryError('Not adding Promise because buffer limit was reached.'));\n    }\n\n    // start the task and add its promise to the queue\n    const task = taskProducer();\n    if (buffer.indexOf(task) === -1) {\n      buffer.push(task);\n    }\n    void task\n      .then(() => remove(task))\n      // Use `then(null, rejectionHandler)` rather than `catch(rejectionHandler)` so that we can use `PromiseLike`\n      // rather than `Promise`. `PromiseLike` doesn't have a `.catch` method, making its polyfill smaller. (ES5 didn't\n      // have promises, so TS has to polyfill when down-compiling.)\n      .then(null, () =>\n        remove(task).then(null, () => {\n          // We have to add another catch here because `remove()` starts a new promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Wait for all promises in the queue to resolve or for timeout to expire, whichever comes first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the queue is still non-empty. Passing `0` (or\n   * not passing anything) will make the promise wait as long as it takes for the queue to drain before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if the queue is already empty or drains before the timeout, and\n   * `false` otherwise\n   */\n  function drain(timeout) {\n    return new syncpromise.SyncPromise((resolve, reject) => {\n      let counter = buffer.length;\n\n      if (!counter) {\n        return resolve(true);\n      }\n\n      // wait for `timeout` ms and then resolve to `false` (if not cancelled first)\n      const capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n\n      // if all promises resolve in time, cancel the timer and resolve to `true`\n      buffer.forEach(item => {\n        void syncpromise.resolvedSyncPromise(item).then(() => {\n          if (!--counter) {\n            clearTimeout(capturedSetTimeout);\n            resolve(true);\n          }\n        }, reject);\n      });\n    });\n  }\n\n  return {\n    $: buffer,\n    add,\n    drain,\n  };\n}\n\nexports.makePromiseBuffer = makePromiseBuffer;\n//# sourceMappingURL=promisebuffer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL3Byb21pc2VidWZmZXIuanMiLCJtYXBwaW5ncyI6IkFBQUEsOENBQTZDLEVBQUUsYUFBYSxFQUFDOztBQUU3RCxjQUFjLG1CQUFPLENBQUMsaUhBQVk7QUFDbEMsb0JBQW9CLG1CQUFPLENBQUMsNkhBQWtCOztBQUU5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxrRUFBa0U7QUFDbEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87O0FBRVA7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsT0FBTztBQUNQLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEseUJBQXlCO0FBQ3pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLXByb2plY3QvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL3Byb21pc2VidWZmZXIuanM/YTBhMiJdLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG5jb25zdCBlcnJvciA9IHJlcXVpcmUoJy4vZXJyb3IuanMnKTtcbmNvbnN0IHN5bmNwcm9taXNlID0gcmVxdWlyZSgnLi9zeW5jcHJvbWlzZS5qcycpO1xuXG4vKipcbiAqIENyZWF0ZXMgYW4gbmV3IFByb21pc2VCdWZmZXIgb2JqZWN0IHdpdGggdGhlIHNwZWNpZmllZCBsaW1pdFxuICogQHBhcmFtIGxpbWl0IG1heCBudW1iZXIgb2YgcHJvbWlzZXMgdGhhdCBjYW4gYmUgc3RvcmVkIGluIHRoZSBidWZmZXJcbiAqL1xuZnVuY3Rpb24gbWFrZVByb21pc2VCdWZmZXIobGltaXQpIHtcbiAgY29uc3QgYnVmZmVyID0gW107XG5cbiAgZnVuY3Rpb24gaXNSZWFkeSgpIHtcbiAgICByZXR1cm4gbGltaXQgPT09IHVuZGVmaW5lZCB8fCBidWZmZXIubGVuZ3RoIDwgbGltaXQ7XG4gIH1cblxuICAvKipcbiAgICogUmVtb3ZlIGEgcHJvbWlzZSBmcm9tIHRoZSBxdWV1ZS5cbiAgICpcbiAgICogQHBhcmFtIHRhc2sgQ2FuIGJlIGFueSBQcm9taXNlTGlrZTxUPlxuICAgKiBAcmV0dXJucyBSZW1vdmVkIHByb21pc2UuXG4gICAqL1xuICBmdW5jdGlvbiByZW1vdmUodGFzaykge1xuICAgIHJldHVybiBidWZmZXIuc3BsaWNlKGJ1ZmZlci5pbmRleE9mKHRhc2spLCAxKVswXSB8fCBQcm9taXNlLnJlc29sdmUodW5kZWZpbmVkKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBBZGQgYSBwcm9taXNlIChyZXByZXNlbnRpbmcgYW4gaW4tZmxpZ2h0IGFjdGlvbikgdG8gdGhlIHF1ZXVlLCBhbmQgc2V0IGl0IHRvIHJlbW92ZSBpdHNlbGYgb24gZnVsZmlsbG1lbnQuXG4gICAqXG4gICAqIEBwYXJhbSB0YXNrUHJvZHVjZXIgQSBmdW5jdGlvbiBwcm9kdWNpbmcgYW55IFByb21pc2VMaWtlPFQ+OyBJbiBwcmV2aW91cyB2ZXJzaW9ucyB0aGlzIHVzZWQgdG8gYmUgYHRhc2s6XG4gICAqICAgICAgICBQcm9taXNlTGlrZTxUPmAsIGJ1dCB1bmRlciB0aGF0IG1vZGVsLCBQcm9taXNlcyB3ZXJlIGluc3RhbnRseSBjcmVhdGVkIG9uIHRoZSBjYWxsLXNpdGUgYW5kIHRoZWlyIGV4ZWN1dG9yXG4gICAqICAgICAgICBmdW5jdGlvbnMgdGhlcmVmb3JlIHJhbiBpbW1lZGlhdGVseS4gVGh1cywgZXZlbiBpZiB0aGUgYnVmZmVyIHdhcyBmdWxsLCB0aGUgYWN0aW9uIHN0aWxsIGhhcHBlbmVkLiBCeVxuICAgKiAgICAgICAgcmVxdWlyaW5nIHRoZSBwcm9taXNlIHRvIGJlIHdyYXBwZWQgaW4gYSBmdW5jdGlvbiwgd2UgY2FuIGRlZmVyIHByb21pc2UgY3JlYXRpb24gdW50aWwgYWZ0ZXIgdGhlIGJ1ZmZlclxuICAgKiAgICAgICAgbGltaXQgY2hlY2suXG4gICAqIEByZXR1cm5zIFRoZSBvcmlnaW5hbCBwcm9taXNlLlxuICAgKi9cbiAgZnVuY3Rpb24gYWRkKHRhc2tQcm9kdWNlcikge1xuICAgIGlmICghaXNSZWFkeSgpKSB7XG4gICAgICByZXR1cm4gc3luY3Byb21pc2UucmVqZWN0ZWRTeW5jUHJvbWlzZShuZXcgZXJyb3IuU2VudHJ5RXJyb3IoJ05vdCBhZGRpbmcgUHJvbWlzZSBiZWNhdXNlIGJ1ZmZlciBsaW1pdCB3YXMgcmVhY2hlZC4nKSk7XG4gICAgfVxuXG4gICAgLy8gc3RhcnQgdGhlIHRhc2sgYW5kIGFkZCBpdHMgcHJvbWlzZSB0byB0aGUgcXVldWVcbiAgICBjb25zdCB0YXNrID0gdGFza1Byb2R1Y2VyKCk7XG4gICAgaWYgKGJ1ZmZlci5pbmRleE9mKHRhc2spID09PSAtMSkge1xuICAgICAgYnVmZmVyLnB1c2godGFzayk7XG4gICAgfVxuICAgIHZvaWQgdGFza1xuICAgICAgLnRoZW4oKCkgPT4gcmVtb3ZlKHRhc2spKVxuICAgICAgLy8gVXNlIGB0aGVuKG51bGwsIHJlamVjdGlvbkhhbmRsZXIpYCByYXRoZXIgdGhhbiBgY2F0Y2gocmVqZWN0aW9uSGFuZGxlcilgIHNvIHRoYXQgd2UgY2FuIHVzZSBgUHJvbWlzZUxpa2VgXG4gICAgICAvLyByYXRoZXIgdGhhbiBgUHJvbWlzZWAuIGBQcm9taXNlTGlrZWAgZG9lc24ndCBoYXZlIGEgYC5jYXRjaGAgbWV0aG9kLCBtYWtpbmcgaXRzIHBvbHlmaWxsIHNtYWxsZXIuIChFUzUgZGlkbid0XG4gICAgICAvLyBoYXZlIHByb21pc2VzLCBzbyBUUyBoYXMgdG8gcG9seWZpbGwgd2hlbiBkb3duLWNvbXBpbGluZy4pXG4gICAgICAudGhlbihudWxsLCAoKSA9PlxuICAgICAgICByZW1vdmUodGFzaykudGhlbihudWxsLCAoKSA9PiB7XG4gICAgICAgICAgLy8gV2UgaGF2ZSB0byBhZGQgYW5vdGhlciBjYXRjaCBoZXJlIGJlY2F1c2UgYHJlbW92ZSgpYCBzdGFydHMgYSBuZXcgcHJvbWlzZSBjaGFpbi5cbiAgICAgICAgfSksXG4gICAgICApO1xuICAgIHJldHVybiB0YXNrO1xuICB9XG5cbiAgLyoqXG4gICAqIFdhaXQgZm9yIGFsbCBwcm9taXNlcyBpbiB0aGUgcXVldWUgdG8gcmVzb2x2ZSBvciBmb3IgdGltZW91dCB0byBleHBpcmUsIHdoaWNoZXZlciBjb21lcyBmaXJzdC5cbiAgICpcbiAgICogQHBhcmFtIHRpbWVvdXQgVGhlIHRpbWUsIGluIG1zLCBhZnRlciB3aGljaCB0byByZXNvbHZlIHRvIGBmYWxzZWAgaWYgdGhlIHF1ZXVlIGlzIHN0aWxsIG5vbi1lbXB0eS4gUGFzc2luZyBgMGAgKG9yXG4gICAqIG5vdCBwYXNzaW5nIGFueXRoaW5nKSB3aWxsIG1ha2UgdGhlIHByb21pc2Ugd2FpdCBhcyBsb25nIGFzIGl0IHRha2VzIGZvciB0aGUgcXVldWUgdG8gZHJhaW4gYmVmb3JlIHJlc29sdmluZyB0b1xuICAgKiBgdHJ1ZWAuXG4gICAqIEByZXR1cm5zIEEgcHJvbWlzZSB3aGljaCB3aWxsIHJlc29sdmUgdG8gYHRydWVgIGlmIHRoZSBxdWV1ZSBpcyBhbHJlYWR5IGVtcHR5IG9yIGRyYWlucyBiZWZvcmUgdGhlIHRpbWVvdXQsIGFuZFxuICAgKiBgZmFsc2VgIG90aGVyd2lzZVxuICAgKi9cbiAgZnVuY3Rpb24gZHJhaW4odGltZW91dCkge1xuICAgIHJldHVybiBuZXcgc3luY3Byb21pc2UuU3luY1Byb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgbGV0IGNvdW50ZXIgPSBidWZmZXIubGVuZ3RoO1xuXG4gICAgICBpZiAoIWNvdW50ZXIpIHtcbiAgICAgICAgcmV0dXJuIHJlc29sdmUodHJ1ZSk7XG4gICAgICB9XG5cbiAgICAgIC8vIHdhaXQgZm9yIGB0aW1lb3V0YCBtcyBhbmQgdGhlbiByZXNvbHZlIHRvIGBmYWxzZWAgKGlmIG5vdCBjYW5jZWxsZWQgZmlyc3QpXG4gICAgICBjb25zdCBjYXB0dXJlZFNldFRpbWVvdXQgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgaWYgKHRpbWVvdXQgJiYgdGltZW91dCA+IDApIHtcbiAgICAgICAgICByZXNvbHZlKGZhbHNlKTtcbiAgICAgICAgfVxuICAgICAgfSwgdGltZW91dCk7XG5cbiAgICAgIC8vIGlmIGFsbCBwcm9taXNlcyByZXNvbHZlIGluIHRpbWUsIGNhbmNlbCB0aGUgdGltZXIgYW5kIHJlc29sdmUgdG8gYHRydWVgXG4gICAgICBidWZmZXIuZm9yRWFjaChpdGVtID0+IHtcbiAgICAgICAgdm9pZCBzeW5jcHJvbWlzZS5yZXNvbHZlZFN5bmNQcm9taXNlKGl0ZW0pLnRoZW4oKCkgPT4ge1xuICAgICAgICAgIGlmICghLS1jb3VudGVyKSB7XG4gICAgICAgICAgICBjbGVhclRpbWVvdXQoY2FwdHVyZWRTZXRUaW1lb3V0KTtcbiAgICAgICAgICAgIHJlc29sdmUodHJ1ZSk7XG4gICAgICAgICAgfVxuICAgICAgICB9LCByZWplY3QpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4ge1xuICAgICQ6IGJ1ZmZlcixcbiAgICBhZGQsXG4gICAgZHJhaW4sXG4gIH07XG59XG5cbmV4cG9ydHMubWFrZVByb21pc2VCdWZmZXIgPSBtYWtlUHJvbWlzZUJ1ZmZlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXByb21pc2VidWZmZXIuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/promisebuffer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/propagationContext.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/propagationContext.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst misc = __webpack_require__(/*! ./misc.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/misc.js\");\n\n/**\n * Returns a new minimal propagation context\n */\nfunction generatePropagationContext() {\n  return {\n    traceId: misc.uuid4(),\n    spanId: misc.uuid4().substring(16),\n  };\n}\n\nexports.generatePropagationContext = generatePropagationContext;\n//# sourceMappingURL=propagationContext.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL3Byb3BhZ2F0aW9uQ29udGV4dC5qcyIsIm1hcHBpbmdzIjoiQUFBQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7O0FBRTdELGFBQWEsbUJBQU8sQ0FBQywrR0FBVzs7QUFFaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGtDQUFrQztBQUNsQyIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy9wcm9wYWdhdGlvbkNvbnRleHQuanM/ZTFhOSJdLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG5jb25zdCBtaXNjID0gcmVxdWlyZSgnLi9taXNjLmpzJyk7XG5cbi8qKlxuICogUmV0dXJucyBhIG5ldyBtaW5pbWFsIHByb3BhZ2F0aW9uIGNvbnRleHRcbiAqL1xuZnVuY3Rpb24gZ2VuZXJhdGVQcm9wYWdhdGlvbkNvbnRleHQoKSB7XG4gIHJldHVybiB7XG4gICAgdHJhY2VJZDogbWlzYy51dWlkNCgpLFxuICAgIHNwYW5JZDogbWlzYy51dWlkNCgpLnN1YnN0cmluZygxNiksXG4gIH07XG59XG5cbmV4cG9ydHMuZ2VuZXJhdGVQcm9wYWdhdGlvbkNvbnRleHQgPSBnZW5lcmF0ZVByb3BhZ2F0aW9uQ29udGV4dDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXByb3BhZ2F0aW9uQ29udGV4dC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/propagationContext.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/ratelimit.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/ratelimit.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n// Intentionally keeping the key broad, as we don't know for sure what rate limit headers get returned from backend\n\nconst DEFAULT_RETRY_AFTER = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param header string representation of 'Retry-After' header\n * @param now current unix timestamp\n *\n */\nfunction parseRetryAfterHeader(header, now = Date.now()) {\n  const headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  const headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return DEFAULT_RETRY_AFTER;\n}\n\n/**\n * Gets the time that the given category is disabled until for rate limiting.\n * In case no category-specific limit is set but a general rate limit across all categories is active,\n * that time is returned.\n *\n * @return the time in ms that the category is disabled until or 0 if there's no active rate limit.\n */\nfunction disabledUntil(limits, dataCategory) {\n  return limits[dataCategory] || limits.all || 0;\n}\n\n/**\n * Checks if a category is rate limited\n */\nfunction isRateLimited(limits, dataCategory, now = Date.now()) {\n  return disabledUntil(limits, dataCategory) > now;\n}\n\n/**\n * Update ratelimits from incoming headers.\n *\n * @return the updated RateLimits object.\n */\nfunction updateRateLimits(\n  limits,\n  { statusCode, headers },\n  now = Date.now(),\n) {\n  const updatedRateLimits = {\n    ...limits,\n  };\n\n  // \"The name is case-insensitive.\"\n  // https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n  const rateLimitHeader = headers && headers['x-sentry-rate-limits'];\n  const retryAfterHeader = headers && headers['retry-after'];\n\n  if (rateLimitHeader) {\n    /**\n     * rate limit headers are of the form\n     *     <header>,<header>,..\n     * where each <header> is of the form\n     *     <retry_after>: <categories>: <scope>: <reason_code>: <namespaces>\n     * where\n     *     <retry_after> is a delay in seconds\n     *     <categories> is the event type(s) (error, transaction, etc) being rate limited and is of the form\n     *         <category>;<category>;...\n     *     <scope> is what's being limited (org, project, or key) - ignored by SDK\n     *     <reason_code> is an arbitrary string like \"org_quota\" - ignored by SDK\n     *     <namespaces> Semicolon-separated list of metric namespace identifiers. Defines which namespace(s) will be affected.\n     *         Only present if rate limit applies to the metric_bucket data category.\n     */\n    for (const limit of rateLimitHeader.trim().split(',')) {\n      const [retryAfter, categories, , , namespaces] = limit.split(':', 5) ;\n      const headerDelay = parseInt(retryAfter, 10);\n      const delay = (!isNaN(headerDelay) ? headerDelay : 60) * 1000; // 60sec default\n      if (!categories) {\n        updatedRateLimits.all = now + delay;\n      } else {\n        for (const category of categories.split(';')) {\n          if (category === 'metric_bucket') {\n            // namespaces will be present when category === 'metric_bucket'\n            if (!namespaces || namespaces.split(';').includes('custom')) {\n              updatedRateLimits[category] = now + delay;\n            }\n          } else {\n            updatedRateLimits[category] = now + delay;\n          }\n        }\n      }\n    }\n  } else if (retryAfterHeader) {\n    updatedRateLimits.all = now + parseRetryAfterHeader(retryAfterHeader, now);\n  } else if (statusCode === 429) {\n    updatedRateLimits.all = now + 60 * 1000;\n  }\n\n  return updatedRateLimits;\n}\n\nexports.DEFAULT_RETRY_AFTER = DEFAULT_RETRY_AFTER;\nexports.disabledUntil = disabledUntil;\nexports.isRateLimited = isRateLimited;\nexports.parseRetryAfterHeader = parseRetryAfterHeader;\nexports.updateRateLimits = updateRateLimits;\n//# sourceMappingURL=ratelimit.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL3JhdGVsaW1pdC5qcyIsIm1hcHBpbmdzIjoiQUFBQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7O0FBRTdEOztBQUVBLHVDQUF1Qzs7QUFFdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MsT0FBTztBQUN6QztBQUNBO0FBQ0E7O0FBRUEsbUNBQW1DLE9BQU87QUFDMUM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSxxQkFBcUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsV0FBVztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUVBQXFFO0FBQ3JFO0FBQ0E7QUFDQSxRQUFRO0FBQ1Isa0RBQWtEO0FBQ2xEO0FBQ0E7QUFDQSxrREFBa0Q7QUFDbEQ7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSwyQkFBMkI7QUFDM0IscUJBQXFCO0FBQ3JCLHFCQUFxQjtBQUNyQiw2QkFBNkI7QUFDN0Isd0JBQXdCO0FBQ3hCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLXByb2plY3QvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL3JhdGVsaW1pdC5qcz84ZWY3Il0sInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG5cbi8vIEludGVudGlvbmFsbHkga2VlcGluZyB0aGUga2V5IGJyb2FkLCBhcyB3ZSBkb24ndCBrbm93IGZvciBzdXJlIHdoYXQgcmF0ZSBsaW1pdCBoZWFkZXJzIGdldCByZXR1cm5lZCBmcm9tIGJhY2tlbmRcblxuY29uc3QgREVGQVVMVF9SRVRSWV9BRlRFUiA9IDYwICogMTAwMDsgLy8gNjAgc2Vjb25kc1xuXG4vKipcbiAqIEV4dHJhY3RzIFJldHJ5LUFmdGVyIHZhbHVlIGZyb20gdGhlIHJlcXVlc3QgaGVhZGVyIG9yIHJldHVybnMgZGVmYXVsdCB2YWx1ZVxuICogQHBhcmFtIGhlYWRlciBzdHJpbmcgcmVwcmVzZW50YXRpb24gb2YgJ1JldHJ5LUFmdGVyJyBoZWFkZXJcbiAqIEBwYXJhbSBub3cgY3VycmVudCB1bml4IHRpbWVzdGFtcFxuICpcbiAqL1xuZnVuY3Rpb24gcGFyc2VSZXRyeUFmdGVySGVhZGVyKGhlYWRlciwgbm93ID0gRGF0ZS5ub3coKSkge1xuICBjb25zdCBoZWFkZXJEZWxheSA9IHBhcnNlSW50KGAke2hlYWRlcn1gLCAxMCk7XG4gIGlmICghaXNOYU4oaGVhZGVyRGVsYXkpKSB7XG4gICAgcmV0dXJuIGhlYWRlckRlbGF5ICogMTAwMDtcbiAgfVxuXG4gIGNvbnN0IGhlYWRlckRhdGUgPSBEYXRlLnBhcnNlKGAke2hlYWRlcn1gKTtcbiAgaWYgKCFpc05hTihoZWFkZXJEYXRlKSkge1xuICAgIHJldHVybiBoZWFkZXJEYXRlIC0gbm93O1xuICB9XG5cbiAgcmV0dXJuIERFRkFVTFRfUkVUUllfQUZURVI7XG59XG5cbi8qKlxuICogR2V0cyB0aGUgdGltZSB0aGF0IHRoZSBnaXZlbiBjYXRlZ29yeSBpcyBkaXNhYmxlZCB1bnRpbCBmb3IgcmF0ZSBsaW1pdGluZy5cbiAqIEluIGNhc2Ugbm8gY2F0ZWdvcnktc3BlY2lmaWMgbGltaXQgaXMgc2V0IGJ1dCBhIGdlbmVyYWwgcmF0ZSBsaW1pdCBhY3Jvc3MgYWxsIGNhdGVnb3JpZXMgaXMgYWN0aXZlLFxuICogdGhhdCB0aW1lIGlzIHJldHVybmVkLlxuICpcbiAqIEByZXR1cm4gdGhlIHRpbWUgaW4gbXMgdGhhdCB0aGUgY2F0ZWdvcnkgaXMgZGlzYWJsZWQgdW50aWwgb3IgMCBpZiB0aGVyZSdzIG5vIGFjdGl2ZSByYXRlIGxpbWl0LlxuICovXG5mdW5jdGlvbiBkaXNhYmxlZFVudGlsKGxpbWl0cywgZGF0YUNhdGVnb3J5KSB7XG4gIHJldHVybiBsaW1pdHNbZGF0YUNhdGVnb3J5XSB8fCBsaW1pdHMuYWxsIHx8IDA7XG59XG5cbi8qKlxuICogQ2hlY2tzIGlmIGEgY2F0ZWdvcnkgaXMgcmF0ZSBsaW1pdGVkXG4gKi9cbmZ1bmN0aW9uIGlzUmF0ZUxpbWl0ZWQobGltaXRzLCBkYXRhQ2F0ZWdvcnksIG5vdyA9IERhdGUubm93KCkpIHtcbiAgcmV0dXJuIGRpc2FibGVkVW50aWwobGltaXRzLCBkYXRhQ2F0ZWdvcnkpID4gbm93O1xufVxuXG4vKipcbiAqIFVwZGF0ZSByYXRlbGltaXRzIGZyb20gaW5jb21pbmcgaGVhZGVycy5cbiAqXG4gKiBAcmV0dXJuIHRoZSB1cGRhdGVkIFJhdGVMaW1pdHMgb2JqZWN0LlxuICovXG5mdW5jdGlvbiB1cGRhdGVSYXRlTGltaXRzKFxuICBsaW1pdHMsXG4gIHsgc3RhdHVzQ29kZSwgaGVhZGVycyB9LFxuICBub3cgPSBEYXRlLm5vdygpLFxuKSB7XG4gIGNvbnN0IHVwZGF0ZWRSYXRlTGltaXRzID0ge1xuICAgIC4uLmxpbWl0cyxcbiAgfTtcblxuICAvLyBcIlRoZSBuYW1lIGlzIGNhc2UtaW5zZW5zaXRpdmUuXCJcbiAgLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0hlYWRlcnMvZ2V0XG4gIGNvbnN0IHJhdGVMaW1pdEhlYWRlciA9IGhlYWRlcnMgJiYgaGVhZGVyc1sneC1zZW50cnktcmF0ZS1saW1pdHMnXTtcbiAgY29uc3QgcmV0cnlBZnRlckhlYWRlciA9IGhlYWRlcnMgJiYgaGVhZGVyc1sncmV0cnktYWZ0ZXInXTtcblxuICBpZiAocmF0ZUxpbWl0SGVhZGVyKSB7XG4gICAgLyoqXG4gICAgICogcmF0ZSBsaW1pdCBoZWFkZXJzIGFyZSBvZiB0aGUgZm9ybVxuICAgICAqICAgICA8aGVhZGVyPiw8aGVhZGVyPiwuLlxuICAgICAqIHdoZXJlIGVhY2ggPGhlYWRlcj4gaXMgb2YgdGhlIGZvcm1cbiAgICAgKiAgICAgPHJldHJ5X2FmdGVyPjogPGNhdGVnb3JpZXM+OiA8c2NvcGU+OiA8cmVhc29uX2NvZGU+OiA8bmFtZXNwYWNlcz5cbiAgICAgKiB3aGVyZVxuICAgICAqICAgICA8cmV0cnlfYWZ0ZXI+IGlzIGEgZGVsYXkgaW4gc2Vjb25kc1xuICAgICAqICAgICA8Y2F0ZWdvcmllcz4gaXMgdGhlIGV2ZW50IHR5cGUocykgKGVycm9yLCB0cmFuc2FjdGlvbiwgZXRjKSBiZWluZyByYXRlIGxpbWl0ZWQgYW5kIGlzIG9mIHRoZSBmb3JtXG4gICAgICogICAgICAgICA8Y2F0ZWdvcnk+OzxjYXRlZ29yeT47Li4uXG4gICAgICogICAgIDxzY29wZT4gaXMgd2hhdCdzIGJlaW5nIGxpbWl0ZWQgKG9yZywgcHJvamVjdCwgb3Iga2V5KSAtIGlnbm9yZWQgYnkgU0RLXG4gICAgICogICAgIDxyZWFzb25fY29kZT4gaXMgYW4gYXJiaXRyYXJ5IHN0cmluZyBsaWtlIFwib3JnX3F1b3RhXCIgLSBpZ25vcmVkIGJ5IFNES1xuICAgICAqICAgICA8bmFtZXNwYWNlcz4gU2VtaWNvbG9uLXNlcGFyYXRlZCBsaXN0IG9mIG1ldHJpYyBuYW1lc3BhY2UgaWRlbnRpZmllcnMuIERlZmluZXMgd2hpY2ggbmFtZXNwYWNlKHMpIHdpbGwgYmUgYWZmZWN0ZWQuXG4gICAgICogICAgICAgICBPbmx5IHByZXNlbnQgaWYgcmF0ZSBsaW1pdCBhcHBsaWVzIHRvIHRoZSBtZXRyaWNfYnVja2V0IGRhdGEgY2F0ZWdvcnkuXG4gICAgICovXG4gICAgZm9yIChjb25zdCBsaW1pdCBvZiByYXRlTGltaXRIZWFkZXIudHJpbSgpLnNwbGl0KCcsJykpIHtcbiAgICAgIGNvbnN0IFtyZXRyeUFmdGVyLCBjYXRlZ29yaWVzLCAsICwgbmFtZXNwYWNlc10gPSBsaW1pdC5zcGxpdCgnOicsIDUpIDtcbiAgICAgIGNvbnN0IGhlYWRlckRlbGF5ID0gcGFyc2VJbnQocmV0cnlBZnRlciwgMTApO1xuICAgICAgY29uc3QgZGVsYXkgPSAoIWlzTmFOKGhlYWRlckRlbGF5KSA/IGhlYWRlckRlbGF5IDogNjApICogMTAwMDsgLy8gNjBzZWMgZGVmYXVsdFxuICAgICAgaWYgKCFjYXRlZ29yaWVzKSB7XG4gICAgICAgIHVwZGF0ZWRSYXRlTGltaXRzLmFsbCA9IG5vdyArIGRlbGF5O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZm9yIChjb25zdCBjYXRlZ29yeSBvZiBjYXRlZ29yaWVzLnNwbGl0KCc7JykpIHtcbiAgICAgICAgICBpZiAoY2F0ZWdvcnkgPT09ICdtZXRyaWNfYnVja2V0Jykge1xuICAgICAgICAgICAgLy8gbmFtZXNwYWNlcyB3aWxsIGJlIHByZXNlbnQgd2hlbiBjYXRlZ29yeSA9PT0gJ21ldHJpY19idWNrZXQnXG4gICAgICAgICAgICBpZiAoIW5hbWVzcGFjZXMgfHwgbmFtZXNwYWNlcy5zcGxpdCgnOycpLmluY2x1ZGVzKCdjdXN0b20nKSkge1xuICAgICAgICAgICAgICB1cGRhdGVkUmF0ZUxpbWl0c1tjYXRlZ29yeV0gPSBub3cgKyBkZWxheTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdXBkYXRlZFJhdGVMaW1pdHNbY2F0ZWdvcnldID0gbm93ICsgZGVsYXk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9IGVsc2UgaWYgKHJldHJ5QWZ0ZXJIZWFkZXIpIHtcbiAgICB1cGRhdGVkUmF0ZUxpbWl0cy5hbGwgPSBub3cgKyBwYXJzZVJldHJ5QWZ0ZXJIZWFkZXIocmV0cnlBZnRlckhlYWRlciwgbm93KTtcbiAgfSBlbHNlIGlmIChzdGF0dXNDb2RlID09PSA0MjkpIHtcbiAgICB1cGRhdGVkUmF0ZUxpbWl0cy5hbGwgPSBub3cgKyA2MCAqIDEwMDA7XG4gIH1cblxuICByZXR1cm4gdXBkYXRlZFJhdGVMaW1pdHM7XG59XG5cbmV4cG9ydHMuREVGQVVMVF9SRVRSWV9BRlRFUiA9IERFRkFVTFRfUkVUUllfQUZURVI7XG5leHBvcnRzLmRpc2FibGVkVW50aWwgPSBkaXNhYmxlZFVudGlsO1xuZXhwb3J0cy5pc1JhdGVMaW1pdGVkID0gaXNSYXRlTGltaXRlZDtcbmV4cG9ydHMucGFyc2VSZXRyeUFmdGVySGVhZGVyID0gcGFyc2VSZXRyeUFmdGVySGVhZGVyO1xuZXhwb3J0cy51cGRhdGVSYXRlTGltaXRzID0gdXBkYXRlUmF0ZUxpbWl0cztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJhdGVsaW1pdC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/ratelimit.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/requestdata.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/requestdata.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst cookie = __webpack_require__(/*! ./cookie.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/cookie.js\");\nconst debugBuild = __webpack_require__(/*! ./debug-build.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/debug-build.js\");\nconst is = __webpack_require__(/*! ./is.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/is.js\");\nconst logger = __webpack_require__(/*! ./logger.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/logger.js\");\nconst normalize = __webpack_require__(/*! ./normalize.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/normalize.js\");\nconst url = __webpack_require__(/*! ./url.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/url.js\");\n\nconst DEFAULT_INCLUDES = {\n  ip: false,\n  request: true,\n  transaction: true,\n  user: true,\n};\nconst DEFAULT_REQUEST_INCLUDES = ['cookies', 'data', 'headers', 'method', 'query_string', 'url'];\nconst DEFAULT_USER_INCLUDES = ['id', 'username', 'email'];\n\n/**\n * Options deciding what parts of the request to use when enhancing an event\n */\n\n/**\n * Extracts a complete and parameterized path from the request object and uses it to construct transaction name.\n * If the parameterized transaction name cannot be extracted, we fall back to the raw URL.\n *\n * Additionally, this function determines and returns the transaction name source\n *\n * eg. GET /mountpoint/user/:id\n *\n * @param req A request object\n * @param options What to include in the transaction name (method, path, or a custom route name to be\n *                used instead of the request's route)\n *\n * @returns A tuple of the fully constructed transaction name [0] and its source [1] (can be either 'route' or 'url')\n */\nfunction extractPathForTransaction(\n  req,\n  options = {},\n) {\n  const method = req.method && req.method.toUpperCase();\n\n  let path = '';\n  let source = 'url';\n\n  // Check to see if there's a parameterized route we can use (as there is in Express)\n  if (options.customRoute || req.route) {\n    path = options.customRoute || `${req.baseUrl || ''}${req.route && req.route.path}`;\n    source = 'route';\n  }\n\n  // Otherwise, just take the original URL\n  else if (req.originalUrl || req.url) {\n    path = url.stripUrlQueryAndFragment(req.originalUrl || req.url || '');\n  }\n\n  let name = '';\n  if (options.method && method) {\n    name += method;\n  }\n  if (options.method && options.path) {\n    name += ' ';\n  }\n  if (options.path && path) {\n    name += path;\n  }\n\n  return [name, source];\n}\n\n/** JSDoc */\nfunction extractTransaction(req, type) {\n  switch (type) {\n    case 'path': {\n      return extractPathForTransaction(req, { path: true })[0];\n    }\n    case 'handler': {\n      return (req.route && req.route.stack && req.route.stack[0] && req.route.stack[0].name) || '<anonymous>';\n    }\n    case 'methodPath':\n    default: {\n      // if exist _reconstructedRoute return that path instead of route.path\n      const customRoute = req._reconstructedRoute ? req._reconstructedRoute : undefined;\n      return extractPathForTransaction(req, { path: true, method: true, customRoute })[0];\n    }\n  }\n}\n\n/** JSDoc */\nfunction extractUserData(\n  user\n\n,\n  keys,\n) {\n  const extractedUser = {};\n  const attributes = Array.isArray(keys) ? keys : DEFAULT_USER_INCLUDES;\n\n  attributes.forEach(key => {\n    if (user && key in user) {\n      extractedUser[key] = user[key];\n    }\n  });\n\n  return extractedUser;\n}\n\n/**\n * Normalize data from the request object, accounting for framework differences.\n *\n * @param req The request object from which to extract data\n * @param options.include An optional array of keys to include in the normalized data. Defaults to\n * DEFAULT_REQUEST_INCLUDES if not provided.\n * @param options.deps Injected, platform-specific dependencies\n * @returns An object containing normalized request data\n */\nfunction extractRequestData(\n  req,\n  options\n\n,\n) {\n  const { include = DEFAULT_REQUEST_INCLUDES } = options || {};\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const requestData = {};\n\n  // headers:\n  //   node, express, koa, nextjs: req.headers\n  const headers = (req.headers || {})\n\n;\n  // method:\n  //   node, express, koa, nextjs: req.method\n  const method = req.method;\n  // host:\n  //   express: req.hostname in > 4 and req.host in < 4\n  //   koa: req.host\n  //   node, nextjs: req.headers.host\n  // Express 4 mistakenly strips off port number from req.host / req.hostname so we can't rely on them\n  // See: https://github.com/expressjs/express/issues/3047#issuecomment-236653223\n  // Also: https://github.com/getsentry/sentry-javascript/issues/1917\n  const host = headers.host || req.hostname || req.host || '<no host>';\n  // protocol:\n  //   node, nextjs: <n/a>\n  //   express, koa: req.protocol\n  const protocol = req.protocol === 'https' || (req.socket && req.socket.encrypted) ? 'https' : 'http';\n  // url (including path and query string):\n  //   node, express: req.originalUrl\n  //   koa, nextjs: req.url\n  const originalUrl = req.originalUrl || req.url || '';\n  // absolute url\n  const absoluteUrl = originalUrl.startsWith(protocol) ? originalUrl : `${protocol}://${host}${originalUrl}`;\n  include.forEach(key => {\n    switch (key) {\n      case 'headers': {\n        requestData.headers = headers;\n\n        // Remove the Cookie header in case cookie data should not be included in the event\n        if (!include.includes('cookies')) {\n          delete (requestData.headers ).cookie;\n        }\n\n        break;\n      }\n      case 'method': {\n        requestData.method = method;\n        break;\n      }\n      case 'url': {\n        requestData.url = absoluteUrl;\n        break;\n      }\n      case 'cookies': {\n        // cookies:\n        //   node, express, koa: req.headers.cookie\n        //   vercel, sails.js, express (w/ cookie middleware), nextjs: req.cookies\n        requestData.cookies =\n          // TODO (v8 / #5257): We're only sending the empty object for backwards compatibility, so the last bit can\n          // come off in v8\n          req.cookies || (headers.cookie && cookie.parseCookie(headers.cookie)) || {};\n        break;\n      }\n      case 'query_string': {\n        // query string:\n        //   node: req.url (raw)\n        //   express, koa, nextjs: req.query\n        requestData.query_string = extractQueryParams(req);\n        break;\n      }\n      case 'data': {\n        if (method === 'GET' || method === 'HEAD') {\n          break;\n        }\n        // body data:\n        //   express, koa, nextjs: req.body\n        //\n        //   when using node by itself, you have to read the incoming stream(see\n        //   https://nodejs.dev/learn/get-http-request-body-data-using-nodejs); if a user is doing that, we can't know\n        //   where they're going to store the final result, so they'll have to capture this data themselves\n        if (req.body !== undefined) {\n          requestData.data = is.isString(req.body) ? req.body : JSON.stringify(normalize.normalize(req.body));\n        }\n        break;\n      }\n      default: {\n        if ({}.hasOwnProperty.call(req, key)) {\n          requestData[key] = (req )[key];\n        }\n      }\n    }\n  });\n\n  return requestData;\n}\n\n/**\n * Add data from the given request to the given event\n *\n * @param event The event to which the request data will be added\n * @param req Request object\n * @param options.include Flags to control what data is included\n * @param options.deps Injected platform-specific dependencies\n * @returns The mutated `Event` object\n */\nfunction addRequestDataToEvent(\n  event,\n  req,\n  options,\n) {\n  const include = {\n    ...DEFAULT_INCLUDES,\n    ...(options && options.include),\n  };\n\n  if (include.request) {\n    const extractedRequestData = Array.isArray(include.request)\n      ? extractRequestData(req, { include: include.request })\n      : extractRequestData(req);\n\n    event.request = {\n      ...event.request,\n      ...extractedRequestData,\n    };\n  }\n\n  if (include.user) {\n    const extractedUser = req.user && is.isPlainObject(req.user) ? extractUserData(req.user, include.user) : {};\n\n    if (Object.keys(extractedUser).length) {\n      event.user = {\n        ...event.user,\n        ...extractedUser,\n      };\n    }\n  }\n\n  // client ip:\n  //   node, nextjs: req.socket.remoteAddress\n  //   express, koa: req.ip\n  if (include.ip) {\n    const ip = req.ip || (req.socket && req.socket.remoteAddress);\n    if (ip) {\n      event.user = {\n        ...event.user,\n        ip_address: ip,\n      };\n    }\n  }\n\n  if (include.transaction && !event.transaction && event.type === 'transaction') {\n    // TODO do we even need this anymore?\n    // TODO make this work for nextjs\n    event.transaction = extractTransaction(req, include.transaction);\n  }\n\n  return event;\n}\n\nfunction extractQueryParams(req) {\n  // url (including path and query string):\n  //   node, express: req.originalUrl\n  //   koa, nextjs: req.url\n  let originalUrl = req.originalUrl || req.url || '';\n\n  if (!originalUrl) {\n    return;\n  }\n\n  // The `URL` constructor can't handle internal URLs of the form `/some/path/here`, so stick a dummy protocol and\n  // hostname on the beginning. Since the point here is just to grab the query string, it doesn't matter what we use.\n  if (originalUrl.startsWith('/')) {\n    originalUrl = `http://dogs.are.great${originalUrl}`;\n  }\n\n  try {\n    const queryParams = req.query || new URL(originalUrl).search.slice(1);\n    return queryParams.length ? queryParams : undefined;\n  } catch (e2) {\n    return undefined;\n  }\n}\n\n/**\n * Transforms a `Headers` object that implements the `Web Fetch API` (https://developer.mozilla.org/en-US/docs/Web/API/Headers) into a simple key-value dict.\n * The header keys will be lower case: e.g. A \"Content-Type\" header will be stored as \"content-type\".\n */\n// TODO(v8): Make this function return undefined when the extraction fails.\nfunction winterCGHeadersToDict(winterCGHeaders) {\n  const headers = {};\n  try {\n    winterCGHeaders.forEach((value, key) => {\n      if (typeof value === 'string') {\n        // We check that value is a string even though it might be redundant to make sure prototype pollution is not possible.\n        headers[key] = value;\n      }\n    });\n  } catch (e) {\n    debugBuild.DEBUG_BUILD &&\n      logger.logger.warn('Sentry failed extracting headers from a request object. If you see this, please file an issue.');\n  }\n\n  return headers;\n}\n\n/**\n * Converts a `Request` object that implements the `Web Fetch API` (https://developer.mozilla.org/en-US/docs/Web/API/Headers) into the format that the `RequestData` integration understands.\n */\nfunction winterCGRequestToRequestData(req) {\n  const headers = winterCGHeadersToDict(req.headers);\n  return {\n    method: req.method,\n    url: req.url,\n    headers,\n  };\n}\n\nexports.DEFAULT_USER_INCLUDES = DEFAULT_USER_INCLUDES;\nexports.addRequestDataToEvent = addRequestDataToEvent;\nexports.extractPathForTransaction = extractPathForTransaction;\nexports.extractRequestData = extractRequestData;\nexports.winterCGHeadersToDict = winterCGHeadersToDict;\nexports.winterCGRequestToRequestData = winterCGRequestToRequestData;\n//# sourceMappingURL=requestdata.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/requestdata.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/severity.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/severity.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n// Note: Ideally the `SeverityLevel` type would be derived from `validSeverityLevels`, but that would mean either\n//\n// a) moving `validSeverityLevels` to `@sentry/types`,\n// b) moving the`SeverityLevel` type here, or\n// c) importing `validSeverityLevels` from here into `@sentry/types`.\n//\n// Option A would make `@sentry/types` a runtime dependency of `@sentry/utils` (not good), and options B and C would\n// create a circular dependency between `@sentry/types` and `@sentry/utils` (also not good). So a TODO accompanying the\n// type, reminding anyone who changes it to change this list also, will have to do.\n\nconst validSeverityLevels = ['fatal', 'error', 'warning', 'log', 'info', 'debug'];\n\n/**\n * Converts a string-based level into a `SeverityLevel`, normalizing it along the way.\n *\n * @param level String representation of desired `SeverityLevel`.\n * @returns The `SeverityLevel` corresponding to the given string, or 'log' if the string isn't a valid level.\n */\nfunction severityLevelFromString(level) {\n  return (level === 'warn' ? 'warning' : validSeverityLevels.includes(level) ? level : 'log') ;\n}\n\nexports.severityLevelFromString = severityLevelFromString;\nexports.validSeverityLevels = validSeverityLevels;\n//# sourceMappingURL=severity.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL3NldmVyaXR5LmpzIiwibWFwcGluZ3MiOiJBQUFBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQzs7QUFFN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSwrQkFBK0I7QUFDL0IsMkJBQTJCO0FBQzNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLXByb2plY3QvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL3NldmVyaXR5LmpzPzZkNjMiXSwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxuLy8gTm90ZTogSWRlYWxseSB0aGUgYFNldmVyaXR5TGV2ZWxgIHR5cGUgd291bGQgYmUgZGVyaXZlZCBmcm9tIGB2YWxpZFNldmVyaXR5TGV2ZWxzYCwgYnV0IHRoYXQgd291bGQgbWVhbiBlaXRoZXJcbi8vXG4vLyBhKSBtb3ZpbmcgYHZhbGlkU2V2ZXJpdHlMZXZlbHNgIHRvIGBAc2VudHJ5L3R5cGVzYCxcbi8vIGIpIG1vdmluZyB0aGVgU2V2ZXJpdHlMZXZlbGAgdHlwZSBoZXJlLCBvclxuLy8gYykgaW1wb3J0aW5nIGB2YWxpZFNldmVyaXR5TGV2ZWxzYCBmcm9tIGhlcmUgaW50byBgQHNlbnRyeS90eXBlc2AuXG4vL1xuLy8gT3B0aW9uIEEgd291bGQgbWFrZSBgQHNlbnRyeS90eXBlc2AgYSBydW50aW1lIGRlcGVuZGVuY3kgb2YgYEBzZW50cnkvdXRpbHNgIChub3QgZ29vZCksIGFuZCBvcHRpb25zIEIgYW5kIEMgd291bGRcbi8vIGNyZWF0ZSBhIGNpcmN1bGFyIGRlcGVuZGVuY3kgYmV0d2VlbiBgQHNlbnRyeS90eXBlc2AgYW5kIGBAc2VudHJ5L3V0aWxzYCAoYWxzbyBub3QgZ29vZCkuIFNvIGEgVE9ETyBhY2NvbXBhbnlpbmcgdGhlXG4vLyB0eXBlLCByZW1pbmRpbmcgYW55b25lIHdobyBjaGFuZ2VzIGl0IHRvIGNoYW5nZSB0aGlzIGxpc3QgYWxzbywgd2lsbCBoYXZlIHRvIGRvLlxuXG5jb25zdCB2YWxpZFNldmVyaXR5TGV2ZWxzID0gWydmYXRhbCcsICdlcnJvcicsICd3YXJuaW5nJywgJ2xvZycsICdpbmZvJywgJ2RlYnVnJ107XG5cbi8qKlxuICogQ29udmVydHMgYSBzdHJpbmctYmFzZWQgbGV2ZWwgaW50byBhIGBTZXZlcml0eUxldmVsYCwgbm9ybWFsaXppbmcgaXQgYWxvbmcgdGhlIHdheS5cbiAqXG4gKiBAcGFyYW0gbGV2ZWwgU3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIGRlc2lyZWQgYFNldmVyaXR5TGV2ZWxgLlxuICogQHJldHVybnMgVGhlIGBTZXZlcml0eUxldmVsYCBjb3JyZXNwb25kaW5nIHRvIHRoZSBnaXZlbiBzdHJpbmcsIG9yICdsb2cnIGlmIHRoZSBzdHJpbmcgaXNuJ3QgYSB2YWxpZCBsZXZlbC5cbiAqL1xuZnVuY3Rpb24gc2V2ZXJpdHlMZXZlbEZyb21TdHJpbmcobGV2ZWwpIHtcbiAgcmV0dXJuIChsZXZlbCA9PT0gJ3dhcm4nID8gJ3dhcm5pbmcnIDogdmFsaWRTZXZlcml0eUxldmVscy5pbmNsdWRlcyhsZXZlbCkgPyBsZXZlbCA6ICdsb2cnKSA7XG59XG5cbmV4cG9ydHMuc2V2ZXJpdHlMZXZlbEZyb21TdHJpbmcgPSBzZXZlcml0eUxldmVsRnJvbVN0cmluZztcbmV4cG9ydHMudmFsaWRTZXZlcml0eUxldmVscyA9IHZhbGlkU2V2ZXJpdHlMZXZlbHM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zZXZlcml0eS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/severity.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/stacktrace.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/stacktrace.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst STACKTRACE_FRAME_LIMIT = 50;\nconst UNKNOWN_FUNCTION = '?';\n// Used to sanitize webpack (error: *) wrapped stack errors\nconst WEBPACK_ERROR_REGEXP = /\\(error: (.*)\\)/;\nconst STRIP_FRAME_REGEXP = /captureMessage|captureException/;\n\n/**\n * Creates a stack parser with the supplied line parsers\n *\n * StackFrames are returned in the correct order for Sentry Exception\n * frames and with Sentry SDK internal frames removed from the top and bottom\n *\n */\nfunction createStackParser(...parsers) {\n  const sortedParsers = parsers.sort((a, b) => a[0] - b[0]).map(p => p[1]);\n\n  return (stack, skipFirstLines = 0, framesToPop = 0) => {\n    const frames = [];\n    const lines = stack.split('\\n');\n\n    for (let i = skipFirstLines; i < lines.length; i++) {\n      const line = lines[i] ;\n      // Ignore lines over 1kb as they are unlikely to be stack frames.\n      // Many of the regular expressions use backtracking which results in run time that increases exponentially with\n      // input size. Huge strings can result in hangs/Denial of Service:\n      // https://github.com/getsentry/sentry-javascript/issues/2286\n      if (line.length > 1024) {\n        continue;\n      }\n\n      // https://github.com/getsentry/sentry-javascript/issues/5459\n      // Remove webpack (error: *) wrappers\n      const cleanedLine = WEBPACK_ERROR_REGEXP.test(line) ? line.replace(WEBPACK_ERROR_REGEXP, '$1') : line;\n\n      // https://github.com/getsentry/sentry-javascript/issues/7813\n      // Skip Error: lines\n      if (cleanedLine.match(/\\S*Error: /)) {\n        continue;\n      }\n\n      for (const parser of sortedParsers) {\n        const frame = parser(cleanedLine);\n\n        if (frame) {\n          frames.push(frame);\n          break;\n        }\n      }\n\n      if (frames.length >= STACKTRACE_FRAME_LIMIT + framesToPop) {\n        break;\n      }\n    }\n\n    return stripSentryFramesAndReverse(frames.slice(framesToPop));\n  };\n}\n\n/**\n * Gets a stack parser implementation from Options.stackParser\n * @see Options\n *\n * If options contains an array of line parsers, it is converted into a parser\n */\nfunction stackParserFromStackParserOptions(stackParser) {\n  if (Array.isArray(stackParser)) {\n    return createStackParser(...stackParser);\n  }\n  return stackParser;\n}\n\n/**\n * Removes Sentry frames from the top and bottom of the stack if present and enforces a limit of max number of frames.\n * Assumes stack input is ordered from top to bottom and returns the reverse representation so call site of the\n * function that caused the crash is the last frame in the array.\n * @hidden\n */\nfunction stripSentryFramesAndReverse(stack) {\n  if (!stack.length) {\n    return [];\n  }\n\n  const localStack = Array.from(stack);\n\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (/sentryWrapped/.test(getLastStackFrame(localStack).function || '')) {\n    localStack.pop();\n  }\n\n  // Reversing in the middle of the procedure allows us to just pop the values off the stack\n  localStack.reverse();\n\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (STRIP_FRAME_REGEXP.test(getLastStackFrame(localStack).function || '')) {\n    localStack.pop();\n\n    // When using synthetic events, we will have a 2 levels deep stack, as `new Error('Sentry syntheticException')`\n    // is produced within the hub itself, making it:\n    //\n    //   Sentry.captureException()\n    //   getCurrentHub().captureException()\n    //\n    // instead of just the top `Sentry` call itself.\n    // This forces us to possibly strip an additional frame in the exact same was as above.\n    if (STRIP_FRAME_REGEXP.test(getLastStackFrame(localStack).function || '')) {\n      localStack.pop();\n    }\n  }\n\n  return localStack.slice(0, STACKTRACE_FRAME_LIMIT).map(frame => ({\n    ...frame,\n    filename: frame.filename || getLastStackFrame(localStack).filename,\n    function: frame.function || UNKNOWN_FUNCTION,\n  }));\n}\n\nfunction getLastStackFrame(arr) {\n  return arr[arr.length - 1] || {};\n}\n\nconst defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nfunction getFunctionName(fn) {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n\n/**\n * Get's stack frames from an event without needing to check for undefined properties.\n */\nfunction getFramesFromEvent(event) {\n  const exception = event.exception;\n\n  if (exception) {\n    const frames = [];\n    try {\n      // @ts-expect-error Object could be undefined\n      exception.values.forEach(value => {\n        // @ts-expect-error Value could be undefined\n        if (value.stacktrace.frames) {\n          // @ts-expect-error Value could be undefined\n          frames.push(...value.stacktrace.frames);\n        }\n      });\n      return frames;\n    } catch (_oO) {\n      return undefined;\n    }\n  }\n  return undefined;\n}\n\nexports.UNKNOWN_FUNCTION = UNKNOWN_FUNCTION;\nexports.createStackParser = createStackParser;\nexports.getFramesFromEvent = getFramesFromEvent;\nexports.getFunctionName = getFunctionName;\nexports.stackParserFromStackParserOptions = stackParserFromStackParserOptions;\nexports.stripSentryFramesAndReverse = stripSentryFramesAndReverse;\n//# sourceMappingURL=stacktrace.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/stacktrace.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/string.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/string.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst is = __webpack_require__(/*! ./is.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/is.js\");\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string (0 = unlimited)\n * @returns string Encoded\n */\nfunction truncate(str, max = 0) {\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.slice(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nfunction snipLine(line, colno) {\n  let newLine = line;\n  const lineLength = newLine.length;\n  if (lineLength <= 150) {\n    return newLine;\n  }\n  if (colno > lineLength) {\n    // eslint-disable-next-line no-param-reassign\n    colno = lineLength;\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, lineLength);\n  if (end > lineLength - 5) {\n    end = lineLength;\n  }\n  if (end === lineLength) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < lineLength) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction safeJoin(input, delimiter) {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  const output = [];\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let i = 0; i < input.length; i++) {\n    const value = input[i];\n    try {\n      // This is a hack to fix a Vue3-specific bug that causes an infinite loop of\n      // console warnings. This happens when a Vue template is rendered with\n      // an undeclared variable, which we try to stringify, ultimately causing\n      // Vue to issue another warning which repeats indefinitely.\n      // see: https://github.com/getsentry/sentry-javascript/pull/8981\n      if (is.isVueViewModel(value)) {\n        output.push('[VueViewModel]');\n      } else {\n        output.push(String(value));\n      }\n    } catch (e) {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/**\n * Checks if the given value matches a regex or string\n *\n * @param value The string to test\n * @param pattern Either a regex or a string against which `value` will be matched\n * @param requireExactStringMatch If true, `value` must match `pattern` exactly. If false, `value` will match\n * `pattern` if it contains `pattern`. Only applies to string-type patterns.\n */\nfunction isMatchingPattern(\n  value,\n  pattern,\n  requireExactStringMatch = false,\n) {\n  if (!is.isString(value)) {\n    return false;\n  }\n\n  if (is.isRegExp(pattern)) {\n    return pattern.test(value);\n  }\n  if (is.isString(pattern)) {\n    return requireExactStringMatch ? value === pattern : value.includes(pattern);\n  }\n\n  return false;\n}\n\n/**\n * Test the given string against an array of strings and regexes. By default, string matching is done on a\n * substring-inclusion basis rather than a strict equality basis\n *\n * @param testString The string to test\n * @param patterns The patterns against which to test the string\n * @param requireExactStringMatch If true, `testString` must match one of the given string patterns exactly in order to\n * count. If false, `testString` will match a string pattern if it contains that pattern.\n * @returns\n */\nfunction stringMatchesSomePattern(\n  testString,\n  patterns = [],\n  requireExactStringMatch = false,\n) {\n  return patterns.some(pattern => isMatchingPattern(testString, pattern, requireExactStringMatch));\n}\n\nexports.isMatchingPattern = isMatchingPattern;\nexports.safeJoin = safeJoin;\nexports.snipLine = snipLine;\nexports.stringMatchesSomePattern = stringMatchesSomePattern;\nexports.truncate = truncate;\n//# sourceMappingURL=string.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL3N0cmluZy5qcyIsIm1hcHBpbmdzIjoiQUFBQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7O0FBRTdELFdBQVcsbUJBQU8sQ0FBQywyR0FBUzs7QUFFNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyxrQkFBa0I7QUFDeEQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxpQkFBaUIsTUFBTSxFQUFFLFFBQVE7QUFDakM7QUFDQTtBQUNBLGtCQUFrQixLQUFLO0FBQ3ZCOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esa0JBQWtCLGtCQUFrQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHlCQUF5QjtBQUN6QixnQkFBZ0I7QUFDaEIsZ0JBQWdCO0FBQ2hCLGdDQUFnQztBQUNoQyxnQkFBZ0I7QUFDaEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0Zm9saW8tcHJvamVjdC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2VudHJ5K3V0aWxzQDguMTcuMC9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9idWlsZC9janMvc3RyaW5nLmpzP2JiYjUiXSwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxuY29uc3QgaXMgPSByZXF1aXJlKCcuL2lzLmpzJyk7XG5cbi8qKlxuICogVHJ1bmNhdGVzIGdpdmVuIHN0cmluZyB0byB0aGUgbWF4aW11bSBjaGFyYWN0ZXJzIGNvdW50XG4gKlxuICogQHBhcmFtIHN0ciBBbiBvYmplY3QgdGhhdCBjb250YWlucyBzZXJpYWxpemFibGUgdmFsdWVzXG4gKiBAcGFyYW0gbWF4IE1heGltdW0gbnVtYmVyIG9mIGNoYXJhY3RlcnMgaW4gdHJ1bmNhdGVkIHN0cmluZyAoMCA9IHVubGltaXRlZClcbiAqIEByZXR1cm5zIHN0cmluZyBFbmNvZGVkXG4gKi9cbmZ1bmN0aW9uIHRydW5jYXRlKHN0ciwgbWF4ID0gMCkge1xuICBpZiAodHlwZW9mIHN0ciAhPT0gJ3N0cmluZycgfHwgbWF4ID09PSAwKSB7XG4gICAgcmV0dXJuIHN0cjtcbiAgfVxuICByZXR1cm4gc3RyLmxlbmd0aCA8PSBtYXggPyBzdHIgOiBgJHtzdHIuc2xpY2UoMCwgbWF4KX0uLi5gO1xufVxuXG4vKipcbiAqIFRoaXMgaXMgYmFzaWNhbGx5IGp1c3QgYHRyaW1fbGluZWAgZnJvbVxuICogaHR0cHM6Ly9naXRodWIuY29tL2dldHNlbnRyeS9zZW50cnkvYmxvYi9tYXN0ZXIvc3JjL3NlbnRyeS9sYW5nL2phdmFzY3JpcHQvcHJvY2Vzc29yLnB5I0w2N1xuICpcbiAqIEBwYXJhbSBzdHIgQW4gb2JqZWN0IHRoYXQgY29udGFpbnMgc2VyaWFsaXphYmxlIHZhbHVlc1xuICogQHBhcmFtIG1heCBNYXhpbXVtIG51bWJlciBvZiBjaGFyYWN0ZXJzIGluIHRydW5jYXRlZCBzdHJpbmdcbiAqIEByZXR1cm5zIHN0cmluZyBFbmNvZGVkXG4gKi9cbmZ1bmN0aW9uIHNuaXBMaW5lKGxpbmUsIGNvbG5vKSB7XG4gIGxldCBuZXdMaW5lID0gbGluZTtcbiAgY29uc3QgbGluZUxlbmd0aCA9IG5ld0xpbmUubGVuZ3RoO1xuICBpZiAobGluZUxlbmd0aCA8PSAxNTApIHtcbiAgICByZXR1cm4gbmV3TGluZTtcbiAgfVxuICBpZiAoY29sbm8gPiBsaW5lTGVuZ3RoKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gICAgY29sbm8gPSBsaW5lTGVuZ3RoO1xuICB9XG5cbiAgbGV0IHN0YXJ0ID0gTWF0aC5tYXgoY29sbm8gLSA2MCwgMCk7XG4gIGlmIChzdGFydCA8IDUpIHtcbiAgICBzdGFydCA9IDA7XG4gIH1cblxuICBsZXQgZW5kID0gTWF0aC5taW4oc3RhcnQgKyAxNDAsIGxpbmVMZW5ndGgpO1xuICBpZiAoZW5kID4gbGluZUxlbmd0aCAtIDUpIHtcbiAgICBlbmQgPSBsaW5lTGVuZ3RoO1xuICB9XG4gIGlmIChlbmQgPT09IGxpbmVMZW5ndGgpIHtcbiAgICBzdGFydCA9IE1hdGgubWF4KGVuZCAtIDE0MCwgMCk7XG4gIH1cblxuICBuZXdMaW5lID0gbmV3TGluZS5zbGljZShzdGFydCwgZW5kKTtcbiAgaWYgKHN0YXJ0ID4gMCkge1xuICAgIG5ld0xpbmUgPSBgJ3tzbmlwfSAke25ld0xpbmV9YDtcbiAgfVxuICBpZiAoZW5kIDwgbGluZUxlbmd0aCkge1xuICAgIG5ld0xpbmUgKz0gJyB7c25pcH0nO1xuICB9XG5cbiAgcmV0dXJuIG5ld0xpbmU7XG59XG5cbi8qKlxuICogSm9pbiB2YWx1ZXMgaW4gYXJyYXlcbiAqIEBwYXJhbSBpbnB1dCBhcnJheSBvZiB2YWx1ZXMgdG8gYmUgam9pbmVkIHRvZ2V0aGVyXG4gKiBAcGFyYW0gZGVsaW1pdGVyIHN0cmluZyB0byBiZSBwbGFjZWQgaW4tYmV0d2VlbiB2YWx1ZXNcbiAqIEByZXR1cm5zIEpvaW5lZCB2YWx1ZXNcbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbmZ1bmN0aW9uIHNhZmVKb2luKGlucHV0LCBkZWxpbWl0ZXIpIHtcbiAgaWYgKCFBcnJheS5pc0FycmF5KGlucHV0KSkge1xuICAgIHJldHVybiAnJztcbiAgfVxuXG4gIGNvbnN0IG91dHB1dCA9IFtdO1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L3ByZWZlci1mb3Itb2ZcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBpbnB1dC5sZW5ndGg7IGkrKykge1xuICAgIGNvbnN0IHZhbHVlID0gaW5wdXRbaV07XG4gICAgdHJ5IHtcbiAgICAgIC8vIFRoaXMgaXMgYSBoYWNrIHRvIGZpeCBhIFZ1ZTMtc3BlY2lmaWMgYnVnIHRoYXQgY2F1c2VzIGFuIGluZmluaXRlIGxvb3Agb2ZcbiAgICAgIC8vIGNvbnNvbGUgd2FybmluZ3MuIFRoaXMgaGFwcGVucyB3aGVuIGEgVnVlIHRlbXBsYXRlIGlzIHJlbmRlcmVkIHdpdGhcbiAgICAgIC8vIGFuIHVuZGVjbGFyZWQgdmFyaWFibGUsIHdoaWNoIHdlIHRyeSB0byBzdHJpbmdpZnksIHVsdGltYXRlbHkgY2F1c2luZ1xuICAgICAgLy8gVnVlIHRvIGlzc3VlIGFub3RoZXIgd2FybmluZyB3aGljaCByZXBlYXRzIGluZGVmaW5pdGVseS5cbiAgICAgIC8vIHNlZTogaHR0cHM6Ly9naXRodWIuY29tL2dldHNlbnRyeS9zZW50cnktamF2YXNjcmlwdC9wdWxsLzg5ODFcbiAgICAgIGlmIChpcy5pc1Z1ZVZpZXdNb2RlbCh2YWx1ZSkpIHtcbiAgICAgICAgb3V0cHV0LnB1c2goJ1tWdWVWaWV3TW9kZWxdJyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBvdXRwdXQucHVzaChTdHJpbmcodmFsdWUpKTtcbiAgICAgIH1cbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBvdXRwdXQucHVzaCgnW3ZhbHVlIGNhbm5vdCBiZSBzZXJpYWxpemVkXScpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBvdXRwdXQuam9pbihkZWxpbWl0ZXIpO1xufVxuXG4vKipcbiAqIENoZWNrcyBpZiB0aGUgZ2l2ZW4gdmFsdWUgbWF0Y2hlcyBhIHJlZ2V4IG9yIHN0cmluZ1xuICpcbiAqIEBwYXJhbSB2YWx1ZSBUaGUgc3RyaW5nIHRvIHRlc3RcbiAqIEBwYXJhbSBwYXR0ZXJuIEVpdGhlciBhIHJlZ2V4IG9yIGEgc3RyaW5nIGFnYWluc3Qgd2hpY2ggYHZhbHVlYCB3aWxsIGJlIG1hdGNoZWRcbiAqIEBwYXJhbSByZXF1aXJlRXhhY3RTdHJpbmdNYXRjaCBJZiB0cnVlLCBgdmFsdWVgIG11c3QgbWF0Y2ggYHBhdHRlcm5gIGV4YWN0bHkuIElmIGZhbHNlLCBgdmFsdWVgIHdpbGwgbWF0Y2hcbiAqIGBwYXR0ZXJuYCBpZiBpdCBjb250YWlucyBgcGF0dGVybmAuIE9ubHkgYXBwbGllcyB0byBzdHJpbmctdHlwZSBwYXR0ZXJucy5cbiAqL1xuZnVuY3Rpb24gaXNNYXRjaGluZ1BhdHRlcm4oXG4gIHZhbHVlLFxuICBwYXR0ZXJuLFxuICByZXF1aXJlRXhhY3RTdHJpbmdNYXRjaCA9IGZhbHNlLFxuKSB7XG4gIGlmICghaXMuaXNTdHJpbmcodmFsdWUpKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgaWYgKGlzLmlzUmVnRXhwKHBhdHRlcm4pKSB7XG4gICAgcmV0dXJuIHBhdHRlcm4udGVzdCh2YWx1ZSk7XG4gIH1cbiAgaWYgKGlzLmlzU3RyaW5nKHBhdHRlcm4pKSB7XG4gICAgcmV0dXJuIHJlcXVpcmVFeGFjdFN0cmluZ01hdGNoID8gdmFsdWUgPT09IHBhdHRlcm4gOiB2YWx1ZS5pbmNsdWRlcyhwYXR0ZXJuKTtcbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn1cblxuLyoqXG4gKiBUZXN0IHRoZSBnaXZlbiBzdHJpbmcgYWdhaW5zdCBhbiBhcnJheSBvZiBzdHJpbmdzIGFuZCByZWdleGVzLiBCeSBkZWZhdWx0LCBzdHJpbmcgbWF0Y2hpbmcgaXMgZG9uZSBvbiBhXG4gKiBzdWJzdHJpbmctaW5jbHVzaW9uIGJhc2lzIHJhdGhlciB0aGFuIGEgc3RyaWN0IGVxdWFsaXR5IGJhc2lzXG4gKlxuICogQHBhcmFtIHRlc3RTdHJpbmcgVGhlIHN0cmluZyB0byB0ZXN0XG4gKiBAcGFyYW0gcGF0dGVybnMgVGhlIHBhdHRlcm5zIGFnYWluc3Qgd2hpY2ggdG8gdGVzdCB0aGUgc3RyaW5nXG4gKiBAcGFyYW0gcmVxdWlyZUV4YWN0U3RyaW5nTWF0Y2ggSWYgdHJ1ZSwgYHRlc3RTdHJpbmdgIG11c3QgbWF0Y2ggb25lIG9mIHRoZSBnaXZlbiBzdHJpbmcgcGF0dGVybnMgZXhhY3RseSBpbiBvcmRlciB0b1xuICogY291bnQuIElmIGZhbHNlLCBgdGVzdFN0cmluZ2Agd2lsbCBtYXRjaCBhIHN0cmluZyBwYXR0ZXJuIGlmIGl0IGNvbnRhaW5zIHRoYXQgcGF0dGVybi5cbiAqIEByZXR1cm5zXG4gKi9cbmZ1bmN0aW9uIHN0cmluZ01hdGNoZXNTb21lUGF0dGVybihcbiAgdGVzdFN0cmluZyxcbiAgcGF0dGVybnMgPSBbXSxcbiAgcmVxdWlyZUV4YWN0U3RyaW5nTWF0Y2ggPSBmYWxzZSxcbikge1xuICByZXR1cm4gcGF0dGVybnMuc29tZShwYXR0ZXJuID0+IGlzTWF0Y2hpbmdQYXR0ZXJuKHRlc3RTdHJpbmcsIHBhdHRlcm4sIHJlcXVpcmVFeGFjdFN0cmluZ01hdGNoKSk7XG59XG5cbmV4cG9ydHMuaXNNYXRjaGluZ1BhdHRlcm4gPSBpc01hdGNoaW5nUGF0dGVybjtcbmV4cG9ydHMuc2FmZUpvaW4gPSBzYWZlSm9pbjtcbmV4cG9ydHMuc25pcExpbmUgPSBzbmlwTGluZTtcbmV4cG9ydHMuc3RyaW5nTWF0Y2hlc1NvbWVQYXR0ZXJuID0gc3RyaW5nTWF0Y2hlc1NvbWVQYXR0ZXJuO1xuZXhwb3J0cy50cnVuY2F0ZSA9IHRydW5jYXRlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3RyaW5nLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/string.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/supports.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/supports.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst debugBuild = __webpack_require__(/*! ./debug-build.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/debug-build.js\");\nconst logger = __webpack_require__(/*! ./logger.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/logger.js\");\nconst worldwide = __webpack_require__(/*! ./worldwide.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/worldwide.js\");\n\nconst WINDOW = worldwide.GLOBAL_OBJ ;\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsErrorEvent() {\n  try {\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMError() {\n  try {\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-expect-error It really needs 1 argument, not 0.\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMException() {\n  try {\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsFetch() {\n  if (!('fetch' in WINDOW)) {\n    return false;\n  }\n\n  try {\n    new Headers();\n    new Request('http://www.example.com');\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * isNative checks if the given function is a native implementation\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction isNativeFunction(func) {\n  return func && /^function\\s+\\w+\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nfunction supportsNativeFetch() {\n  if (typeof EdgeRuntime === 'string') {\n    return true;\n  }\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  // Fast path to avoid DOM I/O\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  if (isNativeFunction(WINDOW.fetch)) {\n    return true;\n  }\n\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  let result = false;\n  const doc = WINDOW.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (doc && typeof (doc.createElement ) === 'function') {\n    try {\n      const sandbox = doc.createElement('iframe');\n      sandbox.hidden = true;\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        result = isNativeFunction(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      debugBuild.DEBUG_BUILD &&\n        logger.logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReportingObserver() {\n  return 'ReportingObserver' in WINDOW;\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReferrerPolicy() {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default'\n  // (see https://caniuse.com/#feat=referrer-policy),\n  // it doesn't. And it throws an exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  try {\n    new Request('_', {\n      referrerPolicy: 'origin' ,\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nexports.isNativeFunction = isNativeFunction;\nexports.supportsDOMError = supportsDOMError;\nexports.supportsDOMException = supportsDOMException;\nexports.supportsErrorEvent = supportsErrorEvent;\nexports.supportsFetch = supportsFetch;\nexports.supportsNativeFetch = supportsNativeFetch;\nexports.supportsReferrerPolicy = supportsReferrerPolicy;\nexports.supportsReportingObserver = supportsReportingObserver;\n//# sourceMappingURL=supports.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL3N1cHBvcnRzLmpzIiwibWFwcGluZ3MiOiJBQUFBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQzs7QUFFN0QsbUJBQW1CLG1CQUFPLENBQUMsNkhBQWtCO0FBQzdDLGVBQWUsbUJBQU8sQ0FBQyxtSEFBYTtBQUNwQyxrQkFBa0IsbUJBQU8sQ0FBQyx5SEFBZ0I7O0FBRTFDOztBQUVBO0FBQ0E7QUFDQSxJQUFJLHlCQUF5QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLElBQUksdUJBQXVCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsSUFBSSwyQkFBMkI7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJLG9CQUFvQjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLHVCQUF1QjtBQUNqRTs7QUFFQTtBQUNBO0FBQ0EsSUFBSSwwQkFBMEI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLElBQUksZ0NBQWdDO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsSUFBSSw2QkFBNkI7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFQSx3QkFBd0I7QUFDeEIsd0JBQXdCO0FBQ3hCLDRCQUE0QjtBQUM1QiwwQkFBMEI7QUFDMUIscUJBQXFCO0FBQ3JCLDJCQUEyQjtBQUMzQiw4QkFBOEI7QUFDOUIsaUNBQWlDO0FBQ2pDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLXByb2plY3QvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL3N1cHBvcnRzLmpzPzIzODciXSwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxuY29uc3QgZGVidWdCdWlsZCA9IHJlcXVpcmUoJy4vZGVidWctYnVpbGQuanMnKTtcbmNvbnN0IGxvZ2dlciA9IHJlcXVpcmUoJy4vbG9nZ2VyLmpzJyk7XG5jb25zdCB3b3JsZHdpZGUgPSByZXF1aXJlKCcuL3dvcmxkd2lkZS5qcycpO1xuXG5jb25zdCBXSU5ET1cgPSB3b3JsZHdpZGUuR0xPQkFMX09CSiA7XG5cbi8qKlxuICogVGVsbHMgd2hldGhlciBjdXJyZW50IGVudmlyb25tZW50IHN1cHBvcnRzIEVycm9yRXZlbnQgb2JqZWN0c1xuICoge0BsaW5rIHN1cHBvcnRzRXJyb3JFdmVudH0uXG4gKlxuICogQHJldHVybnMgQW5zd2VyIHRvIHRoZSBnaXZlbiBxdWVzdGlvbi5cbiAqL1xuZnVuY3Rpb24gc3VwcG9ydHNFcnJvckV2ZW50KCkge1xuICB0cnkge1xuICAgIG5ldyBFcnJvckV2ZW50KCcnKTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufVxuXG4vKipcbiAqIFRlbGxzIHdoZXRoZXIgY3VycmVudCBlbnZpcm9ubWVudCBzdXBwb3J0cyBET01FcnJvciBvYmplY3RzXG4gKiB7QGxpbmsgc3VwcG9ydHNET01FcnJvcn0uXG4gKlxuICogQHJldHVybnMgQW5zd2VyIHRvIHRoZSBnaXZlbiBxdWVzdGlvbi5cbiAqL1xuZnVuY3Rpb24gc3VwcG9ydHNET01FcnJvcigpIHtcbiAgdHJ5IHtcbiAgICAvLyBDaHJvbWU6IFZNODk6MSBVbmNhdWdodCBUeXBlRXJyb3I6IEZhaWxlZCB0byBjb25zdHJ1Y3QgJ0RPTUVycm9yJzpcbiAgICAvLyAxIGFyZ3VtZW50IHJlcXVpcmVkLCBidXQgb25seSAwIHByZXNlbnQuXG4gICAgLy8gQHRzLWV4cGVjdC1lcnJvciBJdCByZWFsbHkgbmVlZHMgMSBhcmd1bWVudCwgbm90IDAuXG4gICAgbmV3IERPTUVycm9yKCcnKTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufVxuXG4vKipcbiAqIFRlbGxzIHdoZXRoZXIgY3VycmVudCBlbnZpcm9ubWVudCBzdXBwb3J0cyBET01FeGNlcHRpb24gb2JqZWN0c1xuICoge0BsaW5rIHN1cHBvcnRzRE9NRXhjZXB0aW9ufS5cbiAqXG4gKiBAcmV0dXJucyBBbnN3ZXIgdG8gdGhlIGdpdmVuIHF1ZXN0aW9uLlxuICovXG5mdW5jdGlvbiBzdXBwb3J0c0RPTUV4Y2VwdGlvbigpIHtcbiAgdHJ5IHtcbiAgICBuZXcgRE9NRXhjZXB0aW9uKCcnKTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufVxuXG4vKipcbiAqIFRlbGxzIHdoZXRoZXIgY3VycmVudCBlbnZpcm9ubWVudCBzdXBwb3J0cyBGZXRjaCBBUElcbiAqIHtAbGluayBzdXBwb3J0c0ZldGNofS5cbiAqXG4gKiBAcmV0dXJucyBBbnN3ZXIgdG8gdGhlIGdpdmVuIHF1ZXN0aW9uLlxuICovXG5mdW5jdGlvbiBzdXBwb3J0c0ZldGNoKCkge1xuICBpZiAoISgnZmV0Y2gnIGluIFdJTkRPVykpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICB0cnkge1xuICAgIG5ldyBIZWFkZXJzKCk7XG4gICAgbmV3IFJlcXVlc3QoJ2h0dHA6Ly93d3cuZXhhbXBsZS5jb20nKTtcbiAgICBuZXcgUmVzcG9uc2UoKTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufVxuXG4vKipcbiAqIGlzTmF0aXZlIGNoZWNrcyBpZiB0aGUgZ2l2ZW4gZnVuY3Rpb24gaXMgYSBuYXRpdmUgaW1wbGVtZW50YXRpb25cbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9iYW4tdHlwZXNcbmZ1bmN0aW9uIGlzTmF0aXZlRnVuY3Rpb24oZnVuYykge1xuICByZXR1cm4gZnVuYyAmJiAvXmZ1bmN0aW9uXFxzK1xcdytcXChcXClcXHMrXFx7XFxzK1xcW25hdGl2ZSBjb2RlXFxdXFxzK1xcfSQvLnRlc3QoZnVuYy50b1N0cmluZygpKTtcbn1cblxuLyoqXG4gKiBUZWxscyB3aGV0aGVyIGN1cnJlbnQgZW52aXJvbm1lbnQgc3VwcG9ydHMgRmV0Y2ggQVBJIG5hdGl2ZWx5XG4gKiB7QGxpbmsgc3VwcG9ydHNOYXRpdmVGZXRjaH0uXG4gKlxuICogQHJldHVybnMgdHJ1ZSBpZiBgd2luZG93LmZldGNoYCBpcyBuYXRpdmVseSBpbXBsZW1lbnRlZCwgZmFsc2Ugb3RoZXJ3aXNlXG4gKi9cbmZ1bmN0aW9uIHN1cHBvcnRzTmF0aXZlRmV0Y2goKSB7XG4gIGlmICh0eXBlb2YgRWRnZVJ1bnRpbWUgPT09ICdzdHJpbmcnKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICBpZiAoIXN1cHBvcnRzRmV0Y2goKSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIC8vIEZhc3QgcGF0aCB0byBhdm9pZCBET00gSS9PXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvdW5ib3VuZC1tZXRob2RcbiAgaWYgKGlzTmF0aXZlRnVuY3Rpb24oV0lORE9XLmZldGNoKSkge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgLy8gd2luZG93LmZldGNoIGlzIGltcGxlbWVudGVkLCBidXQgaXMgcG9seWZpbGxlZCBvciBhbHJlYWR5IHdyYXBwZWQgKGUuZzogYnkgYSBjaHJvbWUgZXh0ZW5zaW9uKVxuICAvLyBzbyBjcmVhdGUgYSBcInB1cmVcIiBpZnJhbWUgdG8gc2VlIGlmIHRoYXQgaGFzIG5hdGl2ZSBmZXRjaFxuICBsZXQgcmVzdWx0ID0gZmFsc2U7XG4gIGNvbnN0IGRvYyA9IFdJTkRPVy5kb2N1bWVudDtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG4gIGlmIChkb2MgJiYgdHlwZW9mIChkb2MuY3JlYXRlRWxlbWVudCApID09PSAnZnVuY3Rpb24nKSB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHNhbmRib3ggPSBkb2MuY3JlYXRlRWxlbWVudCgnaWZyYW1lJyk7XG4gICAgICBzYW5kYm94LmhpZGRlbiA9IHRydWU7XG4gICAgICBkb2MuaGVhZC5hcHBlbmRDaGlsZChzYW5kYm94KTtcbiAgICAgIGlmIChzYW5kYm94LmNvbnRlbnRXaW5kb3cgJiYgc2FuZGJveC5jb250ZW50V2luZG93LmZldGNoKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvdW5ib3VuZC1tZXRob2RcbiAgICAgICAgcmVzdWx0ID0gaXNOYXRpdmVGdW5jdGlvbihzYW5kYm94LmNvbnRlbnRXaW5kb3cuZmV0Y2gpO1xuICAgICAgfVxuICAgICAgZG9jLmhlYWQucmVtb3ZlQ2hpbGQoc2FuZGJveCk7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICBkZWJ1Z0J1aWxkLkRFQlVHX0JVSUxEICYmXG4gICAgICAgIGxvZ2dlci5sb2dnZXIud2FybignQ291bGQgbm90IGNyZWF0ZSBzYW5kYm94IGlmcmFtZSBmb3IgcHVyZSBmZXRjaCBjaGVjaywgYmFpbGluZyB0byB3aW5kb3cuZmV0Y2g6ICcsIGVycik7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuLyoqXG4gKiBUZWxscyB3aGV0aGVyIGN1cnJlbnQgZW52aXJvbm1lbnQgc3VwcG9ydHMgUmVwb3J0aW5nT2JzZXJ2ZXIgQVBJXG4gKiB7QGxpbmsgc3VwcG9ydHNSZXBvcnRpbmdPYnNlcnZlcn0uXG4gKlxuICogQHJldHVybnMgQW5zd2VyIHRvIHRoZSBnaXZlbiBxdWVzdGlvbi5cbiAqL1xuZnVuY3Rpb24gc3VwcG9ydHNSZXBvcnRpbmdPYnNlcnZlcigpIHtcbiAgcmV0dXJuICdSZXBvcnRpbmdPYnNlcnZlcicgaW4gV0lORE9XO1xufVxuXG4vKipcbiAqIFRlbGxzIHdoZXRoZXIgY3VycmVudCBlbnZpcm9ubWVudCBzdXBwb3J0cyBSZWZlcnJlciBQb2xpY3kgQVBJXG4gKiB7QGxpbmsgc3VwcG9ydHNSZWZlcnJlclBvbGljeX0uXG4gKlxuICogQHJldHVybnMgQW5zd2VyIHRvIHRoZSBnaXZlbiBxdWVzdGlvbi5cbiAqL1xuZnVuY3Rpb24gc3VwcG9ydHNSZWZlcnJlclBvbGljeSgpIHtcbiAgLy8gRGVzcGl0ZSBhbGwgc3RhcnMgaW4gdGhlIHNreSBzYXlpbmcgdGhhdCBFZGdlIHN1cHBvcnRzIG9sZCBkcmFmdCBzeW50YXgsIGFrYSAnbmV2ZXInLCAnYWx3YXlzJywgJ29yaWdpbicgYW5kICdkZWZhdWx0J1xuICAvLyAoc2VlIGh0dHBzOi8vY2FuaXVzZS5jb20vI2ZlYXQ9cmVmZXJyZXItcG9saWN5KSxcbiAgLy8gaXQgZG9lc24ndC4gQW5kIGl0IHRocm93cyBhbiBleGNlcHRpb24gaW5zdGVhZCBvZiBpZ25vcmluZyB0aGlzIHBhcmFtZXRlci4uLlxuICAvLyBSRUY6IGh0dHBzOi8vZ2l0aHViLmNvbS9nZXRzZW50cnkvcmF2ZW4tanMvaXNzdWVzLzEyMzNcblxuICBpZiAoIXN1cHBvcnRzRmV0Y2goKSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHRyeSB7XG4gICAgbmV3IFJlcXVlc3QoJ18nLCB7XG4gICAgICByZWZlcnJlclBvbGljeTogJ29yaWdpbicgLFxuICAgIH0pO1xuICAgIHJldHVybiB0cnVlO1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59XG5cbmV4cG9ydHMuaXNOYXRpdmVGdW5jdGlvbiA9IGlzTmF0aXZlRnVuY3Rpb247XG5leHBvcnRzLnN1cHBvcnRzRE9NRXJyb3IgPSBzdXBwb3J0c0RPTUVycm9yO1xuZXhwb3J0cy5zdXBwb3J0c0RPTUV4Y2VwdGlvbiA9IHN1cHBvcnRzRE9NRXhjZXB0aW9uO1xuZXhwb3J0cy5zdXBwb3J0c0Vycm9yRXZlbnQgPSBzdXBwb3J0c0Vycm9yRXZlbnQ7XG5leHBvcnRzLnN1cHBvcnRzRmV0Y2ggPSBzdXBwb3J0c0ZldGNoO1xuZXhwb3J0cy5zdXBwb3J0c05hdGl2ZUZldGNoID0gc3VwcG9ydHNOYXRpdmVGZXRjaDtcbmV4cG9ydHMuc3VwcG9ydHNSZWZlcnJlclBvbGljeSA9IHN1cHBvcnRzUmVmZXJyZXJQb2xpY3k7XG5leHBvcnRzLnN1cHBvcnRzUmVwb3J0aW5nT2JzZXJ2ZXIgPSBzdXBwb3J0c1JlcG9ydGluZ09ic2VydmVyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3VwcG9ydHMuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/supports.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/syncpromise.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/syncpromise.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst is = __webpack_require__(/*! ./is.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/is.js\");\n\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/** SyncPromise internal states */\nvar States; (function (States) {\n  /** Pending */\n  const PENDING = 0; States[States[\"PENDING\"] = PENDING] = \"PENDING\";\n  /** Resolved / OK */\n  const RESOLVED = 1; States[States[\"RESOLVED\"] = RESOLVED] = \"RESOLVED\";\n  /** Rejected / Error */\n  const REJECTED = 2; States[States[\"REJECTED\"] = REJECTED] = \"REJECTED\";\n})(States || (States = {}));\n\n// Overloads so we can call resolvedSyncPromise without arguments and generic argument\n\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nfunction resolvedSyncPromise(value) {\n  return new SyncPromise(resolve => {\n    resolve(value);\n  });\n}\n\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nfunction rejectedSyncPromise(reason) {\n  return new SyncPromise((_, reject) => {\n    reject(reason);\n  });\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise {\n\n   constructor(\n    executor,\n  ) {SyncPromise.prototype.__init.call(this);SyncPromise.prototype.__init2.call(this);SyncPromise.prototype.__init3.call(this);SyncPromise.prototype.__init4.call(this);\n    this._state = States.PENDING;\n    this._handlers = [];\n\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n   then(\n    onfulfilled,\n    onrejected,\n  ) {\n    return new SyncPromise((resolve, reject) => {\n      this._handlers.push([\n        false,\n        result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result );\n          } else {\n            try {\n              resolve(onfulfilled(result));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n        reason => {\n          if (!onrejected) {\n            reject(reason);\n          } else {\n            try {\n              resolve(onrejected(reason));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n      ]);\n      this._executeHandlers();\n    });\n  }\n\n  /** JSDoc */\n   catch(\n    onrejected,\n  ) {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n   finally(onfinally) {\n    return new SyncPromise((resolve, reject) => {\n      let val;\n      let isRejected;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val );\n      });\n    });\n  }\n\n  /** JSDoc */\n    __init() {this._resolve = (value) => {\n    this._setResult(States.RESOLVED, value);\n  };}\n\n  /** JSDoc */\n    __init2() {this._reject = (reason) => {\n    this._setResult(States.REJECTED, reason);\n  };}\n\n  /** JSDoc */\n    __init3() {this._setResult = (state, value) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if (is.isThenable(value)) {\n      void (value ).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };}\n\n  /** JSDoc */\n    __init4() {this._executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    const cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler[0]) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n        handler[1](this._value );\n      }\n\n      if (this._state === States.REJECTED) {\n        handler[2](this._value);\n      }\n\n      handler[0] = true;\n    });\n  };}\n}\n\nexports.SyncPromise = SyncPromise;\nexports.rejectedSyncPromise = rejectedSyncPromise;\nexports.resolvedSyncPromise = resolvedSyncPromise;\n//# sourceMappingURL=syncpromise.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/syncpromise.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/time.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/time.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst worldwide = __webpack_require__(/*! ./worldwide.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/worldwide.js\");\n\nconst ONE_SECOND_IN_MS = 1000;\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high-resolution monotonic clock.\n */\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n *\n * TODO(v8): Return type should be rounded.\n */\nfunction dateTimestampInSeconds() {\n  return Date.now() / ONE_SECOND_IN_MS;\n}\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction createUnixTimestampInSecondsFunc() {\n  const { performance } = worldwide.GLOBAL_OBJ ;\n  if (!performance || !performance.now) {\n    return dateTimestampInSeconds;\n  }\n\n  // Some browser and environments don't have a timeOrigin, so we fallback to\n  // using Date.now() to compute the starting time.\n  const approxStartingTimeOrigin = Date.now() - performance.now();\n  const timeOrigin = performance.timeOrigin == undefined ? approxStartingTimeOrigin : performance.timeOrigin;\n\n  // performance.now() is a monotonic clock, which means it starts at 0 when the process begins. To get the current\n  // wall clock time (actual UNIX timestamp), we need to add the starting time origin and the current time elapsed.\n  //\n  // TODO: This does not account for the case where the monotonic clock that powers performance.now() drifts from the\n  // wall clock time, which causes the returned timestamp to be inaccurate. We should investigate how to detect and\n  // correct for this.\n  // See: https://github.com/getsentry/sentry-javascript/issues/2590\n  // See: https://github.com/mdn/content/issues/4713\n  // See: https://dev.to/noamr/when-a-millisecond-is-not-a-millisecond-3h6\n  return () => {\n    return (timeOrigin + performance.now()) / ONE_SECOND_IN_MS;\n  };\n}\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nconst timestampInSeconds = createUnixTimestampInSecondsFunc();\n\n/**\n * Internal helper to store what is the source of browserPerformanceTimeOrigin below. For debugging only.\n */\nexports._browserPerformanceTimeOriginMode = void 0;\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nconst browserPerformanceTimeOrigin = (() => {\n  // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n  // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n  // data as reliable if they are within a reasonable threshold of the current time.\n\n  const { performance } = worldwide.GLOBAL_OBJ ;\n  if (!performance || !performance.now) {\n    exports._browserPerformanceTimeOriginMode = 'none';\n    return undefined;\n  }\n\n  const threshold = 3600 * 1000;\n  const performanceNow = performance.now();\n  const dateNow = Date.now();\n\n  // if timeOrigin isn't available set delta to threshold so it isn't used\n  const timeOriginDelta = performance.timeOrigin\n    ? Math.abs(performance.timeOrigin + performanceNow - dateNow)\n    : threshold;\n  const timeOriginIsReliable = timeOriginDelta < threshold;\n\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n  // eslint-disable-next-line deprecation/deprecation\n  const navigationStart = performance.timing && performance.timing.navigationStart;\n  const hasNavigationStart = typeof navigationStart === 'number';\n  // if navigationStart isn't available set delta to threshold so it isn't used\n  const navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;\n  const navigationStartIsReliable = navigationStartDelta < threshold;\n\n  if (timeOriginIsReliable || navigationStartIsReliable) {\n    // Use the more reliable time origin\n    if (timeOriginDelta <= navigationStartDelta) {\n      exports._browserPerformanceTimeOriginMode = 'timeOrigin';\n      return performance.timeOrigin;\n    } else {\n      exports._browserPerformanceTimeOriginMode = 'navigationStart';\n      return navigationStart;\n    }\n  }\n\n  // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n  exports._browserPerformanceTimeOriginMode = 'dateNow';\n  return dateNow;\n})();\n\nexports.browserPerformanceTimeOrigin = browserPerformanceTimeOrigin;\nexports.dateTimestampInSeconds = dateTimestampInSeconds;\nexports.timestampInSeconds = timestampInSeconds;\n//# sourceMappingURL=time.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/time.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/tracing.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/tracing.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst baggage = __webpack_require__(/*! ./baggage.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/baggage.js\");\nconst misc = __webpack_require__(/*! ./misc.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/misc.js\");\n\n// eslint-disable-next-line @sentry-internal/sdk/no-regexp-constructor -- RegExp is used for readability here\nconst TRACEPARENT_REGEXP = new RegExp(\n  '^[ \\\\t]*' + // whitespace\n    '([0-9a-f]{32})?' + // trace_id\n    '-?([0-9a-f]{16})?' + // span_id\n    '-?([01])?' + // sampled\n    '[ \\\\t]*$', // whitespace\n);\n\n/**\n * Extract transaction context data from a `sentry-trace` header.\n *\n * @param traceparent Traceparent string\n *\n * @returns Object containing data from the header, or undefined if traceparent string is malformed\n */\nfunction extractTraceparentData(traceparent) {\n  if (!traceparent) {\n    return undefined;\n  }\n\n  const matches = traceparent.match(TRACEPARENT_REGEXP);\n  if (!matches) {\n    return undefined;\n  }\n\n  let parentSampled;\n  if (matches[3] === '1') {\n    parentSampled = true;\n  } else if (matches[3] === '0') {\n    parentSampled = false;\n  }\n\n  return {\n    traceId: matches[1],\n    parentSampled,\n    parentSpanId: matches[2],\n  };\n}\n\n/**\n * Create a propagation context from incoming headers or\n * creates a minimal new one if the headers are undefined.\n */\nfunction propagationContextFromHeaders(\n  sentryTrace,\n  baggage$1,\n) {\n  const traceparentData = extractTraceparentData(sentryTrace);\n  const dynamicSamplingContext = baggage.baggageHeaderToDynamicSamplingContext(baggage$1);\n\n  const { traceId, parentSpanId, parentSampled } = traceparentData || {};\n\n  if (!traceparentData) {\n    return {\n      traceId: traceId || misc.uuid4(),\n      spanId: misc.uuid4().substring(16),\n    };\n  } else {\n    return {\n      traceId: traceId || misc.uuid4(),\n      parentSpanId: parentSpanId || misc.uuid4().substring(16),\n      spanId: misc.uuid4().substring(16),\n      sampled: parentSampled,\n      dsc: dynamicSamplingContext || {}, // If we have traceparent data but no DSC it means we are not head of trace and we must freeze it\n    };\n  }\n}\n\n/**\n * Create sentry-trace header from span context values.\n */\nfunction generateSentryTraceHeader(\n  traceId = misc.uuid4(),\n  spanId = misc.uuid4().substring(16),\n  sampled,\n) {\n  let sampledString = '';\n  if (sampled !== undefined) {\n    sampledString = sampled ? '-1' : '-0';\n  }\n  return `${traceId}-${spanId}${sampledString}`;\n}\n\nexports.TRACEPARENT_REGEXP = TRACEPARENT_REGEXP;\nexports.extractTraceparentData = extractTraceparentData;\nexports.generateSentryTraceHeader = generateSentryTraceHeader;\nexports.propagationContextFromHeaders = propagationContextFromHeaders;\n//# sourceMappingURL=tracing.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL3RyYWNpbmcuanMiLCJtYXBwaW5ncyI6IkFBQUEsOENBQTZDLEVBQUUsYUFBYSxFQUFDOztBQUU3RCxnQkFBZ0IsbUJBQU8sQ0FBQyxxSEFBYztBQUN0QyxhQUFhLG1CQUFPLENBQUMsK0dBQVc7O0FBRWhDO0FBQ0E7QUFDQTtBQUNBLGVBQWUsR0FBRztBQUNsQixpQkFBaUIsR0FBRztBQUNwQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsVUFBVSx1Q0FBdUM7O0FBRWpEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QztBQUN2QztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxRQUFRLEdBQUcsT0FBTyxFQUFFLGNBQWM7QUFDOUM7O0FBRUEsMEJBQTBCO0FBQzFCLDhCQUE4QjtBQUM5QixpQ0FBaUM7QUFDakMscUNBQXFDO0FBQ3JDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLXByb2plY3QvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL3RyYWNpbmcuanM/MWNiNiJdLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG5jb25zdCBiYWdnYWdlID0gcmVxdWlyZSgnLi9iYWdnYWdlLmpzJyk7XG5jb25zdCBtaXNjID0gcmVxdWlyZSgnLi9taXNjLmpzJyk7XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAc2VudHJ5LWludGVybmFsL3Nkay9uby1yZWdleHAtY29uc3RydWN0b3IgLS0gUmVnRXhwIGlzIHVzZWQgZm9yIHJlYWRhYmlsaXR5IGhlcmVcbmNvbnN0IFRSQUNFUEFSRU5UX1JFR0VYUCA9IG5ldyBSZWdFeHAoXG4gICdeWyBcXFxcdF0qJyArIC8vIHdoaXRlc3BhY2VcbiAgICAnKFswLTlhLWZdezMyfSk/JyArIC8vIHRyYWNlX2lkXG4gICAgJy0/KFswLTlhLWZdezE2fSk/JyArIC8vIHNwYW5faWRcbiAgICAnLT8oWzAxXSk/JyArIC8vIHNhbXBsZWRcbiAgICAnWyBcXFxcdF0qJCcsIC8vIHdoaXRlc3BhY2Vcbik7XG5cbi8qKlxuICogRXh0cmFjdCB0cmFuc2FjdGlvbiBjb250ZXh0IGRhdGEgZnJvbSBhIGBzZW50cnktdHJhY2VgIGhlYWRlci5cbiAqXG4gKiBAcGFyYW0gdHJhY2VwYXJlbnQgVHJhY2VwYXJlbnQgc3RyaW5nXG4gKlxuICogQHJldHVybnMgT2JqZWN0IGNvbnRhaW5pbmcgZGF0YSBmcm9tIHRoZSBoZWFkZXIsIG9yIHVuZGVmaW5lZCBpZiB0cmFjZXBhcmVudCBzdHJpbmcgaXMgbWFsZm9ybWVkXG4gKi9cbmZ1bmN0aW9uIGV4dHJhY3RUcmFjZXBhcmVudERhdGEodHJhY2VwYXJlbnQpIHtcbiAgaWYgKCF0cmFjZXBhcmVudCkge1xuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cblxuICBjb25zdCBtYXRjaGVzID0gdHJhY2VwYXJlbnQubWF0Y2goVFJBQ0VQQVJFTlRfUkVHRVhQKTtcbiAgaWYgKCFtYXRjaGVzKSB7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxuXG4gIGxldCBwYXJlbnRTYW1wbGVkO1xuICBpZiAobWF0Y2hlc1szXSA9PT0gJzEnKSB7XG4gICAgcGFyZW50U2FtcGxlZCA9IHRydWU7XG4gIH0gZWxzZSBpZiAobWF0Y2hlc1szXSA9PT0gJzAnKSB7XG4gICAgcGFyZW50U2FtcGxlZCA9IGZhbHNlO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICB0cmFjZUlkOiBtYXRjaGVzWzFdLFxuICAgIHBhcmVudFNhbXBsZWQsXG4gICAgcGFyZW50U3BhbklkOiBtYXRjaGVzWzJdLFxuICB9O1xufVxuXG4vKipcbiAqIENyZWF0ZSBhIHByb3BhZ2F0aW9uIGNvbnRleHQgZnJvbSBpbmNvbWluZyBoZWFkZXJzIG9yXG4gKiBjcmVhdGVzIGEgbWluaW1hbCBuZXcgb25lIGlmIHRoZSBoZWFkZXJzIGFyZSB1bmRlZmluZWQuXG4gKi9cbmZ1bmN0aW9uIHByb3BhZ2F0aW9uQ29udGV4dEZyb21IZWFkZXJzKFxuICBzZW50cnlUcmFjZSxcbiAgYmFnZ2FnZSQxLFxuKSB7XG4gIGNvbnN0IHRyYWNlcGFyZW50RGF0YSA9IGV4dHJhY3RUcmFjZXBhcmVudERhdGEoc2VudHJ5VHJhY2UpO1xuICBjb25zdCBkeW5hbWljU2FtcGxpbmdDb250ZXh0ID0gYmFnZ2FnZS5iYWdnYWdlSGVhZGVyVG9EeW5hbWljU2FtcGxpbmdDb250ZXh0KGJhZ2dhZ2UkMSk7XG5cbiAgY29uc3QgeyB0cmFjZUlkLCBwYXJlbnRTcGFuSWQsIHBhcmVudFNhbXBsZWQgfSA9IHRyYWNlcGFyZW50RGF0YSB8fCB7fTtcblxuICBpZiAoIXRyYWNlcGFyZW50RGF0YSkge1xuICAgIHJldHVybiB7XG4gICAgICB0cmFjZUlkOiB0cmFjZUlkIHx8IG1pc2MudXVpZDQoKSxcbiAgICAgIHNwYW5JZDogbWlzYy51dWlkNCgpLnN1YnN0cmluZygxNiksXG4gICAgfTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4ge1xuICAgICAgdHJhY2VJZDogdHJhY2VJZCB8fCBtaXNjLnV1aWQ0KCksXG4gICAgICBwYXJlbnRTcGFuSWQ6IHBhcmVudFNwYW5JZCB8fCBtaXNjLnV1aWQ0KCkuc3Vic3RyaW5nKDE2KSxcbiAgICAgIHNwYW5JZDogbWlzYy51dWlkNCgpLnN1YnN0cmluZygxNiksXG4gICAgICBzYW1wbGVkOiBwYXJlbnRTYW1wbGVkLFxuICAgICAgZHNjOiBkeW5hbWljU2FtcGxpbmdDb250ZXh0IHx8IHt9LCAvLyBJZiB3ZSBoYXZlIHRyYWNlcGFyZW50IGRhdGEgYnV0IG5vIERTQyBpdCBtZWFucyB3ZSBhcmUgbm90IGhlYWQgb2YgdHJhY2UgYW5kIHdlIG11c3QgZnJlZXplIGl0XG4gICAgfTtcbiAgfVxufVxuXG4vKipcbiAqIENyZWF0ZSBzZW50cnktdHJhY2UgaGVhZGVyIGZyb20gc3BhbiBjb250ZXh0IHZhbHVlcy5cbiAqL1xuZnVuY3Rpb24gZ2VuZXJhdGVTZW50cnlUcmFjZUhlYWRlcihcbiAgdHJhY2VJZCA9IG1pc2MudXVpZDQoKSxcbiAgc3BhbklkID0gbWlzYy51dWlkNCgpLnN1YnN0cmluZygxNiksXG4gIHNhbXBsZWQsXG4pIHtcbiAgbGV0IHNhbXBsZWRTdHJpbmcgPSAnJztcbiAgaWYgKHNhbXBsZWQgIT09IHVuZGVmaW5lZCkge1xuICAgIHNhbXBsZWRTdHJpbmcgPSBzYW1wbGVkID8gJy0xJyA6ICctMCc7XG4gIH1cbiAgcmV0dXJuIGAke3RyYWNlSWR9LSR7c3BhbklkfSR7c2FtcGxlZFN0cmluZ31gO1xufVxuXG5leHBvcnRzLlRSQUNFUEFSRU5UX1JFR0VYUCA9IFRSQUNFUEFSRU5UX1JFR0VYUDtcbmV4cG9ydHMuZXh0cmFjdFRyYWNlcGFyZW50RGF0YSA9IGV4dHJhY3RUcmFjZXBhcmVudERhdGE7XG5leHBvcnRzLmdlbmVyYXRlU2VudHJ5VHJhY2VIZWFkZXIgPSBnZW5lcmF0ZVNlbnRyeVRyYWNlSGVhZGVyO1xuZXhwb3J0cy5wcm9wYWdhdGlvbkNvbnRleHRGcm9tSGVhZGVycyA9IHByb3BhZ2F0aW9uQ29udGV4dEZyb21IZWFkZXJzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHJhY2luZy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/tracing.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/url.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/url.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nfunction parseUrl(url) {\n  if (!url) {\n    return {};\n  }\n\n  const match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  const query = match[6] || '';\n  const fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    search: query,\n    hash: fragment,\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nfunction stripUrlQueryAndFragment(urlPath) {\n  return (urlPath.split(/[?#]/, 1) )[0];\n}\n\n/**\n * Returns number of URL segments of a passed string URL.\n */\nfunction getNumberOfUrlSegments(url) {\n  // split at '/' or at '\\/' to split regex urls correctly\n  return url.split(/\\\\?\\//).filter(s => s.length > 0 && s !== ',').length;\n}\n\n/**\n * Takes a URL object and returns a sanitized string which is safe to use as span name\n * see: https://develop.sentry.dev/sdk/data-handling/#structuring-data\n */\nfunction getSanitizedUrlString(url) {\n  const { protocol, host, path } = url;\n\n  const filteredHost =\n    (host &&\n      host\n        // Always filter out authority\n        .replace(/^.*@/, '[filtered]:[filtered]@')\n        // Don't show standard :80 (http) and :443 (https) ports to reduce the noise\n        // TODO: Use new URL global if it exists\n        .replace(/(:80)$/, '')\n        .replace(/(:443)$/, '')) ||\n    '';\n\n  return `${protocol ? `${protocol}://` : ''}${filteredHost}${path}`;\n}\n\nexports.getNumberOfUrlSegments = getNumberOfUrlSegments;\nexports.getSanitizedUrlString = getSanitizedUrlString;\nexports.parseUrl = parseUrl;\nexports.stripUrlQueryAndFragment = stripUrlQueryAndFragment;\n//# sourceMappingURL=url.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL3VybC5qcyIsIm1hcHBpbmdzIjoiQUFBQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7O0FBRTdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsdUJBQXVCOztBQUVqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxZQUFZLGNBQWMsU0FBUyxVQUFVLEVBQUUsYUFBYSxFQUFFLEtBQUs7QUFDbkU7O0FBRUEsOEJBQThCO0FBQzlCLDZCQUE2QjtBQUM3QixnQkFBZ0I7QUFDaEIsZ0NBQWdDO0FBQ2hDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLXByb2plY3QvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL3VybC5qcz81OTZhIl0sInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG5cbi8qKlxuICogUGFyc2VzIHN0cmluZyBmb3JtIG9mIFVSTCBpbnRvIGFuIG9iamVjdFxuICogLy8gYm9ycm93ZWQgZnJvbSBodHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjMzk4NiNhcHBlbmRpeC1CXG4gKiAvLyBpbnRlbnRpb25hbGx5IHVzaW5nIHJlZ2V4IGFuZCBub3QgPGEvPiBocmVmIHBhcnNpbmcgdHJpY2sgYmVjYXVzZSBSZWFjdCBOYXRpdmUgYW5kIG90aGVyXG4gKiAvLyBlbnZpcm9ubWVudHMgd2hlcmUgRE9NIG1pZ2h0IG5vdCBiZSBhdmFpbGFibGVcbiAqIEByZXR1cm5zIHBhcnNlZCBVUkwgb2JqZWN0XG4gKi9cbmZ1bmN0aW9uIHBhcnNlVXJsKHVybCkge1xuICBpZiAoIXVybCkge1xuICAgIHJldHVybiB7fTtcbiAgfVxuXG4gIGNvbnN0IG1hdGNoID0gdXJsLm1hdGNoKC9eKChbXjovPyNdKyk6KT8oXFwvXFwvKFteLz8jXSopKT8oW14/I10qKShcXD8oW14jXSopKT8oIyguKikpPyQvKTtcblxuICBpZiAoIW1hdGNoKSB7XG4gICAgcmV0dXJuIHt9O1xuICB9XG5cbiAgLy8gY29lcmNlIHRvIHVuZGVmaW5lZCB2YWx1ZXMgdG8gZW1wdHkgc3RyaW5nIHNvIHdlIGRvbid0IGdldCAndW5kZWZpbmVkJ1xuICBjb25zdCBxdWVyeSA9IG1hdGNoWzZdIHx8ICcnO1xuICBjb25zdCBmcmFnbWVudCA9IG1hdGNoWzhdIHx8ICcnO1xuICByZXR1cm4ge1xuICAgIGhvc3Q6IG1hdGNoWzRdLFxuICAgIHBhdGg6IG1hdGNoWzVdLFxuICAgIHByb3RvY29sOiBtYXRjaFsyXSxcbiAgICBzZWFyY2g6IHF1ZXJ5LFxuICAgIGhhc2g6IGZyYWdtZW50LFxuICAgIHJlbGF0aXZlOiBtYXRjaFs1XSArIHF1ZXJ5ICsgZnJhZ21lbnQsIC8vIGV2ZXJ5dGhpbmcgbWludXMgb3JpZ2luXG4gIH07XG59XG5cbi8qKlxuICogU3RyaXAgdGhlIHF1ZXJ5IHN0cmluZyBhbmQgZnJhZ21lbnQgb2ZmIG9mIGEgZ2l2ZW4gVVJMIG9yIHBhdGggKGlmIHByZXNlbnQpXG4gKlxuICogQHBhcmFtIHVybFBhdGggRnVsbCBVUkwgb3IgcGF0aCwgaW5jbHVkaW5nIHBvc3NpYmxlIHF1ZXJ5IHN0cmluZyBhbmQvb3IgZnJhZ21lbnRcbiAqIEByZXR1cm5zIFVSTCBvciBwYXRoIHdpdGhvdXQgcXVlcnkgc3RyaW5nIG9yIGZyYWdtZW50XG4gKi9cbmZ1bmN0aW9uIHN0cmlwVXJsUXVlcnlBbmRGcmFnbWVudCh1cmxQYXRoKSB7XG4gIHJldHVybiAodXJsUGF0aC5zcGxpdCgvWz8jXS8sIDEpIClbMF07XG59XG5cbi8qKlxuICogUmV0dXJucyBudW1iZXIgb2YgVVJMIHNlZ21lbnRzIG9mIGEgcGFzc2VkIHN0cmluZyBVUkwuXG4gKi9cbmZ1bmN0aW9uIGdldE51bWJlck9mVXJsU2VnbWVudHModXJsKSB7XG4gIC8vIHNwbGl0IGF0ICcvJyBvciBhdCAnXFwvJyB0byBzcGxpdCByZWdleCB1cmxzIGNvcnJlY3RseVxuICByZXR1cm4gdXJsLnNwbGl0KC9cXFxcP1xcLy8pLmZpbHRlcihzID0+IHMubGVuZ3RoID4gMCAmJiBzICE9PSAnLCcpLmxlbmd0aDtcbn1cblxuLyoqXG4gKiBUYWtlcyBhIFVSTCBvYmplY3QgYW5kIHJldHVybnMgYSBzYW5pdGl6ZWQgc3RyaW5nIHdoaWNoIGlzIHNhZmUgdG8gdXNlIGFzIHNwYW4gbmFtZVxuICogc2VlOiBodHRwczovL2RldmVsb3Auc2VudHJ5LmRldi9zZGsvZGF0YS1oYW5kbGluZy8jc3RydWN0dXJpbmctZGF0YVxuICovXG5mdW5jdGlvbiBnZXRTYW5pdGl6ZWRVcmxTdHJpbmcodXJsKSB7XG4gIGNvbnN0IHsgcHJvdG9jb2wsIGhvc3QsIHBhdGggfSA9IHVybDtcblxuICBjb25zdCBmaWx0ZXJlZEhvc3QgPVxuICAgIChob3N0ICYmXG4gICAgICBob3N0XG4gICAgICAgIC8vIEFsd2F5cyBmaWx0ZXIgb3V0IGF1dGhvcml0eVxuICAgICAgICAucmVwbGFjZSgvXi4qQC8sICdbZmlsdGVyZWRdOltmaWx0ZXJlZF1AJylcbiAgICAgICAgLy8gRG9uJ3Qgc2hvdyBzdGFuZGFyZCA6ODAgKGh0dHApIGFuZCA6NDQzIChodHRwcykgcG9ydHMgdG8gcmVkdWNlIHRoZSBub2lzZVxuICAgICAgICAvLyBUT0RPOiBVc2UgbmV3IFVSTCBnbG9iYWwgaWYgaXQgZXhpc3RzXG4gICAgICAgIC5yZXBsYWNlKC8oOjgwKSQvLCAnJylcbiAgICAgICAgLnJlcGxhY2UoLyg6NDQzKSQvLCAnJykpIHx8XG4gICAgJyc7XG5cbiAgcmV0dXJuIGAke3Byb3RvY29sID8gYCR7cHJvdG9jb2x9Oi8vYCA6ICcnfSR7ZmlsdGVyZWRIb3N0fSR7cGF0aH1gO1xufVxuXG5leHBvcnRzLmdldE51bWJlck9mVXJsU2VnbWVudHMgPSBnZXROdW1iZXJPZlVybFNlZ21lbnRzO1xuZXhwb3J0cy5nZXRTYW5pdGl6ZWRVcmxTdHJpbmcgPSBnZXRTYW5pdGl6ZWRVcmxTdHJpbmc7XG5leHBvcnRzLnBhcnNlVXJsID0gcGFyc2VVcmw7XG5leHBvcnRzLnN0cmlwVXJsUXVlcnlBbmRGcmFnbWVudCA9IHN0cmlwVXJsUXVlcnlBbmRGcmFnbWVudDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVybC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/url.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/vendor/escapeStringForRegex.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/vendor/escapeStringForRegex.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n// Based on https://github.com/sindresorhus/escape-string-regexp but with modifications to:\n//   a) reduce the size by skipping the runtime type - checking\n//   b) ensure it gets down - compiled for old versions of Node(the published package only supports Node 14+).\n//\n// MIT License\n//\n// Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (https://sindresorhus.com)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n// documentation files(the \"Software\"), to deal in the Software without restriction, including without limitation\n// the rights to use, copy, modify, merge, publish, distribute, sublicense, and / or sell copies of the Software, and\n// to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all copies or substantial portions of\n// the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO\n// THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n// IN THE SOFTWARE.\n\n/**\n * Given a string, escape characters which have meaning in the regex grammar, such that the result is safe to feed to\n * `new RegExp()`.\n *\n * @param regexString The string to escape\n * @returns An version of the string with all special regex characters escaped\n */\nfunction escapeStringForRegex(regexString) {\n  // escape the hyphen separately so we can also replace it with a unicode literal hyphen, to avoid the problems\n  // discussed in https://github.com/sindresorhus/escape-string-regexp/issues/20.\n  return regexString.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&').replace(/-/g, '\\\\x2d');\n}\n\nexports.escapeStringForRegex = escapeStringForRegex;\n//# sourceMappingURL=escapeStringForRegex.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL3ZlbmRvci9lc2NhcGVTdHJpbmdGb3JSZWdleC5qcyIsIm1hcHBpbmdzIjoiQUFBQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7O0FBRTdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQztBQUNwQzs7QUFFQSw0QkFBNEI7QUFDNUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0Zm9saW8tcHJvamVjdC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2VudHJ5K3V0aWxzQDguMTcuMC9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9idWlsZC9janMvdmVuZG9yL2VzY2FwZVN0cmluZ0ZvclJlZ2V4LmpzP2I5NTAiXSwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxuLy8gQmFzZWQgb24gaHR0cHM6Ly9naXRodWIuY29tL3NpbmRyZXNvcmh1cy9lc2NhcGUtc3RyaW5nLXJlZ2V4cCBidXQgd2l0aCBtb2RpZmljYXRpb25zIHRvOlxuLy8gICBhKSByZWR1Y2UgdGhlIHNpemUgYnkgc2tpcHBpbmcgdGhlIHJ1bnRpbWUgdHlwZSAtIGNoZWNraW5nXG4vLyAgIGIpIGVuc3VyZSBpdCBnZXRzIGRvd24gLSBjb21waWxlZCBmb3Igb2xkIHZlcnNpb25zIG9mIE5vZGUodGhlIHB1Ymxpc2hlZCBwYWNrYWdlIG9ubHkgc3VwcG9ydHMgTm9kZSAxNCspLlxuLy9cbi8vIE1JVCBMaWNlbnNlXG4vL1xuLy8gQ29weXJpZ2h0IChjKSBTaW5kcmUgU29yaHVzIDxzaW5kcmVzb3JodXNAZ21haWwuY29tPiAoaHR0cHM6Ly9zaW5kcmVzb3JodXMuY29tKVxuLy9cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZFxuLy8gZG9jdW1lbnRhdGlvbiBmaWxlcyh0aGUgXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvblxuLy8gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZCAvIG9yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kXG4vLyB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2Zcbi8vIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE9cbi8vIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSwgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC5JTiBOTyBFVkVOVCBTSEFMTCBUSEVcbi8vIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCxcbi8vIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1Ncbi8vIElOIFRIRSBTT0ZUV0FSRS5cblxuLyoqXG4gKiBHaXZlbiBhIHN0cmluZywgZXNjYXBlIGNoYXJhY3RlcnMgd2hpY2ggaGF2ZSBtZWFuaW5nIGluIHRoZSByZWdleCBncmFtbWFyLCBzdWNoIHRoYXQgdGhlIHJlc3VsdCBpcyBzYWZlIHRvIGZlZWQgdG9cbiAqIGBuZXcgUmVnRXhwKClgLlxuICpcbiAqIEBwYXJhbSByZWdleFN0cmluZyBUaGUgc3RyaW5nIHRvIGVzY2FwZVxuICogQHJldHVybnMgQW4gdmVyc2lvbiBvZiB0aGUgc3RyaW5nIHdpdGggYWxsIHNwZWNpYWwgcmVnZXggY2hhcmFjdGVycyBlc2NhcGVkXG4gKi9cbmZ1bmN0aW9uIGVzY2FwZVN0cmluZ0ZvclJlZ2V4KHJlZ2V4U3RyaW5nKSB7XG4gIC8vIGVzY2FwZSB0aGUgaHlwaGVuIHNlcGFyYXRlbHkgc28gd2UgY2FuIGFsc28gcmVwbGFjZSBpdCB3aXRoIGEgdW5pY29kZSBsaXRlcmFsIGh5cGhlbiwgdG8gYXZvaWQgdGhlIHByb2JsZW1zXG4gIC8vIGRpc2N1c3NlZCBpbiBodHRwczovL2dpdGh1Yi5jb20vc2luZHJlc29yaHVzL2VzY2FwZS1zdHJpbmctcmVnZXhwL2lzc3Vlcy8yMC5cbiAgcmV0dXJuIHJlZ2V4U3RyaW5nLnJlcGxhY2UoL1t8XFxcXHt9KClbXFxdXiQrKj8uXS9nLCAnXFxcXCQmJykucmVwbGFjZSgvLS9nLCAnXFxcXHgyZCcpO1xufVxuXG5leHBvcnRzLmVzY2FwZVN0cmluZ0ZvclJlZ2V4ID0gZXNjYXBlU3RyaW5nRm9yUmVnZXg7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lc2NhcGVTdHJpbmdGb3JSZWdleC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/vendor/escapeStringForRegex.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/vendor/supportsHistory.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/vendor/supportsHistory.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst worldwide = __webpack_require__(/*! ../worldwide.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/worldwide.js\");\n\n// Based on https://github.com/angular/angular.js/pull/13945/files\n// The MIT License\n\n\nconst WINDOW = worldwide.GLOBAL_OBJ ;\n\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsHistory() {\n  // NOTE: in Chrome App environment, touching history.pushState, *even inside\n  //       a try/catch block*, will cause Chrome to output an error to console.error\n  // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n  /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const chromeVar = (WINDOW ).chrome;\n  const isChromePackagedApp = chromeVar && chromeVar.app && chromeVar.app.runtime;\n  /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n  const hasHistoryApi = 'history' in WINDOW && !!WINDOW.history.pushState && !!WINDOW.history.replaceState;\n\n  return !isChromePackagedApp && hasHistoryApi;\n}\n\nexports.supportsHistory = supportsHistory;\n//# sourceMappingURL=supportsHistory.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL3ZlbmRvci9zdXBwb3J0c0hpc3RvcnkuanMiLCJtYXBwaW5ncyI6IkFBQUEsOENBQTZDLEVBQUUsYUFBYSxFQUFDOztBQUU3RCxrQkFBa0IsbUJBQU8sQ0FBQywwSEFBaUI7O0FBRTNDO0FBQ0E7OztBQUdBOztBQUVBO0FBQ0E7QUFDQSxJQUFJLHNCQUFzQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLHVCQUF1QjtBQUN2QiIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2Nqcy92ZW5kb3Ivc3VwcG9ydHNIaXN0b3J5LmpzP2RmODQiXSwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxuY29uc3Qgd29ybGR3aWRlID0gcmVxdWlyZSgnLi4vd29ybGR3aWRlLmpzJyk7XG5cbi8vIEJhc2VkIG9uIGh0dHBzOi8vZ2l0aHViLmNvbS9hbmd1bGFyL2FuZ3VsYXIuanMvcHVsbC8xMzk0NS9maWxlc1xuLy8gVGhlIE1JVCBMaWNlbnNlXG5cblxuY29uc3QgV0lORE9XID0gd29ybGR3aWRlLkdMT0JBTF9PQkogO1xuXG4vKipcbiAqIFRlbGxzIHdoZXRoZXIgY3VycmVudCBlbnZpcm9ubWVudCBzdXBwb3J0cyBIaXN0b3J5IEFQSVxuICoge0BsaW5rIHN1cHBvcnRzSGlzdG9yeX0uXG4gKlxuICogQHJldHVybnMgQW5zd2VyIHRvIHRoZSBnaXZlbiBxdWVzdGlvbi5cbiAqL1xuZnVuY3Rpb24gc3VwcG9ydHNIaXN0b3J5KCkge1xuICAvLyBOT1RFOiBpbiBDaHJvbWUgQXBwIGVudmlyb25tZW50LCB0b3VjaGluZyBoaXN0b3J5LnB1c2hTdGF0ZSwgKmV2ZW4gaW5zaWRlXG4gIC8vICAgICAgIGEgdHJ5L2NhdGNoIGJsb2NrKiwgd2lsbCBjYXVzZSBDaHJvbWUgdG8gb3V0cHV0IGFuIGVycm9yIHRvIGNvbnNvbGUuZXJyb3JcbiAgLy8gYm9ycm93ZWQgZnJvbTogaHR0cHM6Ly9naXRodWIuY29tL2FuZ3VsYXIvYW5ndWxhci5qcy9wdWxsLzEzOTQ1L2ZpbGVzXG4gIC8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnNhZmUtbWVtYmVyLWFjY2VzcyAqL1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuICBjb25zdCBjaHJvbWVWYXIgPSAoV0lORE9XICkuY2hyb21lO1xuICBjb25zdCBpc0Nocm9tZVBhY2thZ2VkQXBwID0gY2hyb21lVmFyICYmIGNocm9tZVZhci5hcHAgJiYgY2hyb21lVmFyLmFwcC5ydW50aW1lO1xuICAvKiBlc2xpbnQtZW5hYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnNhZmUtbWVtYmVyLWFjY2VzcyAqL1xuICBjb25zdCBoYXNIaXN0b3J5QXBpID0gJ2hpc3RvcnknIGluIFdJTkRPVyAmJiAhIVdJTkRPVy5oaXN0b3J5LnB1c2hTdGF0ZSAmJiAhIVdJTkRPVy5oaXN0b3J5LnJlcGxhY2VTdGF0ZTtcblxuICByZXR1cm4gIWlzQ2hyb21lUGFja2FnZWRBcHAgJiYgaGFzSGlzdG9yeUFwaTtcbn1cblxuZXhwb3J0cy5zdXBwb3J0c0hpc3RvcnkgPSBzdXBwb3J0c0hpc3Rvcnk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdXBwb3J0c0hpc3RvcnkuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/vendor/supportsHistory.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/version.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/version.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst SDK_VERSION = '8.17.0';\n\nexports.SDK_VERSION = SDK_VERSION;\n//# sourceMappingURL=version.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL3ZlcnNpb24uanMiLCJtYXBwaW5ncyI6IkFBQUEsOENBQTZDLEVBQUUsYUFBYSxFQUFDOztBQUU3RDs7QUFFQSxtQkFBbUI7QUFDbkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0Zm9saW8tcHJvamVjdC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2VudHJ5K3V0aWxzQDguMTcuMC9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9idWlsZC9janMvdmVyc2lvbi5qcz85ODlkIl0sInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG5cbmNvbnN0IFNES19WRVJTSU9OID0gJzguMTcuMCc7XG5cbmV4cG9ydHMuU0RLX1ZFUlNJT04gPSBTREtfVkVSU0lPTjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXZlcnNpb24uanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/version.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/worldwide.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/worldwide.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nconst version = __webpack_require__(/*! ./version.js */ \"(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/version.js\");\n\n/** Get's the global object for the current JavaScript runtime */\nconst GLOBAL_OBJ = globalThis ;\n\n/**\n * Returns a global singleton contained in the global `__SENTRY__[]` object.\n *\n * If the singleton doesn't already exist in `__SENTRY__`, it will be created using the given factory\n * function and added to the `__SENTRY__` object.\n *\n * @param name name of the global singleton on __SENTRY__\n * @param creator creator Factory function to create the singleton if it doesn't already exist on `__SENTRY__`\n * @param obj (Optional) The global object on which to look for `__SENTRY__`, if not `GLOBAL_OBJ`'s return value\n * @returns the singleton\n */\nfunction getGlobalSingleton(name, creator, obj) {\n  const gbl = (obj || GLOBAL_OBJ) ;\n  const __SENTRY__ = (gbl.__SENTRY__ = gbl.__SENTRY__ || {});\n  const versionedCarrier = (__SENTRY__[version.SDK_VERSION] = __SENTRY__[version.SDK_VERSION] || {});\n  return versionedCarrier[name] || (versionedCarrier[name] = creator());\n}\n\nexports.GLOBAL_OBJ = GLOBAL_OBJ;\nexports.getGlobalSingleton = getGlobalSingleton;\n//# sourceMappingURL=worldwide.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvY2pzL3dvcmxkd2lkZS5qcyIsIm1hcHBpbmdzIjoiQUFBQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7O0FBRTdELGdCQUFnQixtQkFBTyxDQUFDLHFIQUFjOztBQUV0QztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkRBQTJEO0FBQzNELG1HQUFtRztBQUNuRztBQUNBOztBQUVBLGtCQUFrQjtBQUNsQiwwQkFBMEI7QUFDMUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0Zm9saW8tcHJvamVjdC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2VudHJ5K3V0aWxzQDguMTcuMC9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9idWlsZC9janMvd29ybGR3aWRlLmpzPzkxOGEiXSwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxuY29uc3QgdmVyc2lvbiA9IHJlcXVpcmUoJy4vdmVyc2lvbi5qcycpO1xuXG4vKiogR2V0J3MgdGhlIGdsb2JhbCBvYmplY3QgZm9yIHRoZSBjdXJyZW50IEphdmFTY3JpcHQgcnVudGltZSAqL1xuY29uc3QgR0xPQkFMX09CSiA9IGdsb2JhbFRoaXMgO1xuXG4vKipcbiAqIFJldHVybnMgYSBnbG9iYWwgc2luZ2xldG9uIGNvbnRhaW5lZCBpbiB0aGUgZ2xvYmFsIGBfX1NFTlRSWV9fW11gIG9iamVjdC5cbiAqXG4gKiBJZiB0aGUgc2luZ2xldG9uIGRvZXNuJ3QgYWxyZWFkeSBleGlzdCBpbiBgX19TRU5UUllfX2AsIGl0IHdpbGwgYmUgY3JlYXRlZCB1c2luZyB0aGUgZ2l2ZW4gZmFjdG9yeVxuICogZnVuY3Rpb24gYW5kIGFkZGVkIHRvIHRoZSBgX19TRU5UUllfX2Agb2JqZWN0LlxuICpcbiAqIEBwYXJhbSBuYW1lIG5hbWUgb2YgdGhlIGdsb2JhbCBzaW5nbGV0b24gb24gX19TRU5UUllfX1xuICogQHBhcmFtIGNyZWF0b3IgY3JlYXRvciBGYWN0b3J5IGZ1bmN0aW9uIHRvIGNyZWF0ZSB0aGUgc2luZ2xldG9uIGlmIGl0IGRvZXNuJ3QgYWxyZWFkeSBleGlzdCBvbiBgX19TRU5UUllfX2BcbiAqIEBwYXJhbSBvYmogKE9wdGlvbmFsKSBUaGUgZ2xvYmFsIG9iamVjdCBvbiB3aGljaCB0byBsb29rIGZvciBgX19TRU5UUllfX2AsIGlmIG5vdCBgR0xPQkFMX09CSmAncyByZXR1cm4gdmFsdWVcbiAqIEByZXR1cm5zIHRoZSBzaW5nbGV0b25cbiAqL1xuZnVuY3Rpb24gZ2V0R2xvYmFsU2luZ2xldG9uKG5hbWUsIGNyZWF0b3IsIG9iaikge1xuICBjb25zdCBnYmwgPSAob2JqIHx8IEdMT0JBTF9PQkopIDtcbiAgY29uc3QgX19TRU5UUllfXyA9IChnYmwuX19TRU5UUllfXyA9IGdibC5fX1NFTlRSWV9fIHx8IHt9KTtcbiAgY29uc3QgdmVyc2lvbmVkQ2FycmllciA9IChfX1NFTlRSWV9fW3ZlcnNpb24uU0RLX1ZFUlNJT05dID0gX19TRU5UUllfX1t2ZXJzaW9uLlNES19WRVJTSU9OXSB8fCB7fSk7XG4gIHJldHVybiB2ZXJzaW9uZWRDYXJyaWVyW25hbWVdIHx8ICh2ZXJzaW9uZWRDYXJyaWVyW25hbWVdID0gY3JlYXRvcigpKTtcbn1cblxuZXhwb3J0cy5HTE9CQUxfT0JKID0gR0xPQkFMX09CSjtcbmV4cG9ydHMuZ2V0R2xvYmFsU2luZ2xldG9uID0gZ2V0R2xvYmFsU2luZ2xldG9uO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d29ybGR3aWRlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/cjs/worldwide.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/esm/buildPolyfills/_nullishCoalesce.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/esm/buildPolyfills/_nullishCoalesce.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _nullishCoalesce: () => (/* binding */ _nullishCoalesce)\n/* harmony export */ });\n// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n/**\n * Polyfill for the nullish coalescing operator (`??`).\n *\n * Note that the RHS is wrapped in a function so that if it's a computed value, that evaluation won't happen unless the\n * LHS evaluates to a nullish value, to mimic the operator's short-circuiting behavior.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param lhs The value of the expression to the left of the `??`\n * @param rhsFn A function returning the value of the expression to the right of the `??`\n * @returns The LHS value, unless it's `null` or `undefined`, in which case, the RHS value\n */\nfunction _nullishCoalesce(lhs, rhsFn) {\n  // by checking for loose equality to `null`, we catch both `null` and `undefined`\n  return lhs != null ? lhs : rhsFn();\n}\n\n// Sucrase version:\n// function _nullishCoalesce(lhs, rhsFn) {\n//   if (lhs != null) {\n//     return lhs;\n//   } else {\n//     return rhsFn();\n//   }\n// }\n\n\n//# sourceMappingURL=_nullishCoalesce.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvZXNtL2J1aWxkUG9seWZpbGxzL19udWxsaXNoQ29hbGVzY2UuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBOztBQUU0QjtBQUM1QiIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2VzbS9idWlsZFBvbHlmaWxscy9fbnVsbGlzaENvYWxlc2NlLmpzPzliYjUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gaHR0cHM6Ly9naXRodWIuY29tL2FsYW5ncGllcmNlL3N1Y3Jhc2UvdHJlZS8yNjU4ODc4Njg5NjY5MTdmM2I5MjRjZTM4ZGZhZDAxZmJhYjEzMjlmXG4vL1xuLy8gVGhlIE1JVCBMaWNlbnNlIChNSVQpXG4vL1xuLy8gQ29weXJpZ2h0IChjKSAyMDEyLTIwMTggdmFyaW91cyBjb250cmlidXRvcnMgKHNlZSBBVVRIT1JTKVxuLy9cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHlcbi8vIG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlIFwiU29mdHdhcmVcIiksIHRvIGRlYWxcbi8vIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHNcbi8vIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGxcbi8vIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpc1xuLy8gZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpbiBhbGxcbi8vIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUlxuLy8gSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksXG4vLyBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEVcbi8vIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVJcbi8vIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sXG4vLyBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRVxuLy8gU09GVFdBUkUuXG5cbi8qKlxuICogUG9seWZpbGwgZm9yIHRoZSBudWxsaXNoIGNvYWxlc2Npbmcgb3BlcmF0b3IgKGA/P2ApLlxuICpcbiAqIE5vdGUgdGhhdCB0aGUgUkhTIGlzIHdyYXBwZWQgaW4gYSBmdW5jdGlvbiBzbyB0aGF0IGlmIGl0J3MgYSBjb21wdXRlZCB2YWx1ZSwgdGhhdCBldmFsdWF0aW9uIHdvbid0IGhhcHBlbiB1bmxlc3MgdGhlXG4gKiBMSFMgZXZhbHVhdGVzIHRvIGEgbnVsbGlzaCB2YWx1ZSwgdG8gbWltaWMgdGhlIG9wZXJhdG9yJ3Mgc2hvcnQtY2lyY3VpdGluZyBiZWhhdmlvci5cbiAqXG4gKiBBZGFwdGVkIGZyb20gU3VjcmFzZSAoaHR0cHM6Ly9naXRodWIuY29tL2FsYW5ncGllcmNlL3N1Y3Jhc2UpXG4gKlxuICogQHBhcmFtIGxocyBUaGUgdmFsdWUgb2YgdGhlIGV4cHJlc3Npb24gdG8gdGhlIGxlZnQgb2YgdGhlIGA/P2BcbiAqIEBwYXJhbSByaHNGbiBBIGZ1bmN0aW9uIHJldHVybmluZyB0aGUgdmFsdWUgb2YgdGhlIGV4cHJlc3Npb24gdG8gdGhlIHJpZ2h0IG9mIHRoZSBgPz9gXG4gKiBAcmV0dXJucyBUaGUgTEhTIHZhbHVlLCB1bmxlc3MgaXQncyBgbnVsbGAgb3IgYHVuZGVmaW5lZGAsIGluIHdoaWNoIGNhc2UsIHRoZSBSSFMgdmFsdWVcbiAqL1xuZnVuY3Rpb24gX251bGxpc2hDb2FsZXNjZShsaHMsIHJoc0ZuKSB7XG4gIC8vIGJ5IGNoZWNraW5nIGZvciBsb29zZSBlcXVhbGl0eSB0byBgbnVsbGAsIHdlIGNhdGNoIGJvdGggYG51bGxgIGFuZCBgdW5kZWZpbmVkYFxuICByZXR1cm4gbGhzICE9IG51bGwgPyBsaHMgOiByaHNGbigpO1xufVxuXG4vLyBTdWNyYXNlIHZlcnNpb246XG4vLyBmdW5jdGlvbiBfbnVsbGlzaENvYWxlc2NlKGxocywgcmhzRm4pIHtcbi8vICAgaWYgKGxocyAhPSBudWxsKSB7XG4vLyAgICAgcmV0dXJuIGxocztcbi8vICAgfSBlbHNlIHtcbi8vICAgICByZXR1cm4gcmhzRm4oKTtcbi8vICAgfVxuLy8gfVxuXG5leHBvcnQgeyBfbnVsbGlzaENvYWxlc2NlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1fbnVsbGlzaENvYWxlc2NlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/esm/buildPolyfills/_nullishCoalesce.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/esm/buildPolyfills/_optionalChain.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/esm/buildPolyfills/_optionalChain.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _optionalChain: () => (/* binding */ _optionalChain)\n/* harmony export */ });\n/**\n * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,\n * descriptors, and functions.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n * See https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15\n *\n * @param ops Array result of expression conversion\n * @returns The value of the expression\n */\nfunction _optionalChain(ops) {\n  let lastAccessLHS = undefined;\n  let value = ops[0];\n  let i = 1;\n  while (i < ops.length) {\n    const op = ops[i] ;\n    const fn = ops[i + 1] ;\n    i += 2;\n    // by checking for loose equality to `null`, we catch both `null` and `undefined`\n    if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n      // really we're meaning to return `undefined` as an actual value here, but it saves bytes not to write it\n      return;\n    }\n    if (op === 'access' || op === 'optionalAccess') {\n      lastAccessLHS = value;\n      value = fn(value);\n    } else if (op === 'call' || op === 'optionalCall') {\n      value = fn((...args) => (value ).call(lastAccessLHS, ...args));\n      lastAccessLHS = undefined;\n    }\n  }\n  return value;\n}\n\n// Sucrase version\n// function _optionalChain(ops) {\n//   let lastAccessLHS = undefined;\n//   let value = ops[0];\n//   let i = 1;\n//   while (i < ops.length) {\n//     const op = ops[i];\n//     const fn = ops[i + 1];\n//     i += 2;\n//     if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n//       return undefined;\n//     }\n//     if (op === 'access' || op === 'optionalAccess') {\n//       lastAccessLHS = value;\n//       value = fn(value);\n//     } else if (op === 'call' || op === 'optionalCall') {\n//       value = fn((...args) => value.call(lastAccessLHS, ...args));\n//       lastAccessLHS = undefined;\n//     }\n//   }\n//   return value;\n// }\n\n\n//# sourceMappingURL=_optionalChain.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeSt1dGlsc0A4LjE3LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvYnVpbGQvZXNtL2J1aWxkUG9seWZpbGxzL19vcHRpb25hbENoYWluLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUUwQjtBQUMxQiIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzZW50cnkrdXRpbHNAOC4xNy4wL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2J1aWxkL2VzbS9idWlsZFBvbHlmaWxscy9fb3B0aW9uYWxDaGFpbi5qcz82MTk5Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUG9seWZpbGwgZm9yIHRoZSBvcHRpb25hbCBjaGFpbiBvcGVyYXRvciwgYD8uYCwgZ2l2ZW4gcHJldmlvdXMgY29udmVyc2lvbiBvZiB0aGUgZXhwcmVzc2lvbiBpbnRvIGFuIGFycmF5IG9mIHZhbHVlcyxcbiAqIGRlc2NyaXB0b3JzLCBhbmQgZnVuY3Rpb25zLlxuICpcbiAqIEFkYXB0ZWQgZnJvbSBTdWNyYXNlIChodHRwczovL2dpdGh1Yi5jb20vYWxhbmdwaWVyY2Uvc3VjcmFzZSlcbiAqIFNlZSBodHRwczovL2dpdGh1Yi5jb20vYWxhbmdwaWVyY2Uvc3VjcmFzZS9ibG9iLzI2NTg4Nzg2ODk2NjkxN2YzYjkyNGNlMzhkZmFkMDFmYmFiMTMyOWYvc3JjL3RyYW5zZm9ybWVycy9PcHRpb25hbENoYWluaW5nTnVsbGlzaFRyYW5zZm9ybWVyLnRzI0wxNVxuICpcbiAqIEBwYXJhbSBvcHMgQXJyYXkgcmVzdWx0IG9mIGV4cHJlc3Npb24gY29udmVyc2lvblxuICogQHJldHVybnMgVGhlIHZhbHVlIG9mIHRoZSBleHByZXNzaW9uXG4gKi9cbmZ1bmN0aW9uIF9vcHRpb25hbENoYWluKG9wcykge1xuICBsZXQgbGFzdEFjY2Vzc0xIUyA9IHVuZGVmaW5lZDtcbiAgbGV0IHZhbHVlID0gb3BzWzBdO1xuICBsZXQgaSA9IDE7XG4gIHdoaWxlIChpIDwgb3BzLmxlbmd0aCkge1xuICAgIGNvbnN0IG9wID0gb3BzW2ldIDtcbiAgICBjb25zdCBmbiA9IG9wc1tpICsgMV0gO1xuICAgIGkgKz0gMjtcbiAgICAvLyBieSBjaGVja2luZyBmb3IgbG9vc2UgZXF1YWxpdHkgdG8gYG51bGxgLCB3ZSBjYXRjaCBib3RoIGBudWxsYCBhbmQgYHVuZGVmaW5lZGBcbiAgICBpZiAoKG9wID09PSAnb3B0aW9uYWxBY2Nlc3MnIHx8IG9wID09PSAnb3B0aW9uYWxDYWxsJykgJiYgdmFsdWUgPT0gbnVsbCkge1xuICAgICAgLy8gcmVhbGx5IHdlJ3JlIG1lYW5pbmcgdG8gcmV0dXJuIGB1bmRlZmluZWRgIGFzIGFuIGFjdHVhbCB2YWx1ZSBoZXJlLCBidXQgaXQgc2F2ZXMgYnl0ZXMgbm90IHRvIHdyaXRlIGl0XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmIChvcCA9PT0gJ2FjY2VzcycgfHwgb3AgPT09ICdvcHRpb25hbEFjY2VzcycpIHtcbiAgICAgIGxhc3RBY2Nlc3NMSFMgPSB2YWx1ZTtcbiAgICAgIHZhbHVlID0gZm4odmFsdWUpO1xuICAgIH0gZWxzZSBpZiAob3AgPT09ICdjYWxsJyB8fCBvcCA9PT0gJ29wdGlvbmFsQ2FsbCcpIHtcbiAgICAgIHZhbHVlID0gZm4oKC4uLmFyZ3MpID0+ICh2YWx1ZSApLmNhbGwobGFzdEFjY2Vzc0xIUywgLi4uYXJncykpO1xuICAgICAgbGFzdEFjY2Vzc0xIUyA9IHVuZGVmaW5lZDtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHZhbHVlO1xufVxuXG4vLyBTdWNyYXNlIHZlcnNpb25cbi8vIGZ1bmN0aW9uIF9vcHRpb25hbENoYWluKG9wcykge1xuLy8gICBsZXQgbGFzdEFjY2Vzc0xIUyA9IHVuZGVmaW5lZDtcbi8vICAgbGV0IHZhbHVlID0gb3BzWzBdO1xuLy8gICBsZXQgaSA9IDE7XG4vLyAgIHdoaWxlIChpIDwgb3BzLmxlbmd0aCkge1xuLy8gICAgIGNvbnN0IG9wID0gb3BzW2ldO1xuLy8gICAgIGNvbnN0IGZuID0gb3BzW2kgKyAxXTtcbi8vICAgICBpICs9IDI7XG4vLyAgICAgaWYgKChvcCA9PT0gJ29wdGlvbmFsQWNjZXNzJyB8fCBvcCA9PT0gJ29wdGlvbmFsQ2FsbCcpICYmIHZhbHVlID09IG51bGwpIHtcbi8vICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4vLyAgICAgfVxuLy8gICAgIGlmIChvcCA9PT0gJ2FjY2VzcycgfHwgb3AgPT09ICdvcHRpb25hbEFjY2VzcycpIHtcbi8vICAgICAgIGxhc3RBY2Nlc3NMSFMgPSB2YWx1ZTtcbi8vICAgICAgIHZhbHVlID0gZm4odmFsdWUpO1xuLy8gICAgIH0gZWxzZSBpZiAob3AgPT09ICdjYWxsJyB8fCBvcCA9PT0gJ29wdGlvbmFsQ2FsbCcpIHtcbi8vICAgICAgIHZhbHVlID0gZm4oKC4uLmFyZ3MpID0+IHZhbHVlLmNhbGwobGFzdEFjY2Vzc0xIUywgLi4uYXJncykpO1xuLy8gICAgICAgbGFzdEFjY2Vzc0xIUyA9IHVuZGVmaW5lZDtcbi8vICAgICB9XG4vLyAgIH1cbi8vICAgcmV0dXJuIHZhbHVlO1xuLy8gfVxuXG5leHBvcnQgeyBfb3B0aW9uYWxDaGFpbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9X29wdGlvbmFsQ2hhaW4uanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/esm/buildPolyfills/_optionalChain.js\n");

/***/ })

};
;